constructor {
  /// Program's constructor.
  New : (name: str, symbol: str, decimals: u8);
};

service Tokenizer {
  /// Burn `value` of `VFT` token and return it as a value attached to the message.
  Burn : (value: u128) -> u128;
  /// Lock all the value attached to the message and mint corresponding
  /// amount of the `VFT` tokens.
  Mint : () -> u128;

  events {
    /// Native token was converted into `VFT` token for the specified address.
    Minted: struct { to: actor_id, value: u128 };
    /// `VFT` token was converted into native token for the specified address.
    Burned: struct { from: actor_id, value: u128 };
  }
};

service Vft {
  Approve : (spender: actor_id, value: u256) -> bool;
  Transfer : (to: actor_id, value: u256) -> bool;
  TransferFrom : (from: actor_id, to: actor_id, value: u256) -> bool;
  query Allowance : (owner: actor_id, spender: actor_id) -> u256;
  query BalanceOf : (account: actor_id) -> u256;
  query Decimals : () -> u8;
  query Name : () -> str;
  query Symbol : () -> str;
  query TotalSupply : () -> u256;

  events {
    Approval: struct { owner: actor_id, spender: actor_id, value: u256 };
    Transfer: struct { from: actor_id, to: actor_id, value: u256 };
  }
};

