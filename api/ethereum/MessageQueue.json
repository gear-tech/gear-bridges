{"abi":[{"type":"constructor","inputs":[{"name":"relayer_address","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"calculateMerkleRoot","inputs":[{"name":"proof","type":"bytes32[]","internalType":"bytes32[]"},{"name":"leaf_hash","type":"bytes32","internalType":"bytes32"},{"name":"total_leaves","type":"uint256","internalType":"uint256"},{"name":"leaf_index","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"isProcessed","inputs":[{"name":"message","type":"tuple","internalType":"struct VaraMessage","components":[{"name":"nonce","type":"bytes32","internalType":"bytes32"},{"name":"sender","type":"bytes32","internalType":"bytes32"},{"name":"receiver","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}]}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"processMessage","inputs":[{"name":"block_number","type":"uint256","internalType":"uint256"},{"name":"total_leaves","type":"uint256","internalType":"uint256"},{"name":"leaf_index","type":"uint256","internalType":"uint256"},{"name":"message","type":"tuple","internalType":"struct VaraMessage","components":[{"name":"nonce","type":"bytes32","internalType":"bytes32"},{"name":"sender","type":"bytes32","internalType":"bytes32"},{"name":"receiver","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}]},{"name":"proof","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"MessageProcessed","inputs":[{"name":"blockNumber","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"messageHash","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"messageNonce","type":"bytes32","indexed":true,"internalType":"bytes32"}],"anonymous":false},{"type":"event","name":"ProoverAddressUpdated","inputs":[{"name":"proover","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"RelayerAddressUpdated","inputs":[{"name":"relayer","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"error","name":"AlreadyInitialized","inputs":[]},{"type":"error","name":"BadProof","inputs":[]},{"type":"error","name":"MerkleRootNotSet","inputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"MessageAlreadyProcessed","inputs":[{"name":"messageNonce","type":"bytes32","internalType":"bytes32"}]},{"type":"error","name":"MessageNotProcessed","inputs":[]}],"bytecode":{"object":"0x60a034606657601f6105b138819003918201601f19168301916001600160401b03831184841017606a57808492602094604052833981010312606657516001600160a01b0381168103606657608052604051610532908161007f8239608051816101fe0152f35b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe6080806040526004361015610012575f80fd5b5f3560e01c90816344855efc146100df57508063e1a551cf146100905763f250df321461003d575f80fd5b3461008c57602036600319011261008c5760043567ffffffffffffffff811161008c576080600319823603011261008c57600401355f525f602052602060ff60405f2054166040519015158152f35b5f80fd5b3461008c57608036600319011261008c5760043567ffffffffffffffff811161008c576100d76100c660209236906004016103c8565b606435916044359160243591610476565b604051908152f35b3461008c5760a036600319011261008c576064359060043567ffffffffffffffff831161008c5782600401926080600319823603011261008c5760843567ffffffffffffffff811161008c576101399036906004016103c8565b939091853595865f525f60205260ff60405f2054166103b5576024820135938760448401946101bf607482606461016f8a61042f565b98019761017c8989610443565b91908291602085019889528d60408601526bffffffffffffffffffffffff199060601b1660608501528484013781015f838201520301601f1981018352826103f9565b51902060405160208101918252602081526101db6040826103f9565b519020604051630aab8ba560e01b815260048101889052909790916020836024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa928315610354575f93610381575b50821561036e579061025091896044359260243592610476565b0361035f5760649361028c5f936020958a865285875260408620600160ff1982541617905561028560018060a01b039161042f565b1693610443565b9586949192604051978896879586936317a7ea2760e31b8552600485015260406024850152816044850152848401378181018301849052601f01601f191681010301925af1908115610354575f91610319575b506102f35763ef2a441760e01b5f5260045ffd5b7f86b784cc94bf75127f81b9f806d51b5a1cf5a970b3b349f1d3dc7086007bcec55f80a4005b90506020813d60201161034c575b81610334602093836103f9565b8101031261008c5751801515810361008c57846102df565b3d9150610327565b6040513d5f823e3d90fd5b637ca55c7760e01b5f5260045ffd5b876354e2ed2d60e11b5f5260045260245ffd5b9092506020813d6020116103ad575b8161039d602093836103f9565b8101031261008c5751918a610236565b3d9150610390565b8663398560f160e11b5f5260045260245ffd5b9181601f8401121561008c5782359167ffffffffffffffff831161008c576020808501948460051b01011161008c57565b90601f8019910116810190811067ffffffffffffffff82111761041b57604052565b634e487b7160e01b5f52604160045260245ffd5b356001600160a01b038116810361008c5790565b903590601e198136030182121561008c570180359067ffffffffffffffff821161008c5760200191813603831361008c57565b90949293928484101561051e575f9493925b86861015610515578560051b8301356001808616148015610502575b156104f2575f5260205260405f20925b60011c935f1981019081116104de5760011c600181018091116104de576001909501949392610488565b634e487b7160e01b5f52601160045260245ffd5b905f5260205260405f20926104b4565b50600185018086116104de5786146104a4565b95509350505050565b634e487b7160e01b5f52600160045260245ffd","sourceMap":"251:4061:58:-:0;;;;;;;;;;;;;-1:-1:-1;;251:4061:58;;;;-1:-1:-1;;;;;251:4061:58;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;251:4061:58;;;;;;383:33;;251:4061;;;;;;;;383:33;251:4061;;;;;;;-1:-1:-1;251:4061:58;;;;;;-1:-1:-1;251:4061:58;;;;;-1:-1:-1;251:4061:58","linkReferences":{}},"deployedBytecode":{"object":"0x6080806040526004361015610012575f80fd5b5f3560e01c90816344855efc146100df57508063e1a551cf146100905763f250df321461003d575f80fd5b3461008c57602036600319011261008c5760043567ffffffffffffffff811161008c576080600319823603011261008c57600401355f525f602052602060ff60405f2054166040519015158152f35b5f80fd5b3461008c57608036600319011261008c5760043567ffffffffffffffff811161008c576100d76100c660209236906004016103c8565b606435916044359160243591610476565b604051908152f35b3461008c5760a036600319011261008c576064359060043567ffffffffffffffff831161008c5782600401926080600319823603011261008c5760843567ffffffffffffffff811161008c576101399036906004016103c8565b939091853595865f525f60205260ff60405f2054166103b5576024820135938760448401946101bf607482606461016f8a61042f565b98019761017c8989610443565b91908291602085019889528d60408601526bffffffffffffffffffffffff199060601b1660608501528484013781015f838201520301601f1981018352826103f9565b51902060405160208101918252602081526101db6040826103f9565b519020604051630aab8ba560e01b815260048101889052909790916020836024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa928315610354575f93610381575b50821561036e579061025091896044359260243592610476565b0361035f5760649361028c5f936020958a865285875260408620600160ff1982541617905561028560018060a01b039161042f565b1693610443565b9586949192604051978896879586936317a7ea2760e31b8552600485015260406024850152816044850152848401378181018301849052601f01601f191681010301925af1908115610354575f91610319575b506102f35763ef2a441760e01b5f5260045ffd5b7f86b784cc94bf75127f81b9f806d51b5a1cf5a970b3b349f1d3dc7086007bcec55f80a4005b90506020813d60201161034c575b81610334602093836103f9565b8101031261008c5751801515810361008c57846102df565b3d9150610327565b6040513d5f823e3d90fd5b637ca55c7760e01b5f5260045ffd5b876354e2ed2d60e11b5f5260045260245ffd5b9092506020813d6020116103ad575b8161039d602093836103f9565b8101031261008c5751918a610236565b3d9150610390565b8663398560f160e11b5f5260045260245ffd5b9181601f8401121561008c5782359167ffffffffffffffff831161008c576020808501948460051b01011161008c57565b90601f8019910116810190811067ffffffffffffffff82111761041b57604052565b634e487b7160e01b5f52604160045260245ffd5b356001600160a01b038116810361008c5790565b903590601e198136030182121561008c570180359067ffffffffffffffff821161008c5760200191813603831361008c57565b90949293928484101561051e575f9493925b86861015610515578560051b8301356001808616148015610502575b156104f2575f5260205260405f20925b60011c935f1981019081116104de5760011c600181018091116104de576001909501949392610488565b634e487b7160e01b5f52601160045260245ffd5b905f5260205260405f20926104b4565b50600185018086116104de5786146104a4565b95509350505050565b634e487b7160e01b5f52600160045260245ffd","sourceMap":"251:4061:58:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;251:4061:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;251:4061:58;;;;;;;;;;;3006:64;251:4061;;;;;;;;:::i;:::-;;;;;;;;;3006:64;;:::i;:::-;251:4061;;;;;;;;;;;;-1:-1:-1;;251:4061:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1580:110;;251:4061;615:14;;251:4061;643:16;;251:4061;643:16;;;558:137;251:4061;643:16;251:4061;643:16;;;:::i;:::-;673:12;;;;;;;:::i;:::-;558:137;;;;251:4061;558:137;;251:4061;;;;;;;;;;;;;;;;;;;;;;;;;;;;;558:137;;;;;;;;;;:::i;:::-;251:4061;739:15;;251:4061;;;722:33;;251:4061;;;;722:33;;;251:4061;722:33;;:::i;:::-;251:4061;712:44;;251:4061;;-1:-1:-1;;;1774:75:58;;251:4061;1774:75;;251:4061;;;712:44;;251:4061;;;;;;1783:15;-1:-1:-1;;;;;251:4061:58;1774:75;;;;;;;251:4061;1774:75;;;251:4061;1864:25;;;1860:93;;251:4061;1980:63;251:4061;;;;;;;1980:63;;:::i;:::-;:90;1963:160;;251:4061;;2311:12;251:4061;;;;;;;;;;;;;;;;;;;;;;2225:16;251:4061;;;;;2225:16;;:::i;:::-;251:4061;2311:12;;:::i;:::-;251:4061;;;;;;;;;;;;;;;;;2203:134;;251:4061;2203:134;;251:4061;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;251:4061:58;;;2203:134;;;;;;;;;;251:4061;2203:134;;;251:4061;-1:-1:-1;2202:135:58;;2369:21;;;251:4061;2369:21;251:4061;;2369:21;2185:307;2426:55;251:4061;2426:55;;251:4061;2203:134;;;251:4061;2203:134;;251:4061;2203:134;;;;;;251:4061;2203:134;;;:::i;:::-;;;251:4061;;;;;;;;;;;;2203:134;;;;;;-1:-1:-1;2203:134:58;;;251:4061;;;;;;;;;1963:160;2102:10;;;251:4061;2102:10;251:4061;;2102:10;1860:93;1912:30;;;;251:4061;1912:30;251:4061;;;;1912:30;1774:75;;;;251:4061;1774:75;;251:4061;1774:75;;;;;;251:4061;1774:75;;;:::i;:::-;;;251:4061;;;;;1774:75;;;;;;;-1:-1:-1;1774:75:58;;1580:110;1641:38;;;;251:4061;1641:38;251:4061;;;;1641:38;251:4061;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;558:137;;251:4061;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;251:4061:58;;;;;-1:-1:-1;251:4061:58;;;-1:-1:-1;;;;;251:4061:58;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3376:934::-;;;;;;3593:13;;;251:4061;;;3635:1;3623:13;;;3656:3;3638:16;;;;;;251:4061;;;;;;3739:1;251:4061;;;3726:14;3725:40;;;;3656:3;3721:476;;;3635:1;3785:180;;;;3635:1;3785:180;3721:476;;3739:1;251:4061;;-1:-1:-1;;251:4061:58;;;;;;;3739:1;251:4061;3739:1;251:4061;;;;;;;3739:1;4242:29;3656:3;251:4061;3623:13;;;;;251:4061;;;;3635:1;251:4061;;;;;3635:1;251:4061;3721:476;4003:180;3635:1;4003:180;;;;3635:1;4003:180;3721:476;;;3725:40;251:4061;3739:1;251:4061;;;;;;;3746:18;;3725:40;;3638:16;;-1:-1:-1;3638:16:58;-1:-1:-1;;;;3376:934:58:o;251:4061::-;;;;;;;;;;;","linkReferences":{},"immutableReferences":{"48835":[{"start":510,"length":32}]}},"methodIdentifiers":{"calculateMerkleRoot(bytes32[],bytes32,uint256,uint256)":"e1a551cf","isProcessed((bytes32,bytes32,address,bytes))":"f250df32","processMessage(uint256,uint256,uint256,(bytes32,bytes32,address,bytes),bytes32[])":"44855efc"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"relayer_address\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadyInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BadProof\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"MerkleRootNotSet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"messageNonce\",\"type\":\"bytes32\"}],\"name\":\"MessageAlreadyProcessed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MessageNotProcessed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"messageNonce\",\"type\":\"bytes32\"}],\"name\":\"MessageProcessed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proover\",\"type\":\"address\"}],\"name\":\"ProoverAddressUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"}],\"name\":\"RelayerAddressUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32\",\"name\":\"leaf_hash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"total_leaves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"leaf_index\",\"type\":\"uint256\"}],\"name\":\"calculateMerkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct VaraMessage\",\"name\":\"message\",\"type\":\"tuple\"}],\"name\":\"isProcessed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"block_number\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"total_leaves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"leaf_index\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct VaraMessage\",\"name\":\"message\",\"type\":\"tuple\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"processMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"calculateMerkleRoot(bytes32[],bytes32,uint256,uint256)\":{\"details\":\"Calculated merkle tree root for a provided merkle proof.\",\"params\":{\"leaf_hash\":\"- Hash of data stored in target leaf.\",\"leaf_index\":\"- Index of target leaf.\",\"proof\":\"- Merkle proof.\",\"total_leaves\":\"- Number of leaves in merkle tree.\"}},\"isProcessed((bytes32,bytes32,address,bytes))\":{\"details\":\"Checks if `VaraMessage` already was processed.\",\"params\":{\"message\":\"- Message it checks agaiunst.\"}},\"processMessage(uint256,uint256,uint256,(bytes32,bytes32,address,bytes),bytes32[])\":{\"details\":\"Unpack message from merkle tree and relay it to the receiver.\",\"params\":{\"block_number\":\"- Block number of block containing target merkle tree.\",\"leaf_index\":\"- Index of leaf containing target message. See `binary_merkle_tree` for  reference.\",\"message\":\"- Target message.\",\"proof\":\"- Merkle proof of inclusion of leaf #`leaf_index` into target merkle tree that  was included into `block_number`.\",\"total_leaves\":\"- Number of leaves in target merkle tree.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/MessageQueue.sol\":\"MessageQueue\"},\"debug\":{\"revertStrings\":\"strip\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"appendCBOR\":false,\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"src/MessageQueue.sol\":{\"keccak256\":\"0x5812243484aed39318e6eb534ca79bcffab879c4c084bd314389fed2ab34afd5\",\"license\":\"GPL-3.0-or-later WITH Classpath-exception-2.0\",\"urls\":[\"bzz-raw://c86899b43144d000cce3df582e7a1fb0f619200c3e87ede9f02529ccf2211ae9\",\"dweb:/ipfs/QmPqfBhxKgYDHdQ8iPmnLYnMrQjnUJTM7W4RxxLEQHBf5S\"]},\"src/interfaces/IMessageQueue.sol\":{\"keccak256\":\"0x75c4b984f0f151424d1b08b9a3b19e9c2c726775503502b0ba18b30b3c7b941b\",\"license\":\"GPL-3.0-or-later WITH Classpath-exception-2.0\",\"urls\":[\"bzz-raw://405fd0cc7493880cd91ac50f5d3759f1ee6c63eff45421ada42fa5a1450e1af4\",\"dweb:/ipfs/QmdTcgZTgHN97qYsB623vBAhmiJF76i6uQR29gHtd7AsJQ\"]},\"src/interfaces/IRelayer.sol\":{\"keccak256\":\"0x5fcc59f9befd9b1cb0b030cb91b9d58c7667465e3c78a104d116426b55fb9fee\",\"license\":\"GPL-3.0-or-later WITH Classpath-exception-2.0\",\"urls\":[\"bzz-raw://3cabf31db1958e1aa8fbd5f26e97901b59f502328ce4ab1a812ab8b457e0ef6f\",\"dweb:/ipfs/QmZQan2JJRu2Nb49cp6oeDg9dpMZncNV5YeqFYczkrfYkh\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.30+commit.73712a01"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"relayer_address","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"type":"error","name":"AlreadyInitialized"},{"inputs":[],"type":"error","name":"BadProof"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"type":"error","name":"MerkleRootNotSet"},{"inputs":[{"internalType":"bytes32","name":"messageNonce","type":"bytes32"}],"type":"error","name":"MessageAlreadyProcessed"},{"inputs":[],"type":"error","name":"MessageNotProcessed"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256","indexed":true},{"internalType":"bytes32","name":"messageHash","type":"bytes32","indexed":true},{"internalType":"bytes32","name":"messageNonce","type":"bytes32","indexed":true}],"type":"event","name":"MessageProcessed","anonymous":false},{"inputs":[{"internalType":"address","name":"proover","type":"address","indexed":false}],"type":"event","name":"ProoverAddressUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"relayer","type":"address","indexed":false}],"type":"event","name":"RelayerAddressUpdated","anonymous":false},{"inputs":[{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"},{"internalType":"bytes32","name":"leaf_hash","type":"bytes32"},{"internalType":"uint256","name":"total_leaves","type":"uint256"},{"internalType":"uint256","name":"leaf_index","type":"uint256"}],"stateMutability":"pure","type":"function","name":"calculateMerkleRoot","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"struct VaraMessage","name":"message","type":"tuple","components":[{"internalType":"bytes32","name":"nonce","type":"bytes32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}]}],"stateMutability":"view","type":"function","name":"isProcessed","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"block_number","type":"uint256"},{"internalType":"uint256","name":"total_leaves","type":"uint256"},{"internalType":"uint256","name":"leaf_index","type":"uint256"},{"internalType":"struct VaraMessage","name":"message","type":"tuple","components":[{"internalType":"bytes32","name":"nonce","type":"bytes32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}]},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"processMessage"}],"devdoc":{"kind":"dev","methods":{"calculateMerkleRoot(bytes32[],bytes32,uint256,uint256)":{"details":"Calculated merkle tree root for a provided merkle proof.","params":{"leaf_hash":"- Hash of data stored in target leaf.","leaf_index":"- Index of target leaf.","proof":"- Merkle proof.","total_leaves":"- Number of leaves in merkle tree."}},"isProcessed((bytes32,bytes32,address,bytes))":{"details":"Checks if `VaraMessage` already was processed.","params":{"message":"- Message it checks agaiunst."}},"processMessage(uint256,uint256,uint256,(bytes32,bytes32,address,bytes),bytes32[])":{"details":"Unpack message from merkle tree and relay it to the receiver.","params":{"block_number":"- Block number of block containing target merkle tree.","leaf_index":"- Index of leaf containing target message. See `binary_merkle_tree` for  reference.","message":"- Target message.","proof":"- Merkle proof of inclusion of leaf #`leaf_index` into target merkle tree that  was included into `block_number`.","total_leaves":"- Number of leaves in target merkle tree."}}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"none","appendCBOR":false},"compilationTarget":{"src/MessageQueue.sol":"MessageQueue"},"evmVersion":"prague","libraries":{},"viaIR":true},"sources":{"src/MessageQueue.sol":{"keccak256":"0x5812243484aed39318e6eb534ca79bcffab879c4c084bd314389fed2ab34afd5","urls":["bzz-raw://c86899b43144d000cce3df582e7a1fb0f619200c3e87ede9f02529ccf2211ae9","dweb:/ipfs/QmPqfBhxKgYDHdQ8iPmnLYnMrQjnUJTM7W4RxxLEQHBf5S"],"license":"GPL-3.0-or-later WITH Classpath-exception-2.0"},"src/interfaces/IMessageQueue.sol":{"keccak256":"0x75c4b984f0f151424d1b08b9a3b19e9c2c726775503502b0ba18b30b3c7b941b","urls":["bzz-raw://405fd0cc7493880cd91ac50f5d3759f1ee6c63eff45421ada42fa5a1450e1af4","dweb:/ipfs/QmdTcgZTgHN97qYsB623vBAhmiJF76i6uQR29gHtd7AsJQ"],"license":"GPL-3.0-or-later WITH Classpath-exception-2.0"},"src/interfaces/IRelayer.sol":{"keccak256":"0x5fcc59f9befd9b1cb0b030cb91b9d58c7667465e3c78a104d116426b55fb9fee","urls":["bzz-raw://3cabf31db1958e1aa8fbd5f26e97901b59f502328ce4ab1a812ab8b457e0ef6f","dweb:/ipfs/QmZQan2JJRu2Nb49cp6oeDg9dpMZncNV5YeqFYczkrfYkh"],"license":"GPL-3.0-or-later WITH Classpath-exception-2.0"}},"version":1},"id":58}