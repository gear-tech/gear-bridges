{"abi":[{"type":"constructor","inputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"DEFAULT_ADMIN_ROLE","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"PAUSER_ROLE","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"UPGRADE_INTERFACE_VERSION","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"bridgingPayments","inputs":[],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"bridgingPayments","inputs":[{"name":"offset","type":"uint256","internalType":"uint256"},{"name":"limit","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"createBridgingPayment","inputs":[{"name":"fee","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"getRoleAdmin","inputs":[{"name":"role","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"getTokenType","inputs":[{"name":"token","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint8","internalType":"enum IERC20Manager.TokenType"}],"stateMutability":"view"},{"type":"function","name":"governanceAdmin","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"governancePauser","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"grantRole","inputs":[{"name":"role","type":"bytes32","internalType":"bytes32"},{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"handleMessage","inputs":[{"name":"source","type":"bytes32","internalType":"bytes32"},{"name":"payload","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"hasRole","inputs":[{"name":"role","type":"bytes32","internalType":"bytes32"},{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"initialize","inputs":[{"name":"governanceAdmin_","type":"address","internalType":"contract IGovernance"},{"name":"governancePauser_","type":"address","internalType":"contract IGovernance"},{"name":"messageQueue_","type":"address","internalType":"address"},{"name":"vftManager","type":"bytes32","internalType":"bytes32"},{"name":"tokens_","type":"tuple[]","internalType":"struct IERC20Manager.TokenInfo[]","components":[{"name":"token","type":"address","internalType":"address"},{"name":"tokenType","type":"uint8","internalType":"enum IERC20Manager.TokenType"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"isBridgingPayment","inputs":[{"name":"bridgingPayment","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isVftManager","inputs":[{"name":"vftManager","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"messageQueue","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"pause","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"paused","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"proxiableUUID","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"renounceRole","inputs":[{"name":"role","type":"bytes32","internalType":"bytes32"},{"name":"callerConfirmation","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"requestBridging","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"to","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"requestBridgingPayingFee","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"to","type":"bytes32","internalType":"bytes32"},{"name":"bridgingPayment","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"requestBridgingPayingFeeWithPermit","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"to","type":"bytes32","internalType":"bytes32"},{"name":"deadline","type":"uint256","internalType":"uint256"},{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"},{"name":"bridgingPayment","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"revokeRole","inputs":[{"name":"role","type":"bytes32","internalType":"bytes32"},{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"supportsInterface","inputs":[{"name":"interfaceId","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"tokens","inputs":[{"name":"offset","type":"uint256","internalType":"uint256"},{"name":"limit","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"tokens","inputs":[],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"totalBridgingPayments","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"totalTokens","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"totalVftManagers","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"unpause","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"upgradeToAndCall","inputs":[{"name":"newImplementation","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"vftManagers","inputs":[],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"vftManagers","inputs":[{"name":"offset","type":"uint256","internalType":"uint256"},{"name":"limit","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"event","name":"Bridged","inputs":[{"name":"from","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"token","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"BridgingPaymentCreated","inputs":[{"name":"bridgingPayment","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"BridgingRequested","inputs":[{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"token","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"EthereumTokenRegistered","inputs":[{"name":"token","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"GearTokenRegistered","inputs":[{"name":"token","type":"address","indexed":false,"internalType":"address"},{"name":"tokenName","type":"string","indexed":false,"internalType":"string"},{"name":"tokenSymbol","type":"string","indexed":false,"internalType":"string"},{"name":"tokenDecimals","type":"uint8","indexed":false,"internalType":"uint8"}],"anonymous":false},{"type":"event","name":"Initialized","inputs":[{"name":"version","type":"uint64","indexed":false,"internalType":"uint64"}],"anonymous":false},{"type":"event","name":"Paused","inputs":[{"name":"account","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"RoleAdminChanged","inputs":[{"name":"role","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"previousAdminRole","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"newAdminRole","type":"bytes32","indexed":true,"internalType":"bytes32"}],"anonymous":false},{"type":"event","name":"RoleGranted","inputs":[{"name":"role","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"account","type":"address","indexed":true,"internalType":"address"},{"name":"sender","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"RoleRevoked","inputs":[{"name":"role","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"account","type":"address","indexed":true,"internalType":"address"},{"name":"sender","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"Unpaused","inputs":[{"name":"account","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"Upgraded","inputs":[{"name":"implementation","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"VftManagerAdded","inputs":[{"name":"vftManager","type":"bytes32","indexed":false,"internalType":"bytes32"}],"anonymous":false},{"type":"error","name":"AccessControlBadConfirmation","inputs":[]},{"type":"error","name":"AccessControlUnauthorizedAccount","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"neededRole","type":"bytes32","internalType":"bytes32"}]},{"type":"error","name":"AddressEmptyCode","inputs":[{"name":"target","type":"address","internalType":"address"}]},{"type":"error","name":"ERC1967InvalidImplementation","inputs":[{"name":"implementation","type":"address","internalType":"address"}]},{"type":"error","name":"ERC1967NonPayable","inputs":[]},{"type":"error","name":"EnforcedPause","inputs":[]},{"type":"error","name":"ExpectedPause","inputs":[]},{"type":"error","name":"FailedCall","inputs":[]},{"type":"error","name":"InvalidAmount","inputs":[]},{"type":"error","name":"InvalidBridgingPayment","inputs":[]},{"type":"error","name":"InvalidInitialization","inputs":[]},{"type":"error","name":"InvalidPayload","inputs":[]},{"type":"error","name":"InvalidSender","inputs":[]},{"type":"error","name":"InvalidSource","inputs":[]},{"type":"error","name":"InvalidTokenType","inputs":[]},{"type":"error","name":"NotInitializing","inputs":[]},{"type":"error","name":"SafeERC20FailedOperation","inputs":[{"name":"token","type":"address","internalType":"address"}]},{"type":"error","name":"UUPSUnauthorizedCallContext","inputs":[]},{"type":"error","name":"UUPSUnsupportedProxiableUUID","inputs":[{"name":"slot","type":"bytes32","internalType":"bytes32"}]}],"bytecode":{"object":"0x60a080604052346100c257306080525f516020613e965f395f51905f525460ff8160401c166100b3576002600160401b03196001600160401b03821601610060575b604051613dcf90816100c78239608051818181610c910152610d610152f35b6001600160401b0319166001600160401b039081175f516020613e965f395f51905f525581527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a15f80610041565b63f92ee8a960e01b5f5260045ffd5b5f80fdfe6080806040526004361015610012575f80fd5b5f905f3560e01c90816258f6b8146114f95750806301ffc9a7146114a35780630c9d9b971461146b578063109ec2e7146113f75780631e324b5214611344578063240dfa9514611326578063248a9ca3146112e65780632f2ff15d1461129b578063302ac5d01461115457806336568abe1461110f57806338ff319f1461104a5780633b70c18a146110215780633f4ba83a14610fa15780634e68953914610f6c5780634f1ef28614610ce557806352d1902d14610c7e5780635c975abb14610c4f578063763b754a146109035780637e1c0c09146108e55780638456cb591461087257806387be40b1146107fd57806387e7a3a3146107e25780638b4864d6146107c75780638b841f6c146107a957806391d148541461075357806393272baf146107075780639d63848a14610686578063a217fddf1461066a578063ad3cb1cc14610621578063c1c60921146105f6578063c305870c146104a0578063c81eb79714610477578063d547741f14610423578063e63ab1e9146104075763f6cdd9cc1461019e575f80fd5b610100366003190112610404576101b361151b565b6024356084359160ff83168093036103d65760e4356001600160a01b03811690819003610402576101e261168e565b6101f7815f52600960205260405f2054151590565b156103f3578085913b156103da5781600491604051928380926314b0812960e11b825234905af18015610393576103de575b506001600160a01b03821693843b156103da576040519063d505accf60e01b82523360048301523060248301528460448301526064356064830152608482015260a43560a482015260c43560c4820152818160e48183895af16103c1575b505061029161168e565b81156103b2576102a090611fed565b9050600381101561039e57806102bf5763a1e9dd9d60e01b8452600484fd5b6001810361033557506103026040516323b872dd60e01b6020820152336024820152306044820152826064820152606481526102fc608482611589565b836121a7565b604051908152604435907ff80de57fd7626baaff7d867494866703686569822c2326ae60b2515ede953c3a60203392a480f35b60020361030257813b1561038f5760405163079cc67960e41b8152336004820152602481018290528390818160448183885af180156103935761037a575b5050610302565b8161038491611589565b61038f57825f610373565b8280fd5b6040513d84823e3d90fd5b634e487b7160e01b84526021600452602484fd5b63162908e360e11b8452600484fd5b816103cb91611589565b6103d657835f610287565b8380fd5b5080fd5b816103e891611589565b6103d657835f610229565b631e37e19560e31b8552600485fd5b845b80fd5b5034610404578060031936011261040457602060405160018152f35b503461040457604036600319011261040457610473600435610443611531565b9061046e610469825f525f516020613d6f5f395f51905f52602052600160405f20015490565b611705565b611d15565b5080f35b50346104045780600319360112610404576001546040516001600160a01b039091168152602090f35b5034610404576060366003190112610404576104ba61151b565b602435906104c661168e565b81156105e7576104d581611fed565b9050600381101561039e57806104f45763a1e9dd9d60e01b8452600484fd5b6001810361057f57506105406040516323b872dd60e01b602082015233602482015230604482015283606482015260648152610531608482611589565b6001600160a01b0383166121a7565b6040519182526001600160a01b0316906044359033907ff80de57fd7626baaff7d867494866703686569822c2326ae60b2515ede953c3a90602090a480f35b60020361054057826001600160a01b038216803b156103da5760405163079cc67960e41b8152336004820152602481018590529082908290604490829084905af18015610393576105d2575b5050610540565b816105dc91611589565b61038f57825f6105cb565b63162908e360e11b8352600483fd5b50346104045761061d61061161060b3661162c565b90611f70565b604051918291826115f3565b0390f35b50346104045780600319360112610404575061061d604051610644604082611589565b60058152640352e302e360dc1b6020820152604051918291602083526020830190611642565b5034610404578060031936011261040457602090604051908152f35b503461040457806003193601126104045760405180916020600554928381520191600582527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0915b8181106106f15761061d856106e581870382611589565b60405191829182611547565b82548452602090930192600192830192016106ce565b50346104045760203660031901126104045761072961072461151b565b611fed565b6040519150600381101561073f57602092508152f35b634e487b7160e01b83526021600452602483fd5b503461040457604036600319011261040457604061076f611531565b9160043581525f516020613d6f5f395f51905f52602052209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b50346104045780600319360112610404576020600854604051908152f35b50346104045761061d6106e56107dc3661162c565b90611ef3565b50346104045761061d6106e56107f73661162c565b90611e5a565b503461040457806003193601126104045760405180916020600354928381520191600382527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b915b81811061085c5761061d8561061181870382611589565b8254845260209093019260019283019201610845565b503461040457806003193601126104045761088b6116b5565b61089361168e565b600160ff195f516020613d8f5f395f51905f525416175f516020613d8f5f395f51905f52557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a180f35b50346104045780600319360112610404576020600554604051908152f35b50346104045760a03660031901126104045761091d61151b565b610925611531565b6044356001600160a01b038116908190036103d6576084359167ffffffffffffffff83116104025736602384011215610402578260040135610966816115db565b936109746040519586611589565b8185526024602086019260061b82010190368211610c4b57602401915b818310610bd3575050505f516020613daf5f395f51905f52549360ff8560401c16159467ffffffffffffffff811680159081610bcb575b6001149081610bc1575b159081610bb8575b50610ba95767ffffffffffffffff1981166001175f516020613daf5f395f51905f525585610b7d575b50610a0c61213c565b610a1461213c565b610a1c61213c565b6001600160a01b031690610a2f8261174b565b50610a39826117fa565b506001600160a01b031690610a4d826117fa565b506001600160601b0360a01b8654161785556001600160601b0360a01b60015416176001556001600160601b0360a01b6002541617600255610a90606435612083565b50825b8151811015610b1c57610aa68183611666565b51602081019081516003811015610b0857610aca5763a1e9dd9d60e01b8652600486fd5b519051906001600160a01b03166003821015610af45760019291610aed91611db1565b5001610a93565b634e487b7160e01b86526021600452602486fd5b634e487b7160e01b87526021600452602487fd5b5050610b255780f35b68ff0000000000000000195f516020613daf5f395f51905f5254165f516020613daf5f395f51905f52557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a180f35b68ffffffffffffffffff191668010000000000000001175f516020613daf5f395f51905f52555f610a03565b63f92ee8a960e01b8752600487fd5b9050155f6109da565b303b1591506109d2565b8791506109c8565b604083360312610c4b57604051906040820182811067ffffffffffffffff821117610c375760405283356001600160a01b0381168103610c335782526020840135906003821015610c335782602092836040950152815201920191610991565b8980fd5b634e487b7160e01b8a52604160045260248afd5b8780fd5b5034610404578060031936011261040457602060ff5f516020613d8f5f395f51905f5254166040519015158152f35b50346104045780600319360112610404577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163003610cd65760206040515f516020613d4f5f395f51905f528152f35b63703e46dd60e11b8152600490fd5b50604036600319011261040457610cfa61151b565b6024359067ffffffffffffffff821161038f573660238301121561038f5781600401359083610d28836115bf565b93610d366040519586611589565b8385526020850193366024828401011161038f57806024602093018637850101526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016308114908115610f4a575b50610f3b578380525f516020613d6f5f395f51905f5260209081526040808620335f908152925290205460ff1615610f23576040516352d1902d60e01b81526001600160a01b0382169390602081600481885afa869181610eeb575b50610e0157634c9c8ce360e01b86526004859052602486fd5b93845f516020613d4f5f395f51905f52879603610ed95750823b15610ec7575f516020613d4f5f395f51905f5280546001600160a01b031916821790558491907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8380a2805115610eac576104739382915190845af43d15610ea4573d91610e88836115bf565b92610e966040519485611589565b83523d85602085013e6121ff565b6060916121ff565b5050505034610eb85780f35b63b398979f60e01b8152600490fd5b634c9c8ce360e01b8552600452602484fd5b632a87526960e21b8652600452602485fd5b9091506020813d602011610f1b575b81610f0760209383611589565b81010312610f175751905f610de8565b5f80fd5b3d9150610efa565b63e2517d3f60e01b8452336004526024849052604484fd5b63703e46dd60e11b8452600484fd5b5f516020613d4f5f395f51905f52546001600160a01b0316141590505f610d8c565b5034610404576020366003190112610404576020610f976004355f52600460205260405f2054151590565b6040519015158152f35b5034610404578060031936011261040457610fba6116b5565b5f516020613d8f5f395f51905f525460ff8116156110125760ff19165f516020613d8f5f395f51905f52557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a180f35b638dfc202b60e01b8252600482fd5b50346104045780600319360112610404576002546040516001600160a01b039091168152602090f35b50346104045760203660031901126104045761106461168e565b60405161043d8082019082821067ffffffffffffffff8311176110fb57606091839161225e8339308152600435602082015233604082015203019082f080156110ee576020906001600160a01b03166110bc81612025565b507f9d5f66d985a12f505753a5f6417ed3c4ec6e68963ee0119770dda415f0d14ad082604051838152a1604051908152f35b50604051903d90823e3d90fd5b634e487b7160e01b84526041600452602484fd5b503461040457604036600319011261040457611129611531565b336001600160a01b038216036111455761047390600435611d15565b63334bd91960e11b8252600482fd5b50346104045760403660031901126104045760043560243567ffffffffffffffff811161038f573660238201121561038f5780600401359167ffffffffffffffff83116103d657602482019160248436920101116103d6576002546001600160a01b0316330361128c576111d3815f52600460205260405f2054151590565b156111fa5750906111e391611b85565b156111eb5780f35b637c6953f960e01b8152600490fd5b8354604051635aa6e67560e01b81529190602090839060049082906001600160a01b03165afa91821561128157859261124d575b500361123e57906111e3916119ad565b638154374b60e01b8352600483fd5b9091506020813d602011611279575b8161126960209383611589565b81010312610f175751905f61122e565b3d915061125c565b6040513d87823e3d90fd5b636edaef2f60e11b8452600484fd5b5034610404576040366003190112610404576104736004356112bb611531565b906112e1610469825f525f516020613d6f5f395f51905f52602052600160405f20015490565b6118a7565b503461040457602036600319011261040457602061131e6004355f525f516020613d6f5f395f51905f52602052600160405f20015490565b604051908152f35b50346104045780600319360112610404576020600354604051908152f35b506080366003190112610f175761135961151b565b602435906064356001600160a01b03811690819003610f175761137a61168e565b61138f815f52600960205260405f2054151590565b156113e857803b15610f17575f600491604051928380926314b0812960e11b825234905af180156113dd576113c8575b506104c661168e565b6113d59193505f90611589565b5f915f6113bf565b6040513d5f823e3d90fd5b631e37e19560e31b5f5260045ffd5b34610f17575f366003190112610f175760405180602060085491828152019060085f527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3905f5b8181106114555761061d856106e581870382611589565b825484526020909301926001928301920161143e565b34610f17576020366003190112610f17576020610f976001600160a01b0361149161151b565b165f52600960205260405f2054151590565b34610f17576020366003190112610f175760043563ffffffff60e01b8116809103610f1757602090637965db0b60e01b81149081156114e8575b506040519015158152f35b6301ffc9a760e01b149050826114dd565b34610f17575f366003190112610f17575f546001600160a01b03168152602090f35b600435906001600160a01b0382168203610f1757565b602435906001600160a01b0382168203610f1757565b60206040818301928281528451809452019201905f5b81811061156a5750505090565b82516001600160a01b031684526020938401939092019160010161155d565b90601f8019910116810190811067ffffffffffffffff8211176115ab57604052565b634e487b7160e01b5f52604160045260245ffd5b67ffffffffffffffff81116115ab57601f01601f191660200190565b67ffffffffffffffff81116115ab5760051b60200190565b60206040818301928281528451809452019201905f5b8181106116165750505090565b8251845260209384019390920191600101611609565b6040906003190112610f17576004359060243590565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b805182101561167a5760209160051b010190565b634e487b7160e01b5f52603260045260245ffd5b60ff5f516020613d8f5f395f51905f5254166116a657565b63d93c066560e01b5f5260045ffd5b335f9081527f2222dce04fae1e25cd76e9391151ad9e0187ef92144ac6ce9e4e09f2c453b751602052604090205460ff16156116ed57565b63e2517d3f60e01b5f5233600452600160245260445ffd5b5f8181525f516020613d6f5f395f51905f526020908152604080832033845290915290205460ff16156117355750565b63e2517d3f60e01b5f523360045260245260445ffd5b6001600160a01b0381165f9081527fb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d602052604090205460ff166117f5576001600160a01b03165f8181527fb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d60205260408120805460ff191660011790553391907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a4600190565b505f90565b6001600160a01b0381165f9081527f2222dce04fae1e25cd76e9391151ad9e0187ef92144ac6ce9e4e09f2c453b751602052604090205460ff166117f5576001600160a01b03165f8181527f2222dce04fae1e25cd76e9391151ad9e0187ef92144ac6ce9e4e09f2c453b75160205260408120805460ff191660019081179091553392917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9080a4600190565b5f8181525f516020613d6f5f395f51905f52602090815260408083206001600160a01b038616845290915290205460ff16611945575f8181525f516020613d6f5f395f51905f52602090815260408083206001600160a01b0395909516808452949091528120805460ff19166001179055339291907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9080a4600190565b50505f90565b9190820180921161195857565b634e487b7160e01b5f52601160045260245ffd5b926119a69061199860609460ff9498979860018060a01b03168752608060208801526080870190611642565b908582036040870152611642565b9416910152565b90801561194557813560f81c60028111611ae5578015611b4c57600114611b04576042036117f5576001810135906041602182013591013560f81c91805f1a60018110159081611af8575b5015611ae557815f1a60018110159081611aec575b5015611ae557611a39611a59919060405191604083016040525f8352601f8301525f6020835184010152565b919060405191604083016040525f8352601f8301525f6020835184010152565b6040516116b480820182811067ffffffffffffffff8211176115ab57858486611a8a93869561269b8739309061196c565b03905ff080156113dd577facef1c6c805d7395b4aeee279bc679beea84f01a1f1b08be7aef2af535bba81f936001600160a01b0390911691611add9190611ad084611e03565b506040519485948561196c565b0390a1600190565b5050505f90565b601f915011155f611a0d565b601f915011155f6119f8565b6015036117f557602060017fdf6d7b91d41cb55ced11681822028e1605f72d50168b3898feb40ee04259d18292013560601c611b3f81611dde565b50604051908152a1600190565b506021036117f557602060017fc6b4ec1bc7a17331ef296e0810039347563e90c3fa496b4de270f6c5ff345abe920135611b3f81612083565b60685f920361194557602081013560601c603482013560601c91604881013590611bae84611fed565b90506003811015611d015780611bcd5763a1e9dd9d60e01b8652600486fd5b909192939450600181145f14611c52575060405163a9059cbb60e01b6020808301919091526001600160a01b0385166024830152604480830185905282527fabdd326df16eff74bb67e4a6b3d6372ceba76796f256a7b7f8577108cf5db287929091611c4490611c3e606482611589565b876121a7565b6040519384523592a4600190565b600214611c83575b60207fabdd326df16eff74bb67e4a6b3d6372ceba76796f256a7b7f8577108cf5db28791611c44565b833b15610f17576040516340c10f1960e01b81526001600160a01b038416600482015260248101839052905f8260448183895af19081156113dd577fabdd326df16eff74bb67e4a6b3d6372ceba76796f256a7b7f8577108cf5db28792602092611cf1575b50915050611c5a565b5f611cfb91611589565b5f611ce8565b634e487b7160e01b5f52602160045260245ffd5b5f8181525f516020613d6f5f395f51905f52602090815260408083206001600160a01b038616845290915290205460ff1615611945575f8181525f516020613d6f5f395f51905f52602090815260408083206001600160a01b0395909516808452949091528120805460ff19169055339291907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9080a4600190565b6001600160a01b03166003821015611d0157611ddb91815f52600760205260405f205560056120e1565b90565b6001600160a01b03165f81815260076020526040902060019055611ddb9060056120e1565b6001600160a01b03165f81815260076020526040902060029055611ddb9060056120e1565b90611e32826115db565b611e3f6040519182611589565b8281528092611e50601f19916115db565b0190602036910137565b91906008549081841015611ed757611e72908461194b565b90808211611ecf575b5082810390811161195857611e8f81611e28565b905f5b818110611ea0575090925050565b80611eb7611eb06001938861194b565b6008612010565b90549060031b1c611ec88286611666565b5201611e92565b90505f611e7b565b50509050604051611ee9602082611589565b5f81525f36813790565b91906005549081841015611ed757611f0b908461194b565b90808211611f68575b5082810390811161195857611f2881611e28565b905f5b818110611f39575090925050565b80611f50611f496001938861194b565b6005612010565b90549060031b1c611f618286611666565b5201611f2b565b90505f611f14565b91906003549081841015611ed757611f88908461194b565b90808211611fe5575b5082810390811161195857611fa581611e28565b905f5b818110611fb6575090925050565b80611fcd611fc66001938861194b565b6003612010565b90549060031b1c611fde8286611666565b5201611fa8565b90505f611f91565b612001906001600160a01b03166005612167565b91906003831015611d01579190565b805482101561167a575f5260205f2001905f90565b805f52600960205260405f2054155f146117f557600854600160401b8110156115ab5780600161205a92016008556008612010565b81549060031b9083821b915f19901b1916179055600854905f52600960205260405f2055600190565b805f52600460205260405f2054155f146117f557600354600160401b8110156115ab578060016120b892016003556003612010565b81549060031b9083821b915f19901b1916179055600354905f52600460205260405f2055600190565b5f82815260018201602052604090205461194557805490600160401b8210156115ab57612115826001809401835582612010565b81549060031b9085821b915f19901b19161790558054925f520160205260405f2055600190565b60ff5f516020613daf5f395f51905f525460401c161561215857565b631afcd79f60e31b5f5260045ffd5b9190805f526002830160205260405f20549283155f1461219f5761219a9293506001915f520160205260405f2054151590565b905f90565b505060019190565b905f602091828151910182855af1156113dd575f513d6121f657506001600160a01b0381163b155b6121d65750565b635274afe760e01b5f9081526001600160a01b0391909116600452602490fd5b600114156121cf565b90612223575080511561221457602081519101fd5b63d6bda27560e01b5f5260045ffd5b81511580612254575b612234575090565b639996b31560e01b5f9081526001600160a01b0391909116600452602490fd5b50803b1561222c56fe60a0346100e757601f61043d38819003918201601f19168301916001600160401b038311848410176100eb578084926060946040528339810103126100e757610047816100ff565b602082015190916001600160a01b0390610063906040016100ff565b169182156100d4575f80546001600160a01b031981168517825560405194916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36080526001556103299081610114823960805181818161014c01526102000152f35b631e4fbdf760e01b5f525f60045260245ffd5b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b51906001600160a01b03821682036100e75756fe60806040526004361015610011575f80fd5b5f3560e01c806329610252146101f357806369fe0e2d146101d2578063715018a61461017b57806386ea825c146101375780638da5cb5b14610110578063ddca3f43146100f35763f2fde38b14610066575f80fd5b346100ef5760203660031901126100ef576004356001600160a01b038116908190036100ef57610094610303565b80156100dc575f80546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b5f525f60045260245ffd5b5f80fd5b346100ef575f3660031901126100ef576020600154604051908152f35b346100ef575f3660031901126100ef575f546040516001600160a01b039091168152602090f35b346100ef575f3660031901126100ef576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346100ef575f3660031901126100ef57610193610303565b5f80546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346100ef5760203660031901126100ef576101eb610303565b600435600155005b5f3660031901126100ef577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633036102f45760015434036102e5575f8080803460018060a01b038254165af13d156102e0573d67ffffffffffffffff81116102cc5760405190601f8101601f19908116603f0116820167ffffffffffffffff8111838210176102cc5760405281525f60203d92013e5b156102bd577faaeea0b595e409578c26dd16fa1bdb3a29a4d874694ecef3ca96376940f5fbfb5f80a1005b6353048b4960e11b5f5260045ffd5b634e487b7160e01b5f52604160045260245ffd5b610292565b631fbbed9560e01b5f5260045ffd5b63064917ff60e11b5f5260045ffd5b5f546001600160a01b0316330361031657565b63118cdaa760e01b5f523360045260245ffd61016080604052346104a0576116b4803803809161001d82856104a4565b83398101906080818303126104a05780516001600160a01b038116908190036104a05760208201516001600160401b0381116104a0578361005f9184016104c7565b60408301519093906001600160401b0381116104a0576060916100839185016104c7565b9201519160ff83168093036104a0576040938451926100a286856104a4565b60018452603160f81b6020850190815282519093906001600160401b0381116103b057600354600181811c91168015610496575b602082101461039257601f8111610433575b50806020601f82116001146103cf575f916103c4575b508160011b915f199060031b1c1916176003555b8051906001600160401b0382116103b05760045490600182811c921680156103a6575b60208310146103925781601f849311610324575b50602090601f83116001146102be575f926102b3575b50508160011b915f199060031b1c1916176004555b80156102a057600580546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a36101c48161051c565b610120526101d1836106a3565b6101405260208151910120918260e05251902080610100524660a05283519060208201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f84528583015260608201524660808201523060a082015260a0815261023c60c0826104a4565b5190206080523060c05260ff19600954161760095551610ed890816107dc823960805181610b4c015260a05181610c09015260c05181610b16015260e05181610b9b01526101005181610bc10152610120518161045f015261014051816104880152f35b631e4fbdf760e01b5f525f60045260245ffd5b015190505f8061015f565b60045f9081528281209350601f198516905b81811061030c57509084600195949392106102f4575b505050811b01600455610174565b01515f1960f88460031b161c191690555f80806102e6565b929360206001819287860151815501950193016102d0565b60045f529091507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f840160051c81019160208510610388575b90601f859493920160051c01905b81811061037a5750610149565b5f815584935060010161036d565b909150819061035f565b634e487b7160e01b5f52602260045260245ffd5b91607f1691610135565b634e487b7160e01b5f52604160045260245ffd5b90508401515f6100fe565b60035f9081528181209250601f198416905b81811061041b57509083600194939210610403575b5050811b01600355610112565b8601515f1960f88460031b161c191690555f806103f6565b9192602060018192868b0151815501940192016103e1565b60035f527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f830160051c8101916020841061048c575b601f0160051c01905b81811061048157506100e8565b5f8155600101610474565b909150819061046b565b90607f16906100d6565b5f80fd5b601f909101601f19168101906001600160401b038211908210176103b057604052565b81601f820112156104a0578051906001600160401b0382116103b057604051926104fb601f8401601f1916602001856104a4565b828452602083830101116104a057815f9260208093018386015e8301015290565b908151602081105f14610596575090601f815111610556576020815191015160208210610547571790565b5f198260200360031b1b161790565b604460209160405192839163305a27a960e01b83528160048401528051918291826024860152018484015e5f828201840152601f01601f19168101030190fd5b6001600160401b0381116103b057600654600181811c91168015610699575b602082101461039257601f8111610666575b50602092601f821160011461060557928192935f926105fa575b50508160011b915f199060031b1c19161760065560ff90565b015190505f806105e1565b601f1982169360065f52805f20915f5b86811061064e5750836001959610610636575b505050811b0160065560ff90565b01515f1960f88460031b161c191690555f8080610628565b91926020600181928685015181550194019201610615565b60065f52601f60205f20910160051c810190601f830160051c015b81811061068e57506105c7565b5f8155600101610681565b90607f16906105b5565b908151602081105f146106ce575090601f815111610556576020815191015160208210610547571790565b6001600160401b0381116103b057600754600181811c911680156107d1575b602082101461039257601f811161079e575b50602092601f821160011461073d57928192935f92610732575b50508160011b915f199060031b1c19161760075560ff90565b015190505f80610719565b601f1982169360075f52805f20915f5b868110610786575083600195961061076e575b505050811b0160075560ff90565b01515f1960f88460031b161c191690555f8080610760565b9192602060018192868501518155019401920161074d565b60075f52601f60205f20910160051c810190601f830160051c015b8181106107c657506106ff565b5f81556001016107b9565b90607f16906106ed56fe6080806040526004361015610012575f80fd5b5f3560e01c90816306fdde03146107bf57508063095ea7b31461079957806318160ddd1461077c57806323b872dd14610744578063313ce567146107245780633644e5151461070257806340c10f191461065657806342966c681461063957806370a0823114610602578063715018a6146105a757806379cc6790146105775780637ecebe001461053f57806384b0196e146104475780638da5cb5b1461041f57806395d89b411461033d578063a9059cbb1461030c578063d505accf146101c7578063dd62ed3e146101775763f2fde38b146100ed575f80fd5b3461017357602036600319011261017357610106610885565b61010e610c2f565b6001600160a01b0316801561016057600580546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3005b631e4fbdf760e01b5f525f60045260245ffd5b5f80fd5b3461017357604036600319011261017357610190610885565b61019861089b565b6001600160a01b039182165f908152600160209081526040808320949093168252928352819020549051908152f35b346101735760e0366003190112610173576101e0610885565b6101e861089b565b604435906064359260843560ff81168103610173578442116102f9576102bc6102c59160018060a01b03841696875f52600860205260405f20908154916001830190556040519060208201927f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c984528a604084015260018060a01b038916606084015289608084015260a083015260c082015260c0815261028a60e08261096a565b519020610295610b13565b906040519161190160f01b83526002830152602282015260c43591604260a4359220610dd7565b90929192610e64565b6001600160a01b03168481036102e257506102e09350610cda565b005b84906325c0072360e11b5f5260045260245260445ffd5b8463313c898160e11b5f5260045260245ffd5b3461017357604036600319011261017357610332610328610885565b6024359033610a69565b602060405160018152f35b34610173575f366003190112610173576040515f60045461035d816108b1565b80845290600181169081156103fb575060011461039d575b610399836103858185038261096a565b604051918291602083526020830190610861565b0390f35b60045f9081527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b939250905b8082106103e157509091508101602001610385610375565b9192600181602092548385880101520191019092916103c9565b60ff191660208086019190915291151560051b840190910191506103859050610375565b34610173575f366003190112610173576005546040516001600160a01b039091168152602090f35b34610173575f366003190112610173576104e36104837f0000000000000000000000000000000000000000000000000000000000000000610d3d565b6104ac7f0000000000000000000000000000000000000000000000000000000000000000610da0565b60206104f1604051926104bf838561096a565b5f84525f368137604051958695600f60f81b875260e08588015260e0870190610861565b908582036040870152610861565b4660608501523060808501525f60a085015283810360c08501528180845192838152019301915f5b82811061052857505050500390f35b835185528695509381019392810192600101610519565b34610173576020366003190112610173576001600160a01b03610560610885565b165f526008602052602060405f2054604051908152f35b34610173576040366003190112610173576102e0610593610885565b602435906105a28233836109a0565b610c56565b34610173575f366003190112610173576105bf610c2f565b600580546001600160a01b031981169091555f906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610173576020366003190112610173576001600160a01b03610623610885565b165f525f602052602060405f2054604051908152f35b34610173576020366003190112610173576102e060043533610c56565b346101735760403660031901126101735761066f610885565b6024359061067b610c2f565b6001600160a01b03169081156106ef57600254908082018092116106db5760207fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef915f9360025584845283825260408420818154019055604051908152a3005b634e487b7160e01b5f52601160045260245ffd5b63ec442f0560e01b5f525f60045260245ffd5b34610173575f36600319011261017357602061071c610b13565b604051908152f35b34610173575f36600319011261017357602060ff60095416604051908152f35b3461017357606036600319011261017357610332610760610885565b61076861089b565b604435916107778333836109a0565b610a69565b34610173575f366003190112610173576020600254604051908152f35b34610173576040366003190112610173576103326107b5610885565b6024359033610cda565b34610173575f366003190112610173575f6003546107dc816108b1565b80845290600181169081156103fb575060011461080357610399836103858185038261096a565b60035f9081527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b939250905b80821061084757509091508101602001610385610375565b91926001816020925483858801015201910190929161082f565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b600435906001600160a01b038216820361017357565b602435906001600160a01b038216820361017357565b90600182811c921680156108df575b60208310146108cb57565b634e487b7160e01b5f52602260045260245ffd5b91607f16916108c0565b5f92918154916108f8836108b1565b808352926001811690811561094d575060011461091457505050565b5f9081526020812093945091925b838310610933575060209250010190565b600181602092949394548385870101520191019190610922565b915050602093945060ff929192191683830152151560051b010190565b90601f8019910116810190811067ffffffffffffffff82111761098c57604052565b634e487b7160e01b5f52604160045260245ffd5b6001600160a01b039081165f818152600160209081526040808320948616835293905291909120549291905f1984106109da575b50505050565b828410610a46578015610a33576001600160a01b03821615610a20575f52600160205260405f209060018060a01b03165f5260205260405f20910390555f8080806109d4565b634a1406b160e11b5f525f60045260245ffd5b63e602df0560e01b5f525f60045260245ffd5b508290637dc7a0d960e11b5f5260018060a01b031660045260245260445260645ffd5b6001600160a01b0316908115610b00576001600160a01b03169182156106ef57815f525f60205260405f2054818110610ae757817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92602092855f525f84520360405f2055845f525f825260405f20818154019055604051908152a3565b8263391434e360e21b5f5260045260245260445260645ffd5b634b637e8f60e11b5f525f60045260245ffd5b307f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480610c06575b15610b6e577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f82527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a08152610c0060c08261096a565b51902090565b507f00000000000000000000000000000000000000000000000000000000000000004614610b45565b6005546001600160a01b03163303610c4357565b63118cdaa760e01b5f523360045260245ffd5b9091906001600160a01b03168015610b0057805f525f60205260405f2054838110610cc0576020845f94957fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef938587528684520360408620558060025403600255604051908152a3565b915063391434e360e21b5f5260045260245260445260645ffd5b6001600160a01b0316908115610a33576001600160a01b0316918215610a205760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591835f526001825260405f20855f5282528060405f2055604051908152a3565b60ff8114610d835760ff811690601f8211610d745760405191610d6160408461096a565b6020808452838101919036833783525290565b632cd44ac360e21b5f5260045ffd5b50604051610d9d81610d968160066108e9565b038261096a565b90565b60ff8114610dc45760ff811690601f8211610d745760405191610d6160408461096a565b50604051610d9d81610d968160076108e9565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411610e59579160209360809260ff5f9560405194855216868401526040830152606082015282805260015afa15610e4e575f516001600160a01b03811615610e4457905f905f90565b505f906001905f90565b6040513d5f823e3d90fd5b5050505f9160039190565b6004811015610ec45780610e76575050565b60018103610e8d5763f645eedf60e01b5f5260045ffd5b60028103610ea8575063fce698f760e01b5f5260045260245ffd5b600314610eb25750565b6335e2f38360e21b5f5260045260245ffd5b634e487b7160e01b5f52602160045260245ffd360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00","sourceMap":"1537:23436:85:-:0;;;;;;;1171:4:23;1163:13;;-1:-1:-1;;;;;;;;;;;1537:23436:85;;;;;;7894:76:22;;-1:-1:-1;;;;;;;;;;;1537:23436:85;;7983:34:22;7979:146;;-1:-1:-1;1537:23436:85;;;;;;;;1163:13:23;1537:23436:85;;;;;;;;;;;7979:146:22;-1:-1:-1;;;;;;1537:23436:85;-1:-1:-1;;;;;1537:23436:85;;;-1:-1:-1;;;;;;;;;;;1537:23436:85;;;8085:29:22;;1537:23436:85;;8085:29:22;7979:146;;;;7894:76;7936:23;;;-1:-1:-1;7936:23:22;;-1:-1:-1;7936:23:22;1537:23436:85;;;","linkReferences":{}},"deployedBytecode":{"object":"0x6080806040526004361015610012575f80fd5b5f905f3560e01c90816258f6b8146114f95750806301ffc9a7146114a35780630c9d9b971461146b578063109ec2e7146113f75780631e324b5214611344578063240dfa9514611326578063248a9ca3146112e65780632f2ff15d1461129b578063302ac5d01461115457806336568abe1461110f57806338ff319f1461104a5780633b70c18a146110215780633f4ba83a14610fa15780634e68953914610f6c5780634f1ef28614610ce557806352d1902d14610c7e5780635c975abb14610c4f578063763b754a146109035780637e1c0c09146108e55780638456cb591461087257806387be40b1146107fd57806387e7a3a3146107e25780638b4864d6146107c75780638b841f6c146107a957806391d148541461075357806393272baf146107075780639d63848a14610686578063a217fddf1461066a578063ad3cb1cc14610621578063c1c60921146105f6578063c305870c146104a0578063c81eb79714610477578063d547741f14610423578063e63ab1e9146104075763f6cdd9cc1461019e575f80fd5b610100366003190112610404576101b361151b565b6024356084359160ff83168093036103d65760e4356001600160a01b03811690819003610402576101e261168e565b6101f7815f52600960205260405f2054151590565b156103f3578085913b156103da5781600491604051928380926314b0812960e11b825234905af18015610393576103de575b506001600160a01b03821693843b156103da576040519063d505accf60e01b82523360048301523060248301528460448301526064356064830152608482015260a43560a482015260c43560c4820152818160e48183895af16103c1575b505061029161168e565b81156103b2576102a090611fed565b9050600381101561039e57806102bf5763a1e9dd9d60e01b8452600484fd5b6001810361033557506103026040516323b872dd60e01b6020820152336024820152306044820152826064820152606481526102fc608482611589565b836121a7565b604051908152604435907ff80de57fd7626baaff7d867494866703686569822c2326ae60b2515ede953c3a60203392a480f35b60020361030257813b1561038f5760405163079cc67960e41b8152336004820152602481018290528390818160448183885af180156103935761037a575b5050610302565b8161038491611589565b61038f57825f610373565b8280fd5b6040513d84823e3d90fd5b634e487b7160e01b84526021600452602484fd5b63162908e360e11b8452600484fd5b816103cb91611589565b6103d657835f610287565b8380fd5b5080fd5b816103e891611589565b6103d657835f610229565b631e37e19560e31b8552600485fd5b845b80fd5b5034610404578060031936011261040457602060405160018152f35b503461040457604036600319011261040457610473600435610443611531565b9061046e610469825f525f516020613d6f5f395f51905f52602052600160405f20015490565b611705565b611d15565b5080f35b50346104045780600319360112610404576001546040516001600160a01b039091168152602090f35b5034610404576060366003190112610404576104ba61151b565b602435906104c661168e565b81156105e7576104d581611fed565b9050600381101561039e57806104f45763a1e9dd9d60e01b8452600484fd5b6001810361057f57506105406040516323b872dd60e01b602082015233602482015230604482015283606482015260648152610531608482611589565b6001600160a01b0383166121a7565b6040519182526001600160a01b0316906044359033907ff80de57fd7626baaff7d867494866703686569822c2326ae60b2515ede953c3a90602090a480f35b60020361054057826001600160a01b038216803b156103da5760405163079cc67960e41b8152336004820152602481018590529082908290604490829084905af18015610393576105d2575b5050610540565b816105dc91611589565b61038f57825f6105cb565b63162908e360e11b8352600483fd5b50346104045761061d61061161060b3661162c565b90611f70565b604051918291826115f3565b0390f35b50346104045780600319360112610404575061061d604051610644604082611589565b60058152640352e302e360dc1b6020820152604051918291602083526020830190611642565b5034610404578060031936011261040457602090604051908152f35b503461040457806003193601126104045760405180916020600554928381520191600582527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0915b8181106106f15761061d856106e581870382611589565b60405191829182611547565b82548452602090930192600192830192016106ce565b50346104045760203660031901126104045761072961072461151b565b611fed565b6040519150600381101561073f57602092508152f35b634e487b7160e01b83526021600452602483fd5b503461040457604036600319011261040457604061076f611531565b9160043581525f516020613d6f5f395f51905f52602052209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b50346104045780600319360112610404576020600854604051908152f35b50346104045761061d6106e56107dc3661162c565b90611ef3565b50346104045761061d6106e56107f73661162c565b90611e5a565b503461040457806003193601126104045760405180916020600354928381520191600382527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b915b81811061085c5761061d8561061181870382611589565b8254845260209093019260019283019201610845565b503461040457806003193601126104045761088b6116b5565b61089361168e565b600160ff195f516020613d8f5f395f51905f525416175f516020613d8f5f395f51905f52557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a180f35b50346104045780600319360112610404576020600554604051908152f35b50346104045760a03660031901126104045761091d61151b565b610925611531565b6044356001600160a01b038116908190036103d6576084359167ffffffffffffffff83116104025736602384011215610402578260040135610966816115db565b936109746040519586611589565b8185526024602086019260061b82010190368211610c4b57602401915b818310610bd3575050505f516020613daf5f395f51905f52549360ff8560401c16159467ffffffffffffffff811680159081610bcb575b6001149081610bc1575b159081610bb8575b50610ba95767ffffffffffffffff1981166001175f516020613daf5f395f51905f525585610b7d575b50610a0c61213c565b610a1461213c565b610a1c61213c565b6001600160a01b031690610a2f8261174b565b50610a39826117fa565b506001600160a01b031690610a4d826117fa565b506001600160601b0360a01b8654161785556001600160601b0360a01b60015416176001556001600160601b0360a01b6002541617600255610a90606435612083565b50825b8151811015610b1c57610aa68183611666565b51602081019081516003811015610b0857610aca5763a1e9dd9d60e01b8652600486fd5b519051906001600160a01b03166003821015610af45760019291610aed91611db1565b5001610a93565b634e487b7160e01b86526021600452602486fd5b634e487b7160e01b87526021600452602487fd5b5050610b255780f35b68ff0000000000000000195f516020613daf5f395f51905f5254165f516020613daf5f395f51905f52557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a180f35b68ffffffffffffffffff191668010000000000000001175f516020613daf5f395f51905f52555f610a03565b63f92ee8a960e01b8752600487fd5b9050155f6109da565b303b1591506109d2565b8791506109c8565b604083360312610c4b57604051906040820182811067ffffffffffffffff821117610c375760405283356001600160a01b0381168103610c335782526020840135906003821015610c335782602092836040950152815201920191610991565b8980fd5b634e487b7160e01b8a52604160045260248afd5b8780fd5b5034610404578060031936011261040457602060ff5f516020613d8f5f395f51905f5254166040519015158152f35b50346104045780600319360112610404577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163003610cd65760206040515f516020613d4f5f395f51905f528152f35b63703e46dd60e11b8152600490fd5b50604036600319011261040457610cfa61151b565b6024359067ffffffffffffffff821161038f573660238301121561038f5781600401359083610d28836115bf565b93610d366040519586611589565b8385526020850193366024828401011161038f57806024602093018637850101526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016308114908115610f4a575b50610f3b578380525f516020613d6f5f395f51905f5260209081526040808620335f908152925290205460ff1615610f23576040516352d1902d60e01b81526001600160a01b0382169390602081600481885afa869181610eeb575b50610e0157634c9c8ce360e01b86526004859052602486fd5b93845f516020613d4f5f395f51905f52879603610ed95750823b15610ec7575f516020613d4f5f395f51905f5280546001600160a01b031916821790558491907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8380a2805115610eac576104739382915190845af43d15610ea4573d91610e88836115bf565b92610e966040519485611589565b83523d85602085013e6121ff565b6060916121ff565b5050505034610eb85780f35b63b398979f60e01b8152600490fd5b634c9c8ce360e01b8552600452602484fd5b632a87526960e21b8652600452602485fd5b9091506020813d602011610f1b575b81610f0760209383611589565b81010312610f175751905f610de8565b5f80fd5b3d9150610efa565b63e2517d3f60e01b8452336004526024849052604484fd5b63703e46dd60e11b8452600484fd5b5f516020613d4f5f395f51905f52546001600160a01b0316141590505f610d8c565b5034610404576020366003190112610404576020610f976004355f52600460205260405f2054151590565b6040519015158152f35b5034610404578060031936011261040457610fba6116b5565b5f516020613d8f5f395f51905f525460ff8116156110125760ff19165f516020613d8f5f395f51905f52557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a180f35b638dfc202b60e01b8252600482fd5b50346104045780600319360112610404576002546040516001600160a01b039091168152602090f35b50346104045760203660031901126104045761106461168e565b60405161043d8082019082821067ffffffffffffffff8311176110fb57606091839161225e8339308152600435602082015233604082015203019082f080156110ee576020906001600160a01b03166110bc81612025565b507f9d5f66d985a12f505753a5f6417ed3c4ec6e68963ee0119770dda415f0d14ad082604051838152a1604051908152f35b50604051903d90823e3d90fd5b634e487b7160e01b84526041600452602484fd5b503461040457604036600319011261040457611129611531565b336001600160a01b038216036111455761047390600435611d15565b63334bd91960e11b8252600482fd5b50346104045760403660031901126104045760043560243567ffffffffffffffff811161038f573660238201121561038f5780600401359167ffffffffffffffff83116103d657602482019160248436920101116103d6576002546001600160a01b0316330361128c576111d3815f52600460205260405f2054151590565b156111fa5750906111e391611b85565b156111eb5780f35b637c6953f960e01b8152600490fd5b8354604051635aa6e67560e01b81529190602090839060049082906001600160a01b03165afa91821561128157859261124d575b500361123e57906111e3916119ad565b638154374b60e01b8352600483fd5b9091506020813d602011611279575b8161126960209383611589565b81010312610f175751905f61122e565b3d915061125c565b6040513d87823e3d90fd5b636edaef2f60e11b8452600484fd5b5034610404576040366003190112610404576104736004356112bb611531565b906112e1610469825f525f516020613d6f5f395f51905f52602052600160405f20015490565b6118a7565b503461040457602036600319011261040457602061131e6004355f525f516020613d6f5f395f51905f52602052600160405f20015490565b604051908152f35b50346104045780600319360112610404576020600354604051908152f35b506080366003190112610f175761135961151b565b602435906064356001600160a01b03811690819003610f175761137a61168e565b61138f815f52600960205260405f2054151590565b156113e857803b15610f17575f600491604051928380926314b0812960e11b825234905af180156113dd576113c8575b506104c661168e565b6113d59193505f90611589565b5f915f6113bf565b6040513d5f823e3d90fd5b631e37e19560e31b5f5260045ffd5b34610f17575f366003190112610f175760405180602060085491828152019060085f527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3905f5b8181106114555761061d856106e581870382611589565b825484526020909301926001928301920161143e565b34610f17576020366003190112610f17576020610f976001600160a01b0361149161151b565b165f52600960205260405f2054151590565b34610f17576020366003190112610f175760043563ffffffff60e01b8116809103610f1757602090637965db0b60e01b81149081156114e8575b506040519015158152f35b6301ffc9a760e01b149050826114dd565b34610f17575f366003190112610f17575f546001600160a01b03168152602090f35b600435906001600160a01b0382168203610f1757565b602435906001600160a01b0382168203610f1757565b60206040818301928281528451809452019201905f5b81811061156a5750505090565b82516001600160a01b031684526020938401939092019160010161155d565b90601f8019910116810190811067ffffffffffffffff8211176115ab57604052565b634e487b7160e01b5f52604160045260245ffd5b67ffffffffffffffff81116115ab57601f01601f191660200190565b67ffffffffffffffff81116115ab5760051b60200190565b60206040818301928281528451809452019201905f5b8181106116165750505090565b8251845260209384019390920191600101611609565b6040906003190112610f17576004359060243590565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b805182101561167a5760209160051b010190565b634e487b7160e01b5f52603260045260245ffd5b60ff5f516020613d8f5f395f51905f5254166116a657565b63d93c066560e01b5f5260045ffd5b335f9081527f2222dce04fae1e25cd76e9391151ad9e0187ef92144ac6ce9e4e09f2c453b751602052604090205460ff16156116ed57565b63e2517d3f60e01b5f5233600452600160245260445ffd5b5f8181525f516020613d6f5f395f51905f526020908152604080832033845290915290205460ff16156117355750565b63e2517d3f60e01b5f523360045260245260445ffd5b6001600160a01b0381165f9081527fb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d602052604090205460ff166117f5576001600160a01b03165f8181527fb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d60205260408120805460ff191660011790553391907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a4600190565b505f90565b6001600160a01b0381165f9081527f2222dce04fae1e25cd76e9391151ad9e0187ef92144ac6ce9e4e09f2c453b751602052604090205460ff166117f5576001600160a01b03165f8181527f2222dce04fae1e25cd76e9391151ad9e0187ef92144ac6ce9e4e09f2c453b75160205260408120805460ff191660019081179091553392917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9080a4600190565b5f8181525f516020613d6f5f395f51905f52602090815260408083206001600160a01b038616845290915290205460ff16611945575f8181525f516020613d6f5f395f51905f52602090815260408083206001600160a01b0395909516808452949091528120805460ff19166001179055339291907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9080a4600190565b50505f90565b9190820180921161195857565b634e487b7160e01b5f52601160045260245ffd5b926119a69061199860609460ff9498979860018060a01b03168752608060208801526080870190611642565b908582036040870152611642565b9416910152565b90801561194557813560f81c60028111611ae5578015611b4c57600114611b04576042036117f5576001810135906041602182013591013560f81c91805f1a60018110159081611af8575b5015611ae557815f1a60018110159081611aec575b5015611ae557611a39611a59919060405191604083016040525f8352601f8301525f6020835184010152565b919060405191604083016040525f8352601f8301525f6020835184010152565b6040516116b480820182811067ffffffffffffffff8211176115ab57858486611a8a93869561269b8739309061196c565b03905ff080156113dd577facef1c6c805d7395b4aeee279bc679beea84f01a1f1b08be7aef2af535bba81f936001600160a01b0390911691611add9190611ad084611e03565b506040519485948561196c565b0390a1600190565b5050505f90565b601f915011155f611a0d565b601f915011155f6119f8565b6015036117f557602060017fdf6d7b91d41cb55ced11681822028e1605f72d50168b3898feb40ee04259d18292013560601c611b3f81611dde565b50604051908152a1600190565b506021036117f557602060017fc6b4ec1bc7a17331ef296e0810039347563e90c3fa496b4de270f6c5ff345abe920135611b3f81612083565b60685f920361194557602081013560601c603482013560601c91604881013590611bae84611fed565b90506003811015611d015780611bcd5763a1e9dd9d60e01b8652600486fd5b909192939450600181145f14611c52575060405163a9059cbb60e01b6020808301919091526001600160a01b0385166024830152604480830185905282527fabdd326df16eff74bb67e4a6b3d6372ceba76796f256a7b7f8577108cf5db287929091611c4490611c3e606482611589565b876121a7565b6040519384523592a4600190565b600214611c83575b60207fabdd326df16eff74bb67e4a6b3d6372ceba76796f256a7b7f8577108cf5db28791611c44565b833b15610f17576040516340c10f1960e01b81526001600160a01b038416600482015260248101839052905f8260448183895af19081156113dd577fabdd326df16eff74bb67e4a6b3d6372ceba76796f256a7b7f8577108cf5db28792602092611cf1575b50915050611c5a565b5f611cfb91611589565b5f611ce8565b634e487b7160e01b5f52602160045260245ffd5b5f8181525f516020613d6f5f395f51905f52602090815260408083206001600160a01b038616845290915290205460ff1615611945575f8181525f516020613d6f5f395f51905f52602090815260408083206001600160a01b0395909516808452949091528120805460ff19169055339291907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9080a4600190565b6001600160a01b03166003821015611d0157611ddb91815f52600760205260405f205560056120e1565b90565b6001600160a01b03165f81815260076020526040902060019055611ddb9060056120e1565b6001600160a01b03165f81815260076020526040902060029055611ddb9060056120e1565b90611e32826115db565b611e3f6040519182611589565b8281528092611e50601f19916115db565b0190602036910137565b91906008549081841015611ed757611e72908461194b565b90808211611ecf575b5082810390811161195857611e8f81611e28565b905f5b818110611ea0575090925050565b80611eb7611eb06001938861194b565b6008612010565b90549060031b1c611ec88286611666565b5201611e92565b90505f611e7b565b50509050604051611ee9602082611589565b5f81525f36813790565b91906005549081841015611ed757611f0b908461194b565b90808211611f68575b5082810390811161195857611f2881611e28565b905f5b818110611f39575090925050565b80611f50611f496001938861194b565b6005612010565b90549060031b1c611f618286611666565b5201611f2b565b90505f611f14565b91906003549081841015611ed757611f88908461194b565b90808211611fe5575b5082810390811161195857611fa581611e28565b905f5b818110611fb6575090925050565b80611fcd611fc66001938861194b565b6003612010565b90549060031b1c611fde8286611666565b5201611fa8565b90505f611f91565b612001906001600160a01b03166005612167565b91906003831015611d01579190565b805482101561167a575f5260205f2001905f90565b805f52600960205260405f2054155f146117f557600854600160401b8110156115ab5780600161205a92016008556008612010565b81549060031b9083821b915f19901b1916179055600854905f52600960205260405f2055600190565b805f52600460205260405f2054155f146117f557600354600160401b8110156115ab578060016120b892016003556003612010565b81549060031b9083821b915f19901b1916179055600354905f52600460205260405f2055600190565b5f82815260018201602052604090205461194557805490600160401b8210156115ab57612115826001809401835582612010565b81549060031b9085821b915f19901b19161790558054925f520160205260405f2055600190565b60ff5f516020613daf5f395f51905f525460401c161561215857565b631afcd79f60e31b5f5260045ffd5b9190805f526002830160205260405f20549283155f1461219f5761219a9293506001915f520160205260405f2054151590565b905f90565b505060019190565b905f602091828151910182855af1156113dd575f513d6121f657506001600160a01b0381163b155b6121d65750565b635274afe760e01b5f9081526001600160a01b0391909116600452602490fd5b600114156121cf565b90612223575080511561221457602081519101fd5b63d6bda27560e01b5f5260045ffd5b81511580612254575b612234575090565b639996b31560e01b5f9081526001600160a01b0391909116600452602490fd5b50803b1561222c56fe60a0346100e757601f61043d38819003918201601f19168301916001600160401b038311848410176100eb578084926060946040528339810103126100e757610047816100ff565b602082015190916001600160a01b0390610063906040016100ff565b169182156100d4575f80546001600160a01b031981168517825560405194916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36080526001556103299081610114823960805181818161014c01526102000152f35b631e4fbdf760e01b5f525f60045260245ffd5b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b51906001600160a01b03821682036100e75756fe60806040526004361015610011575f80fd5b5f3560e01c806329610252146101f357806369fe0e2d146101d2578063715018a61461017b57806386ea825c146101375780638da5cb5b14610110578063ddca3f43146100f35763f2fde38b14610066575f80fd5b346100ef5760203660031901126100ef576004356001600160a01b038116908190036100ef57610094610303565b80156100dc575f80546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b5f525f60045260245ffd5b5f80fd5b346100ef575f3660031901126100ef576020600154604051908152f35b346100ef575f3660031901126100ef575f546040516001600160a01b039091168152602090f35b346100ef575f3660031901126100ef576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346100ef575f3660031901126100ef57610193610303565b5f80546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346100ef5760203660031901126100ef576101eb610303565b600435600155005b5f3660031901126100ef577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633036102f45760015434036102e5575f8080803460018060a01b038254165af13d156102e0573d67ffffffffffffffff81116102cc5760405190601f8101601f19908116603f0116820167ffffffffffffffff8111838210176102cc5760405281525f60203d92013e5b156102bd577faaeea0b595e409578c26dd16fa1bdb3a29a4d874694ecef3ca96376940f5fbfb5f80a1005b6353048b4960e11b5f5260045ffd5b634e487b7160e01b5f52604160045260245ffd5b610292565b631fbbed9560e01b5f5260045ffd5b63064917ff60e11b5f5260045ffd5b5f546001600160a01b0316330361031657565b63118cdaa760e01b5f523360045260245ffd61016080604052346104a0576116b4803803809161001d82856104a4565b83398101906080818303126104a05780516001600160a01b038116908190036104a05760208201516001600160401b0381116104a0578361005f9184016104c7565b60408301519093906001600160401b0381116104a0576060916100839185016104c7565b9201519160ff83168093036104a0576040938451926100a286856104a4565b60018452603160f81b6020850190815282519093906001600160401b0381116103b057600354600181811c91168015610496575b602082101461039257601f8111610433575b50806020601f82116001146103cf575f916103c4575b508160011b915f199060031b1c1916176003555b8051906001600160401b0382116103b05760045490600182811c921680156103a6575b60208310146103925781601f849311610324575b50602090601f83116001146102be575f926102b3575b50508160011b915f199060031b1c1916176004555b80156102a057600580546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a36101c48161051c565b610120526101d1836106a3565b6101405260208151910120918260e05251902080610100524660a05283519060208201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f84528583015260608201524660808201523060a082015260a0815261023c60c0826104a4565b5190206080523060c05260ff19600954161760095551610ed890816107dc823960805181610b4c015260a05181610c09015260c05181610b16015260e05181610b9b01526101005181610bc10152610120518161045f015261014051816104880152f35b631e4fbdf760e01b5f525f60045260245ffd5b015190505f8061015f565b60045f9081528281209350601f198516905b81811061030c57509084600195949392106102f4575b505050811b01600455610174565b01515f1960f88460031b161c191690555f80806102e6565b929360206001819287860151815501950193016102d0565b60045f529091507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f840160051c81019160208510610388575b90601f859493920160051c01905b81811061037a5750610149565b5f815584935060010161036d565b909150819061035f565b634e487b7160e01b5f52602260045260245ffd5b91607f1691610135565b634e487b7160e01b5f52604160045260245ffd5b90508401515f6100fe565b60035f9081528181209250601f198416905b81811061041b57509083600194939210610403575b5050811b01600355610112565b8601515f1960f88460031b161c191690555f806103f6565b9192602060018192868b0151815501940192016103e1565b60035f527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f830160051c8101916020841061048c575b601f0160051c01905b81811061048157506100e8565b5f8155600101610474565b909150819061046b565b90607f16906100d6565b5f80fd5b601f909101601f19168101906001600160401b038211908210176103b057604052565b81601f820112156104a0578051906001600160401b0382116103b057604051926104fb601f8401601f1916602001856104a4565b828452602083830101116104a057815f9260208093018386015e8301015290565b908151602081105f14610596575090601f815111610556576020815191015160208210610547571790565b5f198260200360031b1b161790565b604460209160405192839163305a27a960e01b83528160048401528051918291826024860152018484015e5f828201840152601f01601f19168101030190fd5b6001600160401b0381116103b057600654600181811c91168015610699575b602082101461039257601f8111610666575b50602092601f821160011461060557928192935f926105fa575b50508160011b915f199060031b1c19161760065560ff90565b015190505f806105e1565b601f1982169360065f52805f20915f5b86811061064e5750836001959610610636575b505050811b0160065560ff90565b01515f1960f88460031b161c191690555f8080610628565b91926020600181928685015181550194019201610615565b60065f52601f60205f20910160051c810190601f830160051c015b81811061068e57506105c7565b5f8155600101610681565b90607f16906105b5565b908151602081105f146106ce575090601f815111610556576020815191015160208210610547571790565b6001600160401b0381116103b057600754600181811c911680156107d1575b602082101461039257601f811161079e575b50602092601f821160011461073d57928192935f92610732575b50508160011b915f199060031b1c19161760075560ff90565b015190505f80610719565b601f1982169360075f52805f20915f5b868110610786575083600195961061076e575b505050811b0160075560ff90565b01515f1960f88460031b161c191690555f8080610760565b9192602060018192868501518155019401920161074d565b60075f52601f60205f20910160051c810190601f830160051c015b8181106107c657506106ff565b5f81556001016107b9565b90607f16906106ed56fe6080806040526004361015610012575f80fd5b5f3560e01c90816306fdde03146107bf57508063095ea7b31461079957806318160ddd1461077c57806323b872dd14610744578063313ce567146107245780633644e5151461070257806340c10f191461065657806342966c681461063957806370a0823114610602578063715018a6146105a757806379cc6790146105775780637ecebe001461053f57806384b0196e146104475780638da5cb5b1461041f57806395d89b411461033d578063a9059cbb1461030c578063d505accf146101c7578063dd62ed3e146101775763f2fde38b146100ed575f80fd5b3461017357602036600319011261017357610106610885565b61010e610c2f565b6001600160a01b0316801561016057600580546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3005b631e4fbdf760e01b5f525f60045260245ffd5b5f80fd5b3461017357604036600319011261017357610190610885565b61019861089b565b6001600160a01b039182165f908152600160209081526040808320949093168252928352819020549051908152f35b346101735760e0366003190112610173576101e0610885565b6101e861089b565b604435906064359260843560ff81168103610173578442116102f9576102bc6102c59160018060a01b03841696875f52600860205260405f20908154916001830190556040519060208201927f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c984528a604084015260018060a01b038916606084015289608084015260a083015260c082015260c0815261028a60e08261096a565b519020610295610b13565b906040519161190160f01b83526002830152602282015260c43591604260a4359220610dd7565b90929192610e64565b6001600160a01b03168481036102e257506102e09350610cda565b005b84906325c0072360e11b5f5260045260245260445ffd5b8463313c898160e11b5f5260045260245ffd5b3461017357604036600319011261017357610332610328610885565b6024359033610a69565b602060405160018152f35b34610173575f366003190112610173576040515f60045461035d816108b1565b80845290600181169081156103fb575060011461039d575b610399836103858185038261096a565b604051918291602083526020830190610861565b0390f35b60045f9081527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b939250905b8082106103e157509091508101602001610385610375565b9192600181602092548385880101520191019092916103c9565b60ff191660208086019190915291151560051b840190910191506103859050610375565b34610173575f366003190112610173576005546040516001600160a01b039091168152602090f35b34610173575f366003190112610173576104e36104837f0000000000000000000000000000000000000000000000000000000000000000610d3d565b6104ac7f0000000000000000000000000000000000000000000000000000000000000000610da0565b60206104f1604051926104bf838561096a565b5f84525f368137604051958695600f60f81b875260e08588015260e0870190610861565b908582036040870152610861565b4660608501523060808501525f60a085015283810360c08501528180845192838152019301915f5b82811061052857505050500390f35b835185528695509381019392810192600101610519565b34610173576020366003190112610173576001600160a01b03610560610885565b165f526008602052602060405f2054604051908152f35b34610173576040366003190112610173576102e0610593610885565b602435906105a28233836109a0565b610c56565b34610173575f366003190112610173576105bf610c2f565b600580546001600160a01b031981169091555f906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610173576020366003190112610173576001600160a01b03610623610885565b165f525f602052602060405f2054604051908152f35b34610173576020366003190112610173576102e060043533610c56565b346101735760403660031901126101735761066f610885565b6024359061067b610c2f565b6001600160a01b03169081156106ef57600254908082018092116106db5760207fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef915f9360025584845283825260408420818154019055604051908152a3005b634e487b7160e01b5f52601160045260245ffd5b63ec442f0560e01b5f525f60045260245ffd5b34610173575f36600319011261017357602061071c610b13565b604051908152f35b34610173575f36600319011261017357602060ff60095416604051908152f35b3461017357606036600319011261017357610332610760610885565b61076861089b565b604435916107778333836109a0565b610a69565b34610173575f366003190112610173576020600254604051908152f35b34610173576040366003190112610173576103326107b5610885565b6024359033610cda565b34610173575f366003190112610173575f6003546107dc816108b1565b80845290600181169081156103fb575060011461080357610399836103858185038261096a565b60035f9081527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b939250905b80821061084757509091508101602001610385610375565b91926001816020925483858801015201910190929161082f565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b600435906001600160a01b038216820361017357565b602435906001600160a01b038216820361017357565b90600182811c921680156108df575b60208310146108cb57565b634e487b7160e01b5f52602260045260245ffd5b91607f16916108c0565b5f92918154916108f8836108b1565b808352926001811690811561094d575060011461091457505050565b5f9081526020812093945091925b838310610933575060209250010190565b600181602092949394548385870101520191019190610922565b915050602093945060ff929192191683830152151560051b010190565b90601f8019910116810190811067ffffffffffffffff82111761098c57604052565b634e487b7160e01b5f52604160045260245ffd5b6001600160a01b039081165f818152600160209081526040808320948616835293905291909120549291905f1984106109da575b50505050565b828410610a46578015610a33576001600160a01b03821615610a20575f52600160205260405f209060018060a01b03165f5260205260405f20910390555f8080806109d4565b634a1406b160e11b5f525f60045260245ffd5b63e602df0560e01b5f525f60045260245ffd5b508290637dc7a0d960e11b5f5260018060a01b031660045260245260445260645ffd5b6001600160a01b0316908115610b00576001600160a01b03169182156106ef57815f525f60205260405f2054818110610ae757817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92602092855f525f84520360405f2055845f525f825260405f20818154019055604051908152a3565b8263391434e360e21b5f5260045260245260445260645ffd5b634b637e8f60e11b5f525f60045260245ffd5b307f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480610c06575b15610b6e577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f82527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a08152610c0060c08261096a565b51902090565b507f00000000000000000000000000000000000000000000000000000000000000004614610b45565b6005546001600160a01b03163303610c4357565b63118cdaa760e01b5f523360045260245ffd5b9091906001600160a01b03168015610b0057805f525f60205260405f2054838110610cc0576020845f94957fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef938587528684520360408620558060025403600255604051908152a3565b915063391434e360e21b5f5260045260245260445260645ffd5b6001600160a01b0316908115610a33576001600160a01b0316918215610a205760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591835f526001825260405f20855f5282528060405f2055604051908152a3565b60ff8114610d835760ff811690601f8211610d745760405191610d6160408461096a565b6020808452838101919036833783525290565b632cd44ac360e21b5f5260045ffd5b50604051610d9d81610d968160066108e9565b038261096a565b90565b60ff8114610dc45760ff811690601f8211610d745760405191610d6160408461096a565b50604051610d9d81610d968160076108e9565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411610e59579160209360809260ff5f9560405194855216868401526040830152606082015282805260015afa15610e4e575f516001600160a01b03811615610e4457905f905f90565b505f906001905f90565b6040513d5f823e3d90fd5b5050505f9160039190565b6004811015610ec45780610e76575050565b60018103610e8d5763f645eedf60e01b5f5260045ffd5b60028103610ea8575063fce698f760e01b5f5260045260245ffd5b600314610eb25750565b6335e2f38360e21b5f5260045260245ffd5b634e487b7160e01b5f52602160045260245ffd360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00","sourceMap":"1537:23436:85:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1537:23436:85;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1537:23436:85;;;;;;;;1944:72:25;;:::i;:::-;12473:55:71;;-1:-1:-1;1537:23436:85;5197:14:71;1537:23436:85;;;-1:-1:-1;1537:23436:85;;5197:26:71;;5101:129;;12473:55;16414:44:85;16410:106;;16526:60;;;;;;;1537:23436;;;;;;;;;;;;16526:60;;16574:9;16526:60;;;;;;;;;1537:23436;-1:-1:-1;;;;;;1537:23436:85;;;16600:80;;;;;1537:23436;;;;;;16600:80;;16627:10;1537:23436;16600:80;;1537:23436;16647:4;1537:23436;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16600:80;;1537:23436;16600:80;;;;;;;1537:23436;1944:72:25;;;;:::i;:::-;14280:11:85;;14276:64;;14376:21;;;:::i;:::-;1537:23436;;;;;;;;14412:30;;;-1:-1:-1;;;14465:18:85;;1537:23436;14465:18;;14408:333;1537:23436;14504:31;;1537:23436;;;1745:53:50;1537:23436:85;;;;;;1745:53:50;;;16627:10:85;1537:23436;1745:53:50;;1537:23436:85;16647:4;1537:23436;;;;;;;;;;1745:53:50;;;1537:23436:85;1745:53:50;;:::i;:::-;;;:::i;:::-;1537:23436:85;;;;;;;16627:10;14756:48;1537:23436;16627:10;14756:48;;1537:23436;;14500:241;14650:14;14637:27;14500:241;14633:108;14680:50;;;;;1537:23436;;-1:-1:-1;;;14680:50:85;;16627:10;1537:23436;14680:50;;1537:23436;;;;;;;;;;;;;;14680:50;;;;;;;;;14633:108;;;14500:241;;14680:50;;;;;:::i;:::-;1537:23436;;14680:50;;;;1537:23436;;;;14680:50;1537:23436;;;;;;;;;;-1:-1:-1;;;1537:23436:85;;;;;;;;14276:64;-1:-1:-1;;;14314:15:85;;1537:23436;14314:15;;16600:80;;;;;:::i;:::-;1537:23436;;16600:80;;;;1537:23436;;;;16600:80;1537:23436;;;16526:60;;;;;:::i;:::-;1537:23436;;16526:60;;;;16410:106;-1:-1:-1;;;16481:24:85;;1537:23436;15347:24;16481;1537:23436;;;;;;;;;;;;;;;;;;;;;5528:4;1537:23436;;;;;;;;;;-1:-1:-1;;1537:23436:85;;;;5815:26:20;1537:23436:85;;;;:::i;:::-;5785:18:20;3283:4;5785:18;;-1:-1:-1;1537:23436:85;-1:-1:-1;;;;;;;;;;;1537:23436:85;;4967:24:20;1537:23436:85;-1:-1:-1;1537:23436:85;4967:24:20;1537:23436:85;4807:191:20;;5785:18;3283:4;:::i;:::-;5815:26;:::i;:::-;;1537:23436:85;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1537:23436:85;;;;;;;;;;;;;;;-1:-1:-1;;1537:23436:85;;;;;;:::i;:::-;;;1944:72:25;;;:::i;:::-;14280:11:85;;14276:64;;14376:21;;;:::i;:::-;1537:23436;;;;;;;;14412:30;;;-1:-1:-1;;;14465:18:85;;1537:23436;14465:18;;14408:333;1537:23436;14504:31;;1537:23436;;;1745:53:50;1537:23436:85;;;;;;1745:53:50;;;14582:10:85;1537:23436;1745:53:50;;1537:23436:85;14602:4;1537:23436;;;;;;;;;;1745:53:50;;;;;;:::i;:::-;-1:-1:-1;;;;;1537:23436:85;;1745:53:50;:::i;:::-;1537:23436:85;;;;;-1:-1:-1;;;;;1537:23436:85;;;;;14774:10;;14756:48;;1537:23436;;14756:48;1537:23436;;14500:241;14650:14;14637:27;14500:241;14633:108;1537:23436;-1:-1:-1;;;;;1537:23436:85;;14680:50;;;;;1537:23436;;-1:-1:-1;;;14680:50:85;;14711:10;1537:23436;14680:50;;1537:23436;;;;;;;;;;;;;;;;;;14680:50;;;;;;;;14633:108;;;14500:241;;14680:50;;;;;:::i;:::-;1537:23436;;14680:50;;;;14276:64;-1:-1:-1;;;14314:15:85;;1537:23436;14314:15;;1537:23436;;;;;;9191:37;1537:23436;;;:::i;:::-;9191:37;;:::i;:::-;1537:23436;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;1537:23436:85;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9962:7;1537:23436;;;;;;;9962:7;1537:23436;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1537:23436:85;;;;10788:21;1537:23436;;:::i;:::-;10788:21;:::i;:::-;1537:23436;;;-1:-1:-1;1537:23436:85;;;;;;;;;;;;;-1:-1:-1;;;1537:23436:85;;;;;;;;;;;;;;;-1:-1:-1;;1537:23436:85;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;;;;;;;1537:23436:85;;;3949:31:20;1537:23436:85;;;;;;-1:-1:-1;1537:23436:85;;;;;;-1:-1:-1;1537:23436:85;;;;;;;;;;;;;;;;;;;;;;;;;11073:17;1537:23436;;;;;;;;;;;;;10316:45;1537:23436;;;:::i;:::-;10316:45;;:::i;1537:23436::-;;;;;;11903:35;1537:23436;;;:::i;:::-;11903:35;;:::i;1537:23436::-;;;;;;;;;;;;;;;;;;8814:12;1537:23436;;;;;;;8814:12;1537:23436;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3283:4:20;;:::i;:::-;1944:72:25;;:::i;:::-;5528:4:85;1537:23436;;-1:-1:-1;;;;;;;;;;;1537:23436:85;;;-1:-1:-1;;;;;;;;;;;1537:23436:85;3319:20:25;1537:23436:85;;;966:10:24;1537:23436:85;;3319:20:25;1537:23436:85;;;;;;;;;;;;;;;;9767:7;1537:23436;;;;;;;;;;;;;;-1:-1:-1;;1537:23436:85;;;;;;:::i;:::-;;;:::i;:::-;;;-1:-1:-1;;;;;1537:23436:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1537:23436:85;;;;;;;4301:16:22;1537:23436:85;;;;4724:16:22;;:34;;;;1537:23436:85;;4788:16:22;:50;;;;1537:23436:85;4853:13:22;:30;;;;1537:23436:85;4849:91:22;;;-1:-1:-1;;1537:23436:85;;;;-1:-1:-1;;;;;;;;;;;1537:23436:85;;4977:67:22;;1537:23436:85;6891:76:22;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;1537:23436:85;;7011:57;1537:23436;7011:57;:::i;:::-;;7079:50;;;:::i;:::-;-1:-1:-1;;;;;;1537:23436:85;;7139:51;1537:23436;7139:51;:::i;:::-;;-1:-1:-1;;;;;1537:23436:85;;;;;;;;-1:-1:-1;;;;;1537:23436:85;;;;;;;;-1:-1:-1;;;;;1537:23436:85;;7293:29;1537:23436;;;7293:29;1537:23436;7898:23:71;1537:23436:85;;7898:23:71;:::i;:::-;;7376:13:85;7411:3;1537:23436;;7391:18;;;;;7459:10;;;;:::i;:::-;;1537:23436;7488:19;;1537:23436;;;;;;;;;7488:40;;-1:-1:-1;;;7555:18:85;;1537:23436;14465:18;7555;7484:192;1537:23436;;;;-1:-1:-1;;;;;1537:23436:85;;;;;;;;7612:49;;;;;:::i;:::-;;1537:23436;7376:13;;1537:23436;-1:-1:-1;;;1537:23436:85;;;;;;;;;-1:-1:-1;;;1537:23436:85;;;;;;;;7391:18;;;5064:101:22;;1537:23436:85;;5064:101:22;1537:23436:85;;-1:-1:-1;;;;;;;;;;;1537:23436:85;;-1:-1:-1;;;;;;;;;;;1537:23436:85;5140:14:22;1537:23436:85;;;;;;5140:14:22;1537:23436:85;;4977:67:22;-1:-1:-1;;1537:23436:85;;;-1:-1:-1;;;;;;;;;;;1537:23436:85;4977:67:22;;;4849:91;-1:-1:-1;;;4906:23:22;;1537:23436:85;4906:23:22;;4853:30;4870:13;;;4853:30;;;4788:50;4816:4;4808:25;:30;;-1:-1:-1;4788:50:22;;4724:34;;;-1:-1:-1;4724:34:22;;1537:23436:85;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1537:23436:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1537:23436:85;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1537:23436:85;;;;;;;;;;;;;;;;;;;;;;;5090:6:23;-1:-1:-1;;;;;1537:23436:85;5081:4:23;5073:23;5069:145;;1537:23436:85;;;-1:-1:-1;;;;;;;;;;;1537:23436:85;;;5069:145:23;-1:-1:-1;;;5174:29:23;;1537:23436:85;;5174:29:23;1537:23436:85;-1:-1:-1;1537:23436:85;;-1:-1:-1;;1537:23436:85;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4667:6:23;1537:23436:85;4658:4:23;4650:23;;;:120;;;;1537:23436:85;4633:251:23;;;1537:23436:85;;;-1:-1:-1;;;;;;;;;;;1537:23436:85;;;;;;;;966:10:24;-1:-1:-1;1537:23436:85;;;;;;;;;;4516:23:20;4512:108;;1537:23436:85;;-1:-1:-1;;;6131:52:23;;-1:-1:-1;;;;;1537:23436:85;;;;;;;;;6131:52:23;;;;;;;1537:23436:85;-1:-1:-1;6127:437:23;;-1:-1:-1;;;6493:60:23;;1537:23436:85;;;;;1805:47:37;6493:60:23;6127:437;6225:40;;-1:-1:-1;;;;;;;;;;;6225:40:23;;;6221:120;;1748:29:37;;;:34;1744:119;;-1:-1:-1;;;;;;;;;;;1537:23436:85;;-1:-1:-1;;;;;;1537:23436:85;;;;;;;;2407:36:37;1537:23436:85;;2407:36:37;1537:23436:85;;2458:15:37;:11;;4107:55:51;4065:25;;;;;;;;1537:23436:85;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;4107:55:51;:::i;1537:23436:85:-;;;4107:55:51;:::i;2454:148:37:-;6163:9;;;;;6159:70;;1537:23436:85;;6159:70:37;-1:-1:-1;;;6199:19:37;;1537:23436:85;;6199:19:37;1744:119;-1:-1:-1;;;1805:47:37;;1537:23436:85;;;1805:47:37;;6221:120:23;-1:-1:-1;;;6292:34:23;;1537:23436:85;;;6292:34:23;;6131:52;;;;1537:23436:85;6131:52:23;;1537:23436:85;6131:52:23;;;;;;1537:23436:85;6131:52:23;;;:::i;:::-;;;1537:23436:85;;;;;6131:52:23;;;;1537:23436:85;-1:-1:-1;1537:23436:85;;6131:52:23;;;-1:-1:-1;6131:52:23;;4512:108:20;-1:-1:-1;;;4562:47:20;;966:10:24;1537:23436:85;;;;;;;4562:47:20;;4633:251:23;-1:-1:-1;;;4844:29:23;;1537:23436:85;4844:29:23;;4650:120;-1:-1:-1;;;;;;;;;;;1537:23436:85;-1:-1:-1;;;;;1537:23436:85;4728:42:23;;;-1:-1:-1;4650:120:23;;;1537:23436:85;;;;;;;-1:-1:-1;;1537:23436:85;;;;;8806:28:71;1537:23436:85;;-1:-1:-1;1537:23436:85;5197:14:71;1537:23436:85;;;-1:-1:-1;1537:23436:85;;5197:26:71;;5101:129;;8806:28;1537:23436:85;;;;;;;;;;;;;;;;;;;;;3283:4:20;;:::i;:::-;-1:-1:-1;;;;;;;;;;;1537:23436:85;;;;2971:9:25;2967:62;;1537:23436:85;;;-1:-1:-1;;;;;;;;;;;1537:23436:85;3627:22:25;1537:23436:85;;;966:10:24;1537:23436:85;;3627:22:25;1537:23436:85;;2967:62:25;-1:-1:-1;;;3003:15:25;;1537:23436:85;3003:15:25;;1537:23436:85;;;;;;;;;;;;;8360:13;1537:23436;;;-1:-1:-1;;;;;1537:23436:85;;;;;;;;;;;;;;;-1:-1:-1;;1537:23436:85;;;;1944:72:25;;:::i;:::-;1537:23436:85;;17149:51;;;;;;;;;;;;;;1537:23436;17149:51;;;;;;17177:4;1537:23436;;;;;;;;17189:10;1537:23436;;;;17149:51;;;;;;;;;1537:23436;;-1:-1:-1;;;;;1537:23436:85;11511:50:71;1537:23436:85;11511:50:71;:::i;:::-;;17339:46:85;1537:23436;;;;;;17339:46;1537:23436;;;;;;17149:51;1537:23436;;;;;;;;;;;17149:51;-1:-1:-1;;;1537:23436:85;;;;;;;;;;;;;;;-1:-1:-1;;1537:23436:85;;;;;;:::i;:::-;966:10:24;-1:-1:-1;;;;;1537:23436:85;;6489:34:20;6485:102;;6597:37;1537:23436:85;;;6597:37:20;:::i;6485:102::-;-1:-1:-1;;;6546:30:20;;1537:23436:85;6546:30:20;;1537:23436:85;;;;;;;-1:-1:-1;;1537:23436:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17760:13;1537:23436;-1:-1:-1;;;;;1537:23436:85;17746:10;:27;17742:80;;8806:28:71;;-1:-1:-1;1537:23436:85;5197:14:71;1537:23436:85;;;-1:-1:-1;1537:23436:85;;5197:26:71;;5101:129;;8806:28;17836:29:85;;;17886:41;;;;;:::i;:::-;17885:42;17881:104;;1537:23436;;17881:104;-1:-1:-1;;;17954:16:85;;1537:23436;;17954:16;17832:397;1537:23436;;;;-1:-1:-1;;;18015:29:85;;1537:23436;;;;;;;;;;-1:-1:-1;;;;;1537:23436:85;18015:29;;;;;;;;;;;17832:397;-1:-1:-1;18005:39:85;;;18065:43;;;;:::i;18001:228::-;-1:-1:-1;;;18203:15:85;;1537:23436;18203:15;;18015:29;;;;1537:23436;18015:29;;1537:23436;18015:29;;;;;;1537:23436;18015:29;;;:::i;:::-;;;1537:23436;;;;;18015:29;;;;;;;-1:-1:-1;18015:29:85;;;1537:23436;;;;;;;;;17742:80;-1:-1:-1;;;17796:15:85;;1537:23436;17796:15;;1537:23436;;;;;;;-1:-1:-1;;1537:23436:85;;;;5398:25:20;1537:23436:85;;;;:::i;:::-;5368:18:20;3283:4;5368:18;;-1:-1:-1;1537:23436:85;-1:-1:-1;;;;;;;;;;;1537:23436:85;;4967:24:20;1537:23436:85;-1:-1:-1;1537:23436:85;4967:24:20;1537:23436:85;4807:191:20;;3283:4;5398:25;:::i;1537:23436:85:-;;;;;;;-1:-1:-1;;1537:23436:85;;;;;;;;-1:-1:-1;1537:23436:85;-1:-1:-1;;;;;;;;;;;1537:23436:85;;4967:24:20;1537:23436:85;-1:-1:-1;1537:23436:85;4967:24:20;1537:23436:85;4807:191:20;;1537:23436:85;;;;;;;;;;;;;;;;;;;;;8592:12;1537:23436;;;;;;;;-1:-1:-1;1537:23436:85;;-1:-1:-1;;1537:23436:85;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;1537:23436:85;;;;;;;;1944:72:25;;:::i;:::-;12473:55:71;;-1:-1:-1;1537:23436:85;5197:14:71;1537:23436:85;;;-1:-1:-1;1537:23436:85;;5197:26:71;;5101:129;;12473:55;15280:44:85;15276:106;;15392:60;;;;;1537:23436;;;;;;;;;;;;15392:60;;15440:9;15392:60;;;;;;;;;1537:23436;1944:72:25;;;:::i;15392:60:85:-;;;;;1537:23436;15392:60;;:::i;:::-;1537:23436;15392:60;;;;;1537:23436;;;;;;;;;15276:106;15347:24;;;1537:23436;15347:24;1537:23436;;15347:24;1537:23436;;;;;;-1:-1:-1;;1537:23436:85;;;;;;;;11320:17;1537:23436;;;;;;;11320:17;1537:23436;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1537:23436:85;;;;;12473:55:71;-1:-1:-1;;;;;1537:23436:85;;:::i;:::-;;-1:-1:-1;1537:23436:85;5197:14:71;1537:23436:85;;;-1:-1:-1;1537:23436:85;;5197:26:71;;5101:129;;1537:23436:85;;;;;;-1:-1:-1;;1537:23436:85;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3599:47:20;;;:87;;;;1537:23436:85;;;;;;;;;;3599:87:20;-1:-1:-1;;;1101:40:26;;-1:-1:-1;3599:87:20;;;1537:23436:85;;;;;;-1:-1:-1;;1537:23436:85;;;;;;-1:-1:-1;;;;;1537:23436:85;;;;;;;;;;-1:-1:-1;;;;;1537:23436:85;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;1537:23436:85;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;1537:23436:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;1537:23436:85;;;;;-1:-1:-1;1537:23436:85;;;;;;;;;-1:-1:-1;;1537:23436:85;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;1537:23436:85;;;;;;;;-1:-1:-1;;1537:23436:85;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;2709:128:25;1537:23436:85;-1:-1:-1;;;;;;;;;;;1537:23436:85;;2770:61:25;;2709:128::o;2770:61::-;2805:15;;;-1:-1:-1;2805:15:25;;-1:-1:-1;2805:15:25;4196:103:20;966:10:24;-1:-1:-1;1537:23436:85;;;;;;;;;;;;4516:23:20;4512:108;;4196:103::o;4512:108::-;4562:47;;;-1:-1:-1;4562:47:20;966:10:24;4562:47:20;1537:23436:85;5528:4;1537:23436;;;-1:-1:-1;4562:47:20;4196:103;-1:-1:-1;1537:23436:85;;;-1:-1:-1;;;;;;;;;;;1537:23436:85;;;;;;;;966:10:24;1537:23436:85;;;;;;;;;;4516:23:20;4512:108;;4196:103;:::o;4512:108::-;4562:47;;;-1:-1:-1;4562:47:20;966:10:24;4562:47:20;1537:23436:85;;;;-1:-1:-1;4562:47:20;7318:387;-1:-1:-1;;;;;1537:23436:85;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1537:23436:85;;;;;;;;;;;;;-1:-1:-1;;1537:23436:85;;;;;966:10:24;;1537:23436:85;7580:40:20;1537:23436:85;;7580:40:20;7557:4;7634:11;:::o;7480:219::-;7676:12;1537:23436:85;7676:12:20;:::o;7318:387::-;-1:-1:-1;;;;;1537:23436:85;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1537:23436:85;;;;;;;;;;;;;-1:-1:-1;;1537:23436:85;4803:1:22;1537:23436:85;;;;;;966:10:24;;1537:23436:85;7580:40:20;;1537:23436:85;7580:40:20;4803:1:22;7634:11:20;:::o;7318:387::-;1537:23436:85;;;;-1:-1:-1;;;;;;;;;;;1537:23436:85;;;;;;;;-1:-1:-1;;;;;1537:23436:85;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1537:23436:85;;;;;;;;-1:-1:-1;;;;;1537:23436:85;;;;;;;;;;;;;;;-1:-1:-1;;1537:23436:85;;;;;966:10:24;;1537:23436:85;;7580:40:20;;1537:23436:85;7580:40:20;7557:4;7634:11;:::o;7480:219::-;7676:12;;1537:23436:85;7676:12:20;:::o;3769:2:85:-;;;;;;;;;;:::o;:::-;1537:23436;;;3769:2;;;;;;;;4884:77;;;;;;;1537:23436;4884:77;;;;1537:23436;;;;;;;;4884:77;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;1537:23436;;4884:77;;1537:23436;4884:77::o;21180:3791::-;;21287:18;;21281:64;;21385:250;;;;21710:14;21686:39;;21645:120;;21779:31;;21775:524;;21651:31;22313:43;22309:712;;3769:2;23123:50;23117:96;;21651:31;23688:479;;;;3769:2;;23688:479;;;;;;21385:250;23688:479;24207:12;;1537:23436;24207:12;21651:31;24236:20;;;:45;;;;21180:3791;24234:48;;24230:91;;24363:14;1537:23436;24363:14;21651:31;24394:22;;;:49;;;;21180:3791;24392:52;;24388:95;;24522:30;24593:32;24522:30;1334:522:110;1424:426;;;;;;;;;;;;;;;;;;;;;;;1334:522;24522:30:85;24593:32;1334:522:110;1424:426;;;;;;;;;;;;;;;;;;;;;;;1334:522;24593:32:85;1537:23436;;24665:79;;;;;;;;;;;;;;;;;;;;;;;24693:4;24665:79;;:::i;:::-;;;1537:23436;24665:79;;;;;24864:78;;-1:-1:-1;;;;;1537:23436:85;;;;24864:78;;1537:23436;24807:41;1537:23436;24807:41;:::i;:::-;;1537:23436;;24864:78;;;;;:::i;:::-;;;;21651:31;21180:3791;:::o;24388:95::-;24460:12;;;1537:23436;24460:12;:::o;24394:49::-;24441:2;24420:23;;;;24394:49;;;24236:45;24279:2;24260:21;;;;24236:45;;;22309:712;3769:2;22378:54;22372:108;;1537:23436;21651:31;22954:30;22609:273;;;;;22896:38;;;:::i;:::-;;1537:23436;;;;;22954:30;21651:31;22999:11;:::o;21775:524::-;21832:46;3769:2;21832:46;21826:100;;3769:2;21651:31;22235:27;22060:113;;;7898:23:71;;;:::i;18697:1399:85:-;3769:2;1537:23436;18780:4;18802:39;18796:85;;3769:2;19063:575;;;;;3769:2;19063:575;;;;;;3769:2;19063:575;;;19674:21;;;;:::i;:::-;1537:23436;;;;;;;;19710:30;;;-1:-1:-1;;;19763:18:85;;;14465;19763;19706:306;1537:23436;;;;;;;19802:31;;19798:214;1537:23436;;;-1:-1:-1;1537:23436:85;;-1:-1:-1;;;3769:2:85;1328:43:50;;;;;;;-1:-1:-1;;;;;1537:23436:85;;1328:43:50;;;1537:23436:85;;;;;;;;1328:43:50;;20027:40:85;;3769:2;;1328:43:50;;;1537:23436:85;;1328:43:50;:::i;:::-;;;:::i;:::-;1537:23436:85;;;;;19063:575;20027:40;;1537:23436;18697:1399;:::o;19798:214::-;19927:14;19914:27;19910:102;;19798:214;3769:2;20027:40;19798:214;;;19910:102;19957:44;;;;;1537:23436;;-1:-1:-1;;;19957:44:85;;-1:-1:-1;;;;;1537:23436:85;;19957:44;;;1537:23436;;;;;;;;-1:-1:-1;1537:23436:85;;;-1:-1:-1;19957:44:85;;;;;;;;20027:40;19957:44;3769:2;19957:44;;;19910:102;;;;;;;19957:44;1537:23436;19957:44;;;:::i;:::-;1537:23436;19957:44;;1537:23436;;;;;;;;;;;;7942:388:20;1537:23436:85;;;;-1:-1:-1;;;;;;;;;;;1537:23436:85;;;;;;;;-1:-1:-1;;;;;1537:23436:85;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1537:23436:85;;;;;;;;-1:-1:-1;;;;;1537:23436:85;;;;;;;;;;;;;;;-1:-1:-1;;1537:23436:85;;;966:10:24;;1537:23436:85;;8205:40:20;;1537:23436:85;8205:40:20;1537:23436:85;8259:11:20;:::o;771:246:109:-;-1:-1:-1;;;;;1537:23436:85;;;;;;;7898:23:71;1537:23436:85;;-1:-1:-1;1537:23436:85;3096:11:70;1537:23436:85;;;-1:-1:-1;1537:23436:85;;7612:7;7898:23:71;:::i;:::-;771:246:109;:::o;:::-;-1:-1:-1;;;;;1537:23436:85;-1:-1:-1;1537:23436:85;;;3096:11:70;1537:23436:85;;;;;;;;7898:23:71;;22896:7:85;7898:23:71;:::i;771:246:109:-;-1:-1:-1;;;;;1537:23436:85;-1:-1:-1;1537:23436:85;;;3096:11:70;1537:23436:85;;;;;24833:14;1537:23436;;7898:23:71;;24807:7:85;7898:23:71;:::i;1537:23436:85:-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;12721:622::-;;;11778:90;1537:23436;12944:16;;;;;12940:70;;13034:14;;;;:::i;:::-;13062:12;;;;13058:55;;12721:622;1537:23436;;;;;;;;;13186:19;;;:::i;:::-;13221:13;-1:-1:-1;13236:8:85;;;;;;-1:-1:-1;13323:13:85;;-1:-1:-1;;12721:622:85:o;13246:3::-;13291:10;5853:18:71;13291:10:85;1537:23436;13291:10;;;:::i;:::-;11778:90;5853:18:71;:::i;:::-;1537:23436:85;;;;;;13265:37;;;;:::i;:::-;1537:23436;;13221:13;;13058:55;13090:12;;13058:55;;;12940:70;1537:23436;;;;;;;;;;:::i;:::-;-1:-1:-1;1537:23436:85;;-1:-1:-1;1537:23436:85;;;12976:23;:::o;12721:622::-;;;10325:7;1537:23436;12944:16;;;;;12940:70;;13034:14;;;;:::i;:::-;13062:12;;;;13058:55;;12721:622;1537:23436;;;;;;;;;13186:19;;;:::i;:::-;13221:13;-1:-1:-1;13236:8:85;;;;;;-1:-1:-1;13323:13:85;;-1:-1:-1;;12721:622:85:o;13246:3::-;13291:10;5853:18:71;13291:10:85;1537:23436;13291:10;;;:::i;:::-;10325:7;5853:18:71;:::i;:::-;1537:23436:85;;;;;;13265:37;;;;:::i;:::-;1537:23436;;13221:13;;13058:55;13090:12;;13058:55;;;12721:622;;;9200:12;1537:23436;12944:16;;;;;12940:70;;13034:14;;;;:::i;:::-;13062:12;;;;13058:55;;12721:622;1537:23436;;;;;;;;;13186:19;;;:::i;:::-;13221:13;-1:-1:-1;13236:8:85;;;;;;-1:-1:-1;13323:13:85;;-1:-1:-1;;12721:622:85:o;13246:3::-;13291:10;5853:18:71;13291:10:85;1537:23436;13291:10;;;:::i;:::-;9200:12;5853:18:71;:::i;:::-;1537:23436:85;;;9200:12;1537:23436;;13265:37;;;;:::i;:::-;1537:23436;;13221:13;;13058:55;13090:12;;13058:55;;;3068:335:109;3267:64;;-1:-1:-1;;;;;1537:23436:85;14376:7;3267:64:109;:::i;:::-;1537:23436:85;;;;;;;;3341:55:109;3068:335;:::o;1537:23436:85:-;;;;;;;;-1:-1:-1;1537:23436:85;;-1:-1:-1;1537:23436:85;;;-1:-1:-1;1537:23436:85;:::o;2497:406:71:-;1537:23436:85;;;5197:14:71;1537:23436:85;;;;;;5197:26:71;2576:321;2580:22;;;17278:17:85;1537:23436;-1:-1:-1;;;1537:23436:85;;;;;;5197:14:71;1537:23436:85;;;17278:17;1537:23436;17278:17;1537:23436;:::i;:::-;;;;;;;;;;;;;;;;;;;;17278:17;1537:23436;;;;5197:14:71;1537:23436:85;;;;;;5197:14:71;2832:11;:::o;2497:406::-;1537:23436:85;;;5197:14:71;1537:23436:85;;;;;;5197:26:71;2576:321;2580:22;;;1537:23436:85;;-1:-1:-1;;;1537:23436:85;;;;;;5197:14:71;1537:23436:85;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;5197:14:71;1537:23436:85;;;;;;5197:14:71;2832:11;:::o;2497:406::-;-1:-1:-1;1537:23436:85;;;5197:14:71;;;1537:23436:85;;;;;;2581:21:71;;1537:23436:85;;;-1:-1:-1;;;1537:23436:85;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;2776:14:71;1537:23436:85;;;;;;;2832:11:71;:::o;7082:141:22:-;1537:23436:85;-1:-1:-1;;;;;;;;;;;1537:23436:85;;;;7148:18:22;7144:73;;7082:141::o;7144:73::-;7189:17;;;-1:-1:-1;7189:17:22;;-1:-1:-1;7189:17:22;5170:305:70;;;1537:23436:85;-1:-1:-1;1537:23436:85;5307:11:70;;;1537:23436:85;;;-1:-1:-1;1537:23436:85;;5337:17:70;;;5333:136;5337:17;;;8806:28:71;;;;5197:14;5101:129;-1:-1:-1;1537:23436:85;5197:14:71;1537:23436:85;;;-1:-1:-1;1537:23436:85;;5197:26:71;;5101:129;;8806:28;5370:39:70;-1:-1:-1;5370:39:70;:::o;5333:136::-;5440:18;;5448:4;5440:18;;:::o;8370:720:50:-;;-1:-1:-1;8507:421:50;8370:720;8507:421;;;;;;;;;;;;-1:-1:-1;8507:421:50;;8942:15;;-1:-1:-1;;;;;;1537:23436:85;;8960:26:50;:31;8942:68;8938:146;;8370:720;:::o;8938:146::-;-1:-1:-1;;;;9033:40:50;;;-1:-1:-1;;;;;1537:23436:85;;;;9033:40:50;1537:23436:85;;;9033:40:50;8942:68;9009:1;8994:16;;8942:68;;4437:582:51;;4609:8;;-1:-1:-1;1537:23436:85;;5690:21:51;:17;;5815:105;;;;;;5686:301;5957:19;;;5710:1;5957:19;;5710:1;5957:19;4605:408;1537:23436:85;;4857:22:51;:49;;;4605:408;4853:119;;4985:17;;:::o;4853:119::-;-1:-1:-1;;;4878:1:51;4933:24;;;-1:-1:-1;;;;;1537:23436:85;;;;4933:24:51;1537:23436:85;;;4933:24:51;4857:49;4883:18;;;:23;4857:49;","linkReferences":{},"immutableReferences":{"40207":[{"start":3217,"length":32},{"start":3425,"length":32}]}},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","PAUSER_ROLE()":"e63ab1e9","UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","bridgingPayments()":"109ec2e7","bridgingPayments(uint256,uint256)":"87e7a3a3","createBridgingPayment(uint256)":"38ff319f","getRoleAdmin(bytes32)":"248a9ca3","getTokenType(address)":"93272baf","governanceAdmin()":"0058f6b8","governancePauser()":"c81eb797","grantRole(bytes32,address)":"2f2ff15d","handleMessage(bytes32,bytes)":"302ac5d0","hasRole(bytes32,address)":"91d14854","initialize(address,address,address,bytes32,(address,uint8)[])":"763b754a","isBridgingPayment(address)":"0c9d9b97","isVftManager(bytes32)":"4e689539","messageQueue()":"3b70c18a","pause()":"8456cb59","paused()":"5c975abb","proxiableUUID()":"52d1902d","renounceRole(bytes32,address)":"36568abe","requestBridging(address,uint256,bytes32)":"c305870c","requestBridgingPayingFee(address,uint256,bytes32,address)":"1e324b52","requestBridgingPayingFeeWithPermit(address,uint256,bytes32,uint256,uint8,bytes32,bytes32,address)":"f6cdd9cc","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7","tokens()":"9d63848a","tokens(uint256,uint256)":"8b4864d6","totalBridgingPayments()":"8b841f6c","totalTokens()":"7e1c0c09","totalVftManagers()":"240dfa95","unpause()":"3f4ba83a","upgradeToAndCall(address,bytes)":"4f1ef286","vftManagers()":"87be40b1","vftManagers(uint256,uint256)":"c1c60921"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidBridgingPayment\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPayload\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSource\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTokenType\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"from\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Bridged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bridgingPayment\",\"type\":\"address\"}],\"name\":\"BridgingPaymentCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"to\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BridgingRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"EthereumTokenRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"tokenDecimals\",\"type\":\"uint8\"}],\"name\":\"GearTokenRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"vftManager\",\"type\":\"bytes32\"}],\"name\":\"VftManagerAdded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bridgingPayments\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"bridgingPayments\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"createBridgingPayment\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenType\",\"outputs\":[{\"internalType\":\"enum IERC20Manager.TokenType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governanceAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governancePauser\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"source\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"handleMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IGovernance\",\"name\":\"governanceAdmin_\",\"type\":\"address\"},{\"internalType\":\"contract IGovernance\",\"name\":\"governancePauser_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"messageQueue_\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"vftManager\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"enum IERC20Manager.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"}],\"internalType\":\"struct IERC20Manager.TokenInfo[]\",\"name\":\"tokens_\",\"type\":\"tuple[]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"bridgingPayment\",\"type\":\"address\"}],\"name\":\"isBridgingPayment\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"vftManager\",\"type\":\"bytes32\"}],\"name\":\"isVftManager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"messageQueue\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"to\",\"type\":\"bytes32\"}],\"name\":\"requestBridging\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"to\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"bridgingPayment\",\"type\":\"address\"}],\"name\":\"requestBridgingPayingFee\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"to\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"bridgingPayment\",\"type\":\"address\"}],\"name\":\"requestBridgingPayingFeeWithPermit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"tokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBridgingPayments\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalVftManagers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vftManagers\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"vftManagers\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidAmount()\":[{\"details\":\"Error thrown when the amount is invalid.\"}],\"InvalidBridgingPayment()\":[{\"details\":\"Error thrown when the bridging payment is invalid (not created by `ERC20Manager`).\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"InvalidPayload()\":[{\"details\":\"Error thrown when the payload is invalid.\"}],\"InvalidSender()\":[{\"details\":\"Error thrown when the sender is not the message queue.\"}],\"InvalidSource()\":[{\"details\":\"Error thrown when the source is not the governance.\"}],\"InvalidTokenType()\":[{\"details\":\"Error thrown when the token type is invalid (`TokenType.Unknown`).\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Bridged(bytes32,address,address,uint256)\":{\"details\":\"Event emitted when bridging request is accepted.\"},\"BridgingPaymentCreated(address)\":{\"details\":\"Event emitted when bridging payment is created.\"},\"BridgingRequested(address,bytes32,address,uint256)\":{\"details\":\"Event emitted when bridging request is made.\"},\"EthereumTokenRegistered(address)\":{\"details\":\"Event emitted when Ethereum token is registered.\"},\"GearTokenRegistered(address,string,string,uint8)\":{\"details\":\"Event emitted when Gear token is registered.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"},\"VftManagerAdded(bytes32)\":{\"details\":\"Event emitted when VFT manager is added to list of VFT managers.\"}},\"kind\":\"dev\",\"methods\":{\"bridgingPayments()\":{\"details\":\"Returns list of bridging payments.\",\"returns\":{\"_0\":\"bridgingPayments List of bridging payments.\"}},\"bridgingPayments(uint256,uint256)\":{\"details\":\"Returns list of bridging payments.\",\"params\":{\"limit\":\"Maximum number of bridging payments to return.\",\"offset\":\"Offset of the first bridging payment to return.\"},\"returns\":{\"_0\":\"bridgingPayments List of bridging payments.\"}},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"createBridgingPayment(uint256)\":{\"details\":\"Creates a new `BridgingPayment` contract (ERC20Manager is factory).      Emits `BridgingPaymentCreated` event.\",\"params\":{\"fee\":\"Fee amount in wei.\"},\"returns\":{\"_0\":\"bridgingPaymentAddress Address of the created `bridgingPayment` contract.\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getTokenType(address)\":{\"details\":\"Returns token type.\",\"params\":{\"token\":\"Token address.\"},\"returns\":{\"_0\":\"tokenType Token type. Returns `TokenType.Unknown` if token is not registered.\"}},\"governanceAdmin()\":{\"details\":\"Returns governance admin address.\",\"returns\":{\"_0\":\"governanceAdmin Governance admin address.\"}},\"governancePauser()\":{\"details\":\"Returns governance pauser address.\",\"returns\":{\"_0\":\"governancePauser Governance pauser address.\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"handleMessage(bytes32,bytes)\":{\"details\":\"Handles message originated from Vara Network.\",\"params\":{\"payload\":\"Payload of the message (message from Vara Network).\",\"source\":\"Source of the message (`ActorId` from Vara Network).\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"initialize(address,address,address,bytes32,(address,uint8)[])\":{\"details\":\"Initializes the ERC20Manager contract with the message queue and VFT manager addresses.      GovernanceAdmin contract is used to upgrade, pause/unpause the ERC20Manager contract.      GovernancePauser contract is used to pause/unpause the ERC20Manager contract.\",\"params\":{\"governanceAdmin_\":\"The address of the GovernanceAdmin contract that will process messages.\",\"governancePauser_\":\"The address of the GovernanceAdmin contract that will process pauser messages.\",\"messageQueue_\":\"The address of the message queue contract.\",\"tokens_\":\"The tokens that will be registered.\",\"vftManager\":\"The address of the VFT manager contract (on Vara Network).\"}},\"isBridgingPayment(address)\":{\"details\":\"Returns whether the bridging payment is registered.\",\"params\":{\"bridgingPayment\":\"Bridging payment address.\"},\"returns\":{\"_0\":\"isBridgingPayment `true` if the bridging payment is registered, `false` otherwise.\"}},\"isVftManager(bytes32)\":{\"details\":\"Returns whether the VFT manager is registered.\",\"params\":{\"vftManager\":\"VFT manager address.\"},\"returns\":{\"_0\":\"isVftManager `true` if the VFT manager is registered, `false` otherwise.\"}},\"messageQueue()\":{\"details\":\"Returns message queue address.\",\"returns\":{\"_0\":\"messageQueue Message queue address.\"}},\"pause()\":{\"details\":\"Pauses the contract.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"requestBridging(address,uint256,bytes32)\":{\"details\":\"Requests bridging of tokens.      Emits `BridgingRequested` event.Reverts if token is not registered with `InvalidTokenType` error.\",\"params\":{\"amount\":\"Amount of tokens to bridge.\",\"to\":\"Destination address.\",\"token\":\"Token address.\"}},\"requestBridgingPayingFee(address,uint256,bytes32,address)\":{\"details\":\"Requests bridging of tokens and pays fee to one of the `bridgingPayment` contracts.\",\"params\":{\"amount\":\"Amount of tokens to bridge.\",\"bridgingPayment\":\"Bridging payment address.\",\"to\":\"Destination address.\",\"token\":\"Token address.\"}},\"requestBridgingPayingFeeWithPermit(address,uint256,bytes32,uint256,uint8,bytes32,bytes32,address)\":{\"details\":\"Requests bridging of tokens and pays fee to one of the `bridgingPayment` contracts.      This function uses `permit` to approve spending of tokens to optimize gas costs.      (If token supports `permit` function).\",\"params\":{\"amount\":\"Amount of tokens to bridge.\",\"bridgingPayment\":\"Bridging payment address.\",\"deadline\":\"Deadline for the transaction to be executed.\",\"r\":\"ECDSA signature parameter.\",\"s\":\"ECDSA signature parameter.\",\"to\":\"Destination address.\",\"token\":\"Token address.\",\"v\":\"ECDSA signature parameter.\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokens()\":{\"details\":\"Returns list of tokens.\",\"returns\":{\"_0\":\"tokens List of tokens.\"}},\"tokens(uint256,uint256)\":{\"details\":\"Returns list of tokens.\",\"params\":{\"limit\":\"Maximum number of tokens to return.\",\"offset\":\"Offset of the first token to return.\"},\"returns\":{\"_0\":\"tokens List of tokens.\"}},\"totalBridgingPayments()\":{\"details\":\"Returns total number of bridging payments.\",\"returns\":{\"_0\":\"totalBridgingPayments Total number of bridging payments.\"}},\"totalTokens()\":{\"details\":\"Returns total number of tokens.\",\"returns\":{\"_0\":\"totalTokens Total number of tokens.\"}},\"totalVftManagers()\":{\"details\":\"Returns total number of VFT managers.\",\"returns\":{\"_0\":\"totalVftManagers Total number of VFT managers.\"}},\"unpause()\":{\"details\":\"Unpauses the contract.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"vftManagers()\":{\"details\":\"Returns list of VFT managers.\",\"returns\":{\"_0\":\"vftManagers List of VFT managers.\"}},\"vftManagers(uint256,uint256)\":{\"details\":\"Returns list of VFT managers.\",\"params\":{\"limit\":\"Maximum number of VFT managers to return.\",\"offset\":\"Offset of the first VFT manager to return.\"},\"returns\":{\"_0\":\"vftManagers List of VFT managers.\"}}},\"stateVariables\":{\"ADD_VFT_MANAGER\":{\"details\":\"Add VFT manager message discriminant.\"},\"ADD_VFT_MANAGER_MESSAGE_SIZE\":{\"details\":\"Size of add VFT manager message.\"},\"AMOUNT_SIZE\":{\"details\":\"`uint256 amount` size.\"},\"DISCRIMINANT_BIT_SHIFT\":{\"details\":\"`uint8 discriminant` bit shift.\"},\"DISCRIMINANT_SIZE\":{\"details\":\"`uint8 discriminant` size.\"},\"ETHEREUM_TOKEN_BIT_SHIFT\":{\"details\":\"`address token` bit shift.\"},\"ETHEREUM_TOKEN_SIZE\":{\"details\":\"`address token` size.\"},\"OFFSET1\":{\"details\":\"`SENDER_SIZE` offset.\"},\"OFFSET2\":{\"details\":\"`SENDER_SIZE + RECEIVER_SIZE` offset.\"},\"OFFSET3\":{\"details\":\"`SENDER_SIZE + RECEIVER_SIZE + TOKEN_SIZE` offset.\"},\"OFFSET4\":{\"details\":\"`DISCRIMINANT_SIZE` offset.\"},\"OFFSET5\":{\"details\":\"`DISCRIMINANT_SIZE + TOKEN_NAME_SIZE` offset.\"},\"OFFSET6\":{\"details\":\"`DISCRIMINANT_SIZE + TOKEN_NAME_SIZE + TOKEN_SYMBOL_SIZE` offset.\"},\"RECEIVER_BIT_SHIFT\":{\"details\":\"`address receiver` bit shift.\"},\"RECEIVER_SIZE\":{\"details\":\"`address receiver` size.\"},\"REGISTER_ETHEREUM_TOKEN_MESSAGE_SIZE\":{\"details\":\"Size of register token message (for `TokenType.Ethereum`).\"},\"REGISTER_GEAR_TOKEN_MESSAGE_SIZE\":{\"details\":\"Size of register token message (for `TokenType.Gear`).\"},\"SENDER_SIZE\":{\"details\":\"`bytes32 sender` size.\"},\"TOKEN_BIT_SHIFT\":{\"details\":\"`address token` bit shift.\"},\"TOKEN_DECIMALS_BIT_SHIFT\":{\"details\":\"`uint8 tokenDecimals` bit shift.\"},\"TOKEN_DECIMALS_SIZE\":{\"details\":\"`uint8 tokenDecimals` size.\"},\"TOKEN_NAME_SIZE\":{\"details\":\"`bytes32 tokenName` size.\"},\"TOKEN_SIZE\":{\"details\":\"`address token` size.\"},\"TOKEN_SYMBOL_SIZE\":{\"details\":\"`bytes32 tokenSymbol` size.\"},\"TRANSFER_MESSAGE_SIZE\":{\"details\":\"Size of transfer message.\"},\"VFT_MANAGER_SIZE\":{\"details\":\"`bytes32 vftManager` size.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ERC20Manager.sol\":\"ERC20Manager\"},\"debug\":{\"revertStrings\":\"strip\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"appendCBOR\":false,\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":script/=script/\",\":src/=src/\",\":test/=test/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x85a70e2b1b65e9ba456add364d22b97eb9944083df1c39c0b4bd6a4b5aa386a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d32a33be6ca4d8e89b9e82e3f9cec7a6c4e040534152313ff55da85b8f193059\",\"dweb:/ipfs/QmeR55L8t2A8xZ1nvT5y4yVWfFbbmpaGAtGBMz3GGNpuyP\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0xa6bf6b7efe0e6625a9dcd30c5ddf52c4c24fe8372f37c7de9dbf5034746768d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c353ee3705bbf6fadb84c0fb10ef1b736e8ca3ca1867814349d1487ed207beb\",\"dweb:/ipfs/QmcugaPssrzGGE8q4YZKm2ZhnD3kCijjcgdWWg76nWt3FY\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x6694b63ddb2c59bbe341c846171798350e8f72fa02189fcdeaca864e28b54e1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d945d33e2189ac4e531e4ed228f59ca957b3898c4f9051f4b8c7ae44d72b23a\",\"dweb:/ipfs/QmRcEwubTe3xyXxthijs5fVzEgUFSxeddjd5PGfhBnkunX\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xbf2aefe54b76d7f7bcd4f6da1080b7b1662611937d870b880db584d09cea56b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5e7e2f12e0feec75296e57f51f82fdaa8bd1551f4b8cc6560442c0bf60f818c\",\"dweb:/ipfs/QmcW9wDMaQ8RbQibMarfp17a3bABzY5KraWe2YDwuUrUoz\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x82f757819bf2429a0d4db141b99a4bbe5039e4ef86dfb94e2e6d40577ed5b28b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37c30ed931e19fb71fdb806bb504cfdb9913b7127545001b64d4487783374422\",\"dweb:/ipfs/QmUBHpv4hm3ZmwJ4GH8BeVzK4mv41Q6vBbWXxn8HExPXza\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0xa1ad192cd45317c788618bef5cb1fb3ca4ce8b230f6433ac68cc1d850fb81618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b43447bb85a53679d269a403c693b9d88d6c74177dfb35eddca63abaf7cf110a\",\"dweb:/ipfs/QmXSDmpd4bNZj1PDgegr6C4w1jDaWHXCconC3rYiw9TSkQ\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0x20462ddb2665e9521372c76b001d0ce196e59dbbd989de9af5576cad0bd5628b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f417fd12aeec8fbfaceaa30e3a08a0724c0bc39de363e2acf6773c897abbaf6d\",\"dweb:/ipfs/QmU4Hko6sApdweVM92CsiuLKkCk8HfyBeutF89PCTz5Tye\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xecd08ad8132d88a5fcfd50f76a18583004fcdab4c33fb86343903ae420ca5a2b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02422dce2e5305624e5cec644add1baa44bfa98ea131bf6030069089a2f56ca4\",\"dweb:/ipfs/QmcsSUkX7AYXNZE18LYE6JEmv8zZcCZvKfbUm9cSzNQyNo\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x2fa0657dd7b8bc75475a47f64bc04a9adb42236b15d65e6781594ea69a46c3e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7496f42681aed94bf0142a077324e50b86046610c1724e7c12e96cf1c365914a\",\"dweb:/ipfs/QmZvhNdSAAbN4PKPdheAqwpXukUiXp3Q3TdQccDMg2NDTV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://032d1201d839435be2c85b72e33206b3ea980c569d6ebf7fa57d811ab580a82f\",\"dweb:/ipfs/QmeqQjAtMvdZT2tG7zm39itcRJkuwu8AEReK6WRnLJ18DD\"]},\"lib/openzeppelin-contracts/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xa4b9958797e0e9cde82a090525e90f80d5745ba1c67ee72b488bd3087498a17e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9344f7c2f80322c2e76d9d89bed03fd12f3e011e74fde7cf24ea21bdd2abe2d\",\"dweb:/ipfs/QmPMAjF5x2fHUAee2FKMZDBbFVrbZbPCr3a9KHLZaSn1zY\"]},\"lib/openzeppelin-contracts/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"lib/openzeppelin-contracts/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"lib/openzeppelin-contracts/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"lib/openzeppelin-contracts/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x17fc4574e07105b0180ef61f1b3cacd1820a3d37f29a4af1018d0a253c6399b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be46b3e1362dbcadbbb45ec92cdea849dceccea3e2795237f00c123aeae44746\",\"dweb:/ipfs/QmSpyB8mud6xKiZaQnVtEPrxtTHGtyBgjs1PCYk4f2gesd\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableMap.sol\":{\"keccak256\":\"0x5360739db087f427430f8566608e9267df704d96928337a3a3b3e5382925c57f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec939f4b4f68ca36961fd5ea7a417a6a390715173a6999254a2f0a34e9298503\",\"dweb:/ipfs/QmVEE8fRTjXE9jQ5pyKrPSyb9FPPtaWwsqjCdcxaPvAWwW\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x1fc283df727585919c3db301b948a3e827aee16917457ad7f916db9da2228e77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4f4b5e2cd0ebc3b74e41e4e94771a0417eedd9b11cec3ef9f90b2ac2989264b\",\"dweb:/ipfs/QmZmsEsvsXiwAyAe1YeoLSKezeFcvR1giUeEY6ex4zpsTS\"]},\"src/BridgingPayment.sol\":{\"keccak256\":\"0x081d93dfe649208384a4555d8e4a9f26978d473e30eb28da4d0ab45aa0ff75da\",\"license\":\"GPL-3.0-or-later WITH Classpath-exception-2.0\",\"urls\":[\"bzz-raw://27b7e3b8603ec2a2685ea9ebe9337470451ba51a6f8945be923cbc61645ba402\",\"dweb:/ipfs/QmTpoRoAfwfJN1pYYsJJwWXdhBAhe65DWRHB9GKdAj4LdP\"]},\"src/ERC20Manager.sol\":{\"keccak256\":\"0x5727c745fa3d1b6c6fa65be43e00fb009323a801d356fbdea1cbf0698a177d66\",\"license\":\"GPL-3.0-or-later WITH Classpath-exception-2.0\",\"urls\":[\"bzz-raw://5073ddd925680efa185782081779870e4da86a429054e1fac62c5bfe008cdb2c\",\"dweb:/ipfs/QmZHs8SShN7YtqFzFHJhYEjvu9TmYPpbSrwD7LhjKug81v\"]},\"src/erc20/managed/ERC20GearSupply.sol\":{\"keccak256\":\"0x6ad52d44ec0f4046c7f95dd09c8631eb5cbd143002afc4f40a80cfc30d7376fa\",\"license\":\"GPL-3.0-or-later WITH Classpath-exception-2.0\",\"urls\":[\"bzz-raw://26d6133c05182bcc243c5456f804996c69df2e7ac9823e5ee4903e75a281544d\",\"dweb:/ipfs/QmTBpyydKBroMgsDCXFaya8voCa2vMwnNnnMJY8UgnsNzi\"]},\"src/interfaces/IBridgingPayment.sol\":{\"keccak256\":\"0x2f684254e88b3c2a3ff05d46215638c8e49c466276f64eaf859abe0f92061f14\",\"license\":\"GPL-3.0-or-later WITH Classpath-exception-2.0\",\"urls\":[\"bzz-raw://c6e10baef4ee82e28de434475d482aba977537b5172e7efe5dcbfeeea971ecbc\",\"dweb:/ipfs/QmNWBU8jgsLopi74ifQtru2rdH8NPnyGwcRUan8XEF6yuw\"]},\"src/interfaces/IERC20Burnable.sol\":{\"keccak256\":\"0xc253b41ffd65d67ee910c1e31e160d73da8c1aada6df8726bc56f956c026c30c\",\"license\":\"GPL-3.0-or-later WITH Classpath-exception-2.0\",\"urls\":[\"bzz-raw://e7151050bd7cf3e932ab8ebc987e92aa3fd84174b2e45c45c93514a7ee502290\",\"dweb:/ipfs/QmWnXkkbGd6SRXVMSbm8X68sjvZbjzt2AyfJRTWf3oon8G\"]},\"src/interfaces/IERC20Manager.sol\":{\"keccak256\":\"0xce568e380a729469b79947d86d63b17c643367ee6d2ce2c135ec3e57530f6fc8\",\"license\":\"GPL-3.0-or-later WITH Classpath-exception-2.0\",\"urls\":[\"bzz-raw://328008332370c81a15fdd9c4e005239569f8abd9a08d039f0ab32e0b477617c5\",\"dweb:/ipfs/QmczhrFWrZ6wWcMuN6sPaNahd984Ekdfc4dN1UqnBW5vRP\"]},\"src/interfaces/IERC20Mintable.sol\":{\"keccak256\":\"0x7609574cac9fa09aae395cb9ad301adbfdfd6aabffb78d88058bae6feb7c3f30\",\"license\":\"GPL-3.0-or-later WITH Classpath-exception-2.0\",\"urls\":[\"bzz-raw://7a423d8d3a9b2b66697ebf071003e3dfa2b42c6943ec4f0a42cc1e7b16095cd6\",\"dweb:/ipfs/Qmb22mBG2GF74iRuQQ9oyKBGk92m67gNZWe7BGdqaBJLoU\"]},\"src/interfaces/IGovernance.sol\":{\"keccak256\":\"0xb880d19a426558ef89a3f4a5ea000a7d8ba0bb402963bbdb6961cb6ddf4afe66\",\"license\":\"GPL-3.0-or-later WITH Classpath-exception-2.0\",\"urls\":[\"bzz-raw://7ce0a7c7319f0337d1af8af13000f93399c4f99ab649d2eb7fab4fc327e4b2a2\",\"dweb:/ipfs/QmXi8cHWd7yqeB2ur1tVe65jCKgzA3JeJtr5cswszthqsu\"]},\"src/interfaces/IMessageHandler.sol\":{\"keccak256\":\"0xdd5b8224c958a8275b4ea8478d3cf027facb032997a3cafa4c400cd8d231fdb9\",\"license\":\"GPL-3.0-or-later WITH Classpath-exception-2.0\",\"urls\":[\"bzz-raw://a5cf746eef9be910603ae0020c64cec73c687d3c657b3fbe916c6f99968b85e8\",\"dweb:/ipfs/QmTM3Pwf8PaH8PMRTtho78NQVbXbrm6pRsvbGN7TMDPNAq\"]},\"src/interfaces/IPausable.sol\":{\"keccak256\":\"0x6d3c910562c9049a3a8e59d148623d37b546b6557563c8c202305864703f4394\",\"license\":\"GPL-3.0-or-later WITH Classpath-exception-2.0\",\"urls\":[\"bzz-raw://6e907b1040394cf61f68f7cedc3ce7f0572fb0efa1803afee6e266b83c0f8298\",\"dweb:/ipfs/QmeWZWAJN3m9yA7fWWAyuEzwTxvVfW5yRPbZmZMixGUoZq\"]},\"src/libraries/CustomEnumerableMap.sol\":{\"keccak256\":\"0x5c4599d4895fad58491d98a5dcf9d7815091ab6947e357caf5ee10c4ddf95870\",\"license\":\"GPL-3.0-or-later WITH Classpath-exception-2.0\",\"urls\":[\"bzz-raw://40a9d62502c06c69e7585fae32dd251712203d329827a7df46e960d50980f040\",\"dweb:/ipfs/QmbqZNdLgpnutNNBDXhtmYRfBVenTbyKiuTGHsi8inxWwK\"]},\"src/libraries/LibString.sol\":{\"keccak256\":\"0x07220b10cbf3f3613e3189101d9728f5d956d0099a7c709567f24d4482c1054f\",\"license\":\"GPL-3.0-or-later WITH Classpath-exception-2.0\",\"urls\":[\"bzz-raw://83cf5cb746e20db1424902742b9257c6806cd84eb60a24710b83a115135da130\",\"dweb:/ipfs/Qma5vmqxfeeXWpxfjzHBJxe8kDE6JjmjzBrTkqj9YKGyd9\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.30+commit.73712a01"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"type":"error","name":"AccessControlBadConfirmation"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"type":"error","name":"AccessControlUnauthorizedAccount"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"type":"error","name":"AddressEmptyCode"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"type":"error","name":"ERC1967InvalidImplementation"},{"inputs":[],"type":"error","name":"ERC1967NonPayable"},{"inputs":[],"type":"error","name":"EnforcedPause"},{"inputs":[],"type":"error","name":"ExpectedPause"},{"inputs":[],"type":"error","name":"FailedCall"},{"inputs":[],"type":"error","name":"InvalidAmount"},{"inputs":[],"type":"error","name":"InvalidBridgingPayment"},{"inputs":[],"type":"error","name":"InvalidInitialization"},{"inputs":[],"type":"error","name":"InvalidPayload"},{"inputs":[],"type":"error","name":"InvalidSender"},{"inputs":[],"type":"error","name":"InvalidSource"},{"inputs":[],"type":"error","name":"InvalidTokenType"},{"inputs":[],"type":"error","name":"NotInitializing"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"type":"error","name":"SafeERC20FailedOperation"},{"inputs":[],"type":"error","name":"UUPSUnauthorizedCallContext"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"type":"error","name":"UUPSUnsupportedProxiableUUID"},{"inputs":[{"internalType":"bytes32","name":"from","type":"bytes32","indexed":true},{"internalType":"address","name":"to","type":"address","indexed":true},{"internalType":"address","name":"token","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"Bridged","anonymous":false},{"inputs":[{"internalType":"address","name":"bridgingPayment","type":"address","indexed":false}],"type":"event","name":"BridgingPaymentCreated","anonymous":false},{"inputs":[{"internalType":"address","name":"from","type":"address","indexed":true},{"internalType":"bytes32","name":"to","type":"bytes32","indexed":true},{"internalType":"address","name":"token","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"BridgingRequested","anonymous":false},{"inputs":[{"internalType":"address","name":"token","type":"address","indexed":false}],"type":"event","name":"EthereumTokenRegistered","anonymous":false},{"inputs":[{"internalType":"address","name":"token","type":"address","indexed":false},{"internalType":"string","name":"tokenName","type":"string","indexed":false},{"internalType":"string","name":"tokenSymbol","type":"string","indexed":false},{"internalType":"uint8","name":"tokenDecimals","type":"uint8","indexed":false}],"type":"event","name":"GearTokenRegistered","anonymous":false},{"inputs":[{"internalType":"uint64","name":"version","type":"uint64","indexed":false}],"type":"event","name":"Initialized","anonymous":false},{"inputs":[{"internalType":"address","name":"account","type":"address","indexed":false}],"type":"event","name":"Paused","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32","indexed":true},{"internalType":"bytes32","name":"previousAdminRole","type":"bytes32","indexed":true},{"internalType":"bytes32","name":"newAdminRole","type":"bytes32","indexed":true}],"type":"event","name":"RoleAdminChanged","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32","indexed":true},{"internalType":"address","name":"account","type":"address","indexed":true},{"internalType":"address","name":"sender","type":"address","indexed":true}],"type":"event","name":"RoleGranted","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32","indexed":true},{"internalType":"address","name":"account","type":"address","indexed":true},{"internalType":"address","name":"sender","type":"address","indexed":true}],"type":"event","name":"RoleRevoked","anonymous":false},{"inputs":[{"internalType":"address","name":"account","type":"address","indexed":false}],"type":"event","name":"Unpaused","anonymous":false},{"inputs":[{"internalType":"address","name":"implementation","type":"address","indexed":true}],"type":"event","name":"Upgraded","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"vftManager","type":"bytes32","indexed":false}],"type":"event","name":"VftManagerAdded","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"PAUSER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"bridgingPayments","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"uint256","name":"offset","type":"uint256"},{"internalType":"uint256","name":"limit","type":"uint256"}],"stateMutability":"view","type":"function","name":"bridgingPayments","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"uint256","name":"fee","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createBridgingPayment","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"stateMutability":"view","type":"function","name":"getTokenType","outputs":[{"internalType":"enum IERC20Manager.TokenType","name":"","type":"uint8"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"governanceAdmin","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"governancePauser","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"grantRole"},{"inputs":[{"internalType":"bytes32","name":"source","type":"bytes32"},{"internalType":"bytes","name":"payload","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"handleMessage"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"contract IGovernance","name":"governanceAdmin_","type":"address"},{"internalType":"contract IGovernance","name":"governancePauser_","type":"address"},{"internalType":"address","name":"messageQueue_","type":"address"},{"internalType":"bytes32","name":"vftManager","type":"bytes32"},{"internalType":"struct IERC20Manager.TokenInfo[]","name":"tokens_","type":"tuple[]","components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"enum IERC20Manager.TokenType","name":"tokenType","type":"uint8"}]}],"stateMutability":"nonpayable","type":"function","name":"initialize"},{"inputs":[{"internalType":"address","name":"bridgingPayment","type":"address"}],"stateMutability":"view","type":"function","name":"isBridgingPayment","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"bytes32","name":"vftManager","type":"bytes32"}],"stateMutability":"view","type":"function","name":"isVftManager","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"messageQueue","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"pause"},{"inputs":[],"stateMutability":"view","type":"function","name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"renounceRole"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes32","name":"to","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"requestBridging"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes32","name":"to","type":"bytes32"},{"internalType":"address","name":"bridgingPayment","type":"address"}],"stateMutability":"payable","type":"function","name":"requestBridgingPayingFee"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes32","name":"to","type":"bytes32"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"address","name":"bridgingPayment","type":"address"}],"stateMutability":"payable","type":"function","name":"requestBridgingPayingFeeWithPermit"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"revokeRole"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"stateMutability":"view","type":"function","name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"offset","type":"uint256"},{"internalType":"uint256","name":"limit","type":"uint256"}],"stateMutability":"view","type":"function","name":"tokens","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"tokens","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"totalBridgingPayments","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"totalTokens","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"totalVftManagers","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"unpause"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"payable","type":"function","name":"upgradeToAndCall"},{"inputs":[],"stateMutability":"view","type":"function","name":"vftManagers","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]},{"inputs":[{"internalType":"uint256","name":"offset","type":"uint256"},{"internalType":"uint256","name":"limit","type":"uint256"}],"stateMutability":"view","type":"function","name":"vftManagers","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]}],"devdoc":{"kind":"dev","methods":{"bridgingPayments()":{"details":"Returns list of bridging payments.","returns":{"_0":"bridgingPayments List of bridging payments."}},"bridgingPayments(uint256,uint256)":{"details":"Returns list of bridging payments.","params":{"limit":"Maximum number of bridging payments to return.","offset":"Offset of the first bridging payment to return."},"returns":{"_0":"bridgingPayments List of bridging payments."}},"constructor":{"custom:oz-upgrades-unsafe-allow":"constructor"},"createBridgingPayment(uint256)":{"details":"Creates a new `BridgingPayment` contract (ERC20Manager is factory).      Emits `BridgingPaymentCreated` event.","params":{"fee":"Fee amount in wei."},"returns":{"_0":"bridgingPaymentAddress Address of the created `bridgingPayment` contract."}},"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"getTokenType(address)":{"details":"Returns token type.","params":{"token":"Token address."},"returns":{"_0":"tokenType Token type. Returns `TokenType.Unknown` if token is not registered."}},"governanceAdmin()":{"details":"Returns governance admin address.","returns":{"_0":"governanceAdmin Governance admin address."}},"governancePauser()":{"details":"Returns governance pauser address.","returns":{"_0":"governancePauser Governance pauser address."}},"grantRole(bytes32,address)":{"details":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."},"handleMessage(bytes32,bytes)":{"details":"Handles message originated from Vara Network.","params":{"payload":"Payload of the message (message from Vara Network).","source":"Source of the message (`ActorId` from Vara Network)."}},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"initialize(address,address,address,bytes32,(address,uint8)[])":{"details":"Initializes the ERC20Manager contract with the message queue and VFT manager addresses.      GovernanceAdmin contract is used to upgrade, pause/unpause the ERC20Manager contract.      GovernancePauser contract is used to pause/unpause the ERC20Manager contract.","params":{"governanceAdmin_":"The address of the GovernanceAdmin contract that will process messages.","governancePauser_":"The address of the GovernanceAdmin contract that will process pauser messages.","messageQueue_":"The address of the message queue contract.","tokens_":"The tokens that will be registered.","vftManager":"The address of the VFT manager contract (on Vara Network)."}},"isBridgingPayment(address)":{"details":"Returns whether the bridging payment is registered.","params":{"bridgingPayment":"Bridging payment address."},"returns":{"_0":"isBridgingPayment `true` if the bridging payment is registered, `false` otherwise."}},"isVftManager(bytes32)":{"details":"Returns whether the VFT manager is registered.","params":{"vftManager":"VFT manager address."},"returns":{"_0":"isVftManager `true` if the VFT manager is registered, `false` otherwise."}},"messageQueue()":{"details":"Returns message queue address.","returns":{"_0":"messageQueue Message queue address."}},"pause()":{"details":"Pauses the contract."},"paused()":{"details":"Returns true if the contract is paused, and false otherwise."},"proxiableUUID()":{"details":"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."},"requestBridging(address,uint256,bytes32)":{"details":"Requests bridging of tokens.      Emits `BridgingRequested` event.Reverts if token is not registered with `InvalidTokenType` error.","params":{"amount":"Amount of tokens to bridge.","to":"Destination address.","token":"Token address."}},"requestBridgingPayingFee(address,uint256,bytes32,address)":{"details":"Requests bridging of tokens and pays fee to one of the `bridgingPayment` contracts.","params":{"amount":"Amount of tokens to bridge.","bridgingPayment":"Bridging payment address.","to":"Destination address.","token":"Token address."}},"requestBridgingPayingFeeWithPermit(address,uint256,bytes32,uint256,uint8,bytes32,bytes32,address)":{"details":"Requests bridging of tokens and pays fee to one of the `bridgingPayment` contracts.      This function uses `permit` to approve spending of tokens to optimize gas costs.      (If token supports `permit` function).","params":{"amount":"Amount of tokens to bridge.","bridgingPayment":"Bridging payment address.","deadline":"Deadline for the transaction to be executed.","r":"ECDSA signature parameter.","s":"ECDSA signature parameter.","to":"Destination address.","token":"Token address.","v":"ECDSA signature parameter."}},"revokeRole(bytes32,address)":{"details":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"tokens()":{"details":"Returns list of tokens.","returns":{"_0":"tokens List of tokens."}},"tokens(uint256,uint256)":{"details":"Returns list of tokens.","params":{"limit":"Maximum number of tokens to return.","offset":"Offset of the first token to return."},"returns":{"_0":"tokens List of tokens."}},"totalBridgingPayments()":{"details":"Returns total number of bridging payments.","returns":{"_0":"totalBridgingPayments Total number of bridging payments."}},"totalTokens()":{"details":"Returns total number of tokens.","returns":{"_0":"totalTokens Total number of tokens."}},"totalVftManagers()":{"details":"Returns total number of VFT managers.","returns":{"_0":"totalVftManagers Total number of VFT managers."}},"unpause()":{"details":"Unpauses the contract."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."},"vftManagers()":{"details":"Returns list of VFT managers.","returns":{"_0":"vftManagers List of VFT managers."}},"vftManagers(uint256,uint256)":{"details":"Returns list of VFT managers.","params":{"limit":"Maximum number of VFT managers to return.","offset":"Offset of the first VFT manager to return."},"returns":{"_0":"vftManagers List of VFT managers."}}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/","script/=script/","src/=src/","test/=test/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"none","appendCBOR":false},"compilationTarget":{"src/ERC20Manager.sol":"ERC20Manager"},"evmVersion":"prague","libraries":{},"viaIR":true},"sources":{"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol":{"keccak256":"0x85a70e2b1b65e9ba456add364d22b97eb9944083df1c39c0b4bd6a4b5aa386a4","urls":["bzz-raw://d32a33be6ca4d8e89b9e82e3f9cec7a6c4e040534152313ff55da85b8f193059","dweb:/ipfs/QmeR55L8t2A8xZ1nvT5y4yVWfFbbmpaGAtGBMz3GGNpuyP"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol":{"keccak256":"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05","urls":["bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08","dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol":{"keccak256":"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63","urls":["bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec","dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol":{"keccak256":"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397","urls":["bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9","dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol":{"keccak256":"0xa6bf6b7efe0e6625a9dcd30c5ddf52c4c24fe8372f37c7de9dbf5034746768d5","urls":["bzz-raw://8c353ee3705bbf6fadb84c0fb10ef1b736e8ca3ca1867814349d1487ed207beb","dweb:/ipfs/QmcugaPssrzGGE8q4YZKm2ZhnD3kCijjcgdWWg76nWt3FY"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol":{"keccak256":"0x6694b63ddb2c59bbe341c846171798350e8f72fa02189fcdeaca864e28b54e1f","urls":["bzz-raw://7d945d33e2189ac4e531e4ed228f59ca957b3898c4f9051f4b8c7ae44d72b23a","dweb:/ipfs/QmRcEwubTe3xyXxthijs5fVzEgUFSxeddjd5PGfhBnkunX"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol":{"keccak256":"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c","urls":["bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d","dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/access/Ownable.sol":{"keccak256":"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb","urls":["bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6","dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol":{"keccak256":"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d","urls":["bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100","dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol":{"keccak256":"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc","urls":["bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037","dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol":{"keccak256":"0xbf2aefe54b76d7f7bcd4f6da1080b7b1662611937d870b880db584d09cea56b5","urls":["bzz-raw://f5e7e2f12e0feec75296e57f51f82fdaa8bd1551f4b8cc6560442c0bf60f818c","dweb:/ipfs/QmcW9wDMaQ8RbQibMarfp17a3bABzY5KraWe2YDwuUrUoz"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol":{"keccak256":"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44","urls":["bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d","dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol":{"keccak256":"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee","urls":["bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae","dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol":{"keccak256":"0x82f757819bf2429a0d4db141b99a4bbe5039e4ef86dfb94e2e6d40577ed5b28b","urls":["bzz-raw://37c30ed931e19fb71fdb806bb504cfdb9913b7127545001b64d4487783374422","dweb:/ipfs/QmUBHpv4hm3ZmwJ4GH8BeVzK4mv41Q6vBbWXxn8HExPXza"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol":{"keccak256":"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e","urls":["bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23","dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol":{"keccak256":"0xa1ad192cd45317c788618bef5cb1fb3ca4ce8b230f6433ac68cc1d850fb81618","urls":["bzz-raw://b43447bb85a53679d269a403c693b9d88d6c74177dfb35eddca63abaf7cf110a","dweb:/ipfs/QmXSDmpd4bNZj1PDgegr6C4w1jDaWHXCconC3rYiw9TSkQ"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol":{"keccak256":"0x20462ddb2665e9521372c76b001d0ce196e59dbbd989de9af5576cad0bd5628b","urls":["bzz-raw://f417fd12aeec8fbfaceaa30e3a08a0724c0bc39de363e2acf6773c897abbaf6d","dweb:/ipfs/QmU4Hko6sApdweVM92CsiuLKkCk8HfyBeutF89PCTz5Tye"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol":{"keccak256":"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994","urls":["bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c","dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"keccak256":"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2","urls":["bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303","dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"keccak256":"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073","urls":["bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26","dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol":{"keccak256":"0xecd08ad8132d88a5fcfd50f76a18583004fcdab4c33fb86343903ae420ca5a2b","urls":["bzz-raw://02422dce2e5305624e5cec644add1baa44bfa98ea131bf6030069089a2f56ca4","dweb:/ipfs/QmcsSUkX7AYXNZE18LYE6JEmv8zZcCZvKfbUm9cSzNQyNo"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"keccak256":"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f","urls":["bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e","dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol":{"keccak256":"0x2fa0657dd7b8bc75475a47f64bc04a9adb42236b15d65e6781594ea69a46c3e4","urls":["bzz-raw://7496f42681aed94bf0142a077324e50b86046610c1724e7c12e96cf1c365914a","dweb:/ipfs/QmZvhNdSAAbN4PKPdheAqwpXukUiXp3Q3TdQccDMg2NDTV"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol":{"keccak256":"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5","urls":["bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508","dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Address.sol":{"keccak256":"0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0","urls":["bzz-raw://032d1201d839435be2c85b72e33206b3ea980c569d6ebf7fa57d811ab580a82f","dweb:/ipfs/QmeqQjAtMvdZT2tG7zm39itcRJkuwu8AEReK6WRnLJ18DD"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Arrays.sol":{"keccak256":"0xa4b9958797e0e9cde82a090525e90f80d5745ba1c67ee72b488bd3087498a17e","urls":["bzz-raw://c9344f7c2f80322c2e76d9d89bed03fd12f3e011e74fde7cf24ea21bdd2abe2d","dweb:/ipfs/QmPMAjF5x2fHUAee2FKMZDBbFVrbZbPCr3a9KHLZaSn1zY"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Comparators.sol":{"keccak256":"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58","urls":["bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd","dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Context.sol":{"keccak256":"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2","urls":["bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12","dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Errors.sol":{"keccak256":"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123","urls":["bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf","dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Nonces.sol":{"keccak256":"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f","urls":["bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e","dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Panic.sol":{"keccak256":"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a","urls":["bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a","dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol":{"keccak256":"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402","urls":["bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35","dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/SlotDerivation.sol":{"keccak256":"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26","urls":["bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2","dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol":{"keccak256":"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97","urls":["bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b","dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Strings.sol":{"keccak256":"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4","urls":["bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e","dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol":{"keccak256":"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84","urls":["bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9","dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol":{"keccak256":"0x17fc4574e07105b0180ef61f1b3cacd1820a3d37f29a4af1018d0a253c6399b5","urls":["bzz-raw://be46b3e1362dbcadbbb45ec92cdea849dceccea3e2795237f00c123aeae44746","dweb:/ipfs/QmSpyB8mud6xKiZaQnVtEPrxtTHGtyBgjs1PCYk4f2gesd"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol":{"keccak256":"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631","urls":["bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59","dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol":{"keccak256":"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c","urls":["bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617","dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"keccak256":"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6","urls":["bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3","dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol":{"keccak256":"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54","urls":["bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8","dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol":{"keccak256":"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3","urls":["bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03","dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableMap.sol":{"keccak256":"0x5360739db087f427430f8566608e9267df704d96928337a3a3b3e5382925c57f","urls":["bzz-raw://ec939f4b4f68ca36961fd5ea7a417a6a390715173a6999254a2f0a34e9298503","dweb:/ipfs/QmVEE8fRTjXE9jQ5pyKrPSyb9FPPtaWwsqjCdcxaPvAWwW"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol":{"keccak256":"0x1fc283df727585919c3db301b948a3e827aee16917457ad7f916db9da2228e77","urls":["bzz-raw://a4f4b5e2cd0ebc3b74e41e4e94771a0417eedd9b11cec3ef9f90b2ac2989264b","dweb:/ipfs/QmZmsEsvsXiwAyAe1YeoLSKezeFcvR1giUeEY6ex4zpsTS"],"license":"MIT"},"src/BridgingPayment.sol":{"keccak256":"0x081d93dfe649208384a4555d8e4a9f26978d473e30eb28da4d0ab45aa0ff75da","urls":["bzz-raw://27b7e3b8603ec2a2685ea9ebe9337470451ba51a6f8945be923cbc61645ba402","dweb:/ipfs/QmTpoRoAfwfJN1pYYsJJwWXdhBAhe65DWRHB9GKdAj4LdP"],"license":"GPL-3.0-or-later WITH Classpath-exception-2.0"},"src/ERC20Manager.sol":{"keccak256":"0x5727c745fa3d1b6c6fa65be43e00fb009323a801d356fbdea1cbf0698a177d66","urls":["bzz-raw://5073ddd925680efa185782081779870e4da86a429054e1fac62c5bfe008cdb2c","dweb:/ipfs/QmZHs8SShN7YtqFzFHJhYEjvu9TmYPpbSrwD7LhjKug81v"],"license":"GPL-3.0-or-later WITH Classpath-exception-2.0"},"src/erc20/managed/ERC20GearSupply.sol":{"keccak256":"0x6ad52d44ec0f4046c7f95dd09c8631eb5cbd143002afc4f40a80cfc30d7376fa","urls":["bzz-raw://26d6133c05182bcc243c5456f804996c69df2e7ac9823e5ee4903e75a281544d","dweb:/ipfs/QmTBpyydKBroMgsDCXFaya8voCa2vMwnNnnMJY8UgnsNzi"],"license":"GPL-3.0-or-later WITH Classpath-exception-2.0"},"src/interfaces/IBridgingPayment.sol":{"keccak256":"0x2f684254e88b3c2a3ff05d46215638c8e49c466276f64eaf859abe0f92061f14","urls":["bzz-raw://c6e10baef4ee82e28de434475d482aba977537b5172e7efe5dcbfeeea971ecbc","dweb:/ipfs/QmNWBU8jgsLopi74ifQtru2rdH8NPnyGwcRUan8XEF6yuw"],"license":"GPL-3.0-or-later WITH Classpath-exception-2.0"},"src/interfaces/IERC20Burnable.sol":{"keccak256":"0xc253b41ffd65d67ee910c1e31e160d73da8c1aada6df8726bc56f956c026c30c","urls":["bzz-raw://e7151050bd7cf3e932ab8ebc987e92aa3fd84174b2e45c45c93514a7ee502290","dweb:/ipfs/QmWnXkkbGd6SRXVMSbm8X68sjvZbjzt2AyfJRTWf3oon8G"],"license":"GPL-3.0-or-later WITH Classpath-exception-2.0"},"src/interfaces/IERC20Manager.sol":{"keccak256":"0xce568e380a729469b79947d86d63b17c643367ee6d2ce2c135ec3e57530f6fc8","urls":["bzz-raw://328008332370c81a15fdd9c4e005239569f8abd9a08d039f0ab32e0b477617c5","dweb:/ipfs/QmczhrFWrZ6wWcMuN6sPaNahd984Ekdfc4dN1UqnBW5vRP"],"license":"GPL-3.0-or-later WITH Classpath-exception-2.0"},"src/interfaces/IERC20Mintable.sol":{"keccak256":"0x7609574cac9fa09aae395cb9ad301adbfdfd6aabffb78d88058bae6feb7c3f30","urls":["bzz-raw://7a423d8d3a9b2b66697ebf071003e3dfa2b42c6943ec4f0a42cc1e7b16095cd6","dweb:/ipfs/Qmb22mBG2GF74iRuQQ9oyKBGk92m67gNZWe7BGdqaBJLoU"],"license":"GPL-3.0-or-later WITH Classpath-exception-2.0"},"src/interfaces/IGovernance.sol":{"keccak256":"0xb880d19a426558ef89a3f4a5ea000a7d8ba0bb402963bbdb6961cb6ddf4afe66","urls":["bzz-raw://7ce0a7c7319f0337d1af8af13000f93399c4f99ab649d2eb7fab4fc327e4b2a2","dweb:/ipfs/QmXi8cHWd7yqeB2ur1tVe65jCKgzA3JeJtr5cswszthqsu"],"license":"GPL-3.0-or-later WITH Classpath-exception-2.0"},"src/interfaces/IMessageHandler.sol":{"keccak256":"0xdd5b8224c958a8275b4ea8478d3cf027facb032997a3cafa4c400cd8d231fdb9","urls":["bzz-raw://a5cf746eef9be910603ae0020c64cec73c687d3c657b3fbe916c6f99968b85e8","dweb:/ipfs/QmTM3Pwf8PaH8PMRTtho78NQVbXbrm6pRsvbGN7TMDPNAq"],"license":"GPL-3.0-or-later WITH Classpath-exception-2.0"},"src/interfaces/IPausable.sol":{"keccak256":"0x6d3c910562c9049a3a8e59d148623d37b546b6557563c8c202305864703f4394","urls":["bzz-raw://6e907b1040394cf61f68f7cedc3ce7f0572fb0efa1803afee6e266b83c0f8298","dweb:/ipfs/QmeWZWAJN3m9yA7fWWAyuEzwTxvVfW5yRPbZmZMixGUoZq"],"license":"GPL-3.0-or-later WITH Classpath-exception-2.0"},"src/libraries/CustomEnumerableMap.sol":{"keccak256":"0x5c4599d4895fad58491d98a5dcf9d7815091ab6947e357caf5ee10c4ddf95870","urls":["bzz-raw://40a9d62502c06c69e7585fae32dd251712203d329827a7df46e960d50980f040","dweb:/ipfs/QmbqZNdLgpnutNNBDXhtmYRfBVenTbyKiuTGHsi8inxWwK"],"license":"GPL-3.0-or-later WITH Classpath-exception-2.0"},"src/libraries/LibString.sol":{"keccak256":"0x07220b10cbf3f3613e3189101d9728f5d956d0099a7c709567f24d4482c1054f","urls":["bzz-raw://83cf5cb746e20db1424902742b9257c6806cd84eb60a24710b83a115135da130","dweb:/ipfs/Qma5vmqxfeeXWpxfjzHBJxe8kDE6JjmjzBrTkqj9YKGyd9"],"license":"GPL-3.0-or-later WITH Classpath-exception-2.0"}},"version":1},"storageLayout":{"storage":[{"astId":59908,"contract":"src/ERC20Manager.sol:ERC20Manager","label":"_governanceAdmin","offset":0,"slot":"0","type":"t_contract(IGovernance)63114"},{"astId":59911,"contract":"src/ERC20Manager.sol:ERC20Manager","label":"_governancePauser","offset":0,"slot":"1","type":"t_contract(IGovernance)63114"},{"astId":59913,"contract":"src/ERC20Manager.sol:ERC20Manager","label":"_messageQueue","offset":0,"slot":"2","type":"t_address"},{"astId":59916,"contract":"src/ERC20Manager.sol:ERC20Manager","label":"_vftManagers","offset":0,"slot":"3","type":"t_struct(Bytes32Set)53809_storage"},{"astId":59919,"contract":"src/ERC20Manager.sol:ERC20Manager","label":"_tokens","offset":0,"slot":"5","type":"t_struct(AddressToTokenTypeMap)63854_storage"},{"astId":59922,"contract":"src/ERC20Manager.sol:ERC20Manager","label":"_bridgingPayments","offset":0,"slot":"8","type":"t_struct(AddressSet)53979_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_bytes32)dyn_storage":{"encoding":"dynamic_array","label":"bytes32[]","numberOfBytes":"32","base":"t_bytes32"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_contract(IGovernance)63114":{"encoding":"inplace","label":"contract IGovernance","numberOfBytes":"20"},"t_mapping(t_bytes32,t_bytes32)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => bytes32)","numberOfBytes":"32","value":"t_bytes32"},"t_mapping(t_bytes32,t_uint256)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_struct(AddressSet)53979_storage":{"encoding":"inplace","label":"struct EnumerableSet.AddressSet","numberOfBytes":"64","members":[{"astId":53978,"contract":"src/ERC20Manager.sol:ERC20Manager","label":"_inner","offset":0,"slot":"0","type":"t_struct(Set)53493_storage"}]},"t_struct(AddressToTokenTypeMap)63854_storage":{"encoding":"inplace","label":"struct CustomEnumerableMap.AddressToTokenTypeMap","numberOfBytes":"96","members":[{"astId":63853,"contract":"src/ERC20Manager.sol:ERC20Manager","label":"_inner","offset":0,"slot":"0","type":"t_struct(Bytes32ToBytes32Map)50734_storage"}]},"t_struct(Bytes32Set)53809_storage":{"encoding":"inplace","label":"struct EnumerableSet.Bytes32Set","numberOfBytes":"64","members":[{"astId":53808,"contract":"src/ERC20Manager.sol:ERC20Manager","label":"_inner","offset":0,"slot":"0","type":"t_struct(Set)53493_storage"}]},"t_struct(Bytes32ToBytes32Map)50734_storage":{"encoding":"inplace","label":"struct EnumerableMap.Bytes32ToBytes32Map","numberOfBytes":"96","members":[{"astId":50729,"contract":"src/ERC20Manager.sol:ERC20Manager","label":"_keys","offset":0,"slot":"0","type":"t_struct(Bytes32Set)53809_storage"},{"astId":50733,"contract":"src/ERC20Manager.sol:ERC20Manager","label":"_values","offset":0,"slot":"2","type":"t_mapping(t_bytes32,t_bytes32)"}]},"t_struct(Set)53493_storage":{"encoding":"inplace","label":"struct EnumerableSet.Set","numberOfBytes":"64","members":[{"astId":53488,"contract":"src/ERC20Manager.sol:ERC20Manager","label":"_values","offset":0,"slot":"0","type":"t_array(t_bytes32)dyn_storage"},{"astId":53492,"contract":"src/ERC20Manager.sol:ERC20Manager","label":"_positions","offset":0,"slot":"1","type":"t_mapping(t_bytes32,t_uint256)"}]},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"irOptimized":"/// @use-src 20:\"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol\", 22:\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\", 23:\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\", 24:\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\", 25:\"lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol\", 26:\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\", 27:\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\", 34:\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\", 66:\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\", 85:\"src/ERC20Manager.sol\", 97:\"src/interfaces/IERC20Manager.sol\", 100:\"src/interfaces/IMessageHandler.sol\", 103:\"src/interfaces/IPausable.sol\"\nobject \"ERC20Manager_61007\" {\n    code {\n        {\n            /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n            let _1 := memoryguard(0xa0)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            /// @src 23:1163:1176  \"address(this)\"\n            mstore(128, /** @src 23:1171:1175  \"this\" */ address())\n            /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n            let _2 := sload(/** @src 22:3147:3213  \"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\" */ 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00)\n            /// @src 22:7894:7970  \"if ($._initializing) {...\"\n            if /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ and(shr(64, _2), 0xff)\n            /// @src 22:7894:7970  \"if ($._initializing) {...\"\n            {\n                /// @src 22:7936:7959  \"InvalidInitialization()\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 22:7936:7959  \"InvalidInitialization()\" */ shl(224, 0xf92ee8a9))\n                revert(/** @src -1:-1:-1 */ 0, /** @src 22:7936:7959  \"InvalidInitialization()\" */ 4)\n            }\n            /// @src 22:7979:8125  \"if ($._initialized != type(uint64).max) {...\"\n            if /** @src 22:7983:8017  \"$._initialized != type(uint64).max\" */ iszero(eq(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ and(_2, sub(shl(64, 1), 1)), sub(shl(64, 1), 1)))\n            /// @src 22:7979:8125  \"if ($._initialized != type(uint64).max) {...\"\n            {\n                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                sstore(/** @src 22:3147:3213  \"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\" */ 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ or(and(_2, not(sub(shl(64, 1), 1))), sub(shl(64, 1), 1)))\n                mstore(_1, sub(shl(64, 1), 1))\n                /// @src 22:8085:8114  \"Initialized(type(uint64).max)\"\n                log1(_1, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 32, /** @src 22:8085:8114  \"Initialized(type(uint64).max)\" */ 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2)\n            }\n            /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n            let _3 := mload(64)\n            let _4 := datasize(\"ERC20Manager_61007_deployed\")\n            codecopy(_3, dataoffset(\"ERC20Manager_61007_deployed\"), _4)\n            setimmutable(_3, \"40207\", mload(/** @src 23:1163:1176  \"address(this)\" */ 128))\n            /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n            return(_3, _4)\n        }\n    }\n    /// @use-src 20:\"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol\", 22:\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\", 23:\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\", 24:\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\", 25:\"lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol\", 26:\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\", 37:\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\", 50:\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\", 51:\"lib/openzeppelin-contracts/contracts/utils/Address.sol\", 60:\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\", 70:\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableMap.sol\", 71:\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\", 85:\"src/ERC20Manager.sol\", 109:\"src/libraries/CustomEnumerableMap.sol\", 110:\"src/libraries/LibString.sol\"\n    object \"ERC20Manager_61007_deployed\" {\n        code {\n            {\n                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _2 := 0\n                    switch shr(224, calldataload(0))\n                    case 0x0058f6b8 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        mstore(_1, and(sload(0), sub(shl(160, 1), 1)))\n                        return(_1, 32)\n                    }\n                    case 0x01ffc9a7 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value := calldataload(4)\n                        let _3 := and(value, shl(224, 0xffffffff))\n                        if iszero(eq(value, _3)) { revert(0, 0) }\n                        /// @src 20:3599:3686  \"interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId)\"\n                        let expr := /** @src 20:3599:3646  \"interfaceId == type(IAccessControl).interfaceId\" */ eq(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _3, /** @src 20:3614:3646  \"type(IAccessControl).interfaceId\" */ shl(224, 0x7965db0b))\n                        /// @src 20:3599:3686  \"interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId)\"\n                        if iszero(expr)\n                        {\n                            expr := /** @src 26:1101:1141  \"interfaceId == type(IERC165).interfaceId\" */ eq(_3, /** @src 26:1116:1141  \"type(IERC165).interfaceId\" */ shl(224, 0x01ffc9a7))\n                        }\n                        /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                        let memPos := mload(64)\n                        mstore(memPos, iszero(iszero(expr)))\n                        return(memPos, 32)\n                    }\n                    case 0x0c9d9b97 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        /// @src 85:12407:12457  \"return _bridgingPayments.contains(bridgingPayment)\"\n                        let var := /** @src 71:12473:12528  \"_contains(set._inner, bytes32(uint256(uint160(value))))\" */ fun__contains(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        let memPos_1 := mload(64)\n                        mstore(memPos_1, iszero(iszero(var)))\n                        return(memPos_1, 32)\n                    }\n                    case 0x109ec2e7 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let pos := mload(64)\n                        let memPtr := pos\n                        let length := sload(/** @src 85:11320:11337  \"_bridgingPayments\" */ 0x08)\n                        /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                        mstore(pos, length)\n                        pos := add(pos, 0x20)\n                        mstore(0, /** @src 85:11320:11337  \"_bridgingPayments\" */ 0x08)\n                        /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                        let srcPtr := 110349606679412691172957834289542550319383271247755660854362242977991410020067\n                        let i := 0\n                        for { } lt(i, length) { i := add(i, 1) }\n                        {\n                            mstore(pos, sload(srcPtr))\n                            pos := add(pos, 0x20)\n                            srcPtr := add(srcPtr, 1)\n                        }\n                        finalize_allocation(memPtr, sub(pos, memPtr))\n                        let memPos_2 := mload(64)\n                        return(memPos_2, sub(abi_encode_array_address_dyn(memPos_2, memPtr), memPos_2))\n                    }\n                    case 0x1e324b52 {\n                        if slt(add(calldatasize(), not(3)), 128) { revert(0, 0) }\n                        let value0 := abi_decode_address()\n                        let value_1 := calldataload(36)\n                        let value_2 := 0\n                        value_2 := calldataload(100)\n                        let _4 := and(value_2, sub(shl(160, 1), 1))\n                        if iszero(eq(value_2, _4)) { revert(0, 0) }\n                        /// @src 25:1944:2016  \"modifier whenNotPaused() {...\"\n                        fun_requireNotPaused()\n                        /// @src 85:15276:15382  \"if (!_bridgingPayments.contains(bridgingPayment)) {...\"\n                        if /** @src 85:15280:15324  \"!_bridgingPayments.contains(bridgingPayment)\" */ iszero(/** @src 71:12473:12528  \"_contains(set._inner, bytes32(uint256(uint160(value))))\" */ fun__contains(/** @src 71:12495:12527  \"bytes32(uint256(uint160(value)))\" */ _4))\n                        /// @src 85:15276:15382  \"if (!_bridgingPayments.contains(bridgingPayment)) {...\"\n                        {\n                            /// @src 85:15347:15371  \"InvalidBridgingPayment()\"\n                            mstore(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0, /** @src 85:15347:15371  \"InvalidBridgingPayment()\" */ shl(227, 0x1e37e195))\n                            revert(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0, 4)\n                        }\n                        /// @src 85:15392:15452  \"IBridgingPayment(bridgingPayment).payFee{value: msg.value}()\"\n                        if iszero(extcodesize(_4))\n                        {\n                            /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                            revert(0, 0)\n                        }\n                        /// @src 85:15392:15452  \"IBridgingPayment(bridgingPayment).payFee{value: msg.value}()\"\n                        let _5 := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ mload(64)\n                        /// @src 85:15392:15452  \"IBridgingPayment(bridgingPayment).payFee{value: msg.value}()\"\n                        mstore(_5, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ shl(225, 0x14b08129))\n                        /// @src 85:15392:15452  \"IBridgingPayment(bridgingPayment).payFee{value: msg.value}()\"\n                        let _6 := call(gas(), _4, /** @src 85:15440:15449  \"msg.value\" */ callvalue(), /** @src 85:15392:15452  \"IBridgingPayment(bridgingPayment).payFee{value: msg.value}()\" */ _5, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 4, /** @src 85:15392:15452  \"IBridgingPayment(bridgingPayment).payFee{value: msg.value}()\" */ _5, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0)\n                        /// @src 85:15392:15452  \"IBridgingPayment(bridgingPayment).payFee{value: msg.value}()\"\n                        if iszero(_6)\n                        {\n                            /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                            let pos_1 := mload(64)\n                            returndatacopy(pos_1, 0, returndatasize())\n                            revert(pos_1, returndatasize())\n                        }\n                        /// @src 85:15392:15452  \"IBridgingPayment(bridgingPayment).payFee{value: msg.value}()\"\n                        if _6\n                        {\n                            finalize_allocation(_5, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0)\n                            _2 := 0\n                        }\n                        /// @src 25:1944:2016  \"modifier whenNotPaused() {...\"\n                        fun_requireNotPaused()\n                        /// @src 85:14276:14340  \"if (amount == 0) {...\"\n                        if /** @src 85:14280:14291  \"amount == 0\" */ iszero(value_1)\n                        /// @src 85:14276:14340  \"if (amount == 0) {...\"\n                        {\n                            /// @src 85:14314:14329  \"InvalidAmount()\"\n                            mstore(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2, /** @src 85:14314:14329  \"InvalidAmount()\" */ shl(225, 0x162908e3))\n                            revert(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2, 4)\n                        }\n                        /// @src 85:14376:14397  \"_tokens.tryGet(token)\"\n                        let expr_component, expr_component_1 := fun_tryGet_20842(value0)\n                        /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                        let _7 := iszero(lt(expr_component_1, 3))\n                        if _7\n                        {\n                            mstore(_2, shl(224, 0x4e487b71))\n                            mstore(4, 0x21)\n                            revert(_2, 36)\n                        }\n                        /// @src 85:14408:14741  \"if (tokenType == TokenType.Unknown) {...\"\n                        switch /** @src 85:14412:14442  \"tokenType == TokenType.Unknown\" */ iszero(expr_component_1)\n                        case /** @src 85:14408:14741  \"if (tokenType == TokenType.Unknown) {...\" */ 0 {\n                            /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                            _7 := /** @src -1:-1:-1 */ _2\n                            /// @src 85:14500:14741  \"if (tokenType == TokenType.Ethereum) {...\"\n                            switch /** @src 85:14504:14535  \"tokenType == TokenType.Ethereum\" */ eq(expr_component_1, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 1)\n                            case /** @src 85:14500:14741  \"if (tokenType == TokenType.Ethereum) {...\" */ 0 {\n                                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                                _7 := /** @src -1:-1:-1 */ _2\n                                /// @src 85:14633:14741  \"if (tokenType == TokenType.Gear) {...\"\n                                if /** @src 85:14637:14664  \"tokenType == TokenType.Gear\" */ eq(expr_component_1, /** @src 85:14650:14664  \"TokenType.Gear\" */ 2)\n                                /// @src 85:14633:14741  \"if (tokenType == TokenType.Gear) {...\"\n                                {\n                                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                                    let _8 := and(/** @src 85:14680:14701  \"IERC20Burnable(token)\" */ value0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1))\n                                    /// @src 85:14680:14730  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    if iszero(extcodesize(_8))\n                                    {\n                                        /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                                        revert(_2, _2)\n                                    }\n                                    /// @src 85:14680:14730  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    let _9 := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ mload(64)\n                                    /// @src 85:14680:14730  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    mstore(_9, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ shl(228, 0x079cc679))\n                                    /// @src 85:14680:14730  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    let _10 := call(gas(), _8, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2, /** @src 85:14680:14730  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\" */ _9, sub(abi_encode_address_uint256(add(_9, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 4), /** @src 85:14711:14721  \"msg.sender\" */ caller(), /** @src 85:14680:14730  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\" */ value_1), _9), _9, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2)\n                                    /// @src 85:14680:14730  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    if iszero(_10)\n                                    {\n                                        /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                                        let pos_2 := mload(64)\n                                        returndatacopy(pos_2, _2, returndatasize())\n                                        revert(pos_2, returndatasize())\n                                    }\n                                    /// @src 85:14680:14730  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    if _10\n                                    {\n                                        finalize_allocation(_9, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2)\n                                        if _2 { revert(_2, _2) }\n                                    }\n                                }\n                            }\n                            default /// @src 85:14500:14741  \"if (tokenType == TokenType.Ethereum) {...\"\n                            {\n                                /// @src 50:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                                let expr_mpos := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ mload(64)\n                                /// @src 50:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                                mstore(add(expr_mpos, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 32), shl(224, 0x23b872dd))\n                                mstore(/** @src 50:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\" */ add(expr_mpos, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 36), /** @src 85:14582:14592  \"msg.sender\" */ caller())\n                                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                                mstore(add(/** @src 50:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\" */ expr_mpos, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 68), /** @src 85:14602:14606  \"this\" */ address())\n                                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                                mstore(add(/** @src 50:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\" */ expr_mpos, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 100), value_1)\n                                /// @src 50:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                                mstore(expr_mpos, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 100)\n                                /// @src 50:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                                finalize_allocation(expr_mpos, 132)\n                                fun_callOptionalReturn(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ and(/** @src 85:14551:14564  \"IERC20(token)\" */ value0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)), /** @src 50:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\" */ expr_mpos)\n                            }\n                        }\n                        default /// @src 85:14408:14741  \"if (tokenType == TokenType.Unknown) {...\"\n                        {\n                            /// @src 85:14465:14483  \"InvalidTokenType()\"\n                            mstore(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2, /** @src 85:14465:14483  \"InvalidTokenType()\" */ shl(224, 0xa1e9dd9d))\n                            revert(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2, 4)\n                        }\n                        /// @src 85:14756:14804  \"BridgingRequested(msg.sender, to, token, amount)\"\n                        let _11 := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ mload(64)\n                        mstore(_11, value_1)\n                        /// @src 85:14756:14804  \"BridgingRequested(msg.sender, to, token, amount)\"\n                        log4(_11, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 32, /** @src 85:14756:14804  \"BridgingRequested(msg.sender, to, token, amount)\" */ 0xf80de57fd7626baaff7d867494866703686569822c2326ae60b2515ede953c3a, /** @src 85:14774:14784  \"msg.sender\" */ caller(), /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ calldataload(68), and(/** @src 85:14756:14804  \"BridgingRequested(msg.sender, to, token, amount)\" */ value0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)))\n                        return(_2, _2)\n                    }\n                    case 0x240dfa95 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let length_1 := sload(/** @src 85:8592:8604  \"_vftManagers\" */ 0x03)\n                        /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                        let memPos_3 := mload(64)\n                        mstore(memPos_3, length_1)\n                        return(memPos_3, 32)\n                    }\n                    case 0x248a9ca3 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                        let ret := fun_getRoleAdmin(calldataload(4))\n                        let memPos_4 := mload(64)\n                        mstore(memPos_4, ret)\n                        return(memPos_4, 32)\n                    }\n                    case 0x2f2ff15d {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(_2, _2) }\n                        let value_3 := calldataload(4)\n                        let value1 := abi_decode_t_address()\n                        /// @src 20:3283:3287  \"role\"\n                        fun_checkRole(/** @src 20:5368:5386  \"getRoleAdmin(role)\" */ fun_getRoleAdmin(value_3))\n                        /// @src 20:5398:5423  \"_grantRole(role, account)\"\n                        pop(fun_grantRole_39677(value_3, value1))\n                        /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                        return(_2, _2)\n                    }\n                    case 0x302ac5d0 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(_2, _2) }\n                        let value_4 := calldataload(4)\n                        let offset := calldataload(36)\n                        if gt(offset, 0xffffffffffffffff) { revert(_2, _2) }\n                        if iszero(slt(add(offset, 35), calldatasize())) { revert(_2, _2) }\n                        let length_2 := calldataload(add(4, offset))\n                        if gt(length_2, 0xffffffffffffffff) { revert(_2, _2) }\n                        let arrayPos := add(offset, 36)\n                        if gt(add(add(offset, length_2), 36), calldatasize()) { revert(_2, _2) }\n                        /// @src 85:17742:17822  \"if (msg.sender != _messageQueue) {...\"\n                        if /** @src 85:17746:17773  \"msg.sender != _messageQueue\" */ iszero(eq(/** @src 85:17746:17756  \"msg.sender\" */ caller(), /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ and(sload(/** @src 85:17760:17773  \"_messageQueue\" */ 0x02), /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1))))\n                        /// @src 85:17742:17822  \"if (msg.sender != _messageQueue) {...\"\n                        {\n                            /// @src 85:17796:17811  \"InvalidSender()\"\n                            mstore(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2, /** @src 85:17796:17811  \"InvalidSender()\" */ shl(225, 0x6edaef2f))\n                            revert(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2, 4)\n                        }\n                        /// @src 85:17832:18229  \"if (_vftManagers.contains(source)) {...\"\n                        switch /** @src 71:8806:8834  \"_contains(set._inner, value)\" */ fun_contains_20844(/** @src 85:17836:17865  \"_vftManagers.contains(source)\" */ value_4)\n                        case /** @src 85:17832:18229  \"if (_vftManagers.contains(source)) {...\" */ 0 {\n                            /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                            let cleaned := and(sload(_2), sub(shl(160, 1), 1))\n                            /// @src 85:18015:18044  \"_governanceAdmin.governance()\"\n                            let _12 := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ mload(64)\n                            /// @src 85:18015:18044  \"_governanceAdmin.governance()\"\n                            mstore(_12, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ shl(224, 0x5aa6e675))\n                            /// @src 85:18015:18044  \"_governanceAdmin.governance()\"\n                            let _13 := staticcall(gas(), cleaned, _12, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 4, /** @src 85:18015:18044  \"_governanceAdmin.governance()\" */ _12, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 32)\n                            /// @src 85:18015:18044  \"_governanceAdmin.governance()\"\n                            if iszero(_13)\n                            {\n                                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                                let pos_3 := mload(64)\n                                returndatacopy(pos_3, _2, returndatasize())\n                                revert(pos_3, returndatasize())\n                            }\n                            /// @src 85:18015:18044  \"_governanceAdmin.governance()\"\n                            let expr_1 := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2\n                            /// @src 85:18015:18044  \"_governanceAdmin.governance()\"\n                            if _13\n                            {\n                                let _14 := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 32\n                                /// @src 85:18015:18044  \"_governanceAdmin.governance()\"\n                                if gt(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 32, /** @src 85:18015:18044  \"_governanceAdmin.governance()\" */ returndatasize()) { _14 := returndatasize() }\n                                finalize_allocation(_12, _14)\n                                let value0_1 := /** @src -1:-1:-1 */ 0\n                                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                                if slt(sub(/** @src 85:18015:18044  \"_governanceAdmin.governance()\" */ add(_12, _14), _12), /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 32)\n                                {\n                                    revert(/** @src -1:-1:-1 */ 0, 0)\n                                }\n                                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                                value0_1 := mload(/** @src 85:18015:18044  \"_governanceAdmin.governance()\" */ _12)\n                                expr_1 := value0_1\n                            }\n                            /// @src 85:18001:18229  \"if (source == _governanceAdmin.governance()) {...\"\n                            switch /** @src 85:18005:18044  \"source == _governanceAdmin.governance()\" */ eq(value_4, expr_1)\n                            case /** @src 85:18001:18229  \"if (source == _governanceAdmin.governance()) {...\" */ 0 {\n                                /// @src 85:18203:18218  \"InvalidSource()\"\n                                mstore(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2, /** @src 85:18203:18218  \"InvalidSource()\" */ shl(224, 0x8154374b))\n                                revert(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2, 4)\n                            }\n                            default /// @src 85:18001:18229  \"if (source == _governanceAdmin.governance()) {...\"\n                            {\n                                /// @src 85:18060:18166  \"if (!_tryParseAndApplyGovernanceMessage(payload)) {...\"\n                                if /** @src 85:18064:18108  \"!_tryParseAndApplyGovernanceMessage(payload)\" */ iszero(/** @src 85:18065:18108  \"_tryParseAndApplyGovernanceMessage(payload)\" */ fun_tryParseAndApplyGovernanceMessage(arrayPos, length_2))\n                                /// @src 85:18060:18166  \"if (!_tryParseAndApplyGovernanceMessage(payload)) {...\"\n                                {\n                                    /// @src 85:18135:18151  \"InvalidPayload()\"\n                                    mstore(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2, /** @src 85:18135:18151  \"InvalidPayload()\" */ shl(224, 0x7c6953f9))\n                                    revert(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2, 4)\n                                }\n                            }\n                        }\n                        default /// @src 85:17832:18229  \"if (_vftManagers.contains(source)) {...\"\n                        {\n                            /// @src 85:17881:17985  \"if (!_tryParseAndApplyTransferMessage(payload)) {...\"\n                            if /** @src 85:17885:17927  \"!_tryParseAndApplyTransferMessage(payload)\" */ iszero(/** @src 85:17886:17927  \"_tryParseAndApplyTransferMessage(payload)\" */ fun_tryParseAndApplyTransferMessage(arrayPos, length_2))\n                            /// @src 85:17881:17985  \"if (!_tryParseAndApplyTransferMessage(payload)) {...\"\n                            {\n                                /// @src 85:17954:17970  \"InvalidPayload()\"\n                                mstore(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2, /** @src 85:18135:18151  \"InvalidPayload()\" */ shl(224, 0x7c6953f9))\n                                /// @src 85:17954:17970  \"InvalidPayload()\"\n                                revert(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2, 4)\n                            }\n                        }\n                        return(_2, _2)\n                    }\n                    case 0x36568abe {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(_2, _2) }\n                        let value1_1 := abi_decode_t_address()\n                        /// @src 20:6485:6587  \"if (callerConfirmation != _msgSender()) {...\"\n                        if /** @src 20:6489:6523  \"callerConfirmation != _msgSender()\" */ iszero(eq(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ and(/** @src 20:6489:6523  \"callerConfirmation != _msgSender()\" */ value1_1, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)), /** @src 24:966:976  \"msg.sender\" */ caller()))\n                        /// @src 20:6485:6587  \"if (callerConfirmation != _msgSender()) {...\"\n                        {\n                            /// @src 20:6546:6576  \"AccessControlBadConfirmation()\"\n                            mstore(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2, /** @src 20:6546:6576  \"AccessControlBadConfirmation()\" */ shl(225, 0x334bd919))\n                            revert(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2, 4)\n                        }\n                        /// @src 20:6597:6634  \"_revokeRole(role, callerConfirmation)\"\n                        pop(fun_revokeRole(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ calldataload(4), /** @src 20:6597:6634  \"_revokeRole(role, callerConfirmation)\" */ value1_1))\n                        /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                        return(_2, _2)\n                    }\n                    case 0x38ff319f {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                        /// @src 25:1944:2016  \"modifier whenNotPaused() {...\"\n                        fun_requireNotPaused()\n                        /// @src 85:17149:17200  \"new BridgingPayment(address(this), fee, msg.sender)\"\n                        let _15 := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ mload(64)\n                        /// @src 85:17149:17200  \"new BridgingPayment(address(this), fee, msg.sender)\"\n                        let _16 := datasize(\"BridgingPayment_59706\")\n                        let _17 := add(_15, _16)\n                        if or(gt(_17, 0xffffffffffffffff), lt(_17, _15))\n                        {\n                            /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                            mstore(_2, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(_2, 0x24)\n                        }\n                        /// @src 85:17149:17200  \"new BridgingPayment(address(this), fee, msg.sender)\"\n                        datacopy(_15, dataoffset(\"BridgingPayment_59706\"), _16)\n                        /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                        mstore(_17, /** @src 85:17177:17181  \"this\" */ address())\n                        /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                        mstore(add(_17, 32), calldataload(4))\n                        mstore(add(_17, 64), /** @src 85:17189:17199  \"msg.sender\" */ caller())\n                        /// @src 85:17149:17200  \"new BridgingPayment(address(this), fee, msg.sender)\"\n                        let expr_address := create(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2, /** @src 85:17149:17200  \"new BridgingPayment(address(this), fee, msg.sender)\" */ _15, add(sub(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _17, /** @src 85:17149:17200  \"new BridgingPayment(address(this), fee, msg.sender)\" */ _15), /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 96))\n                        /// @src 85:17149:17200  \"new BridgingPayment(address(this), fee, msg.sender)\"\n                        if iszero(expr_address)\n                        {\n                            /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                            let pos_4 := mload(64)\n                            returndatacopy(pos_4, _2, returndatasize())\n                            revert(pos_4, returndatasize())\n                        }\n                        let _18 := and(/** @src 85:17244:17268  \"address(bridgingPayment)\" */ expr_address, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1))\n                        /// @src 71:11511:11561  \"_add(set._inner, bytes32(uint256(uint160(value))))\"\n                        pop(fun__add(/** @src 71:11528:11560  \"bytes32(uint256(uint160(value)))\" */ _18))\n                        /// @src 85:17339:17385  \"BridgingPaymentCreated(bridgingPaymentAddress)\"\n                        let _19 := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ mload(64)\n                        mstore(_19, _18)\n                        /// @src 85:17339:17385  \"BridgingPaymentCreated(bridgingPaymentAddress)\"\n                        log1(_19, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 32, /** @src 85:17339:17385  \"BridgingPaymentCreated(bridgingPaymentAddress)\" */ 0x9d5f66d985a12f505753a5f6417ed3c4ec6e68963ee0119770dda415f0d14ad0)\n                        /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                        let memPos_5 := mload(64)\n                        mstore(memPos_5, _18)\n                        return(memPos_5, 32)\n                    }\n                    case 0x3b70c18a {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let cleaned_1 := and(sload(/** @src 85:8360:8373  \"_messageQueue\" */ 0x02), /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1))\n                        let memPos_6 := mload(64)\n                        mstore(memPos_6, cleaned_1)\n                        return(memPos_6, 32)\n                    }\n                    case 0x3f4ba83a {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        /// @src 20:3283:3287  \"role\"\n                        fun__checkRole()\n                        /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                        let _20 := sload(/** @src 25:1237:1303  \"assembly {...\" */ 92891662540554778686986514950364265630913525426840345632122912437671245656832)\n                        /// @src 25:2967:3029  \"if (!paused()) {...\"\n                        if /** @src 25:2971:2980  \"!paused()\" */ iszero(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ and(_20, 0xff))\n                        /// @src 25:2967:3029  \"if (!paused()) {...\"\n                        {\n                            /// @src 25:3003:3018  \"ExpectedPause()\"\n                            mstore(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2, /** @src 25:3003:3018  \"ExpectedPause()\" */ shl(224, 0x8dfc202b))\n                            revert(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2, 4)\n                        }\n                        sstore(/** @src 25:1237:1303  \"assembly {...\" */ 92891662540554778686986514950364265630913525426840345632122912437671245656832, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ and(_20, not(255)))\n                        /// @src 25:3627:3649  \"Unpaused(_msgSender())\"\n                        let _21 := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ mload(64)\n                        mstore(_21, /** @src 24:966:976  \"msg.sender\" */ caller())\n                        /// @src 25:3627:3649  \"Unpaused(_msgSender())\"\n                        log1(_21, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 32, /** @src 25:3627:3649  \"Unpaused(_msgSender())\" */ 0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa)\n                        /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                        return(_2, _2)\n                    }\n                    case 0x4e689539 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                        /// @src 85:9531:9571  \"return _vftManagers.contains(vftManager)\"\n                        let var_1 := /** @src 71:8806:8834  \"_contains(set._inner, value)\" */ fun_contains_20844(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ calldataload(4))\n                        let memPos_7 := mload(64)\n                        mstore(memPos_7, iszero(iszero(var_1)))\n                        return(memPos_7, 32)\n                    }\n                    case 0x4f1ef286 {\n                        if slt(add(calldatasize(), not(3)), 64) { revert(_2, _2) }\n                        let value0_2 := abi_decode_address()\n                        let offset_1 := calldataload(36)\n                        if gt(offset_1, 0xffffffffffffffff) { revert(_2, _2) }\n                        if iszero(slt(add(offset_1, 35), calldatasize())) { revert(_2, _2) }\n                        let length_3 := calldataload(add(4, offset_1))\n                        let _22 := array_allocation_size_bytes(length_3)\n                        let memPtr_1 := mload(64)\n                        finalize_allocation(memPtr_1, _22)\n                        mstore(memPtr_1, length_3)\n                        let dst := add(memPtr_1, 32)\n                        if gt(add(add(offset_1, length_3), 36), calldatasize()) { revert(_2, _2) }\n                        calldatacopy(dst, add(offset_1, 36), length_3)\n                        mstore(add(add(memPtr_1, length_3), 32), _2)\n                        /// @src 23:4650:4673  \"address(this) == __self\"\n                        let _23 := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ and(/** @src 23:4667:4673  \"__self\" */ loadimmutable(\"40207\"), /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1))\n                        /// @src 23:4650:4770  \"address(this) == __self || // Must be called through delegatecall...\"\n                        let expr_2 := /** @src 23:4650:4673  \"address(this) == __self\" */ eq(/** @src 23:4658:4662  \"this\" */ address(), /** @src 23:4650:4673  \"address(this) == __self\" */ _23)\n                        /// @src 23:4650:4770  \"address(this) == __self || // Must be called through delegatecall...\"\n                        if iszero(expr_2)\n                        {\n                            expr_2 := /** @src 23:4728:4770  \"ERC1967Utils.getImplementation() != __self\" */ iszero(eq(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ and(sload(/** @src 37:811:877  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc), /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)), /** @src 23:4728:4770  \"ERC1967Utils.getImplementation() != __self\" */ _23))\n                        }\n                        /// @src 23:4633:4884  \"if (...\"\n                        if expr_2\n                        {\n                            /// @src 23:4844:4873  \"UUPSUnauthorizedCallContext()\"\n                            mstore(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2, /** @src 23:4844:4873  \"UUPSUnauthorizedCallContext()\" */ shl(225, 0x703e46dd))\n                            revert(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2, 4)\n                        }\n                        mstore(_2, _2)\n                        mstore(32, /** @src 20:2968:3039  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                        /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                        let dataSlot := keccak256(_2, 64)\n                        /// @src 20:3949:3980  \"$._roles[role].hasRole[account]\"\n                        let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ and(/** @src 24:966:976  \"msg.sender\" */ caller(), /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 20:3949:3963  \"$._roles[role]\" */ dataSlot)\n                        /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                        dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0x40)\n                        /// @src 20:4512:4620  \"if (!hasRole(role, account)) {...\"\n                        if /** @src 20:4516:4539  \"!hasRole(role, account)\" */ iszero(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ and(sload(/** @src 20:3949:3980  \"$._roles[role].hasRole[account]\" */ dataSlot_1), /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0xff))\n                        /// @src 20:4512:4620  \"if (!hasRole(role, account)) {...\"\n                        {\n                            /// @src 20:4562:4609  \"AccessControlUnauthorizedAccount(account, role)\"\n                            mstore(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2, /** @src 20:4562:4609  \"AccessControlUnauthorizedAccount(account, role)\" */ shl(224, 0xe2517d3f))\n                            /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                            mstore(4, /** @src 24:966:976  \"msg.sender\" */ caller())\n                            /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                            mstore(36, _2)\n                            /// @src 20:4562:4609  \"AccessControlUnauthorizedAccount(account, role)\"\n                            revert(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2, 68)\n                        }\n                        let _24 := and(/** @src 23:6131:6167  \"IERC1822Proxiable(newImplementation)\" */ value0_2, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1))\n                        /// @src 23:6131:6183  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                        let _25 := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ mload(64)\n                        /// @src 23:6131:6183  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                        mstore(_25, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ shl(224, 0x52d1902d))\n                        /// @src 23:6131:6183  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                        let trySuccessCondition := staticcall(gas(), _24, _25, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 4, /** @src 23:6131:6183  \"IERC1822Proxiable(newImplementation).proxiableUUID()\" */ _25, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 32)\n                        /// @src 23:6131:6183  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                        let expr_3 := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2\n                        /// @src 23:6131:6183  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                        if trySuccessCondition\n                        {\n                            let _26 := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 32\n                            /// @src 23:6131:6183  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                            if gt(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 32, /** @src 23:6131:6183  \"IERC1822Proxiable(newImplementation).proxiableUUID()\" */ returndatasize()) { _26 := returndatasize() }\n                            finalize_allocation(_25, _26)\n                            let value0_3 := /** @src -1:-1:-1 */ 0\n                            /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                            if slt(sub(/** @src 23:6131:6183  \"IERC1822Proxiable(newImplementation).proxiableUUID()\" */ add(_25, _26), _25), /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 32)\n                            {\n                                revert(/** @src -1:-1:-1 */ 0, 0)\n                            }\n                            /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                            value0_3 := mload(/** @src 23:6131:6183  \"IERC1822Proxiable(newImplementation).proxiableUUID()\" */ _25)\n                            expr_3 := value0_3\n                        }\n                        /// @src 23:6127:6564  \"try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {...\"\n                        switch iszero(trySuccessCondition)\n                        case 0 {\n                            /// @src 23:6221:6341  \"if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {...\"\n                            if /** @src 23:6225:6265  \"slot != ERC1967Utils.IMPLEMENTATION_SLOT\" */ iszero(eq(expr_3, /** @src 37:811:877  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc))\n                            /// @src 23:6221:6341  \"if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {...\"\n                            {\n                                /// @src 23:6292:6326  \"UUPSUnsupportedProxiableUUID(slot)\"\n                                mstore(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2, /** @src 23:6292:6326  \"UUPSUnsupportedProxiableUUID(slot)\" */ shl(226, 0x2a875269))\n                                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                                mstore(4, expr_3)\n                                /// @src 23:6292:6326  \"UUPSUnsupportedProxiableUUID(slot)\"\n                                revert(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2, 36)\n                            }\n                            /// @src 37:1744:1863  \"if (newImplementation.code.length == 0) {...\"\n                            if /** @src 37:1748:1782  \"newImplementation.code.length == 0\" */ iszero(/** @src 37:1748:1777  \"newImplementation.code.length\" */ extcodesize(value0_2))\n                            /// @src 37:1744:1863  \"if (newImplementation.code.length == 0) {...\"\n                            {\n                                /// @src 37:1805:1852  \"ERC1967InvalidImplementation(newImplementation)\"\n                                mstore(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2, /** @src 37:1805:1852  \"ERC1967InvalidImplementation(newImplementation)\" */ shl(224, 0x4c9c8ce3))\n                                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                                mstore(4, _24)\n                                /// @src 37:1805:1852  \"ERC1967InvalidImplementation(newImplementation)\"\n                                revert(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2, 36)\n                            }\n                            sstore(/** @src 37:811:877  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ or(and(sload(/** @src 37:811:877  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc), /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ shl(160, 0xffffffffffffffffffffffff)), _24))\n                            /// @src 37:2407:2443  \"IERC1967.Upgraded(newImplementation)\"\n                            log2(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2, _2, /** @src 37:2407:2443  \"IERC1967.Upgraded(newImplementation)\" */ 0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b, _24)\n                            /// @src 37:2454:2602  \"if (data.length > 0) {...\"\n                            switch /** @src 37:2458:2473  \"data.length > 0\" */ iszero(iszero(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ mload(/** @src 37:2458:2469  \"data.length\" */ memPtr_1)))\n                            case /** @src 37:2454:2602  \"if (data.length > 0) {...\" */ 0 {\n                                /// @src 37:6159:6229  \"if (msg.value > 0) {...\"\n                                if /** @src 37:6163:6176  \"msg.value > 0\" */ iszero(iszero(/** @src 37:6163:6172  \"msg.value\" */ callvalue()))\n                                /// @src 37:6159:6229  \"if (msg.value > 0) {...\"\n                                {\n                                    /// @src 37:6199:6218  \"ERC1967NonPayable()\"\n                                    mstore(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2, /** @src 37:6199:6218  \"ERC1967NonPayable()\" */ shl(224, 0xb398979f))\n                                    revert(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2, 4)\n                                }\n                            }\n                            default /// @src 37:2454:2602  \"if (data.length > 0) {...\"\n                            {\n                                /// @src 51:4065:4090  \"target.delegatecall(data)\"\n                                let expr_component_2 := delegatecall(gas(), value0_2, dst, mload(memPtr_1), /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2, _2)\n                                /// @src 51:4065:4090  \"target.delegatecall(data)\"\n                                let data := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2\n                                switch returndatasize()\n                                case 0 { data := 96 }\n                                default {\n                                    let _27 := returndatasize()\n                                    let _28 := array_allocation_size_bytes(_27)\n                                    let memPtr_2 := mload(64)\n                                    finalize_allocation(memPtr_2, _28)\n                                    mstore(memPtr_2, _27)\n                                    data := memPtr_2\n                                    returndatacopy(add(memPtr_2, 32), _2, returndatasize())\n                                }\n                                /// @src 51:4107:4162  \"verifyCallResultFromTarget(target, success, returndata)\"\n                                pop(fun_verifyCallResultFromTarget(value0_2, expr_component_2, /** @src 51:4065:4090  \"target.delegatecall(data)\" */ data))\n                            }\n                        }\n                        default /// @src 23:6127:6564  \"try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {...\"\n                        {\n                            /// @src 23:6493:6553  \"ERC1967Utils.ERC1967InvalidImplementation(newImplementation)\"\n                            mstore(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2, /** @src 37:1805:1852  \"ERC1967InvalidImplementation(newImplementation)\" */ shl(224, 0x4c9c8ce3))\n                            /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                            mstore(4, _24)\n                            /// @src 23:6493:6553  \"ERC1967Utils.ERC1967InvalidImplementation(newImplementation)\"\n                            revert(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2, 36)\n                        }\n                        return(_2, _2)\n                    }\n                    case 0x52d1902d {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        /// @src 23:5069:5214  \"if (address(this) != __self) {...\"\n                        if /** @src 23:5073:5096  \"address(this) != __self\" */ iszero(eq(/** @src 23:5081:5085  \"this\" */ address(), /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ and(/** @src 23:5090:5096  \"__self\" */ loadimmutable(\"40207\"), /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1))))\n                        /// @src 23:5069:5214  \"if (address(this) != __self) {...\"\n                        {\n                            /// @src 23:5174:5203  \"UUPSUnauthorizedCallContext()\"\n                            mstore(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2, /** @src 23:4844:4873  \"UUPSUnauthorizedCallContext()\" */ shl(225, 0x703e46dd))\n                            /// @src 23:5174:5203  \"UUPSUnauthorizedCallContext()\"\n                            revert(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2, 4)\n                        }\n                        let memPos_8 := mload(64)\n                        mstore(memPos_8, /** @src 37:811:877  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc)\n                        /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                        return(memPos_8, 32)\n                    }\n                    case 0x5c975abb {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let value_5 := and(sload(/** @src 25:1237:1303  \"assembly {...\" */ 92891662540554778686986514950364265630913525426840345632122912437671245656832), /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0xff)\n                        let memPos_9 := mload(64)\n                        mstore(memPos_9, iszero(iszero(value_5)))\n                        return(memPos_9, 32)\n                    }\n                    case 0x763b754a {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 160) { revert(_2, _2) }\n                        let value0_4 := abi_decode_address()\n                        let value1_2 := abi_decode_t_address()\n                        let value_6 := /** @src -1:-1:-1 */ _2\n                        /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                        value_6 := calldataload(68)\n                        let _29 := and(value_6, sub(shl(160, 1), 1))\n                        if iszero(eq(value_6, _29)) { revert(_2, _2) }\n                        let offset_2 := calldataload(132)\n                        if gt(offset_2, 0xffffffffffffffff) { revert(_2, _2) }\n                        if iszero(slt(add(offset_2, 35), calldatasize())) { revert(_2, _2) }\n                        let length_4 := calldataload(add(4, offset_2))\n                        let _30 := array_allocation_size_array_struct_TokenInfo_dyn(length_4)\n                        let memPtr_3 := mload(64)\n                        finalize_allocation(memPtr_3, _30)\n                        let dst_1 := memPtr_3\n                        mstore(memPtr_3, length_4)\n                        dst_1 := add(memPtr_3, 32)\n                        let srcEnd := add(add(offset_2, shl(6, length_4)), 36)\n                        if gt(srcEnd, calldatasize()) { revert(_2, _2) }\n                        let src := add(offset_2, 36)\n                        for { } lt(src, srcEnd) { src := add(src, 64) }\n                        {\n                            if slt(sub(calldatasize(), src), 64) { revert(_2, _2) }\n                            let memPtr_4 := mload(64)\n                            let newFreePtr := add(memPtr_4, 64)\n                            if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr_4))\n                            {\n                                mstore(/** @src -1:-1:-1 */ _2, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(/** @src -1:-1:-1 */ _2, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 36)\n                            }\n                            mstore(64, newFreePtr)\n                            let value_7 := /** @src -1:-1:-1 */ _2\n                            /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                            value_7 := calldataload(src)\n                            if iszero(eq(value_7, and(value_7, sub(shl(160, 1), 1)))) { revert(_2, _2) }\n                            mstore(memPtr_4, value_7)\n                            let value_8 := calldataload(add(src, 32))\n                            if iszero(lt(value_8, 3)) { revert(_2, _2) }\n                            mstore(add(memPtr_4, 32), value_8)\n                            mstore(dst_1, memPtr_4)\n                            dst_1 := add(dst_1, 32)\n                        }\n                        let _31 := sload(/** @src 22:3147:3213  \"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\" */ 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00)\n                        /// @src 22:4301:4317  \"!$._initializing\"\n                        let _32 := iszero(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ and(shr(64, _31), 0xff))\n                        let value_9 := and(_31, 0xffffffffffffffff)\n                        /// @src 22:4724:4758  \"initialized == 0 && isTopLevelCall\"\n                        let expr_4 := /** @src 22:4724:4740  \"initialized == 0\" */ iszero(value_9)\n                        /// @src 22:4724:4758  \"initialized == 0 && isTopLevelCall\"\n                        if expr_4 { expr_4 := _32 }\n                        /// @src 22:4788:4838  \"initialized == 1 && address(this).code.length == 0\"\n                        let expr_5 := /** @src 22:4788:4804  \"initialized == 1\" */ eq(value_9, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 1)\n                        /// @src 22:4788:4838  \"initialized == 1 && address(this).code.length == 0\"\n                        if expr_5\n                        {\n                            expr_5 := /** @src 22:4808:4838  \"address(this).code.length == 0\" */ iszero(/** @src 22:4808:4833  \"address(this).code.length\" */ extcodesize(/** @src 22:4816:4820  \"this\" */ address()))\n                        }\n                        /// @src 22:4853:4883  \"!initialSetup && !construction\"\n                        let expr_6 := /** @src 22:4853:4866  \"!initialSetup\" */ iszero(expr_4)\n                        /// @src 22:4853:4883  \"!initialSetup && !construction\"\n                        if expr_6\n                        {\n                            expr_6 := /** @src 22:4870:4883  \"!construction\" */ iszero(expr_5)\n                        }\n                        /// @src 22:4849:4940  \"if (!initialSetup && !construction) {...\"\n                        if expr_6\n                        {\n                            /// @src 22:4906:4929  \"InvalidInitialization()\"\n                            mstore(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2, /** @src 22:4906:4929  \"InvalidInitialization()\" */ shl(224, 0xf92ee8a9))\n                            revert(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2, 4)\n                        }\n                        sstore(/** @src 22:3147:3213  \"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\" */ 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ or(and(_31, not(0xffffffffffffffff)), 1))\n                        /// @src 22:4977:5044  \"if (isTopLevelCall) {...\"\n                        if _32\n                        {\n                            /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                            sstore(/** @src 22:3147:3213  \"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\" */ 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ or(and(_31, not(0xffffffffffffffffff)), 0x010000000000000001))\n                        }\n                        /// @src 22:6891:6967  \"modifier onlyInitializing() {...\"\n                        fun_checkInitializing()\n                        fun_checkInitializing()\n                        fun_checkInitializing()\n                        /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                        let _33 := and(/** @src 85:7042:7067  \"address(governanceAdmin_)\" */ value0_4, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1))\n                        /// @src 85:7011:7068  \"_grantRole(DEFAULT_ADMIN_ROLE, address(governanceAdmin_))\"\n                        pop(fun_grantRole(_33))\n                        /// @src 85:7079:7129  \"_grantRole(PAUSER_ROLE, address(governanceAdmin_))\"\n                        pop(fun__grantRole(_33))\n                        /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                        let _34 := and(/** @src 85:7163:7189  \"address(governancePauser_)\" */ value1_2, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1))\n                        /// @src 85:7139:7190  \"_grantRole(PAUSER_ROLE, address(governancePauser_))\"\n                        pop(fun__grantRole(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _34))\n                        sstore(_2, or(and(sload(_2), shl(160, 0xffffffffffffffffffffffff)), _33))\n                        sstore(1, or(and(sload(1), shl(160, 0xffffffffffffffffffffffff)), _34))\n                        sstore(/** @src 85:7293:7322  \"_messageQueue = messageQueue_\" */ 0x02, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ or(and(sload(/** @src 85:7293:7322  \"_messageQueue = messageQueue_\" */ 0x02), /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ shl(160, 0xffffffffffffffffffffffff)), _29))\n                        /// @src 71:7898:7921  \"_add(set._inner, value)\"\n                        pop(fun_add_20858(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ calldataload(100)))\n                        /// @src 85:7376:7389  \"uint256 i = 0\"\n                        let var_i := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2\n                        /// @src 85:7371:7686  \"for (uint256 i = 0; i < tokens_.length; i++) {...\"\n                        for { }\n                        /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 1\n                        /// @src 85:7376:7389  \"uint256 i = 0\"\n                        {\n                            /// @src 85:7411:7414  \"i++\"\n                            var_i := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ add(/** @src 85:7411:7414  \"i++\" */ var_i, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 1)\n                        }\n                        /// @src 85:7411:7414  \"i++\"\n                        {\n                            /// @src 85:7391:7409  \"i < tokens_.length\"\n                            if iszero(lt(var_i, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ mload(/** @src 85:7395:7409  \"tokens_.length\" */ memPtr_3)))\n                            /// @src 85:7391:7409  \"i < tokens_.length\"\n                            { break }\n                            /// @src 85:7459:7469  \"tokens_[i]\"\n                            let _mpos := mload(memory_array_index_access_struct_TokenInfo_dyn(memPtr_3, var_i))\n                            /// @src 85:7488:7507  \"tokenInfo.tokenType\"\n                            let _35 := add(_mpos, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 32)\n                            let _36 := mload(/** @src 85:7488:7507  \"tokenInfo.tokenType\" */ _35)\n                            /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                            let _37 := iszero(lt(_36, 3))\n                            if _37\n                            {\n                                mstore(_2, shl(224, 0x4e487b71))\n                                mstore(4, 0x21)\n                                revert(_2, 36)\n                            }\n                            _37 := /** @src -1:-1:-1 */ _2\n                            /// @src 85:7484:7676  \"if (tokenInfo.tokenType == TokenType.Unknown) {...\"\n                            switch /** @src 85:7488:7528  \"tokenInfo.tokenType == TokenType.Unknown\" */ iszero(_36)\n                            case /** @src 85:7484:7676  \"if (tokenInfo.tokenType == TokenType.Unknown) {...\" */ 0 {\n                                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                                let cleaned_2 := and(mload(/** @src 85:7624:7639  \"tokenInfo.token\" */ _mpos), /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1))\n                                let _38 := mload(/** @src 85:7641:7660  \"tokenInfo.tokenType\" */ _35)\n                                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                                if iszero(lt(_38, 3))\n                                {\n                                    mstore(_2, shl(224, 0x4e487b71))\n                                    mstore(4, 0x21)\n                                    revert(_2, 36)\n                                }\n                                /// @src 85:7612:7661  \"_tokens.set(tokenInfo.token, tokenInfo.tokenType)\"\n                                pop(fun_set_20859(cleaned_2, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _38))\n                            }\n                            default /// @src 85:7484:7676  \"if (tokenInfo.tokenType == TokenType.Unknown) {...\"\n                            {\n                                /// @src 85:7555:7573  \"InvalidTokenType()\"\n                                mstore(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2, /** @src 85:14465:14483  \"InvalidTokenType()\" */ shl(224, 0xa1e9dd9d))\n                                /// @src 85:7555:7573  \"InvalidTokenType()\"\n                                revert(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2, 4)\n                            }\n                        }\n                        /// @src 22:5064:5165  \"if (isTopLevelCall) {...\"\n                        if _32\n                        {\n                            /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                            sstore(/** @src 22:3147:3213  \"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\" */ 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ and(sload(/** @src 22:3147:3213  \"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\" */ 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00), /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ not(0xff0000000000000000)))\n                            /// @src 22:5140:5154  \"Initialized(1)\"\n                            let _39 := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ mload(64)\n                            mstore(_39, 1)\n                            /// @src 22:5140:5154  \"Initialized(1)\"\n                            log1(_39, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 32, /** @src 22:5140:5154  \"Initialized(1)\" */ 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2)\n                        }\n                        /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                        return(_2, _2)\n                    }\n                    case 0x7e1c0c09 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let length_5 := sload(/** @src 85:9767:9774  \"_tokens\" */ 0x05)\n                        /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                        let memPos_10 := mload(64)\n                        mstore(memPos_10, length_5)\n                        return(memPos_10, 32)\n                    }\n                    case 0x8456cb59 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        /// @src 20:3283:3287  \"role\"\n                        fun__checkRole()\n                        /// @src 25:1944:2016  \"modifier whenNotPaused() {...\"\n                        fun_requireNotPaused()\n                        /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                        sstore(/** @src 25:1237:1303  \"assembly {...\" */ 92891662540554778686986514950364265630913525426840345632122912437671245656832, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ or(and(sload(/** @src 25:1237:1303  \"assembly {...\" */ 92891662540554778686986514950364265630913525426840345632122912437671245656832), /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ not(255)), /** @src 85:5528:5532  \"0x01\" */ 0x01))\n                        /// @src 25:3319:3339  \"Paused(_msgSender())\"\n                        let _40 := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ mload(64)\n                        mstore(_40, /** @src 24:966:976  \"msg.sender\" */ caller())\n                        /// @src 25:3319:3339  \"Paused(_msgSender())\"\n                        log1(_40, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 32, /** @src 25:3319:3339  \"Paused(_msgSender())\" */ 0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258)\n                        /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                        return(_2, _2)\n                    }\n                    case 0x87be40b1 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let pos_5 := mload(64)\n                        let memPtr_5 := pos_5\n                        let length_6 := sload(/** @src 85:8814:8826  \"_vftManagers\" */ 0x03)\n                        /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                        mstore(pos_5, length_6)\n                        pos_5 := add(pos_5, 0x20)\n                        mstore(_2, /** @src 85:8814:8826  \"_vftManagers\" */ 0x03)\n                        /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                        let srcPtr_1 := 87903029871075914254377627908054574944891091886930582284385770809450030037083\n                        let i_1 := _2\n                        for { } lt(i_1, length_6) { i_1 := add(i_1, 1) }\n                        {\n                            mstore(pos_5, sload(srcPtr_1))\n                            pos_5 := add(pos_5, 0x20)\n                            srcPtr_1 := add(srcPtr_1, 1)\n                        }\n                        finalize_allocation(memPtr_5, sub(pos_5, memPtr_5))\n                        let memPos_11 := mload(64)\n                        return(memPos_11, sub(abi_encode_array_bytes32_dyn(memPos_11, memPtr_5), memPos_11))\n                    }\n                    case 0x87e7a3a3 {\n                        if callvalue() { revert(_2, _2) }\n                        let param, param_1 := abi_decode_uint256t_uint256(calldatasize())\n                        let ret_1 := /** @src 85:11903:11938  \"paginate(bytes32Set, offset, limit)\" */ fun_paginate_20862(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ param, param_1)\n                        let memPos_12 := mload(64)\n                        return(memPos_12, sub(abi_encode_array_address_dyn(memPos_12, ret_1), memPos_12))\n                    }\n                    case 0x8b4864d6 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_2, param_3 := abi_decode_uint256t_uint256(calldatasize())\n                        let ret_2 := /** @src 85:10316:10361  \"paginate(_tokens._inner._keys, offset, limit)\" */ fun_paginate_20864(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ param_2, param_3)\n                        let memPos_13 := mload(64)\n                        return(memPos_13, sub(abi_encode_array_address_dyn(memPos_13, ret_2), memPos_13))\n                    }\n                    case 0x8b841f6c {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let length_7 := sload(/** @src 85:11073:11090  \"_bridgingPayments\" */ 0x08)\n                        /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                        let memPos_14 := mload(64)\n                        mstore(memPos_14, length_7)\n                        return(memPos_14, 32)\n                    }\n                    case 0x91d14854 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(_2, _2) }\n                        let value1_3 := abi_decode_t_address()\n                        mstore(_2, calldataload(4))\n                        mstore(32, /** @src 20:2968:3039  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                        /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                        let dataSlot_2 := keccak256(_2, 64)\n                        /// @src 20:3949:3980  \"$._roles[role].hasRole[account]\"\n                        let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                        /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ and(value1_3, sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 20:3949:3963  \"$._roles[role]\" */ dataSlot_2)\n                        /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                        dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0x40)\n                        let value_10 := and(sload(/** @src 20:3949:3980  \"$._roles[role].hasRole[account]\" */ dataSlot_3), /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0xff)\n                        let memPos_15 := mload(64)\n                        mstore(memPos_15, iszero(iszero(value_10)))\n                        return(memPos_15, 32)\n                    }\n                    case 0x93272baf {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                        /// @src 85:10788:10809  \"_tokens.tryGet(token)\"\n                        let expr_component_3, expr_component_4 := fun_tryGet_20842(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ abi_decode_address())\n                        let memPos_16 := mload(64)\n                        if iszero(lt(expr_component_4, 3))\n                        {\n                            mstore(_2, shl(224, 0x4e487b71))\n                            mstore(4, 0x21)\n                            revert(_2, 0x24)\n                        }\n                        mstore(memPos_16, expr_component_4)\n                        return(memPos_16, 32)\n                    }\n                    case 0x9d63848a {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let pos_6 := mload(64)\n                        let memPtr_6 := pos_6\n                        let length_8 := sload(/** @src 85:9962:9969  \"_tokens\" */ 0x05)\n                        /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                        mstore(pos_6, length_8)\n                        pos_6 := add(pos_6, 0x20)\n                        mstore(_2, /** @src 85:9962:9969  \"_tokens\" */ 0x05)\n                        /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                        let srcPtr_2 := 1546678032441257452667456735582814959992782782816731922691272282333561699760\n                        let i_2 := _2\n                        for { } lt(i_2, length_8) { i_2 := add(i_2, 1) }\n                        {\n                            mstore(pos_6, sload(srcPtr_2))\n                            pos_6 := add(pos_6, 0x20)\n                            srcPtr_2 := add(srcPtr_2, 1)\n                        }\n                        finalize_allocation(memPtr_6, sub(pos_6, memPtr_6))\n                        let memPos_17 := mload(64)\n                        return(memPos_17, sub(abi_encode_array_address_dyn(memPos_17, memPtr_6), memPos_17))\n                    }\n                    case 0xa217fddf {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let memPos_18 := mload(64)\n                        mstore(memPos_18, _2)\n                        return(memPos_18, 32)\n                    }\n                    case 0xad3cb1cc {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let size := /** @src -1:-1:-1 */ _2\n                        /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                        let _41 := _2\n                        _41 := /** @src -1:-1:-1 */ _2\n                        /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                        size := 64\n                        let memPtr_7 := mload(64)\n                        finalize_allocation(memPtr_7, 64)\n                        mstore(memPtr_7, 5)\n                        mstore(add(memPtr_7, 32), \"5.0.0\")\n                        let memPos_19 := mload(64)\n                        mstore(memPos_19, 32)\n                        return(memPos_19, sub(abi_encode_string(memPtr_7, add(memPos_19, 32)), memPos_19))\n                    }\n                    case 0xc1c60921 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_4, param_5 := abi_decode_uint256t_uint256(calldatasize())\n                        let ret_3 := /** @src 85:9191:9228  \"paginate(_vftManagers, offset, limit)\" */ fun_paginate(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ param_4, param_5)\n                        let memPos_20 := mload(64)\n                        return(memPos_20, sub(abi_encode_array_bytes32_dyn(memPos_20, ret_3), memPos_20))\n                    }\n                    case 0xc305870c {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(_2, _2) }\n                        let value0_5 := abi_decode_address()\n                        let value_11 := calldataload(36)\n                        /// @src 25:1944:2016  \"modifier whenNotPaused() {...\"\n                        fun_requireNotPaused()\n                        /// @src 85:14276:14340  \"if (amount == 0) {...\"\n                        if /** @src 85:14280:14291  \"amount == 0\" */ iszero(value_11)\n                        /// @src 85:14276:14340  \"if (amount == 0) {...\"\n                        {\n                            /// @src 85:14314:14329  \"InvalidAmount()\"\n                            mstore(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2, /** @src 85:14314:14329  \"InvalidAmount()\" */ shl(225, 0x162908e3))\n                            revert(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2, 4)\n                        }\n                        /// @src 85:14376:14397  \"_tokens.tryGet(token)\"\n                        let expr_component_5, expr_component_6 := fun_tryGet_20842(value0_5)\n                        /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                        let _42 := iszero(lt(expr_component_6, 3))\n                        if _42\n                        {\n                            mstore(_2, shl(224, 0x4e487b71))\n                            mstore(4, 0x21)\n                            revert(_2, 36)\n                        }\n                        /// @src 85:14408:14741  \"if (tokenType == TokenType.Unknown) {...\"\n                        switch /** @src 85:14412:14442  \"tokenType == TokenType.Unknown\" */ iszero(expr_component_6)\n                        case /** @src 85:14408:14741  \"if (tokenType == TokenType.Unknown) {...\" */ 0 {\n                            /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                            _42 := /** @src -1:-1:-1 */ _2\n                            /// @src 85:14500:14741  \"if (tokenType == TokenType.Ethereum) {...\"\n                            switch /** @src 85:14504:14535  \"tokenType == TokenType.Ethereum\" */ eq(expr_component_6, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 1)\n                            case /** @src 85:14500:14741  \"if (tokenType == TokenType.Ethereum) {...\" */ 0 {\n                                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                                _42 := /** @src -1:-1:-1 */ _2\n                                /// @src 85:14633:14741  \"if (tokenType == TokenType.Gear) {...\"\n                                if /** @src 85:14637:14664  \"tokenType == TokenType.Gear\" */ eq(expr_component_6, /** @src 85:14650:14664  \"TokenType.Gear\" */ 2)\n                                /// @src 85:14633:14741  \"if (tokenType == TokenType.Gear) {...\"\n                                {\n                                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                                    let _43 := and(/** @src 85:14680:14701  \"IERC20Burnable(token)\" */ value0_5, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1))\n                                    /// @src 85:14680:14730  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    if iszero(extcodesize(_43))\n                                    {\n                                        /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                                        revert(_2, _2)\n                                    }\n                                    /// @src 85:14680:14730  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    let _44 := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ mload(64)\n                                    /// @src 85:14680:14730  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    mstore(_44, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ shl(228, 0x079cc679))\n                                    /// @src 85:14680:14730  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    let _45 := call(gas(), _43, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2, /** @src 85:14680:14730  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\" */ _44, sub(abi_encode_address_uint256(add(_44, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 4), /** @src 85:14711:14721  \"msg.sender\" */ caller(), /** @src 85:14680:14730  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\" */ value_11), _44), _44, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2)\n                                    /// @src 85:14680:14730  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    if iszero(_45)\n                                    {\n                                        /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                                        let pos_7 := mload(64)\n                                        returndatacopy(pos_7, _2, returndatasize())\n                                        revert(pos_7, returndatasize())\n                                    }\n                                    /// @src 85:14680:14730  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    if _45\n                                    {\n                                        finalize_allocation(_44, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2)\n                                        if _2 { revert(_2, _2) }\n                                    }\n                                }\n                            }\n                            default /// @src 85:14500:14741  \"if (tokenType == TokenType.Ethereum) {...\"\n                            {\n                                /// @src 50:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                                let expr_mpos_1 := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ mload(64)\n                                /// @src 50:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                                mstore(add(expr_mpos_1, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 32), shl(224, 0x23b872dd))\n                                mstore(/** @src 50:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\" */ add(expr_mpos_1, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 36), /** @src 85:14582:14592  \"msg.sender\" */ caller())\n                                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                                mstore(add(/** @src 50:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\" */ expr_mpos_1, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 68), /** @src 85:14602:14606  \"this\" */ address())\n                                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                                mstore(add(/** @src 50:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\" */ expr_mpos_1, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 100), value_11)\n                                /// @src 50:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                                mstore(expr_mpos_1, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 100)\n                                /// @src 50:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                                finalize_allocation(expr_mpos_1, 132)\n                                fun_callOptionalReturn(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ and(/** @src 85:14551:14564  \"IERC20(token)\" */ value0_5, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)), /** @src 50:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\" */ expr_mpos_1)\n                            }\n                        }\n                        default /// @src 85:14408:14741  \"if (tokenType == TokenType.Unknown) {...\"\n                        {\n                            /// @src 85:14465:14483  \"InvalidTokenType()\"\n                            mstore(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2, /** @src 85:14465:14483  \"InvalidTokenType()\" */ shl(224, 0xa1e9dd9d))\n                            revert(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2, 4)\n                        }\n                        /// @src 85:14756:14804  \"BridgingRequested(msg.sender, to, token, amount)\"\n                        let _46 := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ mload(64)\n                        mstore(_46, value_11)\n                        /// @src 85:14756:14804  \"BridgingRequested(msg.sender, to, token, amount)\"\n                        log4(_46, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 32, /** @src 85:14756:14804  \"BridgingRequested(msg.sender, to, token, amount)\" */ 0xf80de57fd7626baaff7d867494866703686569822c2326ae60b2515ede953c3a, /** @src 85:14774:14784  \"msg.sender\" */ caller(), /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ calldataload(68), and(/** @src 85:14756:14804  \"BridgingRequested(msg.sender, to, token, amount)\" */ value0_5, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)))\n                        return(_2, _2)\n                    }\n                    case 0xc81eb797 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let cleaned_3 := and(sload(/** @src 85:8138:8155  \"_governancePauser\" */ 0x01), /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1))\n                        let memPos_21 := mload(64)\n                        mstore(memPos_21, cleaned_3)\n                        return(memPos_21, 32)\n                    }\n                    case 0xd547741f {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(_2, _2) }\n                        let value_12 := calldataload(4)\n                        let value1_4 := abi_decode_t_address()\n                        /// @src 20:3283:3287  \"role\"\n                        fun_checkRole(/** @src 20:5785:5803  \"getRoleAdmin(role)\" */ fun_getRoleAdmin(value_12))\n                        /// @src 20:5815:5841  \"_revokeRole(role, account)\"\n                        pop(fun_revokeRole(value_12, value1_4))\n                        /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                        return(_2, _2)\n                    }\n                    case 0xe63ab1e9 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let memPos_22 := mload(64)\n                        mstore(memPos_22, /** @src 85:5528:5532  \"0x01\" */ 0x01)\n                        /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                        return(memPos_22, 32)\n                    }\n                    case 0xf6cdd9cc {\n                        if slt(add(calldatasize(), not(3)), 256) { revert(_2, _2) }\n                        let value0_6 := abi_decode_address()\n                        let value_13 := calldataload(36)\n                        let value_14 := calldataload(132)\n                        let _47 := and(value_14, 0xff)\n                        if iszero(eq(value_14, _47)) { revert(_2, _2) }\n                        let value_15 := /** @src -1:-1:-1 */ _2\n                        /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                        value_15 := calldataload(228)\n                        let _48 := and(value_15, sub(shl(160, 1), 1))\n                        if iszero(eq(value_15, _48)) { revert(_2, _2) }\n                        /// @src 25:1944:2016  \"modifier whenNotPaused() {...\"\n                        fun_requireNotPaused()\n                        /// @src 85:16410:16516  \"if (!_bridgingPayments.contains(bridgingPayment)) {...\"\n                        if /** @src 85:16414:16458  \"!_bridgingPayments.contains(bridgingPayment)\" */ iszero(/** @src 71:12473:12528  \"_contains(set._inner, bytes32(uint256(uint160(value))))\" */ fun__contains(/** @src 71:12495:12527  \"bytes32(uint256(uint160(value)))\" */ _48))\n                        /// @src 85:16410:16516  \"if (!_bridgingPayments.contains(bridgingPayment)) {...\"\n                        {\n                            /// @src 85:16481:16505  \"InvalidBridgingPayment()\"\n                            mstore(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2, /** @src 85:15347:15371  \"InvalidBridgingPayment()\" */ shl(227, 0x1e37e195))\n                            /// @src 85:16481:16505  \"InvalidBridgingPayment()\"\n                            revert(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2, 4)\n                        }\n                        /// @src 85:16526:16586  \"IBridgingPayment(bridgingPayment).payFee{value: msg.value}()\"\n                        if iszero(extcodesize(_48))\n                        {\n                            /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                            revert(_2, _2)\n                        }\n                        /// @src 85:16526:16586  \"IBridgingPayment(bridgingPayment).payFee{value: msg.value}()\"\n                        let _49 := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ mload(64)\n                        /// @src 85:16526:16586  \"IBridgingPayment(bridgingPayment).payFee{value: msg.value}()\"\n                        mstore(_49, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ shl(225, 0x14b08129))\n                        /// @src 85:16526:16586  \"IBridgingPayment(bridgingPayment).payFee{value: msg.value}()\"\n                        let _50 := call(gas(), _48, /** @src 85:16574:16583  \"msg.value\" */ callvalue(), /** @src 85:16526:16586  \"IBridgingPayment(bridgingPayment).payFee{value: msg.value}()\" */ _49, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 4, /** @src 85:16526:16586  \"IBridgingPayment(bridgingPayment).payFee{value: msg.value}()\" */ _49, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2)\n                        /// @src 85:16526:16586  \"IBridgingPayment(bridgingPayment).payFee{value: msg.value}()\"\n                        if iszero(_50)\n                        {\n                            /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                            let pos_8 := mload(64)\n                            returndatacopy(pos_8, _2, returndatasize())\n                            revert(pos_8, returndatasize())\n                        }\n                        /// @src 85:16526:16586  \"IBridgingPayment(bridgingPayment).payFee{value: msg.value}()\"\n                        if _50\n                        {\n                            finalize_allocation(_49, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2)\n                            if _2 { revert(_2, _2) }\n                        }\n                        let _51 := and(/** @src 85:16600:16619  \"IERC20Permit(token)\" */ value0_6, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1))\n                        /// @src 85:16600:16680  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\"\n                        if iszero(extcodesize(_51))\n                        {\n                            /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                            revert(_2, _2)\n                        }\n                        /// @src 85:16600:16680  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\"\n                        let _52 := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ mload(64)\n                        /// @src 85:16600:16680  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\"\n                        mstore(_52, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ shl(224, 0xd505accf))\n                        mstore(/** @src 85:16600:16680  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\" */ add(_52, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 4), /** @src 85:16627:16637  \"msg.sender\" */ caller())\n                        /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                        mstore(add(/** @src 85:16600:16680  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\" */ _52, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 36), /** @src 85:16647:16651  \"this\" */ address())\n                        /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                        mstore(add(/** @src 85:16600:16680  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\" */ _52, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 68), value_13)\n                        mstore(add(/** @src 85:16600:16680  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\" */ _52, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 100), calldataload(100))\n                        mstore(add(/** @src 85:16600:16680  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\" */ _52, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 132), _47)\n                        mstore(add(/** @src 85:16600:16680  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\" */ _52, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 164), calldataload(164))\n                        mstore(add(/** @src 85:16600:16680  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\" */ _52, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 196), calldataload(196))\n                        /// @src 85:16600:16680  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\"\n                        if call(gas(), _51, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2, /** @src 85:16600:16680  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\" */ _52, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 228, /** @src 85:16600:16680  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\" */ _52, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2)\n                        /// @src 85:16600:16680  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\"\n                        {\n                            finalize_allocation(_52, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2)\n                            if _2 { revert(_2, _2) }\n                        }\n                        /// @src 25:1944:2016  \"modifier whenNotPaused() {...\"\n                        fun_requireNotPaused()\n                        /// @src 85:14276:14340  \"if (amount == 0) {...\"\n                        if /** @src 85:14280:14291  \"amount == 0\" */ iszero(value_13)\n                        /// @src 85:14276:14340  \"if (amount == 0) {...\"\n                        {\n                            /// @src 85:14314:14329  \"InvalidAmount()\"\n                            mstore(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2, /** @src 85:14314:14329  \"InvalidAmount()\" */ shl(225, 0x162908e3))\n                            revert(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2, 4)\n                        }\n                        /// @src 85:14376:14397  \"_tokens.tryGet(token)\"\n                        let expr_component_7, expr_component_8 := fun_tryGet_20842(value0_6)\n                        /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                        let _53 := iszero(lt(expr_component_8, 3))\n                        if _53\n                        {\n                            mstore(_2, shl(224, 0x4e487b71))\n                            mstore(4, 0x21)\n                            revert(_2, 36)\n                        }\n                        /// @src 85:14408:14741  \"if (tokenType == TokenType.Unknown) {...\"\n                        switch /** @src 85:14412:14442  \"tokenType == TokenType.Unknown\" */ iszero(expr_component_8)\n                        case /** @src 85:14408:14741  \"if (tokenType == TokenType.Unknown) {...\" */ 0 {\n                            /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                            _53 := /** @src -1:-1:-1 */ _2\n                            /// @src 85:14500:14741  \"if (tokenType == TokenType.Ethereum) {...\"\n                            switch /** @src 85:14504:14535  \"tokenType == TokenType.Ethereum\" */ eq(expr_component_8, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 1)\n                            case /** @src 85:14500:14741  \"if (tokenType == TokenType.Ethereum) {...\" */ 0 {\n                                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                                _53 := /** @src -1:-1:-1 */ _2\n                                /// @src 85:14633:14741  \"if (tokenType == TokenType.Gear) {...\"\n                                if /** @src 85:14637:14664  \"tokenType == TokenType.Gear\" */ eq(expr_component_8, /** @src 85:14650:14664  \"TokenType.Gear\" */ 2)\n                                /// @src 85:14633:14741  \"if (tokenType == TokenType.Gear) {...\"\n                                {\n                                    /// @src 85:14680:14730  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    if iszero(extcodesize(_51))\n                                    {\n                                        /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                                        revert(_2, _2)\n                                    }\n                                    /// @src 85:14680:14730  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    let _54 := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ mload(64)\n                                    /// @src 85:14680:14730  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    mstore(_54, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ shl(228, 0x079cc679))\n                                    /// @src 85:14680:14730  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    let _55 := call(gas(), _51, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2, /** @src 85:14680:14730  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\" */ _54, sub(abi_encode_address_uint256(add(_54, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 4), /** @src 85:16627:16637  \"msg.sender\" */ caller(), /** @src 85:14680:14730  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\" */ value_13), _54), _54, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2)\n                                    /// @src 85:14680:14730  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    if iszero(_55)\n                                    {\n                                        /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                                        let pos_9 := mload(64)\n                                        returndatacopy(pos_9, _2, returndatasize())\n                                        revert(pos_9, returndatasize())\n                                    }\n                                    /// @src 85:14680:14730  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    if _55\n                                    {\n                                        finalize_allocation(_54, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2)\n                                        if _2 { revert(_2, _2) }\n                                    }\n                                }\n                            }\n                            default /// @src 85:14500:14741  \"if (tokenType == TokenType.Ethereum) {...\"\n                            {\n                                /// @src 50:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                                let expr_mpos_2 := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ mload(64)\n                                /// @src 50:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                                mstore(add(expr_mpos_2, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 32), shl(224, 0x23b872dd))\n                                mstore(/** @src 50:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\" */ add(expr_mpos_2, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 36), /** @src 85:16627:16637  \"msg.sender\" */ caller())\n                                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                                mstore(add(/** @src 50:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\" */ expr_mpos_2, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 68), /** @src 85:16647:16651  \"this\" */ address())\n                                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                                mstore(add(/** @src 50:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\" */ expr_mpos_2, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 100), value_13)\n                                /// @src 50:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                                mstore(expr_mpos_2, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 100)\n                                /// @src 50:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                                finalize_allocation(expr_mpos_2, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 132)\n                                /// @src 50:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                                fun_callOptionalReturn(_51, expr_mpos_2)\n                            }\n                        }\n                        default /// @src 85:14408:14741  \"if (tokenType == TokenType.Unknown) {...\"\n                        {\n                            /// @src 85:14465:14483  \"InvalidTokenType()\"\n                            mstore(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2, /** @src 85:14465:14483  \"InvalidTokenType()\" */ shl(224, 0xa1e9dd9d))\n                            revert(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2, 4)\n                        }\n                        /// @src 85:14756:14804  \"BridgingRequested(msg.sender, to, token, amount)\"\n                        let _56 := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ mload(64)\n                        mstore(_56, value_13)\n                        /// @src 85:14756:14804  \"BridgingRequested(msg.sender, to, token, amount)\"\n                        log4(_56, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 32, /** @src 85:14756:14804  \"BridgingRequested(msg.sender, to, token, amount)\" */ 0xf80de57fd7626baaff7d867494866703686569822c2326ae60b2515ede953c3a, /** @src 85:16627:16637  \"msg.sender\" */ caller(), /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ calldataload(68), /** @src 85:14756:14804  \"BridgingRequested(msg.sender, to, token, amount)\" */ _51)\n                        /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                        return(_2, _2)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_t_address() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_encode_array_address_dyn(headStart, value0) -> tail\n            {\n                let tail_1 := add(headStart, 32)\n                mstore(headStart, 32)\n                let pos := tail_1\n                let length := mload(value0)\n                mstore(tail_1, length)\n                pos := add(headStart, 64)\n                let srcPtr := add(value0, 32)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n                    pos := add(pos, 32)\n                    srcPtr := add(srcPtr, 32)\n                }\n                tail := pos\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function array_allocation_size_bytes(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                size := add(and(add(length, 31), not(31)), 0x20)\n            }\n            function array_allocation_size_array_struct_TokenInfo_dyn(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                size := add(shl(5, length), 0x20)\n            }\n            function abi_encode_array_bytes32_dyn(headStart, value0) -> tail\n            {\n                let tail_1 := add(headStart, 32)\n                mstore(headStart, 32)\n                let pos := tail_1\n                let length := mload(value0)\n                mstore(tail_1, length)\n                pos := add(headStart, 64)\n                let srcPtr := add(value0, 32)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, mload(srcPtr))\n                    pos := add(pos, 32)\n                    srcPtr := add(srcPtr, 32)\n                }\n                tail := pos\n            }\n            function abi_decode_uint256t_uint256(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                value0 := calldataload(4)\n                value1 := calldataload(36)\n            }\n            function abi_encode_string(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                mcopy(add(pos, 0x20), add(value, 0x20), length)\n                mstore(add(add(pos, length), 0x20), /** @src -1:-1:-1 */ 0)\n                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            /// @ast-id 39533 @src 20:4807:4998  \"function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {...\"\n            function fun_getRoleAdmin(var_role) -> var\n            {\n                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ var_role)\n                mstore(0x20, /** @src 20:2968:3039  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                /// @src 20:4960:4991  \"return $._roles[role].adminRole\"\n                var := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ sload(/** @src 20:4967:4991  \"$._roles[role].adminRole\" */ add(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0x40), /** @src 20:4967:4991  \"$._roles[role].adminRole\" */ 1))\n            }\n            /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n            function memory_array_index_access_struct_TokenInfo_dyn(baseRef, index) -> addr\n            {\n                if iszero(lt(index, mload(baseRef)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                addr := add(add(baseRef, shl(5, index)), 32)\n            }\n            function abi_encode_address_uint256(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                mstore(add(headStart, 32), value1)\n            }\n            /// @ast-id 40513 @src 25:2709:2837  \"function _requireNotPaused() internal view virtual {...\"\n            function fun_requireNotPaused()\n            {\n                /// @src 25:2770:2831  \"if (paused()) {...\"\n                if /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ and(sload(/** @src 25:1237:1303  \"assembly {...\" */ 92891662540554778686986514950364265630913525426840345632122912437671245656832), /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0xff)\n                /// @src 25:2770:2831  \"if (paused()) {...\"\n                {\n                    /// @src 25:2805:2820  \"EnforcedPause()\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 25:2805:2820  \"EnforcedPause()\" */ shl(224, 0xd93c0665))\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 25:2805:2820  \"EnforcedPause()\" */ 4)\n                }\n            }\n            /// @ast-id 39491 @src 20:4196:4299  \"function _checkRole(bytes32 role) internal view virtual {...\"\n            function fun__checkRole()\n            {\n                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 85:5528:5532  \"0x01\" */ 0x01)\n                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                mstore(0x20, /** @src 20:2968:3039  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0x40)\n                /// @src 20:3949:3980  \"$._roles[role].hasRole[account]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ and(/** @src 24:966:976  \"msg.sender\" */ caller(), /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 20:3949:3963  \"$._roles[role]\" */ dataSlot)\n                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0x40)\n                /// @src 20:4512:4620  \"if (!hasRole(role, account)) {...\"\n                if /** @src 20:4516:4539  \"!hasRole(role, account)\" */ iszero(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ and(sload(/** @src 20:3949:3980  \"$._roles[role].hasRole[account]\" */ dataSlot_1), /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0xff))\n                /// @src 20:4512:4620  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 20:4562:4609  \"AccessControlUnauthorizedAccount(account, role)\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 20:4562:4609  \"AccessControlUnauthorizedAccount(account, role)\" */ shl(224, 0xe2517d3f))\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    mstore(/** @src 20:4562:4609  \"AccessControlUnauthorizedAccount(account, role)\" */ 4, /** @src 24:966:976  \"msg.sender\" */ caller())\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    mstore(36, /** @src 85:5528:5532  \"0x01\" */ 0x01)\n                    /// @src 20:4562:4609  \"AccessControlUnauthorizedAccount(account, role)\"\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 68)\n                }\n            }\n            /// @ast-id 39491 @src 20:4196:4299  \"function _checkRole(bytes32 role) internal view virtual {...\"\n            function fun_checkRole(var_role)\n            {\n                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ var_role)\n                mstore(0x20, /** @src 20:2968:3039  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0x40)\n                /// @src 20:3949:3980  \"$._roles[role].hasRole[account]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ and(/** @src 24:966:976  \"msg.sender\" */ caller(), /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 20:3949:3963  \"$._roles[role]\" */ dataSlot)\n                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0x40)\n                /// @src 20:4512:4620  \"if (!hasRole(role, account)) {...\"\n                if /** @src 20:4516:4539  \"!hasRole(role, account)\" */ iszero(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ and(sload(/** @src 20:3949:3980  \"$._roles[role].hasRole[account]\" */ dataSlot_1), /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0xff))\n                /// @src 20:4512:4620  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 20:4562:4609  \"AccessControlUnauthorizedAccount(account, role)\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 20:4562:4609  \"AccessControlUnauthorizedAccount(account, role)\" */ shl(224, 0xe2517d3f))\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    mstore(/** @src 20:4562:4609  \"AccessControlUnauthorizedAccount(account, role)\" */ 4, /** @src 24:966:976  \"msg.sender\" */ caller())\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    mstore(36, var_role)\n                    /// @src 20:4562:4609  \"AccessControlUnauthorizedAccount(account, role)\"\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 68)\n                }\n            }\n            /// @ast-id 39677 @src 20:7318:7705  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n            function fun_grantRole(var_account) -> var\n            {\n                /// @src 20:7395:7399  \"bool\"\n                var := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0\n                mstore(0, 0)\n                mstore(0x20, /** @src 20:2968:3039  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                let dataSlot := keccak256(0, 0x40)\n                /// @src 20:3949:3980  \"$._roles[role].hasRole[account]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ and(/** @src 20:7485:7507  \"hasRole(role, account)\" */ var_account, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 20:3949:3963  \"$._roles[role]\" */ dataSlot)\n                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0x40)\n                /// @src 20:7480:7699  \"if (!hasRole(role, account)) {...\"\n                switch /** @src 20:7484:7507  \"!hasRole(role, account)\" */ iszero(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ and(sload(/** @src 20:3949:3980  \"$._roles[role].hasRole[account]\" */ dataSlot_1), /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0xff))\n                case /** @src 20:7480:7699  \"if (!hasRole(role, account)) {...\" */ 0 {\n                    /// @src 20:7676:7688  \"return false\"\n                    var := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0\n                    /// @src 20:7676:7688  \"return false\"\n                    leave\n                }\n                default /// @src 20:7480:7699  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    mstore(0, 0)\n                    mstore(0x20, /** @src 20:2968:3039  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    let dataSlot_2 := keccak256(0, 0x40)\n                    /// @src 20:7523:7554  \"$._roles[role].hasRole[account]\"\n                    let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ and(/** @src 20:7523:7554  \"$._roles[role].hasRole[account]\" */ var_account, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)))\n                    mstore(0x20, /** @src 20:7523:7537  \"$._roles[role]\" */ dataSlot_2)\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0x40)\n                    sstore(/** @src 20:7523:7554  \"$._roles[role].hasRole[account]\" */ dataSlot_3, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ or(and(sload(/** @src 20:7523:7554  \"$._roles[role].hasRole[account]\" */ dataSlot_3), /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ not(255)), /** @src 20:7557:7561  \"true\" */ 0x01))\n                    /// @src 20:7580:7620  \"RoleGranted(role, account, _msgSender())\"\n                    log4(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0, 0, /** @src 20:7580:7620  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0, and(/** @src 20:7580:7620  \"RoleGranted(role, account, _msgSender())\" */ var_account, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)), /** @src 24:966:976  \"msg.sender\" */ caller())\n                    /// @src 20:7634:7645  \"return true\"\n                    var := /** @src 20:7557:7561  \"true\" */ 0x01\n                    /// @src 20:7634:7645  \"return true\"\n                    leave\n                }\n            }\n            /// @ast-id 39677 @src 20:7318:7705  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n            function fun__grantRole(var_account) -> var\n            {\n                /// @src 20:7395:7399  \"bool\"\n                var := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0\n                mstore(0, /** @src 22:4803:4804  \"1\" */ 0x01)\n                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                mstore(0x20, /** @src 20:2968:3039  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                let dataSlot := keccak256(0, 0x40)\n                /// @src 20:3949:3980  \"$._roles[role].hasRole[account]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ and(/** @src 20:7485:7507  \"hasRole(role, account)\" */ var_account, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 20:3949:3963  \"$._roles[role]\" */ dataSlot)\n                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0x40)\n                /// @src 20:7480:7699  \"if (!hasRole(role, account)) {...\"\n                switch /** @src 20:7484:7507  \"!hasRole(role, account)\" */ iszero(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ and(sload(/** @src 20:3949:3980  \"$._roles[role].hasRole[account]\" */ dataSlot_1), /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0xff))\n                case /** @src 20:7480:7699  \"if (!hasRole(role, account)) {...\" */ 0 {\n                    /// @src 20:7676:7688  \"return false\"\n                    var := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0\n                    /// @src 20:7676:7688  \"return false\"\n                    leave\n                }\n                default /// @src 20:7480:7699  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    mstore(0, /** @src 22:4803:4804  \"1\" */ 0x01)\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    mstore(0x20, /** @src 20:2968:3039  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    let dataSlot_2 := keccak256(0, 0x40)\n                    /// @src 20:7523:7554  \"$._roles[role].hasRole[account]\"\n                    let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ and(/** @src 20:7523:7554  \"$._roles[role].hasRole[account]\" */ var_account, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)))\n                    mstore(0x20, /** @src 20:7523:7537  \"$._roles[role]\" */ dataSlot_2)\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0x40)\n                    sstore(/** @src 20:7523:7554  \"$._roles[role].hasRole[account]\" */ dataSlot_3, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ or(and(sload(/** @src 20:7523:7554  \"$._roles[role].hasRole[account]\" */ dataSlot_3), /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ not(255)), /** @src 22:4803:4804  \"1\" */ 0x01))\n                    /// @src 20:7580:7620  \"RoleGranted(role, account, _msgSender())\"\n                    log4(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0, 0, /** @src 20:7580:7620  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, /** @src 22:4803:4804  \"1\" */ 0x01, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ and(/** @src 20:7580:7620  \"RoleGranted(role, account, _msgSender())\" */ var_account, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)), /** @src 24:966:976  \"msg.sender\" */ caller())\n                    /// @src 20:7634:7645  \"return true\"\n                    var := /** @src 22:4803:4804  \"1\" */ 0x01\n                    /// @src 20:7634:7645  \"return true\"\n                    leave\n                }\n            }\n            /// @ast-id 39677 @src 20:7318:7705  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n            function fun_grantRole_39677(var_role, var_account) -> var\n            {\n                /// @src 20:7395:7399  \"bool\"\n                var := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0\n                mstore(0, var_role)\n                mstore(0x20, /** @src 20:2968:3039  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                let dataSlot := keccak256(0, 0x40)\n                /// @src 20:3949:3980  \"$._roles[role].hasRole[account]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ and(/** @src 20:7485:7507  \"hasRole(role, account)\" */ var_account, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 20:3949:3963  \"$._roles[role]\" */ dataSlot)\n                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0x40)\n                /// @src 20:7480:7699  \"if (!hasRole(role, account)) {...\"\n                switch /** @src 20:7484:7507  \"!hasRole(role, account)\" */ iszero(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ and(sload(/** @src 20:3949:3980  \"$._roles[role].hasRole[account]\" */ dataSlot_1), /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0xff))\n                case /** @src 20:7480:7699  \"if (!hasRole(role, account)) {...\" */ 0 {\n                    /// @src 20:7676:7688  \"return false\"\n                    var := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0\n                    /// @src 20:7676:7688  \"return false\"\n                    leave\n                }\n                default /// @src 20:7480:7699  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    mstore(0, var_role)\n                    mstore(0x20, /** @src 20:2968:3039  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    let dataSlot_2 := keccak256(0, 0x40)\n                    /// @src 20:7523:7554  \"$._roles[role].hasRole[account]\"\n                    let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ and(/** @src 20:7523:7554  \"$._roles[role].hasRole[account]\" */ var_account, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)))\n                    mstore(0x20, /** @src 20:7523:7537  \"$._roles[role]\" */ dataSlot_2)\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0x40)\n                    sstore(/** @src 20:7523:7554  \"$._roles[role].hasRole[account]\" */ dataSlot_3, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ or(and(sload(/** @src 20:7523:7554  \"$._roles[role].hasRole[account]\" */ dataSlot_3), /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ not(255)), /** @src 20:7557:7561  \"true\" */ 0x01))\n                    /// @src 20:7580:7620  \"RoleGranted(role, account, _msgSender())\"\n                    log4(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0, 0, /** @src 20:7580:7620  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, var_role, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ and(/** @src 20:7580:7620  \"RoleGranted(role, account, _msgSender())\" */ var_account, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)), /** @src 24:966:976  \"msg.sender\" */ caller())\n                    /// @src 20:7634:7645  \"return true\"\n                    var := /** @src 20:7557:7561  \"true\" */ 0x01\n                    /// @src 20:7634:7645  \"return true\"\n                    leave\n                }\n            }\n            /// @src 85:3769:3771  \"32\"\n            function checked_add_uint256(x, y) -> sum\n            {\n                sum := add(x, y)\n                if gt(x, sum)\n                {\n                    mstore(0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ shl(224, 0x4e487b71))\n                    /// @src 85:3769:3771  \"32\"\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            /// @src 85:4884:4961  \"DISCRIMINANT_SIZE + TOKEN_NAME_SIZE + TOKEN_SYMBOL_SIZE + TOKEN_DECIMALS_SIZE\"\n            function abi_encode_address_string_string_uint8(headStart, value0, value1, value2, value3) -> tail\n            {\n                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                /// @src 85:4884:4961  \"DISCRIMINANT_SIZE + TOKEN_NAME_SIZE + TOKEN_SYMBOL_SIZE + TOKEN_DECIMALS_SIZE\"\n                mstore(add(headStart, 32), 128)\n                let tail_1 := abi_encode_string(value1, add(headStart, 128))\n                mstore(add(headStart, 64), sub(tail_1, headStart))\n                tail := abi_encode_string(value2, tail_1)\n                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                mstore(/** @src 85:4884:4961  \"DISCRIMINANT_SIZE + TOKEN_NAME_SIZE + TOKEN_SYMBOL_SIZE + TOKEN_DECIMALS_SIZE\" */ add(headStart, 96), /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ and(value3, 0xff))\n            }\n            /// @ast-id 61006 @src 85:21180:24971  \"function _tryParseAndApplyGovernanceMessage(bytes calldata payload) private returns (bool) {...\"\n            function fun_tryParseAndApplyGovernanceMessage(var_payload_offset, var_payload_60784_length) -> var\n            {\n                /// @src 85:21265:21269  \"bool\"\n                var := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0\n                /// @src 85:21281:21345  \"if (!(payload.length > 0)) {...\"\n                if /** @src 85:21287:21305  \"payload.length > 0\" */ iszero(var_payload_60784_length)\n                /// @src 85:21281:21345  \"if (!(payload.length > 0)) {...\"\n                {\n                    /// @src 85:21322:21334  \"return false\"\n                    var := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0\n                    /// @src 85:21322:21334  \"return false\"\n                    leave\n                }\n                /// @src 85:21385:21635  \"assembly (\\\"memory-safe\\\") {...\"\n                let var_discriminant := shr(248, calldataload(var_payload_offset))\n                /// @src 85:21645:21765  \"if (!(discriminant >= ADD_VFT_MANAGER && discriminant <= uint256(TokenType.Gear))) {...\"\n                if /** @src 85:21686:21725  \"discriminant <= uint256(TokenType.Gear)\" */ gt(var_discriminant, /** @src 85:21710:21724  \"TokenType.Gear\" */ 2)\n                /// @src 85:21645:21765  \"if (!(discriminant >= ADD_VFT_MANAGER && discriminant <= uint256(TokenType.Gear))) {...\"\n                {\n                    /// @src 85:21742:21754  \"return false\"\n                    var := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0\n                    /// @src 85:21742:21754  \"return false\"\n                    leave\n                }\n                /// @src 85:21775:22299  \"if (discriminant == ADD_VFT_MANAGER) {...\"\n                if /** @src 85:21779:21810  \"discriminant == ADD_VFT_MANAGER\" */ iszero(var_discriminant)\n                /// @src 85:21775:22299  \"if (discriminant == ADD_VFT_MANAGER) {...\"\n                {\n                    /// @src 85:21826:21926  \"if (!(payload.length == ADD_VFT_MANAGER_MESSAGE_SIZE)) {...\"\n                    if /** @src 85:21830:21879  \"!(payload.length == ADD_VFT_MANAGER_MESSAGE_SIZE)\" */ iszero(/** @src 85:21832:21878  \"payload.length == ADD_VFT_MANAGER_MESSAGE_SIZE\" */ eq(var_payload_60784_length, /** @src 85:3769:3771  \"32\" */ 33))\n                    /// @src 85:21826:21926  \"if (!(payload.length == ADD_VFT_MANAGER_MESSAGE_SIZE)) {...\"\n                    {\n                        /// @src 85:21899:21911  \"return false\"\n                        var := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0\n                        /// @src 85:21899:21911  \"return false\"\n                        leave\n                    }\n                    /// @src 85:22060:22173  \"assembly (\\\"memory-safe\\\") {...\"\n                    let var_vftManager := calldataload(add(var_payload_offset, /** @src 85:21651:21682  \"discriminant >= ADD_VFT_MANAGER\" */ 1))\n                    /// @src 71:7898:7921  \"_add(set._inner, value)\"\n                    pop(fun_add_20858(/** @src 85:22187:22215  \"_vftManagers.add(vftManager)\" */ var_vftManager))\n                    /// @src 85:22235:22262  \"VftManagerAdded(vftManager)\"\n                    let _1 := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ mload(64)\n                    mstore(_1, var_vftManager)\n                    /// @src 85:22235:22262  \"VftManagerAdded(vftManager)\"\n                    log1(_1, /** @src 85:3769:3771  \"32\" */ 0x20, /** @src 85:22235:22262  \"VftManagerAdded(vftManager)\" */ 0xc6b4ec1bc7a17331ef296e0810039347563e90c3fa496b4de270f6c5ff345abe)\n                    /// @src 85:22277:22288  \"return true\"\n                    var := /** @src 85:21651:21682  \"discriminant >= ADD_VFT_MANAGER\" */ 1\n                    /// @src 85:22277:22288  \"return true\"\n                    leave\n                }\n                /// @src 85:22309:23021  \"if (discriminant == uint256(TokenType.Ethereum)) {...\"\n                if /** @src 85:22313:22356  \"discriminant == uint256(TokenType.Ethereum)\" */ eq(var_discriminant, /** @src 85:21651:21682  \"discriminant >= ADD_VFT_MANAGER\" */ 1)\n                /// @src 85:22309:23021  \"if (discriminant == uint256(TokenType.Ethereum)) {...\"\n                {\n                    /// @src 85:22372:22480  \"if (!(payload.length == REGISTER_ETHEREUM_TOKEN_MESSAGE_SIZE)) {...\"\n                    if /** @src 85:22376:22433  \"!(payload.length == REGISTER_ETHEREUM_TOKEN_MESSAGE_SIZE)\" */ iszero(/** @src 85:22378:22432  \"payload.length == REGISTER_ETHEREUM_TOKEN_MESSAGE_SIZE\" */ eq(var_payload_60784_length, /** @src 85:3769:3771  \"32\" */ 21))\n                    /// @src 85:22372:22480  \"if (!(payload.length == REGISTER_ETHEREUM_TOKEN_MESSAGE_SIZE)) {...\"\n                    {\n                        /// @src 85:22453:22465  \"return false\"\n                        var := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0\n                        /// @src 85:22453:22465  \"return false\"\n                        leave\n                    }\n                    /// @src 85:22609:22882  \"assembly (\\\"memory-safe\\\") {...\"\n                    let var_token := shr(96, calldataload(add(var_payload_offset, /** @src 85:21651:21682  \"discriminant >= ADD_VFT_MANAGER\" */ 1)))\n                    /// @src 85:22896:22934  \"_tokens.set(token, TokenType.Ethereum)\"\n                    pop(fun_set(var_token))\n                    /// @src 85:22954:22984  \"EthereumTokenRegistered(token)\"\n                    let _2 := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ mload(64)\n                    mstore(_2, var_token)\n                    /// @src 85:22954:22984  \"EthereumTokenRegistered(token)\"\n                    log1(_2, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 32, /** @src 85:22954:22984  \"EthereumTokenRegistered(token)\" */ 0xdf6d7b91d41cb55ced11681822028e1605f72d50168b3898feb40ee04259d182)\n                    /// @src 85:22999:23010  \"return true\"\n                    var := /** @src 85:21651:21682  \"discriminant >= ADD_VFT_MANAGER\" */ 1\n                    /// @src 85:22999:23010  \"return true\"\n                    leave\n                }\n                /// @src 85:23117:23213  \"if (!(payload.length == REGISTER_GEAR_TOKEN_MESSAGE_SIZE)) {...\"\n                if /** @src 85:23121:23174  \"!(payload.length == REGISTER_GEAR_TOKEN_MESSAGE_SIZE)\" */ iszero(/** @src 85:23123:23173  \"payload.length == REGISTER_GEAR_TOKEN_MESSAGE_SIZE\" */ eq(var_payload_60784_length, /** @src 85:3769:3771  \"32\" */ 66))\n                /// @src 85:23117:23213  \"if (!(payload.length == REGISTER_GEAR_TOKEN_MESSAGE_SIZE)) {...\"\n                {\n                    /// @src 85:23190:23202  \"return false\"\n                    var := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0\n                    /// @src 85:23190:23202  \"return false\"\n                    leave\n                }\n                /// @src 85:23688:24167  \"assembly (\\\"memory-safe\\\") {...\"\n                let var_tokenName := calldataload(add(var_payload_offset, /** @src 85:21651:21682  \"discriminant >= ADD_VFT_MANAGER\" */ 1))\n                /// @src 85:23688:24167  \"assembly (\\\"memory-safe\\\") {...\"\n                let var_tokenSymbol := calldataload(add(var_payload_offset, /** @src 85:3769:3771  \"32\" */ 33))\n                /// @src 85:23688:24167  \"assembly (\\\"memory-safe\\\") {...\"\n                let var_tokenDecimals := shr(/** @src 85:21385:21635  \"assembly (\\\"memory-safe\\\") {...\" */ 248, /** @src 85:23688:24167  \"assembly (\\\"memory-safe\\\") {...\" */ calldataload(add(var_payload_offset, /** @src 85:3769:3771  \"32\" */ 65)))\n                /// @src 85:24207:24219  \"tokenName[0]\"\n                let _3 := byte(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0, /** @src 85:24207:24219  \"tokenName[0]\" */ var_tokenName)\n                /// @src 85:24236:24281  \"tokenNameLength >= 1 && tokenNameLength <= 31\"\n                let expr := /** @src 85:24236:24256  \"tokenNameLength >= 1\" */ iszero(lt(_3, /** @src 85:21651:21682  \"discriminant >= ADD_VFT_MANAGER\" */ 1))\n                /// @src 85:24236:24281  \"tokenNameLength >= 1 && tokenNameLength <= 31\"\n                if expr\n                {\n                    expr := /** @src 85:24260:24281  \"tokenNameLength <= 31\" */ iszero(gt(_3, /** @src 85:24279:24281  \"31\" */ 0x1f))\n                }\n                /// @src 85:24230:24321  \"if (!(tokenNameLength >= 1 && tokenNameLength <= 31)) {...\"\n                if /** @src 85:24234:24282  \"!(tokenNameLength >= 1 && tokenNameLength <= 31)\" */ iszero(expr)\n                /// @src 85:24230:24321  \"if (!(tokenNameLength >= 1 && tokenNameLength <= 31)) {...\"\n                {\n                    /// @src 85:24298:24310  \"return false\"\n                    var := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0\n                    /// @src 85:24298:24310  \"return false\"\n                    leave\n                }\n                /// @src 85:24363:24377  \"tokenSymbol[0]\"\n                let _4 := byte(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0, /** @src 85:24363:24377  \"tokenSymbol[0]\" */ var_tokenSymbol)\n                /// @src 85:24394:24443  \"tokenSymbolLength >= 1 && tokenSymbolLength <= 31\"\n                let expr_1 := /** @src 85:24394:24416  \"tokenSymbolLength >= 1\" */ iszero(lt(_4, /** @src 85:21651:21682  \"discriminant >= ADD_VFT_MANAGER\" */ 1))\n                /// @src 85:24394:24443  \"tokenSymbolLength >= 1 && tokenSymbolLength <= 31\"\n                if expr_1\n                {\n                    expr_1 := /** @src 85:24420:24443  \"tokenSymbolLength <= 31\" */ iszero(gt(_4, /** @src 85:24441:24443  \"31\" */ 0x1f))\n                }\n                /// @src 85:24388:24483  \"if (!(tokenSymbolLength >= 1 && tokenSymbolLength <= 31)) {...\"\n                if /** @src 85:24392:24444  \"!(tokenSymbolLength >= 1 && tokenSymbolLength <= 31)\" */ iszero(expr_1)\n                /// @src 85:24388:24483  \"if (!(tokenSymbolLength >= 1 && tokenSymbolLength <= 31)) {...\"\n                {\n                    /// @src 85:24460:24472  \"return false\"\n                    var := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0\n                    /// @src 85:24460:24472  \"return false\"\n                    leave\n                }\n                /// @src 85:24522:24552  \"LibString.unpackOne(tokenName)\"\n                let expr_mpos := fun_unpackOne(var_tokenName)\n                /// @src 85:24593:24625  \"LibString.unpackOne(tokenSymbol)\"\n                let expr_60964_mpos := fun_unpackOne(var_tokenSymbol)\n                /// @src 85:24665:24744  \"new ERC20GearSupply(address(this), tokenNameStr, tokenSymbolStr, tokenDecimals)\"\n                let _5 := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ mload(64)\n                /// @src 85:24665:24744  \"new ERC20GearSupply(address(this), tokenNameStr, tokenSymbolStr, tokenDecimals)\"\n                let _6 := datasize(\"ERC20GearSupply_62571\")\n                let _7 := add(_5, _6)\n                if or(gt(_7, 0xffffffffffffffff), lt(_7, _5))\n                {\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, /** @src 85:3769:3771  \"32\" */ 65)\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    revert(0, 0x24)\n                }\n                /// @src 85:24665:24744  \"new ERC20GearSupply(address(this), tokenNameStr, tokenSymbolStr, tokenDecimals)\"\n                datacopy(_5, dataoffset(\"ERC20GearSupply_62571\"), _6)\n                let expr_address := create(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0, /** @src 85:24665:24744  \"new ERC20GearSupply(address(this), tokenNameStr, tokenSymbolStr, tokenDecimals)\" */ _5, sub(abi_encode_address_string_string_uint8(_7, /** @src 85:24693:24697  \"this\" */ address(), /** @src 85:24665:24744  \"new ERC20GearSupply(address(this), tokenNameStr, tokenSymbolStr, tokenDecimals)\" */ expr_mpos, expr_60964_mpos, var_tokenDecimals), _5))\n                if iszero(expr_address)\n                {\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    let pos := mload(64)\n                    returndatacopy(pos, 0, returndatasize())\n                    revert(pos, returndatasize())\n                }\n                let _8 := and(/** @src 85:24777:24796  \"address(gearSupply)\" */ expr_address, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1))\n                /// @src 85:24807:24848  \"_tokens.set(tokenAddress, TokenType.Gear)\"\n                pop(fun_set_20970(_8))\n                /// @src 85:24864:24942  \"GearTokenRegistered(tokenAddress, tokenNameStr, tokenSymbolStr, tokenDecimals)\"\n                let _9 := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ mload(64)\n                /// @src 85:24864:24942  \"GearTokenRegistered(tokenAddress, tokenNameStr, tokenSymbolStr, tokenDecimals)\"\n                log1(_9, sub(abi_encode_address_string_string_uint8(_9, _8, expr_mpos, expr_60964_mpos, var_tokenDecimals), _9), 0xacef1c6c805d7395b4aeee279bc679beea84f01a1f1b08be7aef2af535bba81f)\n                /// @src 85:24953:24964  \"return true\"\n                var := /** @src 85:21651:21682  \"discriminant >= ADD_VFT_MANAGER\" */ 1\n            }\n            /// @ast-id 60781 @src 85:18697:20096  \"function _tryParseAndApplyTransferMessage(bytes calldata payload) private returns (bool) {...\"\n            function fun_tryParseAndApplyTransferMessage(var_payload_60698_offset, var_payload_length) -> var\n            {\n                /// @src 85:18780:18784  \"bool\"\n                let var_1 := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0\n                /// @src 85:18780:18784  \"bool\"\n                var := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0\n                /// @src 85:18796:18881  \"if (!(payload.length == TRANSFER_MESSAGE_SIZE)) {...\"\n                if /** @src 85:18800:18842  \"!(payload.length == TRANSFER_MESSAGE_SIZE)\" */ iszero(/** @src 85:18802:18841  \"payload.length == TRANSFER_MESSAGE_SIZE\" */ eq(var_payload_length, /** @src 85:3769:3771  \"32\" */ 104))\n                /// @src 85:18796:18881  \"if (!(payload.length == TRANSFER_MESSAGE_SIZE)) {...\"\n                {\n                    /// @src 85:18858:18870  \"return false\"\n                    var := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0\n                    /// @src 85:18858:18870  \"return false\"\n                    leave\n                }\n                /// @src 85:19063:19638  \"assembly (\\\"memory-safe\\\") {...\"\n                let var_receiver := shr(96, calldataload(add(var_payload_60698_offset, /** @src 85:3769:3771  \"32\" */ 0x20)))\n                /// @src 85:19063:19638  \"assembly (\\\"memory-safe\\\") {...\"\n                let var_token := shr(96, calldataload(add(var_payload_60698_offset, /** @src 85:3769:3771  \"32\" */ 52)))\n                /// @src 85:19063:19638  \"assembly (\\\"memory-safe\\\") {...\"\n                let var_amount := calldataload(add(var_payload_60698_offset, /** @src 85:3769:3771  \"32\" */ 72))\n                /// @src 85:19674:19695  \"_tokens.tryGet(token)\"\n                let expr_component, expr_component_1 := fun_tryGet_20842(var_token)\n                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                let _1 := iszero(lt(expr_component_1, 3))\n                if _1\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x21)\n                    revert(0, 0x24)\n                }\n                /// @src 85:19706:20012  \"if (tokenType == TokenType.Unknown) {...\"\n                switch /** @src 85:19710:19740  \"tokenType == TokenType.Unknown\" */ iszero(expr_component_1)\n                case /** @src 85:19706:20012  \"if (tokenType == TokenType.Unknown) {...\" */ 0 {\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    _1 := 0\n                    /// @src 85:19798:20012  \"if (tokenType == TokenType.Ethereum) {...\"\n                    switch /** @src 85:19802:19833  \"tokenType == TokenType.Ethereum\" */ eq(expr_component_1, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 1)\n                    case /** @src 85:19798:20012  \"if (tokenType == TokenType.Ethereum) {...\" */ 0 {\n                        /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                        _1 := 0\n                        /// @src 85:19910:20012  \"if (tokenType == TokenType.Gear) {...\"\n                        if /** @src 85:19914:19941  \"tokenType == TokenType.Gear\" */ eq(expr_component_1, /** @src 85:19927:19941  \"TokenType.Gear\" */ 2)\n                        /// @src 85:19910:20012  \"if (tokenType == TokenType.Gear) {...\"\n                        {\n                            /// @src 85:19957:20001  \"IERC20Mintable(token).mint(receiver, amount)\"\n                            if iszero(extcodesize(var_token))\n                            {\n                                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                                revert(0, 0)\n                            }\n                            /// @src 85:19957:20001  \"IERC20Mintable(token).mint(receiver, amount)\"\n                            let _2 := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ mload(64)\n                            /// @src 85:19957:20001  \"IERC20Mintable(token).mint(receiver, amount)\"\n                            mstore(_2, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ shl(224, 0x40c10f19))\n                            /// @src 85:19957:20001  \"IERC20Mintable(token).mint(receiver, amount)\"\n                            let _3 := call(gas(), var_token, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0, /** @src 85:19957:20001  \"IERC20Mintable(token).mint(receiver, amount)\" */ _2, sub(abi_encode_address_uint256(add(_2, 4), var_receiver, var_amount), _2), _2, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0)\n                            /// @src 85:19957:20001  \"IERC20Mintable(token).mint(receiver, amount)\"\n                            if iszero(_3)\n                            {\n                                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                                let pos := mload(64)\n                                returndatacopy(pos, 0, returndatasize())\n                                revert(pos, returndatasize())\n                            }\n                            /// @src 85:19957:20001  \"IERC20Mintable(token).mint(receiver, amount)\"\n                            if _3\n                            {\n                                finalize_allocation(_2, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0)\n                                var_1 := 0\n                            }\n                        }\n                    }\n                    default /// @src 85:19798:20012  \"if (tokenType == TokenType.Ethereum) {...\"\n                    {\n                        /// @src 50:1328:1371  \"abi.encodeCall(token.transfer, (to, value))\"\n                        let expr_mpos := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ mload(64)\n                        /// @src 50:1328:1371  \"abi.encodeCall(token.transfer, (to, value))\"\n                        mstore(add(expr_mpos, /** @src 85:3769:3771  \"32\" */ 0x20), /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ shl(224, 0xa9059cbb))\n                        /// @src 50:1328:1371  \"abi.encodeCall(token.transfer, (to, value))\"\n                        let _4 := sub(abi_encode_address_uint256(add(expr_mpos, 36), var_receiver, var_amount), expr_mpos)\n                        mstore(expr_mpos, add(_4, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ not(31)))\n                        /// @src 50:1328:1371  \"abi.encodeCall(token.transfer, (to, value))\"\n                        finalize_allocation(expr_mpos, _4)\n                        fun_callOptionalReturn(var_token, expr_mpos)\n                    }\n                }\n                default /// @src 85:19706:20012  \"if (tokenType == TokenType.Unknown) {...\"\n                {\n                    /// @src 85:19763:19781  \"InvalidTokenType()\"\n                    mstore(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ var_1, /** @src 85:14465:14483  \"InvalidTokenType()\" */ shl(224, 0xa1e9dd9d))\n                    /// @src 85:19763:19781  \"InvalidTokenType()\"\n                    revert(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ var_1, /** @src 85:19763:19781  \"InvalidTokenType()\" */ 4)\n                }\n                /// @src 85:20027:20067  \"Bridged(sender, receiver, token, amount)\"\n                let _5 := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ mload(64)\n                mstore(_5, var_amount)\n                /// @src 85:20027:20067  \"Bridged(sender, receiver, token, amount)\"\n                log4(_5, /** @src 85:3769:3771  \"32\" */ 0x20, /** @src 85:20027:20067  \"Bridged(sender, receiver, token, amount)\" */ 0xabdd326df16eff74bb67e4a6b3d6372ceba76796f256a7b7f8577108cf5db287, /** @src 85:19063:19638  \"assembly (\\\"memory-safe\\\") {...\" */ calldataload(var_payload_60698_offset), /** @src 85:20027:20067  \"Bridged(sender, receiver, token, amount)\" */ var_receiver, var_token)\n                /// @src 85:20078:20089  \"return true\"\n                var := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 1\n            }\n            /// @ast-id 39723 @src 20:7942:8330  \"function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n            function fun_revokeRole(var_role, var_account) -> var\n            {\n                /// @src 20:8020:8024  \"bool\"\n                var := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0\n                mstore(0, var_role)\n                mstore(0x20, /** @src 20:2968:3039  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                let dataSlot := keccak256(0, 0x40)\n                /// @src 20:3949:3980  \"$._roles[role].hasRole[account]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ and(/** @src 20:8109:8131  \"hasRole(role, account)\" */ var_account, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 20:3949:3963  \"$._roles[role]\" */ dataSlot)\n                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0x40)\n                /// @src 20:8105:8324  \"if (hasRole(role, account)) {...\"\n                switch /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ and(sload(/** @src 20:3949:3980  \"$._roles[role].hasRole[account]\" */ dataSlot_1), /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0xff)\n                case /** @src 20:8105:8324  \"if (hasRole(role, account)) {...\" */ 0 {\n                    /// @src 20:8301:8313  \"return false\"\n                    var := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0\n                    /// @src 20:8301:8313  \"return false\"\n                    leave\n                }\n                default /// @src 20:8105:8324  \"if (hasRole(role, account)) {...\"\n                {\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    mstore(0, var_role)\n                    mstore(0x20, /** @src 20:2968:3039  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    let dataSlot_2 := keccak256(0, 0x40)\n                    /// @src 20:8147:8178  \"$._roles[role].hasRole[account]\"\n                    let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ and(/** @src 20:8147:8178  \"$._roles[role].hasRole[account]\" */ var_account, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)))\n                    mstore(0x20, /** @src 20:8147:8161  \"$._roles[role]\" */ dataSlot_2)\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0x40)\n                    sstore(/** @src 20:8147:8178  \"$._roles[role].hasRole[account]\" */ dataSlot_3, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ and(sload(/** @src 20:8147:8178  \"$._roles[role].hasRole[account]\" */ dataSlot_3), /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ not(255)))\n                    /// @src 20:8205:8245  \"RoleRevoked(role, account, _msgSender())\"\n                    log4(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0, 0, /** @src 20:8205:8245  \"RoleRevoked(role, account, _msgSender())\" */ 0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b, var_role, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ and(/** @src 20:8205:8245  \"RoleRevoked(role, account, _msgSender())\" */ var_account, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)), /** @src 24:966:976  \"msg.sender\" */ caller())\n                    /// @src 20:8259:8270  \"return true\"\n                    var := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 1\n                    /// @src 20:8259:8270  \"return true\"\n                    leave\n                }\n            }\n            /// @ast-id 63892 @src 109:771:1017  \"function set(AddressToTokenTypeMap storage map, address key, IERC20Manager.TokenType value)...\"\n            function fun_set_20859(var_key, var_value) -> var\n            {\n                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                let _1 := and(/** @src 109:970:982  \"uint160(key)\" */ var_key, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1))\n                if iszero(lt(var_value, 3))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x21)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _1)\n                mstore(0x20, /** @src 70:3096:3107  \"map._values\" */ 7)\n                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                sstore(keccak256(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0x40), var_value)\n                /// @src 109:917:1010  \"return EnumerableMap.set(map._inner, bytes32(uint256(uint160(key))), bytes32(uint256(value)))\"\n                var := /** @src 71:7898:7921  \"_add(set._inner, value)\" */ fun_add(/** @src 85:7612:7619  \"_tokens\" */ 0x05, /** @src 70:3137:3155  \"map._keys.add(key)\" */ _1)\n            }\n            /// @ast-id 63892 @src 109:771:1017  \"function set(AddressToTokenTypeMap storage map, address key, IERC20Manager.TokenType value)...\"\n            function fun_set(var_key) -> var\n            {\n                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                let _1 := and(/** @src 109:970:982  \"uint160(key)\" */ var_key, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1))\n                let cleaned := /** @src -1:-1:-1 */ 0\n                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                cleaned := /** @src -1:-1:-1 */ 0\n                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _1)\n                mstore(0x20, /** @src 70:3096:3107  \"map._values\" */ 7)\n                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                sstore(keccak256(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0x40), /** @src 85:22337:22355  \"TokenType.Ethereum\" */ 1)\n                /// @src 109:917:1010  \"return EnumerableMap.set(map._inner, bytes32(uint256(uint160(key))), bytes32(uint256(value)))\"\n                var := /** @src 71:7898:7921  \"_add(set._inner, value)\" */ fun_add(/** @src 85:22896:22903  \"_tokens\" */ 0x05, /** @src 70:3137:3155  \"map._keys.add(key)\" */ _1)\n            }\n            /// @ast-id 63892 @src 109:771:1017  \"function set(AddressToTokenTypeMap storage map, address key, IERC20Manager.TokenType value)...\"\n            function fun_set_20970(var_key) -> var\n            {\n                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                let _1 := and(/** @src 109:970:982  \"uint160(key)\" */ var_key, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1))\n                let cleaned := /** @src -1:-1:-1 */ 0\n                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                cleaned := /** @src -1:-1:-1 */ 0\n                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _1)\n                mstore(0x20, /** @src 70:3096:3107  \"map._values\" */ 7)\n                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                sstore(keccak256(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0x40), /** @src 85:24833:24847  \"TokenType.Gear\" */ 2)\n                /// @src 109:917:1010  \"return EnumerableMap.set(map._inner, bytes32(uint256(uint160(key))), bytes32(uint256(value)))\"\n                var := /** @src 71:7898:7921  \"_add(set._inner, value)\" */ fun_add(/** @src 85:24807:24814  \"_tokens\" */ 0x05, /** @src 70:3137:3155  \"map._keys.add(key)\" */ _1)\n            }\n            /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n            function allocate_and_zero_memory_array_array_bytes32_dyn(length) -> memPtr\n            {\n                let _1 := array_allocation_size_array_struct_TokenInfo_dyn(length)\n                let memPtr_1 := mload(64)\n                finalize_allocation(memPtr_1, _1)\n                mstore(memPtr_1, length)\n                memPtr := memPtr_1\n                calldatacopy(add(memPtr_1, 32), calldatasize(), add(array_allocation_size_array_struct_TokenInfo_dyn(length), not(31)))\n            }\n            /// @ast-id 60375 @src 85:12721:13343  \"function paginate(EnumerableSet.Bytes32Set storage bytes32Set, uint256 offset, uint256 limit)...\"\n            function fun_paginate_20862(var_offset, var_limit) -> var_mpos\n            {\n                /// @src 85:12861:12877  \"bytes32[] memory\"\n                var_mpos := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 96\n                let length := sload(/** @src 85:11778:11868  \"assembly (\\\"memory-safe\\\") {...\" */ 8)\n                /// @src 85:12940:13010  \"if (offset >= length) {...\"\n                if /** @src 85:12944:12960  \"offset >= length\" */ iszero(lt(var_offset, length))\n                /// @src 85:12940:13010  \"if (offset >= length) {...\"\n                {\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    let size := /** @src -1:-1:-1 */ 0\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    let length_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    length_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    size := 0x20\n                    let memPtr := mload(64)\n                    finalize_allocation(memPtr, 0x20)\n                    mstore(memPtr, /** @src -1:-1:-1 */ 0)\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    let size_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    let length_2 := /** @src -1:-1:-1 */ 0\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    length_2 := /** @src -1:-1:-1 */ 0\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    size_1 := 0x20\n                    calldatacopy(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ calldatasize(), /** @src -1:-1:-1 */ 0)\n                    /// @src 85:12976:12999  \"return new bytes32[](0)\"\n                    var_mpos := memPtr\n                    leave\n                }\n                /// @src 85:13020:13048  \"uint256 end = offset + limit\"\n                let var_end := /** @src 85:13034:13048  \"offset + limit\" */ checked_add_uint256(var_offset, var_limit)\n                /// @src 85:13058:13113  \"if (end > length) {...\"\n                if /** @src 85:13062:13074  \"end > length\" */ gt(var_end, length)\n                /// @src 85:13058:13113  \"if (end > length) {...\"\n                {\n                    /// @src 85:13090:13102  \"end = length\"\n                    var_end := length\n                }\n                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                let diff := sub(var_end, var_offset)\n                if gt(diff, var_end)\n                {\n                    /// @src 85:3769:3771  \"32\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ shl(224, 0x4e487b71))\n                    /// @src 85:3769:3771  \"32\"\n                    mstore(4, 0x11)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 85:3769:3771  \"32\" */ 0x24)\n                }\n                /// @src 85:13186:13205  \"new bytes32[](size)\"\n                let expr_mpos := allocate_and_zero_memory_array_array_bytes32_dyn(diff)\n                /// @src 85:13221:13234  \"uint256 i = 0\"\n                let var_i := /** @src -1:-1:-1 */ 0\n                /// @src 85:13216:13313  \"for (uint256 i = 0; i < size; i++) {...\"\n                for { }\n                /** @src 85:13236:13244  \"i < size\" */ lt(var_i, diff)\n                /// @src 85:13221:13234  \"uint256 i = 0\"\n                {\n                    /// @src 85:13246:13249  \"i++\"\n                    var_i := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ add(/** @src 85:13246:13249  \"i++\" */ var_i, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 1)\n                }\n                /// @src 85:13246:13249  \"i++\"\n                {\n                    /// @src 71:5853:5871  \"set._values[index]\"\n                    let _1, _2 := storage_array_index_access_bytes32_dyn__ptr(/** @src 85:11778:11868  \"assembly (\\\"memory-safe\\\") {...\" */ 8, /** @src 85:13291:13301  \"offset + i\" */ checked_add_uint256(var_offset, var_i))\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    mstore(/** @src 85:13265:13302  \"result[i] = bytes32Set.at(offset + i)\" */ memory_array_index_access_struct_TokenInfo_dyn(expr_mpos, var_i), /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ shr(shl(3, _2), sload(/** @src 71:5853:5871  \"set._values[index]\" */ _1)))\n                }\n                /// @src 85:13323:13336  \"return result\"\n                var_mpos := expr_mpos\n            }\n            /// @ast-id 60375 @src 85:12721:13343  \"function paginate(EnumerableSet.Bytes32Set storage bytes32Set, uint256 offset, uint256 limit)...\"\n            function fun_paginate_20864(var_offset, var_limit) -> var__mpos\n            {\n                /// @src 85:12861:12877  \"bytes32[] memory\"\n                var__mpos := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 96\n                let length := sload(/** @src 85:10325:10332  \"_tokens\" */ 0x05)\n                /// @src 85:12940:13010  \"if (offset >= length) {...\"\n                if /** @src 85:12944:12960  \"offset >= length\" */ iszero(lt(var_offset, length))\n                /// @src 85:12940:13010  \"if (offset >= length) {...\"\n                {\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    let size := /** @src -1:-1:-1 */ 0\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    let length_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    length_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    size := 0x20\n                    let memPtr := mload(64)\n                    finalize_allocation(memPtr, 0x20)\n                    mstore(memPtr, /** @src -1:-1:-1 */ 0)\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    let size_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    let length_2 := /** @src -1:-1:-1 */ 0\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    length_2 := /** @src -1:-1:-1 */ 0\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    size_1 := 0x20\n                    calldatacopy(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ calldatasize(), /** @src -1:-1:-1 */ 0)\n                    /// @src 85:12976:12999  \"return new bytes32[](0)\"\n                    var__mpos := memPtr\n                    leave\n                }\n                /// @src 85:13020:13048  \"uint256 end = offset + limit\"\n                let var_end := /** @src 85:13034:13048  \"offset + limit\" */ checked_add_uint256(var_offset, var_limit)\n                /// @src 85:13058:13113  \"if (end > length) {...\"\n                if /** @src 85:13062:13074  \"end > length\" */ gt(var_end, length)\n                /// @src 85:13058:13113  \"if (end > length) {...\"\n                {\n                    /// @src 85:13090:13102  \"end = length\"\n                    var_end := length\n                }\n                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                let diff := sub(var_end, var_offset)\n                if gt(diff, var_end)\n                {\n                    /// @src 85:3769:3771  \"32\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ shl(224, 0x4e487b71))\n                    /// @src 85:3769:3771  \"32\"\n                    mstore(4, 0x11)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 85:3769:3771  \"32\" */ 0x24)\n                }\n                /// @src 85:13186:13205  \"new bytes32[](size)\"\n                let expr_mpos := allocate_and_zero_memory_array_array_bytes32_dyn(diff)\n                /// @src 85:13221:13234  \"uint256 i = 0\"\n                let var_i := /** @src -1:-1:-1 */ 0\n                /// @src 85:13216:13313  \"for (uint256 i = 0; i < size; i++) {...\"\n                for { }\n                /** @src 85:13236:13244  \"i < size\" */ lt(var_i, diff)\n                /// @src 85:13221:13234  \"uint256 i = 0\"\n                {\n                    /// @src 85:13246:13249  \"i++\"\n                    var_i := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ add(/** @src 85:13246:13249  \"i++\" */ var_i, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 1)\n                }\n                /// @src 85:13246:13249  \"i++\"\n                {\n                    /// @src 71:5853:5871  \"set._values[index]\"\n                    let _1, _2 := storage_array_index_access_bytes32_dyn__ptr(/** @src 85:10325:10332  \"_tokens\" */ 0x05, /** @src 85:13291:13301  \"offset + i\" */ checked_add_uint256(var_offset, var_i))\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    mstore(/** @src 85:13265:13302  \"result[i] = bytes32Set.at(offset + i)\" */ memory_array_index_access_struct_TokenInfo_dyn(expr_mpos, var_i), /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ shr(shl(3, _2), sload(/** @src 71:5853:5871  \"set._values[index]\" */ _1)))\n                }\n                /// @src 85:13323:13336  \"return result\"\n                var__mpos := expr_mpos\n            }\n            /// @ast-id 60375 @src 85:12721:13343  \"function paginate(EnumerableSet.Bytes32Set storage bytes32Set, uint256 offset, uint256 limit)...\"\n            function fun_paginate(var_offset, var_limit) -> var_mpos\n            {\n                /// @src 85:12861:12877  \"bytes32[] memory\"\n                var_mpos := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 96\n                let length := sload(/** @src 85:9200:9212  \"_vftManagers\" */ 0x03)\n                /// @src 85:12940:13010  \"if (offset >= length) {...\"\n                if /** @src 85:12944:12960  \"offset >= length\" */ iszero(lt(var_offset, length))\n                /// @src 85:12940:13010  \"if (offset >= length) {...\"\n                {\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    let size := /** @src -1:-1:-1 */ 0\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    let length_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    length_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    size := 0x20\n                    let memPtr := mload(64)\n                    finalize_allocation(memPtr, 0x20)\n                    mstore(memPtr, /** @src -1:-1:-1 */ 0)\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    let size_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    let length_2 := /** @src -1:-1:-1 */ 0\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    length_2 := /** @src -1:-1:-1 */ 0\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    size_1 := 0x20\n                    calldatacopy(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ calldatasize(), /** @src -1:-1:-1 */ 0)\n                    /// @src 85:12976:12999  \"return new bytes32[](0)\"\n                    var_mpos := memPtr\n                    leave\n                }\n                /// @src 85:13020:13048  \"uint256 end = offset + limit\"\n                let var_end := /** @src 85:13034:13048  \"offset + limit\" */ checked_add_uint256(var_offset, var_limit)\n                /// @src 85:13058:13113  \"if (end > length) {...\"\n                if /** @src 85:13062:13074  \"end > length\" */ gt(var_end, length)\n                /// @src 85:13058:13113  \"if (end > length) {...\"\n                {\n                    /// @src 85:13090:13102  \"end = length\"\n                    var_end := length\n                }\n                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                let diff := sub(var_end, var_offset)\n                if gt(diff, var_end)\n                {\n                    /// @src 85:3769:3771  \"32\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ shl(224, 0x4e487b71))\n                    /// @src 85:3769:3771  \"32\"\n                    mstore(4, 0x11)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 85:3769:3771  \"32\" */ 0x24)\n                }\n                /// @src 85:13186:13205  \"new bytes32[](size)\"\n                let expr_mpos := allocate_and_zero_memory_array_array_bytes32_dyn(diff)\n                /// @src 85:13221:13234  \"uint256 i = 0\"\n                let var_i := /** @src -1:-1:-1 */ 0\n                /// @src 85:13216:13313  \"for (uint256 i = 0; i < size; i++) {...\"\n                for { }\n                /** @src 85:13236:13244  \"i < size\" */ lt(var_i, diff)\n                /// @src 85:13221:13234  \"uint256 i = 0\"\n                {\n                    /// @src 85:13246:13249  \"i++\"\n                    var_i := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ add(/** @src 85:13246:13249  \"i++\" */ var_i, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 1)\n                }\n                /// @src 85:13246:13249  \"i++\"\n                {\n                    /// @src 71:5853:5871  \"set._values[index]\"\n                    let _1, _2 := storage_array_index_access_bytes32_dyn__ptr(/** @src 85:9200:9212  \"_vftManagers\" */ 0x03, /** @src 85:13291:13301  \"offset + i\" */ checked_add_uint256(var_offset, var_i))\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    mstore(/** @src 85:13265:13302  \"result[i] = bytes32Set.at(offset + i)\" */ memory_array_index_access_struct_TokenInfo_dyn(expr_mpos, var_i), /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ shr(shl(/** @src 85:9200:9212  \"_vftManagers\" */ 0x03, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ _2), sload(/** @src 71:5853:5871  \"set._values[index]\" */ _1)))\n                }\n                /// @src 85:13323:13336  \"return result\"\n                var_mpos := expr_mpos\n            }\n            /// @ast-id 64069 @src 109:3068:3403  \"function tryGet(AddressToTokenTypeMap storage map, address key)...\"\n            function fun_tryGet_20842(var_key) -> var_exists, var_value\n            {\n                /// @src 109:3267:3331  \"EnumerableMap.tryGet(map._inner, bytes32(uint256(uint160(key))))\"\n                let expr_component, expr_component_1 := fun_tryGet(/** @src 85:14376:14383  \"_tokens\" */ 0x05, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ and(/** @src 109:3316:3328  \"uint160(key)\" */ var_key, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)))\n                if iszero(lt(expr_component_1, 3))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x21)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0x24)\n                }\n                /// @src 109:3341:3396  \"return (success, IERC20Manager.TokenType(uint256(val)))\"\n                var_exists := expr_component\n                var_value := expr_component_1\n            }\n            /// @ast-id 53681 @src 71:5101:5230  \"function _contains(Set storage set, bytes32 value) private view returns (bool) {...\"\n            function fun__contains(var_value) -> var\n            {\n                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ var_value)\n                mstore(0x20, /** @src 71:5197:5211  \"set._positions\" */ 9)\n                /// @src 71:5190:5223  \"return set._positions[value] != 0\"\n                var := /** @src 71:5197:5223  \"set._positions[value] != 0\" */ iszero(iszero(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0x40))))\n            }\n            /// @ast-id 53681 @src 71:5101:5230  \"function _contains(Set storage set, bytes32 value) private view returns (bool) {...\"\n            function fun_contains_20844(var_value) -> var\n            {\n                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ var_value)\n                mstore(0x20, /** @src 71:5197:5211  \"set._positions\" */ 4)\n                /// @src 71:5190:5223  \"return set._positions[value] != 0\"\n                var := /** @src 71:5197:5223  \"set._positions[value] != 0\" */ iszero(iszero(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0x40))))\n            }\n            /// @ast-id 53681 @src 71:5101:5230  \"function _contains(Set storage set, bytes32 value) private view returns (bool) {...\"\n            function fun_contains(var_set_53666_slot, var_value) -> var\n            {\n                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ var_value)\n                mstore(0x20, /** @src 71:5197:5211  \"set._positions\" */ add(var_set_53666_slot, 1))\n                /// @src 71:5190:5223  \"return set._positions[value] != 0\"\n                var := /** @src 71:5197:5223  \"set._positions[value] != 0\" */ iszero(iszero(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0x40))))\n            }\n            /// @ast-id 64159 @src 110:1334:1856  \"function unpackOne(bytes32 packed) internal pure returns (string memory result) {...\"\n            function fun_unpackOne(var_packed) -> var_result_mpos\n            {\n                /// @src 110:1424:1850  \"assembly (\\\"memory-safe\\\") {...\"\n                var_result_mpos := mload(0x40)\n                mstore(0x40, add(var_result_mpos, 0x40))\n                mstore(var_result_mpos, 0)\n                mstore(add(var_result_mpos, 0x1f), var_packed)\n                mstore(add(add(var_result_mpos, mload(var_result_mpos)), 0x20), 0)\n            }\n            /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n            function storage_array_index_access_bytes32_dyn__ptr(array, index) -> slot, offset\n            {\n                if iszero(lt(index, sload(array)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ array)\n                slot := add(keccak256(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0x20), index)\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @ast-id 53535 @src 71:2497:2903  \"function _add(Set storage set, bytes32 value) private returns (bool) {...\"\n            function fun__add(var_value) -> var\n            {\n                /// @src 71:2560:2564  \"bool\"\n                var := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0\n                /// @src 71:2581:2602  \"_contains(set, value)\"\n                let var_1 := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0\n                mstore(0, var_value)\n                mstore(0x20, /** @src 71:5197:5211  \"set._positions\" */ 9)\n                /// @src 71:5197:5223  \"set._positions[value] != 0\"\n                let _1 := iszero(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ sload(keccak256(0, 0x40)))\n                /// @src 71:5190:5223  \"return set._positions[value] != 0\"\n                var_1 := /** @src 71:5197:5223  \"set._positions[value] != 0\" */ iszero(_1)\n                /// @src 71:2576:2897  \"if (!_contains(set, value)) {...\"\n                switch /** @src 71:2580:2602  \"!_contains(set, value)\" */ _1\n                case /** @src 71:2576:2897  \"if (!_contains(set, value)) {...\" */ 0 {\n                    /// @src 71:2874:2886  \"return false\"\n                    var := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0\n                    /// @src 71:2874:2886  \"return false\"\n                    leave\n                }\n                default /// @src 71:2576:2897  \"if (!_contains(set, value)) {...\"\n                {\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    let oldLen := sload(/** @src 85:17278:17295  \"_bridgingPayments\" */ 0x08)\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    if iszero(lt(oldLen, 18446744073709551616))\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(0, 0x24)\n                    }\n                    sstore(/** @src 85:17278:17295  \"_bridgingPayments\" */ 0x08, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ add(oldLen, /** @src 71:5197:5211  \"set._positions\" */ 1))\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    let slot, offset := storage_array_index_access_bytes32_dyn__ptr(/** @src 85:17278:17295  \"_bridgingPayments\" */ 0x08, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ oldLen)\n                    let _2 := sload(slot)\n                    let shiftBits := shl(3, offset)\n                    sstore(slot, or(and(_2, not(shl(shiftBits, not(0)))), shl(shiftBits, var_value)))\n                    /// @src 71:2800:2818  \"set._values.length\"\n                    let expr := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ sload(/** @src 85:17278:17295  \"_bridgingPayments\" */ 0x08)\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    mstore(0, var_value)\n                    mstore(0x20, /** @src 71:5197:5211  \"set._positions\" */ 9)\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    sstore(keccak256(0, 0x40), expr)\n                    /// @src 71:2832:2843  \"return true\"\n                    var := /** @src 71:5197:5211  \"set._positions\" */ 1\n                    /// @src 71:2832:2843  \"return true\"\n                    leave\n                }\n            }\n            /// @ast-id 53535 @src 71:2497:2903  \"function _add(Set storage set, bytes32 value) private returns (bool) {...\"\n            function fun_add_20858(var_value) -> var_\n            {\n                /// @src 71:2560:2564  \"bool\"\n                var_ := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0\n                /// @src 71:2581:2602  \"_contains(set, value)\"\n                let var := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0\n                mstore(0, var_value)\n                mstore(0x20, /** @src 71:5197:5211  \"set._positions\" */ 4)\n                /// @src 71:5197:5223  \"set._positions[value] != 0\"\n                let _1 := iszero(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ sload(keccak256(0, 0x40)))\n                /// @src 71:5190:5223  \"return set._positions[value] != 0\"\n                var := /** @src 71:5197:5223  \"set._positions[value] != 0\" */ iszero(_1)\n                /// @src 71:2576:2897  \"if (!_contains(set, value)) {...\"\n                switch /** @src 71:2580:2602  \"!_contains(set, value)\" */ _1\n                case /** @src 71:2576:2897  \"if (!_contains(set, value)) {...\" */ 0 {\n                    /// @src 71:2874:2886  \"return false\"\n                    var_ := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0\n                    /// @src 71:2874:2886  \"return false\"\n                    leave\n                }\n                default /// @src 71:2576:2897  \"if (!_contains(set, value)) {...\"\n                {\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    let oldLen := sload(3)\n                    if iszero(lt(oldLen, 18446744073709551616))\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(/** @src 71:5197:5211  \"set._positions\" */ 4, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0x41)\n                        revert(0, 0x24)\n                    }\n                    sstore(3, add(oldLen, /** @src 71:5197:5211  \"set._positions\" */ 1))\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    let slot, offset := storage_array_index_access_bytes32_dyn__ptr(3, oldLen)\n                    let _2 := sload(slot)\n                    let shiftBits := shl(3, offset)\n                    sstore(slot, or(and(_2, not(shl(shiftBits, not(0)))), shl(shiftBits, var_value)))\n                    /// @src 71:2800:2818  \"set._values.length\"\n                    let expr := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ sload(3)\n                    mstore(0, var_value)\n                    mstore(0x20, /** @src 71:5197:5211  \"set._positions\" */ 4)\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    sstore(keccak256(0, 0x40), expr)\n                    /// @src 71:2832:2843  \"return true\"\n                    var_ := /** @src 71:5197:5211  \"set._positions\" */ 1\n                    /// @src 71:2832:2843  \"return true\"\n                    leave\n                }\n            }\n            /// @ast-id 53535 @src 71:2497:2903  \"function _add(Set storage set, bytes32 value) private returns (bool) {...\"\n            function fun_add(var_set_slot, var_value) -> var\n            {\n                /// @src 71:2560:2564  \"bool\"\n                var := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0\n                /// @src 71:2576:2897  \"if (!_contains(set, value)) {...\"\n                switch /** @src 71:2580:2602  \"!_contains(set, value)\" */ iszero(/** @src 71:2581:2602  \"_contains(set, value)\" */ fun_contains(var_set_slot, var_value))\n                case /** @src 71:2576:2897  \"if (!_contains(set, value)) {...\" */ 0 {\n                    /// @src 71:2874:2886  \"return false\"\n                    var := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0\n                    /// @src 71:2874:2886  \"return false\"\n                    leave\n                }\n                default /// @src 71:2576:2897  \"if (!_contains(set, value)) {...\"\n                {\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    let oldLen := sload(var_set_slot)\n                    if iszero(lt(oldLen, 18446744073709551616))\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(0, 0x24)\n                    }\n                    sstore(var_set_slot, add(oldLen, 1))\n                    let slot, offset := storage_array_index_access_bytes32_dyn__ptr(var_set_slot, oldLen)\n                    let _1 := sload(slot)\n                    let shiftBits := shl(3, offset)\n                    sstore(slot, or(and(_1, not(shl(shiftBits, not(0)))), shl(shiftBits, var_value)))\n                    /// @src 71:2800:2818  \"set._values.length\"\n                    let expr := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ sload(/** @src 71:2800:2818  \"set._values.length\" */ var_set_slot)\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    mstore(0, var_value)\n                    mstore(0x20, /** @src 71:2776:2790  \"set._positions\" */ add(var_set_slot, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 1))\n                    sstore(keccak256(0, 0x40), expr)\n                    /// @src 71:2832:2843  \"return true\"\n                    var := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 1\n                    /// @src 71:2832:2843  \"return true\"\n                    leave\n                }\n            }\n            /// @ast-id 40095 @src 22:7082:7223  \"function _checkInitializing() internal view virtual {...\"\n            function fun_checkInitializing()\n            {\n                /// @src 22:7144:7217  \"if (!_isInitializing()) {...\"\n                if /** @src 22:7148:7166  \"!_isInitializing()\" */ iszero(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ and(shr(64, sload(/** @src 22:3147:3213  \"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\" */ 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00)), /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0xff))\n                /// @src 22:7144:7217  \"if (!_isInitializing()) {...\"\n                {\n                    /// @src 22:7189:7206  \"NotInitializing()\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 22:7189:7206  \"NotInitializing()\" */ shl(227, 0x1afcd79f))\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 22:7189:7206  \"NotInitializing()\" */ 4)\n                }\n            }\n            /// @ast-id 50935 @src 70:5170:5475  \"function tryGet(Bytes32ToBytes32Map storage map, bytes32 key) internal view returns (bool exists, bytes32 value) {...\"\n            function fun_tryGet(var_map_slot, var_key) -> var_exists, var_value\n            {\n                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ var_key)\n                mstore(0x20, /** @src 70:5307:5318  \"map._values\" */ add(var_map_slot, 2))\n                /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                let _1 := sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 0x40))\n                /// @src 70:5333:5469  \"if (val == bytes32(0)) {...\"\n                switch /** @src 70:5337:5354  \"val == bytes32(0)\" */ iszero(_1)\n                case /** @src 70:5333:5469  \"if (val == bytes32(0)) {...\" */ 0 {\n                    /// @src 70:5440:5458  \"return (true, val)\"\n                    var_exists := /** @src 70:5448:5452  \"true\" */ 0x01\n                    /// @src 70:5440:5458  \"return (true, val)\"\n                    var_value := _1\n                    leave\n                }\n                default /// @src 70:5333:5469  \"if (val == bytes32(0)) {...\"\n                {\n                    /// @src 70:5370:5409  \"return (contains(map, key), bytes32(0))\"\n                    var_exists := /** @src 71:8806:8834  \"_contains(set._inner, value)\" */ fun_contains(var_map_slot, var_key)\n                    /// @src 70:5370:5409  \"return (contains(map, key), bytes32(0))\"\n                    var_value := /** @src -1:-1:-1 */ 0\n                    /// @src 70:5370:5409  \"return (contains(map, key), bytes32(0))\"\n                    leave\n                }\n            }\n            /// @ast-id 43114 @src 50:8370:9090  \"function _callOptionalReturn(IERC20 token, bytes memory data) private {...\"\n            function fun_callOptionalReturn(var_token_address, var_data_mpos)\n            {\n                /// @src 50:8507:8928  \"assembly (\\\"memory-safe\\\") {...\"\n                if iszero(call(gas(), var_token_address, /** @src -1:-1:-1 */ 0, /** @src 50:8507:8928  \"assembly (\\\"memory-safe\\\") {...\" */ add(var_data_mpos, 0x20), mload(var_data_mpos), /** @src -1:-1:-1 */ 0, /** @src 50:8507:8928  \"assembly (\\\"memory-safe\\\") {...\" */ 0x20))\n                {\n                    let usr$ptr := mload(0x40)\n                    returndatacopy(usr$ptr, /** @src -1:-1:-1 */ 0, /** @src 50:8507:8928  \"assembly (\\\"memory-safe\\\") {...\" */ returndatasize())\n                    revert(usr$ptr, returndatasize())\n                }\n                let var_returnSize := returndatasize()\n                let var_returnValue := mload(/** @src -1:-1:-1 */ 0)\n                /// @src 50:8942:9010  \"returnSize == 0 ? address(token).code.length == 0 : returnValue != 1\"\n                let expr := /** @src -1:-1:-1 */ 0\n                /// @src 50:8942:9010  \"returnSize == 0 ? address(token).code.length == 0 : returnValue != 1\"\n                switch /** @src 50:8942:8957  \"returnSize == 0\" */ iszero(var_returnSize)\n                case /** @src 50:8942:9010  \"returnSize == 0 ? address(token).code.length == 0 : returnValue != 1\" */ 0 {\n                    expr := /** @src 50:8994:9010  \"returnValue != 1\" */ iszero(eq(var_returnValue, /** @src 50:9009:9010  \"1\" */ 0x01))\n                }\n                default /// @src 50:8942:9010  \"returnSize == 0 ? address(token).code.length == 0 : returnValue != 1\"\n                {\n                    expr := /** @src 50:8960:8991  \"address(token).code.length == 0\" */ iszero(/** @src 50:8960:8986  \"address(token).code.length\" */ extcodesize(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ and(/** @src 50:8960:8974  \"address(token)\" */ var_token_address, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1))))\n                }\n                /// @src 50:8938:9084  \"if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {...\"\n                if expr\n                {\n                    /// @src 50:9033:9073  \"SafeERC20FailedOperation(address(token))\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 50:9033:9073  \"SafeERC20FailedOperation(address(token))\" */ shl(224, 0x5274afe7))\n                    /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                    mstore(/** @src 50:9033:9073  \"SafeERC20FailedOperation(address(token))\" */ 4, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ and(/** @src 50:9058:9072  \"address(token)\" */ var_token_address, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)))\n                    /// @src 50:9033:9073  \"SafeERC20FailedOperation(address(token))\"\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 36)\n                }\n            }\n            /// @ast-id 43373 @src 51:4437:5019  \"function verifyCallResultFromTarget(...\"\n            function fun_verifyCallResultFromTarget(var_target, var_success, var_returndata_mpos) -> var_43343_mpos\n            {\n                /// @src 51:4581:4593  \"bytes memory\"\n                var_43343_mpos := /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 96\n                /// @src 51:4605:5013  \"if (!success) {...\"\n                switch /** @src 51:4609:4617  \"!success\" */ iszero(var_success)\n                case /** @src 51:4605:5013  \"if (!success) {...\" */ 0 {\n                    /// @src 51:4857:4906  \"returndata.length == 0 && target.code.length == 0\"\n                    let expr := /** @src 51:4857:4879  \"returndata.length == 0\" */ iszero(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ mload(/** @src 51:4857:4874  \"returndata.length\" */ var_returndata_mpos))\n                    /// @src 51:4857:4906  \"returndata.length == 0 && target.code.length == 0\"\n                    if expr\n                    {\n                        expr := /** @src 51:4883:4906  \"target.code.length == 0\" */ iszero(/** @src 51:4883:4901  \"target.code.length\" */ extcodesize(var_target))\n                    }\n                    /// @src 51:4853:4972  \"if (returndata.length == 0 && target.code.length == 0) {...\"\n                    if expr\n                    {\n                        /// @src 51:4933:4957  \"AddressEmptyCode(target)\"\n                        mstore(/** @src 51:4878:4879  \"0\" */ 0x00, /** @src 51:4933:4957  \"AddressEmptyCode(target)\" */ shl(224, 0x9996b315))\n                        /// @src 85:1537:24973  \"contract ERC20Manager is...\"\n                        mstore(/** @src 51:4933:4957  \"AddressEmptyCode(target)\" */ 4, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ and(var_target, sub(shl(160, 1), 1)))\n                        /// @src 51:4933:4957  \"AddressEmptyCode(target)\"\n                        revert(/** @src 51:4878:4879  \"0\" */ 0x00, /** @src 85:1537:24973  \"contract ERC20Manager is...\" */ 36)\n                    }\n                    /// @src 51:4985:5002  \"return returndata\"\n                    var_43343_mpos := var_returndata_mpos\n                    leave\n                }\n                default /// @src 51:4605:5013  \"if (!success) {...\"\n                {\n                    /// @src 51:5686:5987  \"if (returndata.length > 0) {...\"\n                    switch /** @src 51:5690:5711  \"returndata.length > 0\" */ iszero(iszero(/** @src 85:1537:24973  \"contract ERC20Manager is...\" */ mload(/** @src 51:5690:5707  \"returndata.length\" */ var_returndata_mpos)))\n                    case /** @src 51:5686:5987  \"if (returndata.length > 0) {...\" */ 0 {\n                        /// @src 51:5957:5976  \"Errors.FailedCall()\"\n                        mstore(/** @src 51:5710:5711  \"0\" */ 0x00, /** @src 51:5957:5976  \"Errors.FailedCall()\" */ shl(224, 0xd6bda275))\n                        revert(/** @src 51:5710:5711  \"0\" */ 0x00, /** @src 51:5957:5976  \"Errors.FailedCall()\" */ 4)\n                    }\n                    default /// @src 51:5686:5987  \"if (returndata.length > 0) {...\"\n                    {\n                        /// @src 51:5815:5920  \"assembly (\\\"memory-safe\\\") {...\"\n                        revert(add(var_returndata_mpos, 0x20), mload(var_returndata_mpos))\n                    }\n                }\n            }\n        }\n        /// @use-src 28:\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\", 54:\"lib/openzeppelin-contracts/contracts/utils/Context.sol\", 84:\"src/BridgingPayment.sol\", 95:\"src/interfaces/IBridgingPayment.sol\"\n        object \"BridgingPayment_59706\" {\n            code {\n                {\n                    /// @src 84:575:2176  \"contract BridgingPayment is IBridgingPayment, Ownable {...\"\n                    let _1 := memoryguard(0xa0)\n                    if callvalue() { revert(0, 0) }\n                    let programSize := datasize(\"BridgingPayment_59706\")\n                    let argSize := sub(codesize(), programSize)\n                    let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n                    if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 84:575:2176  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 84:575:2176  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ 0x24)\n                    }\n                    mstore(64, newFreePtr)\n                    codecopy(_1, programSize, argSize)\n                    if slt(sub(add(_1, argSize), _1), 96)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 84:575:2176  \"contract BridgingPayment is IBridgingPayment, Ownable {...\"\n                    let value0 := abi_decode_address_fromMemory(_1)\n                    let value := mload(add(_1, 32))\n                    let _2 := and(abi_decode_address_fromMemory(add(_1, 64)), sub(shl(160, 1), 1))\n                    /// @src 28:1269:1364  \"if (initialOwner == address(0)) {...\"\n                    if /** @src 28:1273:1299  \"initialOwner == address(0)\" */ iszero(/** @src 84:575:2176  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ _2)\n                    /// @src 28:1269:1364  \"if (initialOwner == address(0)) {...\"\n                    {\n                        /// @src 28:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 28:1322:1353  \"OwnableInvalidOwner(address(0))\" */ shl(224, 0x1e4fbdf7))\n                        /// @src 84:575:2176  \"contract BridgingPayment is IBridgingPayment, Ownable {...\"\n                        mstore(/** @src 28:1322:1353  \"OwnableInvalidOwner(address(0))\" */ 4, /** @src -1:-1:-1 */ 0)\n                        /// @src 28:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 84:575:2176  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ 36)\n                    }\n                    let _3 := sload(/** @src -1:-1:-1 */ 0)\n                    /// @src 84:575:2176  \"contract BridgingPayment is IBridgingPayment, Ownable {...\"\n                    sstore(/** @src -1:-1:-1 */ 0, /** @src 84:575:2176  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ or(and(_3, not(sub(shl(160, 1), 1))), _2))\n                    /// @src 28:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                    let _4 := /** @src 84:575:2176  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ mload(64)\n                    /// @src 28:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                    log3(/** @src -1:-1:-1 */ 0, 0, /** @src 28:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 84:575:2176  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ and(_3, sub(shl(160, 1), 1)), /** @src 28:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ _2)\n                    /// @src 84:1186:1215  \"ERC20_MANAGER = _erc20Manager\"\n                    mstore(128, value0)\n                    /// @src 84:575:2176  \"contract BridgingPayment is IBridgingPayment, Ownable {...\"\n                    sstore(1, value)\n                    let _5 := datasize(\"BridgingPayment_59706_deployed\")\n                    codecopy(_4, dataoffset(\"BridgingPayment_59706_deployed\"), _5)\n                    setimmutable(_4, \"59608\", mload(/** @src 84:1186:1215  \"ERC20_MANAGER = _erc20Manager\" */ 128))\n                    /// @src 84:575:2176  \"contract BridgingPayment is IBridgingPayment, Ownable {...\"\n                    return(_4, _5)\n                }\n                function abi_decode_address_fromMemory(offset) -> value\n                {\n                    value := mload(offset)\n                    if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                }\n            }\n            /// @use-src 28:\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\", 54:\"lib/openzeppelin-contracts/contracts/utils/Context.sol\", 84:\"src/BridgingPayment.sol\"\n            object \"BridgingPayment_59706_deployed\" {\n                code {\n                    {\n                        /// @src 84:575:2176  \"contract BridgingPayment is IBridgingPayment, Ownable {...\"\n                        mstore(64, memoryguard(0x80))\n                        if iszero(lt(calldatasize(), 4))\n                        {\n                            switch shr(224, calldataload(0))\n                            case 0x29610252 {\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                /// @src 84:1535:1618  \"if (msg.sender != ERC20_MANAGER) {...\"\n                                if /** @src 84:1539:1566  \"msg.sender != ERC20_MANAGER\" */ iszero(eq(/** @src 84:1539:1549  \"msg.sender\" */ caller(), /** @src 84:575:2176  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ and(/** @src 84:1553:1566  \"ERC20_MANAGER\" */ loadimmutable(\"59608\"), /** @src 84:575:2176  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ sub(shl(160, 1), 1))))\n                                /// @src 84:1535:1618  \"if (msg.sender != ERC20_MANAGER) {...\"\n                                {\n                                    /// @src 84:1589:1607  \"OnlyErc20Manager()\"\n                                    mstore(/** @src 84:575:2176  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ 0, /** @src 84:1589:1607  \"OnlyErc20Manager()\" */ shl(225, 0x064917ff))\n                                    revert(/** @src 84:575:2176  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ 0, 4)\n                                }\n                                /// @src 84:1937:2011  \"if (msg.value != fee) {...\"\n                                if /** @src 84:1941:1957  \"msg.value != fee\" */ iszero(eq(/** @src 84:1941:1950  \"msg.value\" */ callvalue(), /** @src 84:575:2176  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ sload(/** @src 84:1954:1957  \"fee\" */ 0x01)))\n                                /// @src 84:1937:2011  \"if (msg.value != fee) {...\"\n                                {\n                                    /// @src 84:1980:2000  \"IncorrectFeeAmount()\"\n                                    mstore(/** @src 84:575:2176  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ 0, /** @src 84:1980:2000  \"IncorrectFeeAmount()\" */ shl(224, 0x1fbbed95))\n                                    revert(/** @src 84:575:2176  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ 0, 4)\n                                }\n                                /// @src 84:2039:2073  \"owner().call{value: msg.value}(\\\"\\\")\"\n                                let expr_component := call(gas(), /** @src 84:575:2176  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ and(sload(0), sub(shl(160, 1), 1)), /** @src 84:1941:1950  \"msg.value\" */ callvalue(), /** @src 84:575:2176  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ 0, 0, 0, 0)\n                                /// @src 84:2039:2073  \"owner().call{value: msg.value}(\\\"\\\")\"\n                                let data := /** @src 84:575:2176  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ 0\n                                switch returndatasize()\n                                case 0 { data := 96 }\n                                default {\n                                    let _1 := returndatasize()\n                                    if gt(_1, 0xffffffffffffffff)\n                                    {\n                                        mstore(0, shl(224, 0x4e487b71))\n                                        mstore(4, 0x41)\n                                        revert(0, 0x24)\n                                    }\n                                    let memPtr := mload(64)\n                                    let newFreePtr := add(memPtr, and(add(and(add(_1, 31), not(31)), 63), not(31)))\n                                    if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                                    {\n                                        mstore(0, shl(224, 0x4e487b71))\n                                        mstore(4, 0x41)\n                                        revert(0, 0x24)\n                                    }\n                                    mstore(64, newFreePtr)\n                                    mstore(memPtr, _1)\n                                    data := memPtr\n                                    returndatacopy(add(memPtr, 0x20), 0, returndatasize())\n                                }\n                                /// @src 84:2083:2143  \"if (!success) {...\"\n                                if /** @src 84:2087:2095  \"!success\" */ iszero(expr_component)\n                                /// @src 84:2083:2143  \"if (!success) {...\"\n                                {\n                                    /// @src 84:2118:2132  \"PayFeeFailed()\"\n                                    mstore(/** @src 84:575:2176  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ 0, /** @src 84:2118:2132  \"PayFeeFailed()\" */ shl(225, 0x53048b49))\n                                    revert(/** @src 84:575:2176  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ 0, 4)\n                                }\n                                /// @src 84:2158:2167  \"FeePaid()\"\n                                log1(/** @src 84:575:2176  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ 0, 0, /** @src 84:2158:2167  \"FeePaid()\" */ 0xaaeea0b595e409578c26dd16fa1bdb3a29a4d874694ecef3ca96376940f5fbfb)\n                                /// @src 84:575:2176  \"contract BridgingPayment is IBridgingPayment, Ownable {...\"\n                                return(0, 0)\n                            }\n                            case 0x69fe0e2d {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                /// @src 28:1500:1562  \"modifier onlyOwner() {...\"\n                                fun_checkOwner()\n                                /// @src 84:575:2176  \"contract BridgingPayment is IBridgingPayment, Ownable {...\"\n                                sstore(1, calldataload(4))\n                                return(0, 0)\n                            }\n                            case 0x715018a6 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                /// @src 28:1500:1562  \"modifier onlyOwner() {...\"\n                                fun_checkOwner()\n                                /// @src 84:575:2176  \"contract BridgingPayment is IBridgingPayment, Ownable {...\"\n                                let _2 := sload(0)\n                                sstore(0, and(_2, shl(160, 0xffffffffffffffffffffffff)))\n                                /// @src 28:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                                log3(/** @src 84:575:2176  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ 0, 0, /** @src 28:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 84:575:2176  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ and(_2, sub(shl(160, 1), 1)), 0)\n                                return(0, 0)\n                            }\n                            case 0x86ea825c {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let memPos := mload(64)\n                                mstore(memPos, and(/** @src 84:1390:1403  \"ERC20_MANAGER\" */ loadimmutable(\"59608\"), /** @src 84:575:2176  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ sub(shl(160, 1), 1)))\n                                return(memPos, 32)\n                            }\n                            case 0x8da5cb5b {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let value := and(sload(0), sub(shl(160, 1), 1))\n                                let memPos_1 := mload(64)\n                                mstore(memPos_1, value)\n                                return(memPos_1, 32)\n                            }\n                            case 0xddca3f43 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let _3 := sload(/** @src 84:681:699  \"uint256 public fee\" */ 1)\n                                /// @src 84:575:2176  \"contract BridgingPayment is IBridgingPayment, Ownable {...\"\n                                let memPos_2 := mload(64)\n                                mstore(memPos_2, _3)\n                                return(memPos_2, 32)\n                            }\n                            case 0xf2fde38b {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                let value_1 := calldataload(4)\n                                let _4 := and(value_1, sub(shl(160, 1), 1))\n                                if iszero(eq(value_1, _4)) { revert(0, 0) }\n                                /// @src 28:1500:1562  \"modifier onlyOwner() {...\"\n                                fun_checkOwner()\n                                /// @src 28:2623:2714  \"if (newOwner == address(0)) {...\"\n                                if /** @src 28:2627:2649  \"newOwner == address(0)\" */ iszero(/** @src 84:575:2176  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ _4)\n                                /// @src 28:2623:2714  \"if (newOwner == address(0)) {...\"\n                                {\n                                    /// @src 28:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                                    mstore(/** @src 84:575:2176  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ 0, /** @src 28:2672:2703  \"OwnableInvalidOwner(address(0))\" */ shl(224, 0x1e4fbdf7))\n                                    /// @src 84:575:2176  \"contract BridgingPayment is IBridgingPayment, Ownable {...\"\n                                    mstore(4, 0)\n                                    /// @src 28:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                                    revert(/** @src 84:575:2176  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ 0, 36)\n                                }\n                                let _5 := sload(0)\n                                sstore(0, or(and(_5, shl(160, 0xffffffffffffffffffffffff)), _4))\n                                /// @src 28:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                                log3(/** @src 84:575:2176  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ 0, 0, /** @src 28:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 84:575:2176  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ and(_5, sub(shl(160, 1), 1)), /** @src 28:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ _4)\n                                /// @src 84:575:2176  \"contract BridgingPayment is IBridgingPayment, Ownable {...\"\n                                return(0, 0)\n                            }\n                        }\n                        revert(0, 0)\n                    }\n                    /// @ast-id 40783 @src 28:1796:1958  \"function _checkOwner() internal view virtual {...\"\n                    function fun_checkOwner()\n                    {\n                        /// @src 84:575:2176  \"contract BridgingPayment is IBridgingPayment, Ownable {...\"\n                        let value := and(sload(/** @src 28:1710:1716  \"_owner\" */ 0x00), /** @src 84:575:2176  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ sub(shl(160, 1), 1))\n                        /// @src 28:1851:1952  \"if (owner() != _msgSender()) {...\"\n                        if /** @src 28:1855:1878  \"owner() != _msgSender()\" */ iszero(eq(/** @src 84:575:2176  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ value, /** @src 54:735:745  \"msg.sender\" */ caller()))\n                        /// @src 28:1851:1952  \"if (owner() != _msgSender()) {...\"\n                        {\n                            /// @src 28:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                            mstore(/** @src 28:1710:1716  \"_owner\" */ 0x00, /** @src 28:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\" */ shl(224, 0x118cdaa7))\n                            /// @src 84:575:2176  \"contract BridgingPayment is IBridgingPayment, Ownable {...\"\n                            mstore(/** @src 28:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\" */ 4, /** @src 54:735:745  \"msg.sender\" */ caller())\n                            /// @src 28:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                            revert(/** @src 28:1710:1716  \"_owner\" */ 0x00, /** @src 84:575:2176  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ 36)\n                        }\n                    }\n                }\n                data \".metadata\" hex\"\"\n            }\n        }\n        /// @use-src 28:\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\", 33:\"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\", 35:\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\", 44:\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\", 45:\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\", 46:\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol\", 47:\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\", 48:\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\", 49:\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\", 54:\"lib/openzeppelin-contracts/contracts/utils/Context.sol\", 56:\"lib/openzeppelin-contracts/contracts/utils/Nonces.sol\", 58:\"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\", 60:\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\", 63:\"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\", 94:\"src/erc20/managed/ERC20GearSupply.sol\"\n        object \"ERC20GearSupply_62571\" {\n            code {\n                {\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    let _1 := memoryguard(0x0160)\n                    mstore(64, _1)\n                    if callvalue() { revert(0, 0) }\n                    let programSize := datasize(\"ERC20GearSupply_62571\")\n                    let argSize := sub(codesize(), programSize)\n                    finalize_allocation(_1, argSize)\n                    codecopy(_1, programSize, argSize)\n                    let _2 := add(_1, argSize)\n                    if slt(sub(_2, _1), 128)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    let value := mload(_1)\n                    let _3 := and(value, sub(shl(160, 1), 1))\n                    if iszero(eq(value, _3))\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    let offset := mload(add(_1, 32))\n                    if gt(offset, sub(shl(64, 1), 1))\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    let value1 := abi_decode_string_fromMemory(add(_1, offset), _2)\n                    let offset_1 := mload(add(_1, 64))\n                    if gt(offset_1, sub(shl(64, 1), 1))\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    let value2 := abi_decode_string_fromMemory(add(_1, offset_1), _2)\n                    let value_1 := mload(add(_1, 96))\n                    let _4 := and(value_1, 0xff)\n                    if iszero(eq(value_1, _4))\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    let size := /** @src -1:-1:-1 */ 0\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    let _5 := /** @src -1:-1:-1 */ 0\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    _5 := /** @src -1:-1:-1 */ 0\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    size := 64\n                    let memPtr := mload(size)\n                    finalize_allocation(memPtr, size)\n                    mstore(memPtr, 1)\n                    let _6 := add(memPtr, 32)\n                    mstore(_6, \"1\")\n                    let newLen := mload(value1)\n                    if gt(newLen, sub(shl(64, 1), 1))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x24)\n                    }\n                    let _7 := sload(/** @src 44:1648:1661  \"_name = name_\" */ 0x03)\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    let length := /** @src -1:-1:-1 */ 0\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    length := shr(1, _7)\n                    let outOfPlaceEncoding := and(_7, 1)\n                    if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                    if eq(outOfPlaceEncoding, lt(length, 32))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x22)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x24)\n                    }\n                    if gt(length, 31)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 44:1648:1661  \"_name = name_\" */ 0x03)\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 32)\n                        let deleteStart := add(data, shr(5, add(newLen, 31)))\n                        if lt(newLen, 32) { deleteStart := data }\n                        let _8 := add(data, shr(5, add(length, 31)))\n                        let start := deleteStart\n                        for { } lt(start, _8) { start := add(start, 1) }\n                        {\n                            sstore(start, /** @src -1:-1:-1 */ 0)\n                        }\n                    }\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    let srcOffset := /** @src -1:-1:-1 */ 0\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    srcOffset := 32\n                    switch gt(newLen, 31)\n                    case 1 {\n                        let loopEnd := and(newLen, not(31))\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 44:1648:1661  \"_name = name_\" */ 0x03)\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ srcOffset)\n                        let i := /** @src -1:-1:-1 */ 0\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        for { } lt(i, loopEnd) { i := add(i, 32) }\n                        {\n                            sstore(dstPtr, mload(add(value1, srcOffset)))\n                            dstPtr := add(dstPtr, 1)\n                            srcOffset := add(srcOffset, 32)\n                        }\n                        if lt(loopEnd, newLen)\n                        {\n                            let lastValue := mload(add(value1, srcOffset))\n                            sstore(dstPtr, and(lastValue, not(shr(and(shl(/** @src 44:1648:1661  \"_name = name_\" */ 0x03, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ newLen), 248), not(0)))))\n                        }\n                        sstore(/** @src 44:1648:1661  \"_name = name_\" */ 0x03, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ add(shl(1, newLen), 1))\n                    }\n                    default {\n                        let value_2 := /** @src -1:-1:-1 */ 0\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        if newLen\n                        {\n                            value_2 := mload(add(value1, srcOffset))\n                        }\n                        sstore(/** @src 44:1648:1661  \"_name = name_\" */ 0x03, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ or(and(value_2, not(shr(shl(/** @src 44:1648:1661  \"_name = name_\" */ 0x03, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ newLen), not(0)))), shl(1, newLen)))\n                    }\n                    let newLen_1 := mload(value2)\n                    if gt(newLen_1, sub(shl(64, 1), 1))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ shl(224, 0x4e487b71))\n                        mstore(/** @src 44:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x24)\n                    }\n                    let _9 := sload(/** @src 44:1671:1688  \"_symbol = symbol_\" */ 0x04)\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    let length_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    length_1 := shr(1, _9)\n                    let outOfPlaceEncoding_1 := and(_9, 1)\n                    if iszero(outOfPlaceEncoding_1)\n                    {\n                        length_1 := and(length_1, 0x7f)\n                    }\n                    if eq(outOfPlaceEncoding_1, lt(length_1, 32))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ shl(224, 0x4e487b71))\n                        mstore(/** @src 44:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x22)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x24)\n                    }\n                    if gt(length_1, 31)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 44:1671:1688  \"_symbol = symbol_\" */ 0x04)\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        let data_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 32)\n                        let deleteStart_1 := add(data_1, shr(5, add(newLen_1, 31)))\n                        if lt(newLen_1, 32) { deleteStart_1 := data_1 }\n                        let _10 := add(data_1, shr(5, add(length_1, 31)))\n                        let start_1 := deleteStart_1\n                        for { } lt(start_1, _10) { start_1 := add(start_1, 1) }\n                        {\n                            sstore(start_1, /** @src -1:-1:-1 */ 0)\n                        }\n                    }\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    let srcOffset_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    srcOffset_1 := 32\n                    switch gt(newLen_1, 31)\n                    case 1 {\n                        let loopEnd_1 := and(newLen_1, not(31))\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 44:1671:1688  \"_symbol = symbol_\" */ 0x04)\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        let dstPtr_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ srcOffset_1)\n                        let i_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, 32) }\n                        {\n                            sstore(dstPtr_1, mload(add(value2, srcOffset_1)))\n                            dstPtr_1 := add(dstPtr_1, 1)\n                            srcOffset_1 := add(srcOffset_1, 32)\n                        }\n                        if lt(loopEnd_1, newLen_1)\n                        {\n                            let lastValue_1 := mload(add(value2, srcOffset_1))\n                            sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(/** @src 44:1648:1661  \"_name = name_\" */ 0x03, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ newLen_1), 248), not(0)))))\n                        }\n                        sstore(/** @src 44:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ add(shl(1, newLen_1), 1))\n                    }\n                    default {\n                        let value_3 := /** @src -1:-1:-1 */ 0\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        if newLen_1\n                        {\n                            value_3 := mload(add(value2, srcOffset_1))\n                        }\n                        sstore(/** @src 44:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ or(and(value_3, not(shr(shl(/** @src 44:1648:1661  \"_name = name_\" */ 0x03, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ newLen_1), not(0)))), shl(1, newLen_1)))\n                    }\n                    /// @src 28:1269:1364  \"if (initialOwner == address(0)) {...\"\n                    if /** @src 28:1273:1299  \"initialOwner == address(0)\" */ iszero(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _3)\n                    /// @src 28:1269:1364  \"if (initialOwner == address(0)) {...\"\n                    {\n                        /// @src 28:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 28:1322:1353  \"OwnableInvalidOwner(address(0))\" */ shl(224, 0x1e4fbdf7))\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        mstore(/** @src 44:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src -1:-1:-1 */ 0)\n                        /// @src 28:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 36)\n                    }\n                    let _11 := sload(/** @src 28:3004:3010  \"_owner\" */ 0x05)\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    sstore(/** @src 28:3004:3010  \"_owner\" */ 0x05, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ or(and(_11, not(sub(shl(160, 1), 1))), _3))\n                    /// @src 28:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                    log3(/** @src -1:-1:-1 */ 0, 0, /** @src 28:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ and(_11, sub(shl(160, 1), 1)), /** @src 28:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ _3)\n                    /// @src 63:3493:3546  \"_name = name.toShortStringWithFallback(_nameFallback)\"\n                    mstore(288, /** @src 63:3501:3546  \"name.toShortStringWithFallback(_nameFallback)\" */ fun_toShortStringWithFallback(value1))\n                    /// @src 63:3556:3618  \"_version = version.toShortStringWithFallback(_versionFallback)\"\n                    mstore(320, /** @src 63:3567:3618  \"version.toShortStringWithFallback(_versionFallback)\" */ fun_toShortStringWithFallback_7441(memPtr))\n                    /// @src 63:3642:3664  \"keccak256(bytes(name))\"\n                    let _12 := keccak256(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ add(/** @src 63:3642:3664  \"keccak256(bytes(name))\" */ value1, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 32), mload(/** @src 63:3642:3664  \"keccak256(bytes(name))\" */ value1))\n                    /// @src 63:3628:3664  \"_hashedName = keccak256(bytes(name))\"\n                    mstore(224, /** @src 63:3642:3664  \"keccak256(bytes(name))\" */ _12)\n                    /// @src 63:3691:3716  \"keccak256(bytes(version))\"\n                    let _13 := keccak256(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _6, mload(/** @src 63:3691:3716  \"keccak256(bytes(version))\" */ memPtr))\n                    /// @src 63:3674:3716  \"_hashedVersion = keccak256(bytes(version))\"\n                    mstore(256, /** @src 63:3691:3716  \"keccak256(bytes(version))\" */ _13)\n                    /// @src 63:3727:3757  \"_cachedChainId = block.chainid\"\n                    mstore(160, /** @src 63:3744:3757  \"block.chainid\" */ chainid())\n                    /// @src 63:4304:4384  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                    let expr_mpos := /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ mload(size)\n                    /// @src 63:4304:4384  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                    let _14 := add(expr_mpos, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 32)\n                    /// @src 63:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\"\n                    mstore(_14, 0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f)\n                    mstore(add(/** @src 63:4304:4384  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ size), /** @src 63:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ _12)\n                    mstore(add(/** @src 63:4304:4384  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 96), /** @src 63:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ _13)\n                    mstore(add(/** @src 63:4304:4384  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 128), /** @src 63:3744:3757  \"block.chainid\" */ chainid())\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    mstore(/** @src 63:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 63:4304:4384  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 63:3727:3757  \"_cachedChainId = block.chainid\" */ 160), /** @src 63:4378:4382  \"this\" */ address())\n                    /// @src 63:4304:4384  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                    mstore(expr_mpos, /** @src 63:3727:3757  \"_cachedChainId = block.chainid\" */ 160)\n                    /// @src 63:4304:4384  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                    finalize_allocation(expr_mpos, 192)\n                    /// @src 63:3767:3815  \"_cachedDomainSeparator = _buildDomainSeparator()\"\n                    mstore(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 128, /** @src 63:4294:4385  \"keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)))\" */ keccak256(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _14, mload(/** @src 63:4294:4385  \"keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)))\" */ expr_mpos)))\n                    /// @src 63:3825:3852  \"_cachedThis = address(this)\"\n                    mstore(/** @src 63:4304:4384  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ 192, /** @src 63:4378:4382  \"this\" */ address())\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    sstore(/** @src 94:1117:1142  \"_decimals = tokenDecimals\" */ 0x09, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ or(and(sload(/** @src 94:1117:1142  \"_decimals = tokenDecimals\" */ 0x09), /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ not(255)), _4))\n                    let _15 := mload(size)\n                    let _16 := datasize(\"ERC20GearSupply_62571_deployed\")\n                    codecopy(_15, dataoffset(\"ERC20GearSupply_62571_deployed\"), _16)\n                    setimmutable(_15, \"46840\", mload(128))\n                    setimmutable(_15, \"46842\", mload(/** @src 63:3727:3757  \"_cachedChainId = block.chainid\" */ 160))\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    setimmutable(_15, \"46844\", mload(/** @src 63:4304:4384  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ 192))\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    setimmutable(_15, \"46846\", mload(/** @src 63:3628:3664  \"_hashedName = keccak256(bytes(name))\" */ 224))\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    setimmutable(_15, \"46848\", mload(/** @src 63:3674:3716  \"_hashedVersion = keccak256(bytes(version))\" */ 256))\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    setimmutable(_15, \"46851\", mload(/** @src 63:3493:3546  \"_name = name.toShortStringWithFallback(_nameFallback)\" */ 288))\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    setimmutable(_15, \"46854\", mload(/** @src 63:3556:3618  \"_version = version.toShortStringWithFallback(_versionFallback)\" */ 320))\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    return(_15, _16)\n                }\n                function finalize_allocation(memPtr, size)\n                {\n                    let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                    if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x24)\n                    }\n                    mstore(64, newFreePtr)\n                }\n                function abi_decode_string_fromMemory(offset, end) -> array\n                {\n                    if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                    let length := mload(offset)\n                    let size := /** @src -1:-1:-1 */ 0\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    if gt(length, sub(shl(64, 1), 1))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x24)\n                    }\n                    size := add(and(add(length, 0x1f), not(31)), 0x20)\n                    let memPtr := mload(64)\n                    finalize_allocation(memPtr, size)\n                    mstore(memPtr, length)\n                    if gt(add(add(offset, length), 0x20), end)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    mcopy(add(memPtr, 0x20), add(offset, 0x20), length)\n                    mstore(add(add(memPtr, length), 0x20), /** @src -1:-1:-1 */ 0)\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    array := memPtr\n                }\n                /// @ast-id 44756 @src 58:2887:3227  \"function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {...\"\n                function fun_toShortStringWithFallback(var_value_mpos) -> var\n                {\n                    /// @src 58:2983:2994  \"ShortString\"\n                    var := /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0\n                    /// @src 58:3010:3029  \"bytes(value).length\"\n                    let expr := /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ mload(/** @src 58:3010:3022  \"bytes(value)\" */ var_value_mpos)\n                    /// @src 58:3006:3221  \"if (bytes(value).length < 32) {...\"\n                    switch /** @src 58:3010:3034  \"bytes(value).length < 32\" */ lt(expr, /** @src 58:3032:3034  \"32\" */ 0x20)\n                    case /** @src 58:3006:3221  \"if (bytes(value).length < 32) {...\" */ 0 {\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        if gt(expr, sub(shl(64, 1), 1))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        let _1 := sload(/** @src 63:3532:3545  \"_nameFallback\" */ 0x06)\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        let length := 0\n                        length := shr(1, _1)\n                        let outOfPlaceEncoding := and(_1, 1)\n                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                        if eq(outOfPlaceEncoding, lt(length, /** @src 58:3032:3034  \"32\" */ 0x20))\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x22)\n                            revert(0, 0x24)\n                        }\n                        if gt(length, 31)\n                        {\n                            mstore(0, /** @src 63:3532:3545  \"_nameFallback\" */ 0x06)\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            let data := keccak256(0, /** @src 58:3032:3034  \"32\" */ 0x20)\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            let _2 := add(data, shr(5, add(length, 31)))\n                            let start := add(data, shr(5, add(expr, 31)))\n                            for { } lt(start, _2) { start := add(start, 1) }\n                            { sstore(start, 0) }\n                        }\n                        let srcOffset := 0\n                        srcOffset := /** @src 58:3032:3034  \"32\" */ 0x20\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        switch gt(expr, 31)\n                        case 1 {\n                            let loopEnd := and(expr, not(31))\n                            mstore(0, /** @src 63:3532:3545  \"_nameFallback\" */ 0x06)\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            let dstPtr := keccak256(0, /** @src 58:3032:3034  \"32\" */ srcOffset)\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            let i := 0\n                            for { }\n                            lt(i, loopEnd)\n                            {\n                                i := add(i, /** @src 58:3032:3034  \"32\" */ 0x20)\n                            }\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            {\n                                sstore(dstPtr, mload(add(var_value_mpos, srcOffset)))\n                                dstPtr := add(dstPtr, 1)\n                                srcOffset := add(srcOffset, /** @src 58:3032:3034  \"32\" */ 0x20)\n                            }\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            if lt(loopEnd, expr)\n                            {\n                                let lastValue := mload(add(var_value_mpos, srcOffset))\n                                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, expr), 248), not(0)))))\n                            }\n                            sstore(/** @src 63:3532:3545  \"_nameFallback\" */ 0x06, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ add(shl(1, expr), 1))\n                        }\n                        default {\n                            let value := 0\n                            if expr\n                            {\n                                value := mload(add(var_value_mpos, srcOffset))\n                            }\n                            sstore(/** @src 63:3532:3545  \"_nameFallback\" */ 0x06, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ or(and(value, not(shr(shl(3, expr), not(0)))), shl(1, expr)))\n                        }\n                        /// @src 58:3168:3210  \"return ShortString.wrap(FALLBACK_SENTINEL)\"\n                        var := /** @src 58:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff\n                        /// @src 58:3168:3210  \"return ShortString.wrap(FALLBACK_SENTINEL)\"\n                        leave\n                    }\n                    default /// @src 58:3006:3221  \"if (bytes(value).length < 32) {...\"\n                    {\n                        /// @src 58:1836:1908  \"if (bstr.length > 31) {...\"\n                        if /** @src 58:1840:1856  \"bstr.length > 31\" */ gt(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ mload(/** @src 58:1840:1851  \"bstr.length\" */ var_value_mpos), /** @src 58:1854:1856  \"31\" */ 0x1f)\n                        /// @src 58:1836:1908  \"if (bstr.length > 31) {...\"\n                        {\n                            /// @src 58:1879:1897  \"StringTooLong(str)\"\n                            let _3 := /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ mload(64)\n                            /// @src 58:1879:1897  \"StringTooLong(str)\"\n                            mstore(_3, shl(224, 0x305a27a9))\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            mstore(/** @src 58:1879:1897  \"StringTooLong(str)\" */ add(_3, 4), /** @src 58:3032:3034  \"32\" */ 0x20)\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            let length_1 := mload(var_value_mpos)\n                            mstore(add(/** @src 58:1879:1897  \"StringTooLong(str)\" */ _3, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 36), length_1)\n                            mcopy(add(/** @src 58:1879:1897  \"StringTooLong(str)\" */ _3, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 68), add(var_value_mpos, /** @src 58:3032:3034  \"32\" */ 0x20), /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ length_1)\n                            mstore(add(add(/** @src 58:1879:1897  \"StringTooLong(str)\" */ _3, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ length_1), 68), 0)\n                            /// @src 58:1879:1897  \"StringTooLong(str)\"\n                            revert(_3, add(sub(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ add(/** @src 58:1879:1897  \"StringTooLong(str)\" */ _3, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ and(add(length_1, /** @src 58:1854:1856  \"31\" */ 0x1f), /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ not(31))), /** @src 58:1879:1897  \"StringTooLong(str)\" */ _3), /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 68))\n                        }\n                        /// @src 58:1957:1970  \"bytes32(bstr)\"\n                        let value_1 := /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0\n                        let length_2 := mload(var_value_mpos)\n                        value_1 := /** @src 63:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ mload(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ add(var_value_mpos, /** @src 58:3032:3034  \"32\" */ 0x20))\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        if lt(length_2, /** @src 58:3032:3034  \"32\" */ 0x20)\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        {\n                            value_1 := and(value_1, shl(shl(3, sub(/** @src 58:3032:3034  \"32\" */ 0x20, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ length_2)), not(0)))\n                        }\n                        /// @src 58:3050:3077  \"return toShortString(value)\"\n                        var := /** @src 58:1949:1985  \"uint256(bytes32(bstr)) | bstr.length\" */ or(value_1, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ length_2)\n                        /// @src 58:3050:3077  \"return toShortString(value)\"\n                        leave\n                    }\n                }\n                /// @ast-id 44756 @src 58:2887:3227  \"function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {...\"\n                function fun_toShortStringWithFallback_7441(var_value_mpos) -> var_\n                {\n                    /// @src 58:2983:2994  \"ShortString\"\n                    var_ := /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0\n                    /// @src 58:3010:3029  \"bytes(value).length\"\n                    let expr := /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ mload(/** @src 58:3010:3022  \"bytes(value)\" */ var_value_mpos)\n                    /// @src 58:3006:3221  \"if (bytes(value).length < 32) {...\"\n                    switch /** @src 58:3010:3034  \"bytes(value).length < 32\" */ lt(expr, /** @src 58:3032:3034  \"32\" */ 0x20)\n                    case /** @src 58:3006:3221  \"if (bytes(value).length < 32) {...\" */ 0 {\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        if gt(expr, sub(shl(64, 1), 1))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        let _1 := sload(/** @src 63:3601:3617  \"_versionFallback\" */ 0x07)\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        let length := 0\n                        length := shr(1, _1)\n                        let outOfPlaceEncoding := and(_1, 1)\n                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                        if eq(outOfPlaceEncoding, lt(length, /** @src 58:3032:3034  \"32\" */ 0x20))\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x22)\n                            revert(0, 0x24)\n                        }\n                        if gt(length, 31)\n                        {\n                            mstore(0, /** @src 63:3601:3617  \"_versionFallback\" */ 0x07)\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            let data := keccak256(0, /** @src 58:3032:3034  \"32\" */ 0x20)\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            let _2 := add(data, shr(5, add(length, 31)))\n                            let start := add(data, shr(5, add(expr, 31)))\n                            for { } lt(start, _2) { start := add(start, 1) }\n                            { sstore(start, 0) }\n                        }\n                        let srcOffset := 0\n                        srcOffset := /** @src 58:3032:3034  \"32\" */ 0x20\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        switch gt(expr, 31)\n                        case 1 {\n                            let loopEnd := and(expr, not(31))\n                            mstore(0, /** @src 63:3601:3617  \"_versionFallback\" */ 0x07)\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            let dstPtr := keccak256(0, /** @src 58:3032:3034  \"32\" */ srcOffset)\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            let i := 0\n                            for { }\n                            lt(i, loopEnd)\n                            {\n                                i := add(i, /** @src 58:3032:3034  \"32\" */ 0x20)\n                            }\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            {\n                                sstore(dstPtr, mload(add(var_value_mpos, srcOffset)))\n                                dstPtr := add(dstPtr, 1)\n                                srcOffset := add(srcOffset, /** @src 58:3032:3034  \"32\" */ 0x20)\n                            }\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            if lt(loopEnd, expr)\n                            {\n                                let lastValue := mload(add(var_value_mpos, srcOffset))\n                                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, expr), 248), not(0)))))\n                            }\n                            sstore(/** @src 63:3601:3617  \"_versionFallback\" */ 0x07, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ add(shl(1, expr), 1))\n                        }\n                        default {\n                            let value := 0\n                            if expr\n                            {\n                                value := mload(add(var_value_mpos, srcOffset))\n                            }\n                            sstore(/** @src 63:3601:3617  \"_versionFallback\" */ 0x07, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ or(and(value, not(shr(shl(3, expr), not(0)))), shl(1, expr)))\n                        }\n                        /// @src 58:3168:3210  \"return ShortString.wrap(FALLBACK_SENTINEL)\"\n                        var_ := /** @src 58:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff\n                        /// @src 58:3168:3210  \"return ShortString.wrap(FALLBACK_SENTINEL)\"\n                        leave\n                    }\n                    default /// @src 58:3006:3221  \"if (bytes(value).length < 32) {...\"\n                    {\n                        /// @src 58:1836:1908  \"if (bstr.length > 31) {...\"\n                        if /** @src 58:1840:1856  \"bstr.length > 31\" */ gt(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ mload(/** @src 58:1840:1851  \"bstr.length\" */ var_value_mpos), /** @src 58:1854:1856  \"31\" */ 0x1f)\n                        /// @src 58:1836:1908  \"if (bstr.length > 31) {...\"\n                        {\n                            /// @src 58:1879:1897  \"StringTooLong(str)\"\n                            let _3 := /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ mload(64)\n                            /// @src 58:1879:1897  \"StringTooLong(str)\"\n                            mstore(_3, shl(224, 0x305a27a9))\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            mstore(/** @src 58:1879:1897  \"StringTooLong(str)\" */ add(_3, 4), /** @src 58:3032:3034  \"32\" */ 0x20)\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            let length_1 := mload(var_value_mpos)\n                            mstore(add(/** @src 58:1879:1897  \"StringTooLong(str)\" */ _3, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 36), length_1)\n                            mcopy(add(/** @src 58:1879:1897  \"StringTooLong(str)\" */ _3, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 68), add(var_value_mpos, /** @src 58:3032:3034  \"32\" */ 0x20), /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ length_1)\n                            mstore(add(add(/** @src 58:1879:1897  \"StringTooLong(str)\" */ _3, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ length_1), 68), 0)\n                            /// @src 58:1879:1897  \"StringTooLong(str)\"\n                            revert(_3, add(sub(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ add(/** @src 58:1879:1897  \"StringTooLong(str)\" */ _3, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ and(add(length_1, /** @src 58:1854:1856  \"31\" */ 0x1f), /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ not(31))), /** @src 58:1879:1897  \"StringTooLong(str)\" */ _3), /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 68))\n                        }\n                        /// @src 58:1957:1970  \"bytes32(bstr)\"\n                        let value_1 := /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0\n                        let length_2 := mload(var_value_mpos)\n                        value_1 := /** @src 63:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ mload(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ add(var_value_mpos, /** @src 58:3032:3034  \"32\" */ 0x20))\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        if lt(length_2, /** @src 58:3032:3034  \"32\" */ 0x20)\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        {\n                            value_1 := and(value_1, shl(shl(3, sub(/** @src 58:3032:3034  \"32\" */ 0x20, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ length_2)), not(0)))\n                        }\n                        /// @src 58:3050:3077  \"return toShortString(value)\"\n                        var_ := /** @src 58:1949:1985  \"uint256(bytes32(bstr)) | bstr.length\" */ or(value_1, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ length_2)\n                        /// @src 58:3050:3077  \"return toShortString(value)\"\n                        leave\n                    }\n                }\n            }\n            /// @use-src 28:\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\", 44:\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\", 46:\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol\", 47:\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\", 54:\"lib/openzeppelin-contracts/contracts/utils/Context.sol\", 56:\"lib/openzeppelin-contracts/contracts/utils/Nonces.sol\", 58:\"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\", 62:\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\", 63:\"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\", 65:\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\", 94:\"src/erc20/managed/ERC20GearSupply.sol\"\n            object \"ERC20GearSupply_62571_deployed\" {\n                code {\n                    {\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        let _1 := memoryguard(0x80)\n                        mstore(64, _1)\n                        if iszero(lt(calldatasize(), 4))\n                        {\n                            switch shr(224, calldataload(0))\n                            case 0x06fdde03 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let ret := 0\n                                let slotValue := sload(/** @src 44:1837:1842  \"_name\" */ 0x03)\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                let length := extract_byte_array_length(slotValue)\n                                mstore(_1, length)\n                                switch and(slotValue, 1)\n                                case 0 {\n                                    mstore(add(_1, 0x20), and(slotValue, not(255)))\n                                    ret := add(add(_1, shl(5, iszero(iszero(length)))), 0x20)\n                                }\n                                case 1 {\n                                    mstore(0, /** @src 44:1837:1842  \"_name\" */ 0x03)\n                                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                    let dataPos := keccak256(0, 0x20)\n                                    let i := 0\n                                    for { } lt(i, length) { i := add(i, 0x20) }\n                                    {\n                                        mstore(add(add(_1, i), 0x20), sload(dataPos))\n                                        dataPos := add(dataPos, 1)\n                                    }\n                                    ret := add(add(_1, i), 0x20)\n                                }\n                                finalize_allocation(_1, sub(ret, _1))\n                                let memPos := mload(64)\n                                mstore(memPos, 0x20)\n                                return(memPos, sub(abi_encode_string(_1, add(memPos, 0x20)), memPos))\n                            }\n                            case 0x095ea7b3 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                let value0 := abi_decode_t_address()\n                                /// @src 44:8746:8750  \"true\"\n                                fun_approve(/** @src 54:735:745  \"msg.sender\" */ caller(), /** @src 44:8746:8750  \"true\" */ value0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ calldataload(36))\n                                let memPos_1 := mload(64)\n                                mstore(memPos_1, 1)\n                                return(memPos_1, 32)\n                            }\n                            case 0x18160ddd {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let _2 := sload(/** @src 44:2881:2893  \"_totalSupply\" */ 0x02)\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                let memPos_2 := mload(64)\n                                mstore(memPos_2, _2)\n                                return(memPos_2, 32)\n                            }\n                            case 0x23b872dd {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 96) { revert(0, 0) }\n                                let value0_1 := abi_decode_t_address()\n                                let value1 := abi_decode_address()\n                                let value := calldataload(68)\n                                /// @src 44:4854:4859  \"value\"\n                                fun_spendAllowance(value0_1, /** @src 54:735:745  \"msg.sender\" */ caller(), /** @src 44:4854:4859  \"value\" */ value)\n                                /// @src 44:4890:4895  \"value\"\n                                fun_transfer(value0_1, value1, value)\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                let memPos_3 := mload(64)\n                                mstore(memPos_3, 1)\n                                return(memPos_3, 32)\n                            }\n                            case 0x313ce567 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let value_1 := and(sload(/** @src 94:1333:1342  \"_decimals\" */ 0x09), /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0xff)\n                                let memPos_4 := mload(64)\n                                mstore(memPos_4, value_1)\n                                return(memPos_4, 32)\n                            }\n                            case 0x3644e515 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let ret_1 := /** @src 47:2699:2719  \"_domainSeparatorV4()\" */ fun_domainSeparatorV4()\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                let memPos_5 := mload(64)\n                                mstore(memPos_5, ret_1)\n                                return(memPos_5, 32)\n                            }\n                            case 0x40c10f19 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                let value0_2 := abi_decode_t_address()\n                                let value_2 := calldataload(36)\n                                /// @src 28:1500:1562  \"modifier onlyOwner() {...\"\n                                fun_checkOwner()\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                let _3 := and(/** @src 44:7432:7453  \"account == address(0)\" */ value0_2, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ sub(shl(160, 1), 1))\n                                /// @src 44:7432:7453  \"account == address(0)\"\n                                let _4 := iszero(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _3)\n                                /// @src 44:7428:7519  \"if (account == address(0)) {...\"\n                                if /** @src 44:7432:7453  \"account == address(0)\" */ _4\n                                /// @src 44:7428:7519  \"if (account == address(0)) {...\"\n                                {\n                                    /// @src 44:7476:7508  \"ERC20InvalidReceiver(address(0))\"\n                                    mstore(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0, /** @src 44:7476:7508  \"ERC20InvalidReceiver(address(0))\" */ shl(224, 0xec442f05))\n                                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                    mstore(4, 0)\n                                    /// @src 44:7476:7508  \"ERC20InvalidReceiver(address(0))\"\n                                    revert(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0, 36)\n                                }\n                                let _5 := sload(/** @src 44:6137:6158  \"_totalSupply += value\" */ 0x02)\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                let sum := add(_5, value_2)\n                                if gt(_5, sum)\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x11)\n                                    revert(0, 36)\n                                }\n                                sstore(/** @src 44:6137:6158  \"_totalSupply += value\" */ 0x02, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ sum)\n                                /// @src 44:6547:6972  \"if (to == address(0)) {...\"\n                                _4 := /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0\n                                mstore(0, _3)\n                                mstore(0x20, 0)\n                                let dataSlot := keccak256(0, 64)\n                                sstore(dataSlot, add(sload(/** @src 44:6925:6947  \"_balances[to] += value\" */ dataSlot), /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ value_2))\n                                /// @src 44:6987:7012  \"Transfer(from, to, value)\"\n                                let _6 := /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ mload(64)\n                                mstore(_6, value_2)\n                                /// @src 44:6987:7012  \"Transfer(from, to, value)\"\n                                log3(_6, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 32, /** @src 44:6987:7012  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0, /** @src 44:6987:7012  \"Transfer(from, to, value)\" */ _3)\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                return(0, 0)\n                            }\n                            case 0x42966c68 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                /// @src 46:692:697  \"value\"\n                                fun_burn(/** @src 54:735:745  \"msg.sender\" */ caller(), /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ calldataload(4))\n                                return(0, 0)\n                            }\n                            case 0x70a08231 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                mstore(0, and(abi_decode_t_address(), sub(shl(160, 1), 1)))\n                                mstore(32, 0)\n                                let _7 := sload(keccak256(0, 64))\n                                let memPos_6 := mload(64)\n                                mstore(memPos_6, _7)\n                                return(memPos_6, 32)\n                            }\n                            case 0x715018a6 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                /// @src 28:1500:1562  \"modifier onlyOwner() {...\"\n                                fun_checkOwner()\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                let _8 := sload(/** @src 28:3004:3010  \"_owner\" */ 0x05)\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                sstore(/** @src 28:3004:3010  \"_owner\" */ 0x05, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ and(_8, shl(160, 0xffffffffffffffffffffffff)))\n                                /// @src 28:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                                log3(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0, 0, /** @src 28:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ and(_8, sub(shl(160, 1), 1)), 0)\n                                return(0, 0)\n                            }\n                            case 0x79cc6790 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                let value0_3 := abi_decode_t_address()\n                                let value_3 := calldataload(36)\n                                /// @src 46:1135:1140  \"value\"\n                                fun_spendAllowance(value0_3, /** @src 54:735:745  \"msg.sender\" */ caller(), /** @src 46:1135:1140  \"value\" */ value_3)\n                                /// @src 46:1166:1171  \"value\"\n                                fun_burn(value0_3, value_3)\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                return(0, 0)\n                            }\n                            case 0x7ecebe00 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                mstore(0, and(abi_decode_t_address(), sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 56:624:631  \"_nonces\" */ 0x08)\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                let _9 := sload(keccak256(0, 64))\n                                let memPos_7 := mload(64)\n                                mstore(memPos_7, _9)\n                                return(memPos_7, 32)\n                            }\n                            case 0x84b0196e {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                /// @src 63:6176:6224  \"return _name.toStringWithFallback(_nameFallback)\"\n                                let var_mpos := /** @src 63:6183:6224  \"_name.toStringWithFallback(_nameFallback)\" */ fun_toStringWithFallback(/** @src 63:6183:6188  \"_name\" */ loadimmutable(\"46851\"))\n                                /// @src 63:6631:6685  \"return _version.toStringWithFallback(_versionFallback)\"\n                                let var_mpos_1 := /** @src 63:6638:6685  \"_version.toStringWithFallback(_versionFallback)\" */ fun_toStringWithFallback_6298(/** @src 63:6638:6646  \"_version\" */ loadimmutable(\"46854\"))\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                let size := 0\n                                let length_1 := 0\n                                length_1 := 0\n                                size := 0x20\n                                let memPtr := mload(64)\n                                finalize_allocation(memPtr, size)\n                                mstore(memPtr, 0)\n                                let size_1 := 0\n                                let length_2 := 0\n                                length_2 := 0\n                                size_1 := size\n                                calldatacopy(0, calldatasize(), 0)\n                                let memPos_8 := mload(64)\n                                mstore(memPos_8, shl(248, 15))\n                                mstore(add(memPos_8, size), 224)\n                                let tail := abi_encode_string(var_mpos, add(memPos_8, 224))\n                                mstore(add(memPos_8, 64), sub(tail, memPos_8))\n                                let tail_1 := abi_encode_string(var_mpos_1, tail)\n                                mstore(add(memPos_8, 96), /** @src 63:5674:5687  \"block.chainid\" */ chainid())\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                mstore(add(memPos_8, 128), /** @src 63:5709:5713  \"this\" */ address())\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                mstore(add(memPos_8, 160), 0)\n                                mstore(add(memPos_8, 192), sub(tail_1, memPos_8))\n                                let pos := tail_1\n                                let length_3 := mload(memPtr)\n                                mstore(tail_1, length_3)\n                                pos := add(tail_1, size)\n                                let srcPtr := add(memPtr, size)\n                                let i_1 := 0\n                                for { } lt(i_1, length_3) { i_1 := add(i_1, 1) }\n                                {\n                                    mstore(pos, mload(srcPtr))\n                                    pos := add(pos, size)\n                                    srcPtr := add(srcPtr, size)\n                                }\n                                return(memPos_8, sub(pos, memPos_8))\n                            }\n                            case 0x8da5cb5b {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let value_4 := and(sload(/** @src 28:1710:1716  \"_owner\" */ 0x05), /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ sub(shl(160, 1), 1))\n                                let memPos_9 := mload(64)\n                                mstore(memPos_9, value_4)\n                                return(memPos_9, 32)\n                            }\n                            case 0x95d89b41 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let memPtr_1 := mload(64)\n                                let ret_2 := 0\n                                let slotValue_1 := sload(4)\n                                let length_4 := extract_byte_array_length(slotValue_1)\n                                mstore(memPtr_1, length_4)\n                                switch and(slotValue_1, 1)\n                                case 0 {\n                                    mstore(add(memPtr_1, 0x20), and(slotValue_1, not(255)))\n                                    ret_2 := add(add(memPtr_1, shl(5, iszero(iszero(length_4)))), 0x20)\n                                }\n                                case 1 {\n                                    mstore(0, 4)\n                                    let dataPos_1 := keccak256(0, 0x20)\n                                    let i_2 := 0\n                                    for { } lt(i_2, length_4) { i_2 := add(i_2, 0x20) }\n                                    {\n                                        mstore(add(add(memPtr_1, i_2), 0x20), sload(dataPos_1))\n                                        dataPos_1 := add(dataPos_1, 1)\n                                    }\n                                    ret_2 := add(add(memPtr_1, i_2), 0x20)\n                                }\n                                finalize_allocation(memPtr_1, sub(ret_2, memPtr_1))\n                                let memPos_10 := mload(64)\n                                mstore(memPos_10, 0x20)\n                                return(memPos_10, sub(abi_encode_string(memPtr_1, add(memPos_10, 0x20)), memPos_10))\n                            }\n                            case 0xa9059cbb {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                let value0_4 := abi_decode_t_address()\n                                /// @src 44:3388:3393  \"value\"\n                                fun_transfer(/** @src 54:735:745  \"msg.sender\" */ caller(), /** @src 44:3388:3393  \"value\" */ value0_4, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ calldataload(36))\n                                let memPos_11 := mload(64)\n                                mstore(memPos_11, 1)\n                                return(memPos_11, 32)\n                            }\n                            case 0xd505accf {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 224) { revert(0, 0) }\n                                let value0_5 := abi_decode_t_address()\n                                let value1_1 := abi_decode_address()\n                                let value_5 := calldataload(68)\n                                let value_6 := calldataload(100)\n                                let value_7 := calldataload(132)\n                                if iszero(eq(value_7, and(value_7, 0xff))) { revert(0, 0) }\n                                /// @src 47:1867:1964  \"if (block.timestamp > deadline) {...\"\n                                if /** @src 47:1871:1897  \"block.timestamp > deadline\" */ gt(/** @src 47:1871:1886  \"block.timestamp\" */ timestamp(), /** @src 47:1871:1897  \"block.timestamp > deadline\" */ value_6)\n                                /// @src 47:1867:1964  \"if (block.timestamp > deadline) {...\"\n                                {\n                                    /// @src 47:1920:1953  \"ERC2612ExpiredSignature(deadline)\"\n                                    mstore(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0, /** @src 47:1920:1953  \"ERC2612ExpiredSignature(deadline)\" */ shl(225, 0x313c8981))\n                                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                    mstore(4, value_6)\n                                    /// @src 47:1920:1953  \"ERC2612ExpiredSignature(deadline)\"\n                                    revert(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0, 36)\n                                }\n                                let _10 := and(value0_5, sub(shl(160, 1), 1))\n                                mstore(0, _10)\n                                mstore(32, /** @src 56:1121:1128  \"_nonces\" */ 0x08)\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                let dataSlot_1 := keccak256(0, 64)\n                                let _11 := sload(/** @src 56:1121:1137  \"_nonces[owner]++\" */ dataSlot_1)\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                sstore(dataSlot_1, add(/** @src 56:1121:1137  \"_nonces[owner]++\" */ _11, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 1))\n                                /// @src 47:2005:2083  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\"\n                                let expr_mpos := /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ mload(64)\n                                /// @src 47:2005:2083  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\"\n                                let _12 := add(expr_mpos, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 32)\n                                mstore(_12, /** @src 47:1024:1119  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9)\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                mstore(/** @src 47:1024:1119  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ add(/** @src 47:2005:2083  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\" */ expr_mpos, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 64), _10)\n                                mstore(/** @src 47:1024:1119  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ add(/** @src 47:2005:2083  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\" */ expr_mpos, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 96), and(value1_1, sub(shl(160, 1), 1)))\n                                mstore(/** @src 47:1024:1119  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ add(/** @src 47:2005:2083  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\" */ expr_mpos, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 128), value_5)\n                                mstore(/** @src 47:1024:1119  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ add(/** @src 47:2005:2083  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\" */ expr_mpos, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 160), _11)\n                                mstore(/** @src 47:1024:1119  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ add(/** @src 47:2005:2083  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\" */ expr_mpos, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 192), value_6)\n                                /// @src 47:2005:2083  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\"\n                                mstore(expr_mpos, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 192)\n                                /// @src 47:2005:2083  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\"\n                                finalize_allocation(expr_mpos, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 224)\n                                /// @src 47:1995:2084  \"keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline))\"\n                                let _13 := keccak256(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _12, mload(/** @src 47:1995:2084  \"keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline))\" */ expr_mpos))\n                                /// @src 63:5153:5173  \"_domainSeparatorV4()\"\n                                let _14 := fun_domainSeparatorV4()\n                                /// @src 65:3993:4242  \"assembly (\\\"memory-safe\\\") {...\"\n                                let usr$ptr := mload(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 64)\n                                /// @src 65:3993:4242  \"assembly (\\\"memory-safe\\\") {...\"\n                                mstore(usr$ptr, \"\\x19\\x01\")\n                                mstore(add(usr$ptr, 0x02), _14)\n                                mstore(add(usr$ptr, 0x22), _13)\n                                /// @src 62:7051:7076  \"tryRecover(hash, v, r, s)\"\n                                let expr_component, expr_component_1, expr_component_2 := fun_tryRecover(/** @src 65:3993:4242  \"assembly (\\\"memory-safe\\\") {...\" */ keccak256(usr$ptr, 0x42), /** @src 62:7051:7076  \"tryRecover(hash, v, r, s)\" */ value_7, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ calldataload(164), calldataload(196))\n                                /// @src 62:7105:7113  \"errorArg\"\n                                fun_throwError(expr_component_1, expr_component_2)\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                let _15 := and(/** @src 47:2208:2223  \"signer != owner\" */ expr_component, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ sub(shl(160, 1), 1))\n                                /// @src 47:2204:2292  \"if (signer != owner) {...\"\n                                if /** @src 47:2208:2223  \"signer != owner\" */ iszero(eq(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _15, _10))\n                                /// @src 47:2204:2292  \"if (signer != owner) {...\"\n                                {\n                                    /// @src 47:2246:2281  \"ERC2612InvalidSigner(signer, owner)\"\n                                    mstore(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0, /** @src 47:2246:2281  \"ERC2612InvalidSigner(signer, owner)\" */ shl(225, 0x25c00723))\n                                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                    mstore(4, _15)\n                                    mstore(36, _10)\n                                    /// @src 47:2246:2281  \"ERC2612InvalidSigner(signer, owner)\"\n                                    revert(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0, 68)\n                                }\n                                /// @src 44:8746:8750  \"true\"\n                                fun_approve(value0_5, value1_1, value_5)\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                return(0, 0)\n                            }\n                            case 0xdd62ed3e {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                let value0_6 := abi_decode_t_address()\n                                let value1_2 := abi_decode_address()\n                                mstore(0, and(value0_6, sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 44:3561:3572  \"_allowances\" */ 0x01)\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                let dataSlot_2 := keccak256(0, 64)\n                                /// @src 44:3561:3588  \"_allowances[owner][spender]\"\n                                let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ and(value1_2, sub(shl(160, 1), 1)))\n                                mstore(0x20, /** @src 44:3561:3579  \"_allowances[owner]\" */ dataSlot_2)\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x40)\n                                let _16 := sload(/** @src 44:3561:3588  \"_allowances[owner][spender]\" */ dataSlot_3)\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                let memPos_12 := mload(64)\n                                mstore(memPos_12, _16)\n                                return(memPos_12, 32)\n                            }\n                            case 0xf2fde38b {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                let value0_7 := abi_decode_t_address()\n                                /// @src 28:1500:1562  \"modifier onlyOwner() {...\"\n                                fun_checkOwner()\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                let _17 := and(/** @src 28:2627:2649  \"newOwner == address(0)\" */ value0_7, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ sub(shl(160, 1), 1))\n                                /// @src 28:2623:2714  \"if (newOwner == address(0)) {...\"\n                                if /** @src 28:2627:2649  \"newOwner == address(0)\" */ iszero(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _17)\n                                /// @src 28:2623:2714  \"if (newOwner == address(0)) {...\"\n                                {\n                                    /// @src 28:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                                    mstore(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0, /** @src 28:2672:2703  \"OwnableInvalidOwner(address(0))\" */ shl(224, 0x1e4fbdf7))\n                                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                    mstore(4, 0)\n                                    /// @src 28:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                                    revert(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0, 36)\n                                }\n                                let _18 := sload(/** @src 28:3004:3010  \"_owner\" */ 0x05)\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                sstore(/** @src 28:3004:3010  \"_owner\" */ 0x05, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ or(and(_18, shl(160, 0xffffffffffffffffffffffff)), _17))\n                                /// @src 28:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                                log3(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0, 0, /** @src 28:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ and(_18, sub(shl(160, 1), 1)), /** @src 28:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ _17)\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                return(0, 0)\n                            }\n                        }\n                        revert(0, 0)\n                    }\n                    function abi_encode_string(value, pos) -> end\n                    {\n                        let length := mload(value)\n                        mstore(pos, length)\n                        mcopy(add(pos, 0x20), add(value, 0x20), length)\n                        mstore(add(add(pos, length), 0x20), /** @src -1:-1:-1 */ 0)\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n                    }\n                    function abi_decode_t_address() -> value\n                    {\n                        value := calldataload(4)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                    }\n                    function abi_decode_address() -> value\n                    {\n                        value := calldataload(36)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                    }\n                    function extract_byte_array_length(data) -> length\n                    {\n                        length := shr(1, data)\n                        let outOfPlaceEncoding := and(data, 1)\n                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                        if eq(outOfPlaceEncoding, lt(length, 32))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x22)\n                            revert(0, 0x24)\n                        }\n                    }\n                    function abi_encode_string_storage(value, pos) -> ret\n                    {\n                        let slotValue := sload(value)\n                        let length := extract_byte_array_length(slotValue)\n                        mstore(pos, length)\n                        switch and(slotValue, 1)\n                        case 0 {\n                            mstore(add(pos, 0x20), and(slotValue, not(255)))\n                            ret := add(add(pos, shl(5, iszero(iszero(length)))), 0x20)\n                        }\n                        case 1 {\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ value)\n                            let dataPos := keccak256(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x20)\n                            let i := /** @src -1:-1:-1 */ 0\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            for { } lt(i, length) { i := add(i, 0x20) }\n                            {\n                                mstore(add(add(pos, i), 0x20), sload(dataPos))\n                                dataPos := add(dataPos, 1)\n                            }\n                            ret := add(add(pos, i), 0x20)\n                        }\n                    }\n                    function finalize_allocation(memPtr, size)\n                    {\n                        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                    }\n                    /// @ast-id 42351 @src 44:10319:10795  \"function _spendAllowance(address owner, address spender, uint256 value) internal virtual {...\"\n                    function fun_spendAllowance(var_owner, var_spender, var_value)\n                    {\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        let _1 := and(var_owner, sub(shl(160, 1), 1))\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _1)\n                        mstore(0x20, /** @src 44:3561:3572  \"_allowances\" */ 0x01)\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x40)\n                        /// @src 44:3561:3588  \"_allowances[owner][spender]\"\n                        let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ and(/** @src 44:10445:10470  \"allowance(owner, spender)\" */ var_spender, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 44:3561:3579  \"_allowances[owner]\" */ dataSlot)\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x40)\n                        let _2 := sload(/** @src 44:3561:3588  \"_allowances[owner][spender]\" */ dataSlot_1)\n                        /// @src 44:10480:10789  \"if (currentAllowance < type(uint256).max) {...\"\n                        if /** @src 44:10484:10520  \"currentAllowance < type(uint256).max\" */ lt(_2, /** @src 44:10503:10520  \"type(uint256).max\" */ not(0))\n                        /// @src 44:10480:10789  \"if (currentAllowance < type(uint256).max) {...\"\n                        {\n                            /// @src 44:10536:10666  \"if (currentAllowance < value) {...\"\n                            if /** @src 44:10540:10564  \"currentAllowance < value\" */ lt(_2, var_value)\n                            /// @src 44:10536:10666  \"if (currentAllowance < value) {...\"\n                            {\n                                /// @src 44:10591:10651  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 44:10591:10651  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\" */ shl(225, 0x7dc7a0d9))\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                mstore(/** @src 44:10591:10651  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\" */ 4, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ and(var_spender, sub(shl(160, 1), 1)))\n                                mstore(36, _2)\n                                mstore(68, var_value)\n                                /// @src 44:10591:10651  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                                revert(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 100)\n                            }\n                            /// @src 44:9713:9802  \"if (owner == address(0)) {...\"\n                            if /** @src 44:9717:9736  \"owner == address(0)\" */ iszero(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _1)\n                            /// @src 44:9713:9802  \"if (owner == address(0)) {...\"\n                            {\n                                /// @src 44:9759:9791  \"ERC20InvalidApprover(address(0))\"\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 44:9759:9791  \"ERC20InvalidApprover(address(0))\" */ shl(224, 0xe602df05))\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                mstore(/** @src 44:9759:9791  \"ERC20InvalidApprover(address(0))\" */ 4, /** @src -1:-1:-1 */ 0)\n                                /// @src 44:9759:9791  \"ERC20InvalidApprover(address(0))\"\n                                revert(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 36)\n                            }\n                            /// @src 44:9811:9901  \"if (spender == address(0)) {...\"\n                            if /** @src 44:9815:9836  \"spender == address(0)\" */ iszero(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ and(/** @src 44:9815:9836  \"spender == address(0)\" */ var_spender, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ sub(shl(160, 1), 1)))\n                            /// @src 44:9811:9901  \"if (spender == address(0)) {...\"\n                            {\n                                /// @src 44:9859:9890  \"ERC20InvalidSpender(address(0))\"\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 44:9859:9890  \"ERC20InvalidSpender(address(0))\" */ shl(225, 0x4a1406b1))\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                mstore(/** @src 44:9859:9890  \"ERC20InvalidSpender(address(0))\" */ 4, /** @src -1:-1:-1 */ 0)\n                                /// @src 44:9859:9890  \"ERC20InvalidSpender(address(0))\"\n                                revert(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 36)\n                            }\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _1)\n                            mstore(0x20, /** @src 44:3561:3572  \"_allowances\" */ 0x01)\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            let dataSlot_2 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x40)\n                            /// @src 44:9910:9937  \"_allowances[owner][spender]\"\n                            let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ and(/** @src 44:9910:9937  \"_allowances[owner][spender]\" */ var_spender, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ sub(shl(160, 1), 1)))\n                            mstore(0x20, /** @src 44:9910:9928  \"_allowances[owner]\" */ dataSlot_2)\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x40)\n                            sstore(/** @src 44:9910:9937  \"_allowances[owner][spender]\" */ dataSlot_3, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ sub(/** @src 44:10732:10756  \"currentAllowance - value\" */ _2, var_value))\n                        }\n                    }\n                    /// @ast-id 42082 @src 44:5297:5597  \"function _transfer(address from, address to, uint256 value) internal {...\"\n                    function fun_transfer(var_from, var_to, var_value)\n                    {\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        let _1 := and(/** @src 44:5380:5398  \"from == address(0)\" */ var_from, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ sub(shl(160, 1), 1))\n                        /// @src 44:5380:5398  \"from == address(0)\"\n                        let _2 := iszero(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _1)\n                        /// @src 44:5376:5462  \"if (from == address(0)) {...\"\n                        if /** @src 44:5380:5398  \"from == address(0)\" */ _2\n                        /// @src 44:5376:5462  \"if (from == address(0)) {...\"\n                        {\n                            /// @src 44:5421:5451  \"ERC20InvalidSender(address(0))\"\n                            mstore(/** @src 44:5396:5397  \"0\" */ 0x00, /** @src 44:5421:5451  \"ERC20InvalidSender(address(0))\" */ shl(225, 0x4b637e8f))\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            mstore(/** @src 44:5421:5451  \"ERC20InvalidSender(address(0))\" */ 4, /** @src 44:5396:5397  \"0\" */ 0x00)\n                            /// @src 44:5421:5451  \"ERC20InvalidSender(address(0))\"\n                            revert(/** @src 44:5396:5397  \"0\" */ 0x00, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 36)\n                        }\n                        let _3 := and(/** @src 44:5475:5491  \"to == address(0)\" */ var_to, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ sub(shl(160, 1), 1))\n                        /// @src 44:5475:5491  \"to == address(0)\"\n                        let _4 := iszero(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _3)\n                        /// @src 44:5471:5557  \"if (to == address(0)) {...\"\n                        if /** @src 44:5475:5491  \"to == address(0)\" */ _4\n                        /// @src 44:5471:5557  \"if (to == address(0)) {...\"\n                        {\n                            /// @src 44:5514:5546  \"ERC20InvalidReceiver(address(0))\"\n                            mstore(/** @src 44:5396:5397  \"0\" */ 0x00, /** @src 44:7476:7508  \"ERC20InvalidReceiver(address(0))\" */ shl(224, 0xec442f05))\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            mstore(/** @src 44:5514:5546  \"ERC20InvalidReceiver(address(0))\" */ 4, /** @src 44:5396:5397  \"0\" */ 0x00)\n                            /// @src 44:5514:5546  \"ERC20InvalidReceiver(address(0))\"\n                            revert(/** @src 44:5396:5397  \"0\" */ 0x00, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 36)\n                        }\n                        /// @src 44:5997:6537  \"if (from == address(0)) {...\"\n                        _2 := /** @src 44:5396:5397  \"0\" */ 0x00\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        mstore(/** @src 44:5396:5397  \"0\" */ 0x00, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _1)\n                        mstore(0x20, /** @src 44:5396:5397  \"0\" */ 0x00)\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        let _5 := sload(keccak256(/** @src 44:5396:5397  \"0\" */ 0x00, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x40))\n                        /// @src 44:6240:6355  \"if (fromBalance < value) {...\"\n                        if /** @src 44:6244:6263  \"fromBalance < value\" */ lt(_5, var_value)\n                        /// @src 44:6240:6355  \"if (fromBalance < value) {...\"\n                        {\n                            /// @src 44:6290:6340  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                            mstore(/** @src 44:5396:5397  \"0\" */ 0x00, /** @src 44:6290:6340  \"ERC20InsufficientBalance(from, fromBalance, value)\" */ shl(226, 0x391434e3))\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            mstore(/** @src 44:6290:6340  \"ERC20InsufficientBalance(from, fromBalance, value)\" */ 4, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _1)\n                            mstore(36, _5)\n                            mstore(68, var_value)\n                            /// @src 44:6290:6340  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                            revert(/** @src 44:5396:5397  \"0\" */ 0x00, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 100)\n                        }\n                        mstore(/** @src 44:5396:5397  \"0\" */ 0x00, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _1)\n                        mstore(0x20, /** @src 44:5396:5397  \"0\" */ 0x00)\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        sstore(keccak256(/** @src 44:5396:5397  \"0\" */ 0x00, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x40), sub(/** @src 44:6493:6512  \"fromBalance - value\" */ _5, var_value))\n                        /// @src 44:6547:6972  \"if (to == address(0)) {...\"\n                        _4 := /** @src 44:5396:5397  \"0\" */ 0x00\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        mstore(/** @src 44:5396:5397  \"0\" */ 0x00, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _3)\n                        mstore(0x20, /** @src 44:5396:5397  \"0\" */ 0x00)\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        let dataSlot := keccak256(/** @src 44:5396:5397  \"0\" */ 0x00, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x40)\n                        sstore(dataSlot, add(sload(/** @src 44:6925:6947  \"_balances[to] += value\" */ dataSlot), /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ var_value))\n                        /// @src 44:6987:7012  \"Transfer(from, to, value)\"\n                        let _6 := /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ mload(64)\n                        mstore(_6, var_value)\n                        /// @src 44:6987:7012  \"Transfer(from, to, value)\"\n                        log3(_6, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 32, /** @src 44:6987:7012  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _1, _3)\n                    }\n                    /// @ast-id 46942 @src 63:3945:4207  \"function _domainSeparatorV4() internal view returns (bytes32) {...\"\n                    function fun_domainSeparatorV4() -> var\n                    {\n                        /// @src 63:3998:4005  \"bytes32\"\n                        var := /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0\n                        /// @src 63:4021:4084  \"address(this) == _cachedThis && block.chainid == _cachedChainId\"\n                        let expr := /** @src 63:4021:4049  \"address(this) == _cachedThis\" */ eq(/** @src 63:4029:4033  \"this\" */ address(), /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ and(/** @src 63:4038:4049  \"_cachedThis\" */ loadimmutable(\"46844\"), /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ sub(shl(160, 1), 1)))\n                        /// @src 63:4021:4084  \"address(this) == _cachedThis && block.chainid == _cachedChainId\"\n                        if expr\n                        {\n                            expr := /** @src 63:4053:4084  \"block.chainid == _cachedChainId\" */ eq(/** @src 63:4053:4066  \"block.chainid\" */ chainid(), /** @src 63:4070:4084  \"_cachedChainId\" */ loadimmutable(\"46842\"))\n                        }\n                        /// @src 63:4017:4201  \"if (address(this) == _cachedThis && block.chainid == _cachedChainId) {...\"\n                        switch expr\n                        case 0 {\n                            /// @src 63:4304:4384  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                            let expr_mpos := /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ mload(64)\n                            /// @src 63:4304:4384  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                            let _1 := add(expr_mpos, 0x20)\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            mstore(_1, /** @src 63:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f)\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            mstore(/** @src 63:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 63:4304:4384  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 64), /** @src 63:4326:4337  \"_hashedName\" */ loadimmutable(\"46846\"))\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            mstore(/** @src 63:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 63:4304:4384  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 63:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 96), /** @src 63:4339:4353  \"_hashedVersion\" */ loadimmutable(\"46848\"))\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            mstore(/** @src 63:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 63:4304:4384  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 63:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 128), /** @src 63:4355:4368  \"block.chainid\" */ chainid())\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            mstore(/** @src 63:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 63:4304:4384  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 63:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 160), /** @src 63:4029:4033  \"this\" */ address())\n                            /// @src 63:4304:4384  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                            mstore(expr_mpos, /** @src 63:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 160)\n                            /// @src 63:4304:4384  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                            finalize_allocation(expr_mpos, 192)\n                            /// @src 63:4160:4190  \"return _buildDomainSeparator()\"\n                            var := /** @src 63:4294:4385  \"keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)))\" */ keccak256(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _1, mload(/** @src 63:4294:4385  \"keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)))\" */ expr_mpos))\n                            /// @src 63:4160:4190  \"return _buildDomainSeparator()\"\n                            leave\n                        }\n                        default /// @src 63:4017:4201  \"if (address(this) == _cachedThis && block.chainid == _cachedChainId) {...\"\n                        {\n                            /// @src 63:4100:4129  \"return _cachedDomainSeparator\"\n                            var := /** @src 63:4107:4129  \"_cachedDomainSeparator\" */ loadimmutable(\"46840\")\n                            /// @src 63:4100:4129  \"return _cachedDomainSeparator\"\n                            leave\n                        }\n                    }\n                    /// @ast-id 40783 @src 28:1796:1958  \"function _checkOwner() internal view virtual {...\"\n                    function fun_checkOwner()\n                    {\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        let value := and(sload(/** @src 28:1710:1716  \"_owner\" */ 0x05), /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ sub(shl(160, 1), 1))\n                        /// @src 28:1851:1952  \"if (owner() != _msgSender()) {...\"\n                        if /** @src 28:1855:1878  \"owner() != _msgSender()\" */ iszero(eq(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ value, /** @src 54:735:745  \"msg.sender\" */ caller()))\n                        /// @src 28:1851:1952  \"if (owner() != _msgSender()) {...\"\n                        {\n                            /// @src 28:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 28:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\" */ shl(224, 0x118cdaa7))\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            mstore(/** @src 28:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\" */ 4, /** @src 54:735:745  \"msg.sender\" */ caller())\n                            /// @src 28:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                            revert(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 36)\n                        }\n                    }\n                    /// @ast-id 42225 @src 44:7888:8094  \"function _burn(address account, uint256 value) internal {...\"\n                    function fun_burn(var_account, var_value)\n                    {\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        let _1 := and(/** @src 44:7958:7979  \"account == address(0)\" */ var_account, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ sub(shl(160, 1), 1))\n                        /// @src 44:7958:7979  \"account == address(0)\"\n                        let _2 := iszero(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _1)\n                        /// @src 44:7954:8043  \"if (account == address(0)) {...\"\n                        if /** @src 44:7958:7979  \"account == address(0)\" */ _2\n                        /// @src 44:7954:8043  \"if (account == address(0)) {...\"\n                        {\n                            /// @src 44:8002:8032  \"ERC20InvalidSender(address(0))\"\n                            mstore(/** @src 44:7977:7978  \"0\" */ 0x00, /** @src 44:5421:5451  \"ERC20InvalidSender(address(0))\" */ shl(225, 0x4b637e8f))\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            mstore(/** @src 44:8002:8032  \"ERC20InvalidSender(address(0))\" */ 4, /** @src 44:7977:7978  \"0\" */ 0x00)\n                            /// @src 44:8002:8032  \"ERC20InvalidSender(address(0))\"\n                            revert(/** @src 44:7977:7978  \"0\" */ 0x00, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 36)\n                        }\n                        /// @src 44:5997:6537  \"if (from == address(0)) {...\"\n                        _2 := /** @src 44:7977:7978  \"0\" */ 0x00\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        mstore(/** @src 44:7977:7978  \"0\" */ 0x00, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _1)\n                        mstore(0x20, /** @src 44:7977:7978  \"0\" */ 0x00)\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        let _3 := sload(keccak256(/** @src 44:7977:7978  \"0\" */ 0x00, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x40))\n                        /// @src 44:6240:6355  \"if (fromBalance < value) {...\"\n                        if /** @src 44:6244:6263  \"fromBalance < value\" */ lt(_3, var_value)\n                        /// @src 44:6240:6355  \"if (fromBalance < value) {...\"\n                        {\n                            /// @src 44:6290:6340  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                            mstore(/** @src 44:7977:7978  \"0\" */ 0x00, /** @src 44:6290:6340  \"ERC20InsufficientBalance(from, fromBalance, value)\" */ shl(226, 0x391434e3))\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            mstore(/** @src 44:6290:6340  \"ERC20InsufficientBalance(from, fromBalance, value)\" */ 4, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _1)\n                            mstore(36, _3)\n                            mstore(68, var_value)\n                            /// @src 44:6290:6340  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                            revert(/** @src 44:7977:7978  \"0\" */ 0x00, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 100)\n                        }\n                        mstore(/** @src 44:7977:7978  \"0\" */ 0x00, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _1)\n                        mstore(0x20, /** @src 44:7977:7978  \"0\" */ 0x00)\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        sstore(keccak256(/** @src 44:7977:7978  \"0\" */ 0x00, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x40), sub(/** @src 44:6493:6512  \"fromBalance - value\" */ _3, var_value))\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        sstore(/** @src 44:6714:6735  \"_totalSupply -= value\" */ 0x02, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ sub(sload(/** @src 44:6714:6735  \"_totalSupply -= value\" */ 0x02), /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ var_value))\n                        /// @src 44:6987:7012  \"Transfer(from, to, value)\"\n                        let _4 := /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ mload(64)\n                        mstore(_4, var_value)\n                        /// @src 44:6987:7012  \"Transfer(from, to, value)\"\n                        log3(_4, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 32, /** @src 44:6987:7012  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _1, /** @src 44:7977:7978  \"0\" */ 0x00)\n                    }\n                    /// @ast-id 42303 @src 44:9605:10037  \"function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {...\"\n                    function fun_approve(var_owner, var_spender, var_value)\n                    {\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        let _1 := and(/** @src 44:9717:9736  \"owner == address(0)\" */ var_owner, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ sub(shl(160, 1), 1))\n                        /// @src 44:9713:9802  \"if (owner == address(0)) {...\"\n                        if /** @src 44:9717:9736  \"owner == address(0)\" */ iszero(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _1)\n                        /// @src 44:9713:9802  \"if (owner == address(0)) {...\"\n                        {\n                            /// @src 44:9759:9791  \"ERC20InvalidApprover(address(0))\"\n                            mstore(/** @src 44:9734:9735  \"0\" */ 0x00, /** @src 44:9759:9791  \"ERC20InvalidApprover(address(0))\" */ shl(224, 0xe602df05))\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            mstore(/** @src 44:9759:9791  \"ERC20InvalidApprover(address(0))\" */ 4, /** @src 44:9734:9735  \"0\" */ 0x00)\n                            /// @src 44:9759:9791  \"ERC20InvalidApprover(address(0))\"\n                            revert(/** @src 44:9734:9735  \"0\" */ 0x00, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 36)\n                        }\n                        let _2 := and(/** @src 44:9815:9836  \"spender == address(0)\" */ var_spender, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ sub(shl(160, 1), 1))\n                        /// @src 44:9811:9901  \"if (spender == address(0)) {...\"\n                        if /** @src 44:9815:9836  \"spender == address(0)\" */ iszero(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _2)\n                        /// @src 44:9811:9901  \"if (spender == address(0)) {...\"\n                        {\n                            /// @src 44:9859:9890  \"ERC20InvalidSpender(address(0))\"\n                            mstore(/** @src 44:9734:9735  \"0\" */ 0x00, /** @src 44:9859:9890  \"ERC20InvalidSpender(address(0))\" */ shl(225, 0x4a1406b1))\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            mstore(/** @src 44:9859:9890  \"ERC20InvalidSpender(address(0))\" */ 4, /** @src 44:9734:9735  \"0\" */ 0x00)\n                            /// @src 44:9859:9890  \"ERC20InvalidSpender(address(0))\"\n                            revert(/** @src 44:9734:9735  \"0\" */ 0x00, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 36)\n                        }\n                        mstore(/** @src 44:9734:9735  \"0\" */ 0x00, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _1)\n                        mstore(0x20, /** @src 44:8746:8750  \"true\" */ 0x01)\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        let dataSlot := keccak256(/** @src 44:9734:9735  \"0\" */ 0x00, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x40)\n                        /// @src 44:9910:9937  \"_allowances[owner][spender]\"\n                        let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _2)\n                        mstore(0x20, /** @src 44:9910:9928  \"_allowances[owner]\" */ dataSlot)\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x40)\n                        sstore(/** @src 44:9910:9937  \"_allowances[owner][spender]\" */ dataSlot_1, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ var_value)\n                        /// @src 44:9989:10020  \"Approval(owner, spender, value)\"\n                        let _3 := /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ mload(0x40)\n                        mstore(_3, var_value)\n                        /// @src 44:9989:10020  \"Approval(owner, spender, value)\"\n                        log3(_3, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x20, /** @src 44:9989:10020  \"Approval(owner, spender, value)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, _1, _2)\n                    }\n                    /// @ast-id 44783 @src 58:3368:3635  \"function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {...\"\n                    function fun_toStringWithFallback(var_value) -> var_mpos\n                    {\n                        /// @src 58:3462:3475  \"string memory\"\n                        var_mpos := /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 96\n                        /// @src 58:3487:3629  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\"\n                        switch /** @src 58:3491:3537  \"ShortString.unwrap(value) != FALLBACK_SENTINEL\" */ iszero(eq(var_value, /** @src 58:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff))\n                        case /** @src 58:3487:3629  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\" */ 0 {\n                            /// @src 58:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            let memPtr := /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ mload(64)\n                            /// @src 58:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            finalize_allocation(memPtr, sub(abi_encode_string_storage(/** @src 63:6210:6223  \"_nameFallback\" */ 0x06, /** @src 58:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ memPtr), memPtr))\n                            /// @src 58:3606:3618  \"return store\"\n                            var_mpos := memPtr\n                            leave\n                        }\n                        default /// @src 58:3487:3629  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\"\n                        {\n                            /// @src 58:2625:2665  \"uint256(ShortString.unwrap(sstr)) & 0xFF\"\n                            let expr := and(var_value, /** @src 58:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff)\n                            /// @src 58:2675:2744  \"if (result > 31) {...\"\n                            if /** @src 58:2679:2690  \"result > 31\" */ gt(expr, /** @src 58:2688:2690  \"31\" */ 0x1f)\n                            /// @src 58:2675:2744  \"if (result > 31) {...\"\n                            {\n                                /// @src 58:2713:2733  \"InvalidShortString()\"\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 58:2713:2733  \"InvalidShortString()\" */ shl(226, 0x2cd44ac3))\n                                revert(/** @src -1:-1:-1 */ 0, /** @src 58:2713:2733  \"InvalidShortString()\" */ 4)\n                            }\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            let size := /** @src -1:-1:-1 */ 0\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            let _1 := /** @src -1:-1:-1 */ 0\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            _1 := /** @src -1:-1:-1 */ 0\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            size := 64\n                            let memPtr_1 := mload(64)\n                            finalize_allocation(memPtr_1, 64)\n                            mstore(memPtr_1, /** @src 58:2311:2313  \"32\" */ 0x20)\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            let dataStart := add(memPtr_1, /** @src 58:2311:2313  \"32\" */ 0x20)\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            calldatacopy(dataStart, calldatasize(), add(64, not(31)))\n                            /// @src 58:2324:2430  \"assembly (\\\"memory-safe\\\") {...\"\n                            mstore(memPtr_1, expr)\n                            mstore(dataStart, var_value)\n                            /// @src 58:3553:3575  \"return toString(value)\"\n                            var_mpos := memPtr_1\n                            leave\n                        }\n                    }\n                    /// @ast-id 44783 @src 58:3368:3635  \"function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {...\"\n                    function fun_toStringWithFallback_6298(var_value) -> var__mpos\n                    {\n                        /// @src 58:3462:3475  \"string memory\"\n                        var__mpos := /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 96\n                        /// @src 58:3487:3629  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\"\n                        switch /** @src 58:3491:3537  \"ShortString.unwrap(value) != FALLBACK_SENTINEL\" */ iszero(eq(var_value, /** @src 58:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff))\n                        case /** @src 58:3487:3629  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\" */ 0 {\n                            /// @src 58:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            let memPtr := /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ mload(64)\n                            /// @src 58:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            finalize_allocation(memPtr, sub(abi_encode_string_storage(/** @src 63:6668:6684  \"_versionFallback\" */ 0x07, /** @src 58:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ memPtr), memPtr))\n                            /// @src 58:3606:3618  \"return store\"\n                            var__mpos := memPtr\n                            leave\n                        }\n                        default /// @src 58:3487:3629  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\"\n                        {\n                            /// @src 58:2625:2665  \"uint256(ShortString.unwrap(sstr)) & 0xFF\"\n                            let expr := and(var_value, /** @src 58:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff)\n                            /// @src 58:2675:2744  \"if (result > 31) {...\"\n                            if /** @src 58:2679:2690  \"result > 31\" */ gt(expr, /** @src 58:2688:2690  \"31\" */ 0x1f)\n                            /// @src 58:2675:2744  \"if (result > 31) {...\"\n                            {\n                                /// @src 58:2713:2733  \"InvalidShortString()\"\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 58:2713:2733  \"InvalidShortString()\" */ shl(226, 0x2cd44ac3))\n                                revert(/** @src -1:-1:-1 */ 0, /** @src 58:2713:2733  \"InvalidShortString()\" */ 4)\n                            }\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            let size := /** @src -1:-1:-1 */ 0\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            let _1 := /** @src -1:-1:-1 */ 0\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            _1 := /** @src -1:-1:-1 */ 0\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            size := 64\n                            let memPtr_1 := mload(64)\n                            finalize_allocation(memPtr_1, 64)\n                            mstore(memPtr_1, /** @src 58:2311:2313  \"32\" */ 0x20)\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            let dataStart := add(memPtr_1, /** @src 58:2311:2313  \"32\" */ 0x20)\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            calldatacopy(dataStart, calldatasize(), add(64, not(31)))\n                            /// @src 58:2324:2430  \"assembly (\\\"memory-safe\\\") {...\"\n                            mstore(memPtr_1, expr)\n                            mstore(dataStart, var_value)\n                            /// @src 58:3553:3575  \"return toString(value)\"\n                            var__mpos := memPtr_1\n                            leave\n                        }\n                    }\n                    /// @ast-id 46733 @src 62:5203:6754  \"function tryRecover(...\"\n                    function fun_tryRecover(var_hash, var_v, var_r, var_s) -> var_recovered, var_err, var_errArg\n                    {\n                        /// @src 62:6266:6430  \"if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {...\"\n                        if /** @src 62:6270:6349  \"uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0\" */ gt(var_s, /** @src 62:6283:6349  \"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0\" */ 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0)\n                        /// @src 62:6266:6430  \"if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {...\"\n                        {\n                            /// @src 62:6365:6419  \"return (address(0), RecoverError.InvalidSignatureS, s)\"\n                            var_recovered := /** @src 62:6381:6382  \"0\" */ 0x00\n                            /// @src 62:6365:6419  \"return (address(0), RecoverError.InvalidSignatureS, s)\"\n                            var_err := /** @src 62:6385:6415  \"RecoverError.InvalidSignatureS\" */ 3\n                            /// @src 62:6365:6419  \"return (address(0), RecoverError.InvalidSignatureS, s)\"\n                            var_errArg := var_s\n                            leave\n                        }\n                        /// @src 62:6541:6565  \"ecrecover(hash, v, r, s)\"\n                        let _1 := /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ mload(64)\n                        mstore(_1, var_hash)\n                        mstore(add(_1, 32), and(var_v, 0xff))\n                        mstore(add(_1, 64), var_r)\n                        mstore(add(_1, 96), var_s)\n                        /// @src 62:6541:6565  \"ecrecover(hash, v, r, s)\"\n                        mstore(/** @src -1:-1:-1 */ 0, 0)\n                        /// @src 62:6541:6565  \"ecrecover(hash, v, r, s)\"\n                        if iszero(staticcall(gas(), 1, _1, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 128, /** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 32))\n                        /// @src 62:6541:6565  \"ecrecover(hash, v, r, s)\"\n                        {\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            let pos := mload(64)\n                            returndatacopy(pos, /** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 62:6541:6565  \"ecrecover(hash, v, r, s)\"\n                        let _2 := mload(/** @src -1:-1:-1 */ 0)\n                        /// @src 62:6575:6688  \"if (signer == address(0)) {...\"\n                        if /** @src 62:6579:6599  \"signer == address(0)\" */ iszero(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ and(/** @src 62:6579:6599  \"signer == address(0)\" */ _2, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ sub(shl(160, 1), 1)))\n                        /// @src 62:6575:6688  \"if (signer == address(0)) {...\"\n                        {\n                            /// @src 62:6615:6677  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                            var_recovered := /** @src -1:-1:-1 */ 0\n                            /// @src 62:6615:6677  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                            var_err := /** @src 62:6541:6565  \"ecrecover(hash, v, r, s)\" */ 1\n                            /// @src 62:6615:6677  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                            var_errArg := /** @src -1:-1:-1 */ 0\n                            /// @src 62:6615:6677  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                            leave\n                        }\n                        /// @src 62:6698:6747  \"return (signer, RecoverError.NoError, bytes32(0))\"\n                        var_recovered := _2\n                        var_err := /** @src -1:-1:-1 */ 0\n                        /// @src 62:6698:6747  \"return (signer, RecoverError.NoError, bytes32(0))\"\n                        var_errArg := /** @src -1:-1:-1 */ 0\n                    }\n                    /// @ast-id 46818 @src 62:7280:7812  \"function _throwError(RecoverError error, bytes32 errorArg) private pure {...\"\n                    function fun_throwError(var_error, var_errorArg)\n                    {\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        let _1 := iszero(lt(var_error, 4))\n                        if _1\n                        {\n                            mstore(/** @src 62:7375:7395  \"RecoverError.NoError\" */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x21)\n                            revert(/** @src 62:7375:7395  \"RecoverError.NoError\" */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x24)\n                        }\n                        /// @src 62:7362:7806  \"if (error == RecoverError.NoError) {...\"\n                        switch /** @src 62:7366:7395  \"error == RecoverError.NoError\" */ iszero(var_error)\n                        case /** @src 62:7362:7806  \"if (error == RecoverError.NoError) {...\" */ 0 {\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            _1 := /** @src 62:7375:7395  \"RecoverError.NoError\" */ 0\n                            /// @src 62:7458:7806  \"if (error == RecoverError.InvalidSignature) {...\"\n                            switch /** @src 62:7462:7500  \"error == RecoverError.InvalidSignature\" */ eq(var_error, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 1)\n                            case /** @src 62:7458:7806  \"if (error == RecoverError.InvalidSignature) {...\" */ 0 {\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                _1 := /** @src 62:7375:7395  \"RecoverError.NoError\" */ 0\n                                /// @src 62:7563:7806  \"if (error == RecoverError.InvalidSignatureLength) {...\"\n                                switch /** @src 62:7567:7611  \"error == RecoverError.InvalidSignatureLength\" */ eq(var_error, /** @src 62:7576:7611  \"RecoverError.InvalidSignatureLength\" */ 2)\n                                case /** @src 62:7563:7806  \"if (error == RecoverError.InvalidSignatureLength) {...\" */ 0 {\n                                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                    _1 := /** @src 62:7375:7395  \"RecoverError.NoError\" */ 0\n                                    /// @src 62:7697:7806  \"if (error == RecoverError.InvalidSignatureS) {...\"\n                                    if /** @src 62:7701:7740  \"error == RecoverError.InvalidSignatureS\" */ eq(var_error, /** @src 62:7710:7740  \"RecoverError.InvalidSignatureS\" */ 3)\n                                    /// @src 62:7697:7806  \"if (error == RecoverError.InvalidSignatureS) {...\"\n                                    {\n                                        /// @src 62:7763:7795  \"ECDSAInvalidSignatureS(errorArg)\"\n                                        mstore(/** @src 62:7375:7395  \"RecoverError.NoError\" */ 0, /** @src 62:7763:7795  \"ECDSAInvalidSignatureS(errorArg)\" */ shl(226, 0x35e2f383))\n                                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                        mstore(4, var_errorArg)\n                                        /// @src 62:7763:7795  \"ECDSAInvalidSignatureS(errorArg)\"\n                                        revert(/** @src 62:7375:7395  \"RecoverError.NoError\" */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 36)\n                                    }\n                                }\n                                default /// @src 62:7563:7806  \"if (error == RecoverError.InvalidSignatureLength) {...\"\n                                {\n                                    /// @src 62:7634:7680  \"ECDSAInvalidSignatureLength(uint256(errorArg))\"\n                                    mstore(/** @src 62:7375:7395  \"RecoverError.NoError\" */ 0, /** @src 62:7634:7680  \"ECDSAInvalidSignatureLength(uint256(errorArg))\" */ shl(224, 0xfce698f7))\n                                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                    mstore(4, var_errorArg)\n                                    /// @src 62:7634:7680  \"ECDSAInvalidSignatureLength(uint256(errorArg))\"\n                                    revert(/** @src 62:7375:7395  \"RecoverError.NoError\" */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 36)\n                                }\n                            }\n                            default /// @src 62:7458:7806  \"if (error == RecoverError.InvalidSignature) {...\"\n                            {\n                                /// @src 62:7523:7546  \"ECDSAInvalidSignature()\"\n                                mstore(/** @src 62:7375:7395  \"RecoverError.NoError\" */ 0, /** @src 62:7523:7546  \"ECDSAInvalidSignature()\" */ shl(224, 0xf645eedf))\n                                revert(/** @src 62:7375:7395  \"RecoverError.NoError\" */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 4)\n                            }\n                        }\n                        default /// @src 62:7362:7806  \"if (error == RecoverError.NoError) {...\"\n                        {\n                            /// @src 62:7411:7418  \"return;\"\n                            leave\n                        }\n                    }\n                }\n                data \".metadata\" hex\"\"\n            }\n        }\n        data \".metadata\" hex\"\"\n    }\n}\n","ast":{"absolutePath":"src/ERC20Manager.sol","id":61008,"exportedSymbols":{"AccessControlUpgradeable":[39724],"BridgingPayment":[59706],"CustomEnumerableMap":[64136],"ERC20GearSupply":[62571],"ERC20Manager":[61007],"EnumerableSet":[55004],"IBridgingPayment":[62609],"IERC20":[42430],"IERC20Burnable":[62627],"IERC20Manager":[62884],"IERC20Mintable":[63020],"IERC20Permit":[42692],"IGovernance":[63114],"IMessageHandler":[63236],"IPausable":[63492],"Initializable":[40187],"LibString":[64160],"PausableUpgradeable":[40575],"SafeERC20":[43156],"UUPSUpgradeable":[40369]},"nodeType":"SourceUnit","src":"74:24900:85","nodes":[{"id":59708,"nodeType":"PragmaDirective","src":"74:24:85","nodes":[],"literals":["solidity","^","0.8",".30"]},{"id":59710,"nodeType":"ImportDirective","src":"100:96:85","nodes":[],"absolutePath":"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","nameLocation":"-1:-1:-1","scope":61008,"sourceUnit":40188,"symbolAliases":[{"foreign":{"id":59709,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40187,"src":"108:13:85","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":59712,"nodeType":"ImportDirective","src":"197:113:85","nodes":[],"absolutePath":"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","nameLocation":"-1:-1:-1","scope":61008,"sourceUnit":39725,"symbolAliases":[{"foreign":{"id":59711,"name":"AccessControlUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39724,"src":"205:24:85","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":59714,"nodeType":"ImportDirective","src":"311:102:85","nodes":[],"absolutePath":"lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol","nameLocation":"-1:-1:-1","scope":61008,"sourceUnit":40576,"symbolAliases":[{"foreign":{"id":59713,"name":"PausableUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40575,"src":"319:19:85","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":59716,"nodeType":"ImportDirective","src":"414:100:85","nodes":[],"absolutePath":"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","nameLocation":"-1:-1:-1","scope":61008,"sourceUnit":40370,"symbolAliases":[{"foreign":{"id":59715,"name":"UUPSUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40369,"src":"422:15:85","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":59718,"nodeType":"ImportDirective","src":"515:70:85","nodes":[],"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","nameLocation":"-1:-1:-1","scope":61008,"sourceUnit":42431,"symbolAliases":[{"foreign":{"id":59717,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":42430,"src":"523:6:85","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":59720,"nodeType":"ImportDirective","src":"586:93:85","nodes":[],"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","nameLocation":"-1:-1:-1","scope":61008,"sourceUnit":42693,"symbolAliases":[{"foreign":{"id":59719,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":42692,"src":"594:12:85","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":59722,"nodeType":"ImportDirective","src":"680:82:85","nodes":[],"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","nameLocation":"-1:-1:-1","scope":61008,"sourceUnit":43157,"symbolAliases":[{"foreign":{"id":59721,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43156,"src":"688:9:85","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":59724,"nodeType":"ImportDirective","src":"763:86:85","nodes":[],"absolutePath":"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol","file":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","nameLocation":"-1:-1:-1","scope":61008,"sourceUnit":55005,"symbolAliases":[{"foreign":{"id":59723,"name":"EnumerableSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":55004,"src":"771:13:85","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":59726,"nodeType":"ImportDirective","src":"850:68:85","nodes":[],"absolutePath":"src/erc20/managed/ERC20GearSupply.sol","file":"./erc20/managed/ERC20GearSupply.sol","nameLocation":"-1:-1:-1","scope":61008,"sourceUnit":62572,"symbolAliases":[{"foreign":{"id":59725,"name":"ERC20GearSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62571,"src":"858:15:85","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":59728,"nodeType":"ImportDirective","src":"919:72:85","nodes":[],"absolutePath":"src/libraries/CustomEnumerableMap.sol","file":"./libraries/CustomEnumerableMap.sol","nameLocation":"-1:-1:-1","scope":61008,"sourceUnit":64137,"symbolAliases":[{"foreign":{"id":59727,"name":"CustomEnumerableMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64136,"src":"927:19:85","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":59730,"nodeType":"ImportDirective","src":"992:52:85","nodes":[],"absolutePath":"src/libraries/LibString.sol","file":"./libraries/LibString.sol","nameLocation":"-1:-1:-1","scope":61008,"sourceUnit":64161,"symbolAliases":[{"foreign":{"id":59729,"name":"LibString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64160,"src":"1000:9:85","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":59732,"nodeType":"ImportDirective","src":"1045:54:85","nodes":[],"absolutePath":"src/BridgingPayment.sol","file":"./BridgingPayment.sol","nameLocation":"-1:-1:-1","scope":61008,"sourceUnit":59707,"symbolAliases":[{"foreign":{"id":59731,"name":"BridgingPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59706,"src":"1053:15:85","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":59734,"nodeType":"ImportDirective","src":"1100:67:85","nodes":[],"absolutePath":"src/interfaces/IBridgingPayment.sol","file":"./interfaces/IBridgingPayment.sol","nameLocation":"-1:-1:-1","scope":61008,"sourceUnit":62610,"symbolAliases":[{"foreign":{"id":59733,"name":"IBridgingPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62609,"src":"1108:16:85","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":59736,"nodeType":"ImportDirective","src":"1168:63:85","nodes":[],"absolutePath":"src/interfaces/IERC20Burnable.sol","file":"./interfaces/IERC20Burnable.sol","nameLocation":"-1:-1:-1","scope":61008,"sourceUnit":62628,"symbolAliases":[{"foreign":{"id":59735,"name":"IERC20Burnable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62627,"src":"1176:14:85","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":59738,"nodeType":"ImportDirective","src":"1232:61:85","nodes":[],"absolutePath":"src/interfaces/IERC20Manager.sol","file":"./interfaces/IERC20Manager.sol","nameLocation":"-1:-1:-1","scope":61008,"sourceUnit":63009,"symbolAliases":[{"foreign":{"id":59737,"name":"IERC20Manager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62884,"src":"1240:13:85","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":59740,"nodeType":"ImportDirective","src":"1294:63:85","nodes":[],"absolutePath":"src/interfaces/IERC20Mintable.sol","file":"./interfaces/IERC20Mintable.sol","nameLocation":"-1:-1:-1","scope":61008,"sourceUnit":63021,"symbolAliases":[{"foreign":{"id":59739,"name":"IERC20Mintable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63020,"src":"1302:14:85","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":59742,"nodeType":"ImportDirective","src":"1358:57:85","nodes":[],"absolutePath":"src/interfaces/IGovernance.sol","file":"./interfaces/IGovernance.sol","nameLocation":"-1:-1:-1","scope":61008,"sourceUnit":63225,"symbolAliases":[{"foreign":{"id":59741,"name":"IGovernance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63114,"src":"1366:11:85","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":59744,"nodeType":"ImportDirective","src":"1416:65:85","nodes":[],"absolutePath":"src/interfaces/IMessageHandler.sol","file":"./interfaces/IMessageHandler.sol","nameLocation":"-1:-1:-1","scope":61008,"sourceUnit":63237,"symbolAliases":[{"foreign":{"id":59743,"name":"IMessageHandler","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63236,"src":"1424:15:85","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":59746,"nodeType":"ImportDirective","src":"1482:53:85","nodes":[],"absolutePath":"src/interfaces/IPausable.sol","file":"./interfaces/IPausable.sol","nameLocation":"-1:-1:-1","scope":61008,"sourceUnit":63493,"symbolAliases":[{"foreign":{"id":59745,"name":"IPausable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63492,"src":"1490:9:85","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":61007,"nodeType":"ContractDefinition","src":"1537:23436:85","nodes":[{"id":59764,"nodeType":"UsingForDirective","src":"1717:27:85","nodes":[],"global":false,"libraryName":{"id":59761,"name":"SafeERC20","nameLocations":["1723:9:85"],"nodeType":"IdentifierPath","referencedDeclaration":43156,"src":"1723:9:85"},"typeName":{"id":59763,"nodeType":"UserDefinedTypeName","pathNode":{"id":59762,"name":"IERC20","nameLocations":["1737:6:85"],"nodeType":"IdentifierPath","referencedDeclaration":42430,"src":"1737:6:85"},"referencedDeclaration":42430,"src":"1737:6:85","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$42430","typeString":"contract IERC20"}}},{"id":59768,"nodeType":"UsingForDirective","src":"1750:49:85","nodes":[],"global":false,"libraryName":{"id":59765,"name":"EnumerableSet","nameLocations":["1756:13:85"],"nodeType":"IdentifierPath","referencedDeclaration":55004,"src":"1756:13:85"},"typeName":{"id":59767,"nodeType":"UserDefinedTypeName","pathNode":{"id":59766,"name":"EnumerableSet.Bytes32Set","nameLocations":["1774:13:85","1788:10:85"],"nodeType":"IdentifierPath","referencedDeclaration":53809,"src":"1774:24:85"},"referencedDeclaration":53809,"src":"1774:24:85","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$53809_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}}},{"id":59772,"nodeType":"UsingForDirective","src":"1804:49:85","nodes":[],"global":false,"libraryName":{"id":59769,"name":"EnumerableSet","nameLocations":["1810:13:85"],"nodeType":"IdentifierPath","referencedDeclaration":55004,"src":"1810:13:85"},"typeName":{"id":59771,"nodeType":"UserDefinedTypeName","pathNode":{"id":59770,"name":"EnumerableSet.AddressSet","nameLocations":["1828:13:85","1842:10:85"],"nodeType":"IdentifierPath","referencedDeclaration":53979,"src":"1828:24:85"},"referencedDeclaration":53979,"src":"1828:24:85","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$53979_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},{"id":59776,"nodeType":"UsingForDirective","src":"1859:72:85","nodes":[],"global":false,"libraryName":{"id":59773,"name":"CustomEnumerableMap","nameLocations":["1865:19:85"],"nodeType":"IdentifierPath","referencedDeclaration":64136,"src":"1865:19:85"},"typeName":{"id":59775,"nodeType":"UserDefinedTypeName","pathNode":{"id":59774,"name":"CustomEnumerableMap.AddressToTokenTypeMap","nameLocations":["1889:19:85","1909:21:85"],"nodeType":"IdentifierPath","referencedDeclaration":63854,"src":"1889:41:85"},"referencedDeclaration":63854,"src":"1889:41:85","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToTokenTypeMap_$63854_storage_ptr","typeString":"struct CustomEnumerableMap.AddressToTokenTypeMap"}}},{"id":59780,"nodeType":"VariableDeclaration","src":"1988:42:85","nodes":[],"constant":true,"documentation":{"id":59777,"nodeType":"StructuredDocumentation","src":"1937:46:85","text":" @dev `bytes32 sender` size."},"mutability":"constant","name":"SENDER_SIZE","nameLocation":"2014:11:85","scope":61007,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":59778,"name":"uint256","nodeType":"ElementaryTypeName","src":"1988:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3332","id":59779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2028:2:85","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"visibility":"internal"},{"id":59784,"nodeType":"VariableDeclaration","src":"2089:44:85","nodes":[],"constant":true,"documentation":{"id":59781,"nodeType":"StructuredDocumentation","src":"2036:48:85","text":" @dev `address receiver` size."},"mutability":"constant","name":"RECEIVER_SIZE","nameLocation":"2115:13:85","scope":61007,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":59782,"name":"uint256","nodeType":"ElementaryTypeName","src":"2089:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3230","id":59783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2131:2:85","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"internal"},{"id":59788,"nodeType":"VariableDeclaration","src":"2189:41:85","nodes":[],"constant":true,"documentation":{"id":59785,"nodeType":"StructuredDocumentation","src":"2139:45:85","text":" @dev `address token` size."},"mutability":"constant","name":"TOKEN_SIZE","nameLocation":"2215:10:85","scope":61007,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":59786,"name":"uint256","nodeType":"ElementaryTypeName","src":"2189:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3230","id":59787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2228:2:85","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"internal"},{"id":59792,"nodeType":"VariableDeclaration","src":"2287:42:85","nodes":[],"constant":true,"documentation":{"id":59789,"nodeType":"StructuredDocumentation","src":"2236:46:85","text":" @dev `uint256 amount` size."},"mutability":"constant","name":"AMOUNT_SIZE","nameLocation":"2313:11:85","scope":61007,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":59790,"name":"uint256","nodeType":"ElementaryTypeName","src":"2287:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3332","id":59791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2327:2:85","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"visibility":"internal"},{"id":59802,"nodeType":"VariableDeclaration","src":"2390:104:85","nodes":[],"constant":true,"documentation":{"id":59793,"nodeType":"StructuredDocumentation","src":"2336:49:85","text":" @dev Size of transfer message."},"mutability":"constant","name":"TRANSFER_MESSAGE_SIZE","nameLocation":"2416:21:85","scope":61007,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":59794,"name":"uint256","nodeType":"ElementaryTypeName","src":"2390:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":59801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":59799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":59797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":59795,"name":"SENDER_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59780,"src":"2440:11:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":59796,"name":"RECEIVER_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59784,"src":"2454:13:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2440:27:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":59798,"name":"TOKEN_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59788,"src":"2470:10:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2440:40:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":59800,"name":"AMOUNT_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59792,"src":"2483:11:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2440:54:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"id":59806,"nodeType":"VariableDeclaration","src":"2559:49:85","nodes":[],"constant":true,"documentation":{"id":59803,"nodeType":"StructuredDocumentation","src":"2501:53:85","text":" @dev `address receiver` bit shift."},"mutability":"constant","name":"RECEIVER_BIT_SHIFT","nameLocation":"2585:18:85","scope":61007,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":59804,"name":"uint256","nodeType":"ElementaryTypeName","src":"2559:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3936","id":59805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2606:2:85","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"visibility":"internal"},{"id":59810,"nodeType":"VariableDeclaration","src":"2669:46:85","nodes":[],"constant":true,"documentation":{"id":59807,"nodeType":"StructuredDocumentation","src":"2614:50:85","text":" @dev `address token` bit shift."},"mutability":"constant","name":"TOKEN_BIT_SHIFT","nameLocation":"2695:15:85","scope":61007,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":59808,"name":"uint256","nodeType":"ElementaryTypeName","src":"2669:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3936","id":59809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2713:2:85","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"visibility":"internal"},{"id":59814,"nodeType":"VariableDeclaration","src":"2772:38:85","nodes":[],"constant":true,"documentation":{"id":59811,"nodeType":"StructuredDocumentation","src":"2722:45:85","text":" @dev `SENDER_SIZE` offset."},"mutability":"constant","name":"OFFSET1","nameLocation":"2798:7:85","scope":61007,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":59812,"name":"uint256","nodeType":"ElementaryTypeName","src":"2772:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3332","id":59813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2808:2:85","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"visibility":"internal"},{"id":59818,"nodeType":"VariableDeclaration","src":"2882:38:85","nodes":[],"constant":true,"documentation":{"id":59815,"nodeType":"StructuredDocumentation","src":"2816:61:85","text":" @dev `SENDER_SIZE + RECEIVER_SIZE` offset."},"mutability":"constant","name":"OFFSET2","nameLocation":"2908:7:85","scope":61007,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":59816,"name":"uint256","nodeType":"ElementaryTypeName","src":"2882:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3532","id":59817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2918:2:85","typeDescriptions":{"typeIdentifier":"t_rational_52_by_1","typeString":"int_const 52"},"value":"52"},"visibility":"internal"},{"id":59822,"nodeType":"VariableDeclaration","src":"3005:38:85","nodes":[],"constant":true,"documentation":{"id":59819,"nodeType":"StructuredDocumentation","src":"2926:74:85","text":" @dev `SENDER_SIZE + RECEIVER_SIZE + TOKEN_SIZE` offset."},"mutability":"constant","name":"OFFSET3","nameLocation":"3031:7:85","scope":61007,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":59820,"name":"uint256","nodeType":"ElementaryTypeName","src":"3005:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3732","id":59821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3041:2:85","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},"visibility":"internal"},{"id":59826,"nodeType":"VariableDeclaration","src":"3189:47:85","nodes":[],"constant":true,"documentation":{"id":59823,"nodeType":"StructuredDocumentation","src":"3134:50:85","text":" @dev `uint8 discriminant` size."},"mutability":"constant","name":"DISCRIMINANT_SIZE","nameLocation":"3215:17:85","scope":61007,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":59824,"name":"uint256","nodeType":"ElementaryTypeName","src":"3189:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":59825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3235:1:85","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"id":59830,"nodeType":"VariableDeclaration","src":"3303:54:85","nodes":[],"constant":true,"documentation":{"id":59827,"nodeType":"StructuredDocumentation","src":"3243:55:85","text":" @dev `uint8 discriminant` bit shift."},"mutability":"constant","name":"DISCRIMINANT_BIT_SHIFT","nameLocation":"3329:22:85","scope":61007,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":59828,"name":"uint256","nodeType":"ElementaryTypeName","src":"3303:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323438","id":59829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3354:3:85","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},"visibility":"internal"},{"id":59834,"nodeType":"VariableDeclaration","src":"3420:37:85","nodes":[],"constant":true,"documentation":{"id":59831,"nodeType":"StructuredDocumentation","src":"3364:51:85","text":" @dev `DISCRIMINANT_SIZE` offset."},"mutability":"constant","name":"OFFSET4","nameLocation":"3446:7:85","scope":61007,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":59832,"name":"uint256","nodeType":"ElementaryTypeName","src":"3420:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":59833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3456:1:85","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"id":59838,"nodeType":"VariableDeclaration","src":"3614:48:85","nodes":[],"constant":true,"documentation":{"id":59835,"nodeType":"StructuredDocumentation","src":"3548:61:85","text":" @dev Add VFT manager message discriminant."},"mutability":"constant","name":"ADD_VFT_MANAGER","nameLocation":"3640:15:85","scope":61007,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":59836,"name":"uint256","nodeType":"ElementaryTypeName","src":"3614:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":59837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3658:4:85","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"id":59842,"nodeType":"VariableDeclaration","src":"3724:47:85","nodes":[],"constant":true,"documentation":{"id":59839,"nodeType":"StructuredDocumentation","src":"3669:50:85","text":" @dev `bytes32 vftManager` size."},"mutability":"constant","name":"VFT_MANAGER_SIZE","nameLocation":"3750:16:85","scope":61007,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":59840,"name":"uint256","nodeType":"ElementaryTypeName","src":"3724:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3332","id":59841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3769:2:85","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"visibility":"internal"},{"id":59848,"nodeType":"VariableDeclaration","src":"3839:93:85","nodes":[],"constant":true,"documentation":{"id":59843,"nodeType":"StructuredDocumentation","src":"3778:56:85","text":" @dev Size of add VFT manager message."},"mutability":"constant","name":"ADD_VFT_MANAGER_MESSAGE_SIZE","nameLocation":"3865:28:85","scope":61007,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":59844,"name":"uint256","nodeType":"ElementaryTypeName","src":"3839:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":59847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":59845,"name":"DISCRIMINANT_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59826,"src":"3896:17:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":59846,"name":"VFT_MANAGER_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59842,"src":"3916:16:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3896:36:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"id":59852,"nodeType":"VariableDeclaration","src":"4077:46:85","nodes":[],"constant":true,"documentation":{"id":59849,"nodeType":"StructuredDocumentation","src":"4023:49:85","text":" @dev `bytes32 tokenName` size."},"mutability":"constant","name":"TOKEN_NAME_SIZE","nameLocation":"4103:15:85","scope":61007,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":59850,"name":"uint256","nodeType":"ElementaryTypeName","src":"4077:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3332","id":59851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4121:2:85","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"visibility":"internal"},{"id":59856,"nodeType":"VariableDeclaration","src":"4185:48:85","nodes":[],"constant":true,"documentation":{"id":59853,"nodeType":"StructuredDocumentation","src":"4129:51:85","text":" @dev `bytes32 tokenSymbol` size."},"mutability":"constant","name":"TOKEN_SYMBOL_SIZE","nameLocation":"4211:17:85","scope":61007,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":59854,"name":"uint256","nodeType":"ElementaryTypeName","src":"4185:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3332","id":59855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4231:2:85","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"visibility":"internal"},{"id":59860,"nodeType":"VariableDeclaration","src":"4295:49:85","nodes":[],"constant":true,"documentation":{"id":59857,"nodeType":"StructuredDocumentation","src":"4239:51:85","text":" @dev `uint8 tokenDecimals` size."},"mutability":"constant","name":"TOKEN_DECIMALS_SIZE","nameLocation":"4321:19:85","scope":61007,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":59858,"name":"uint256","nodeType":"ElementaryTypeName","src":"4295:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":59859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4343:1:85","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"id":59864,"nodeType":"VariableDeclaration","src":"4412:56:85","nodes":[],"constant":true,"documentation":{"id":59861,"nodeType":"StructuredDocumentation","src":"4351:56:85","text":" @dev `uint8 tokenDecimals` bit shift."},"mutability":"constant","name":"TOKEN_DECIMALS_BIT_SHIFT","nameLocation":"4438:24:85","scope":61007,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":59862,"name":"uint256","nodeType":"ElementaryTypeName","src":"4412:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323438","id":59863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4465:3:85","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},"visibility":"internal"},{"id":59868,"nodeType":"VariableDeclaration","src":"4549:38:85","nodes":[],"constant":true,"documentation":{"id":59865,"nodeType":"StructuredDocumentation","src":"4475:69:85","text":" @dev `DISCRIMINANT_SIZE + TOKEN_NAME_SIZE` offset."},"mutability":"constant","name":"OFFSET5","nameLocation":"4575:7:85","scope":61007,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":59866,"name":"uint256","nodeType":"ElementaryTypeName","src":"4549:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3333","id":59867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4585:2:85","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"33"},"visibility":"internal"},{"id":59872,"nodeType":"VariableDeclaration","src":"4687:38:85","nodes":[],"constant":true,"documentation":{"id":59869,"nodeType":"StructuredDocumentation","src":"4593:89:85","text":" @dev `DISCRIMINANT_SIZE + TOKEN_NAME_SIZE + TOKEN_SYMBOL_SIZE` offset."},"mutability":"constant","name":"OFFSET6","nameLocation":"4713:7:85","scope":61007,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":59870,"name":"uint256","nodeType":"ElementaryTypeName","src":"4687:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3635","id":59871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4723:2:85","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"visibility":"internal"},{"id":59882,"nodeType":"VariableDeclaration","src":"4815:146:85","nodes":[],"constant":true,"documentation":{"id":59873,"nodeType":"StructuredDocumentation","src":"4732:78:85","text":" @dev Size of register token message (for `TokenType.Gear`)."},"mutability":"constant","name":"REGISTER_GEAR_TOKEN_MESSAGE_SIZE","nameLocation":"4841:32:85","scope":61007,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":59874,"name":"uint256","nodeType":"ElementaryTypeName","src":"4815:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":59881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":59879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":59877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":59875,"name":"DISCRIMINANT_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59826,"src":"4884:17:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":59876,"name":"TOKEN_NAME_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59852,"src":"4904:15:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4884:35:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":59878,"name":"TOKEN_SYMBOL_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59856,"src":"4922:17:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4884:55:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":59880,"name":"TOKEN_DECIMALS_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59860,"src":"4942:19:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4884:77:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"id":59886,"nodeType":"VariableDeclaration","src":"5102:50:85","nodes":[],"constant":true,"documentation":{"id":59883,"nodeType":"StructuredDocumentation","src":"5052:45:85","text":" @dev `address token` size."},"mutability":"constant","name":"ETHEREUM_TOKEN_SIZE","nameLocation":"5128:19:85","scope":61007,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":59884,"name":"uint256","nodeType":"ElementaryTypeName","src":"5102:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3230","id":59885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5150:2:85","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"internal"},{"id":59892,"nodeType":"VariableDeclaration","src":"5246:104:85","nodes":[],"constant":true,"documentation":{"id":59887,"nodeType":"StructuredDocumentation","src":"5159:82:85","text":" @dev Size of register token message (for `TokenType.Ethereum`)."},"mutability":"constant","name":"REGISTER_ETHEREUM_TOKEN_MESSAGE_SIZE","nameLocation":"5272:36:85","scope":61007,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":59888,"name":"uint256","nodeType":"ElementaryTypeName","src":"5246:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":59891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":59889,"name":"DISCRIMINANT_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59826,"src":"5311:17:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":59890,"name":"ETHEREUM_TOKEN_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59886,"src":"5331:19:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:39:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"id":59896,"nodeType":"VariableDeclaration","src":"5412:55:85","nodes":[],"constant":true,"documentation":{"id":59893,"nodeType":"StructuredDocumentation","src":"5357:50:85","text":" @dev `address token` bit shift."},"mutability":"constant","name":"ETHEREUM_TOKEN_BIT_SHIFT","nameLocation":"5438:24:85","scope":61007,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":59894,"name":"uint256","nodeType":"ElementaryTypeName","src":"5412:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3936","id":59895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5465:2:85","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"visibility":"internal"},{"id":59905,"nodeType":"VariableDeclaration","src":"5474:60:85","nodes":[],"constant":true,"functionSelector":"e63ab1e9","mutability":"constant","name":"PAUSER_ROLE","nameLocation":"5498:11:85","scope":61007,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":59897,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5474:7:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"arguments":[{"hexValue":"30783031","id":59902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5528:4:85","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":59901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5520:7:85","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":59900,"name":"uint256","nodeType":"ElementaryTypeName","src":"5520:7:85","typeDescriptions":{}}},"id":59903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5520:13:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":59899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5512:7:85","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":59898,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5512:7:85","typeDescriptions":{}}},"id":59904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5512:22:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"id":59908,"nodeType":"VariableDeclaration","src":"5541:36:85","nodes":[],"constant":false,"mutability":"mutable","name":"_governanceAdmin","nameLocation":"5561:16:85","scope":61007,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63114","typeString":"contract IGovernance"},"typeName":{"id":59907,"nodeType":"UserDefinedTypeName","pathNode":{"id":59906,"name":"IGovernance","nameLocations":["5541:11:85"],"nodeType":"IdentifierPath","referencedDeclaration":63114,"src":"5541:11:85"},"referencedDeclaration":63114,"src":"5541:11:85","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63114","typeString":"contract IGovernance"}},"visibility":"private"},{"id":59911,"nodeType":"VariableDeclaration","src":"5583:37:85","nodes":[],"constant":false,"mutability":"mutable","name":"_governancePauser","nameLocation":"5603:17:85","scope":61007,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63114","typeString":"contract IGovernance"},"typeName":{"id":59910,"nodeType":"UserDefinedTypeName","pathNode":{"id":59909,"name":"IGovernance","nameLocations":["5583:11:85"],"nodeType":"IdentifierPath","referencedDeclaration":63114,"src":"5583:11:85"},"referencedDeclaration":63114,"src":"5583:11:85","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63114","typeString":"contract IGovernance"}},"visibility":"private"},{"id":59913,"nodeType":"VariableDeclaration","src":"5626:29:85","nodes":[],"constant":false,"mutability":"mutable","name":"_messageQueue","nameLocation":"5642:13:85","scope":61007,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":59912,"name":"address","nodeType":"ElementaryTypeName","src":"5626:7:85","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"id":59916,"nodeType":"VariableDeclaration","src":"5661:45:85","nodes":[],"constant":false,"mutability":"mutable","name":"_vftManagers","nameLocation":"5694:12:85","scope":61007,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$53809_storage","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":59915,"nodeType":"UserDefinedTypeName","pathNode":{"id":59914,"name":"EnumerableSet.Bytes32Set","nameLocations":["5661:13:85","5675:10:85"],"nodeType":"IdentifierPath","referencedDeclaration":53809,"src":"5661:24:85"},"referencedDeclaration":53809,"src":"5661:24:85","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$53809_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"private"},{"id":59919,"nodeType":"VariableDeclaration","src":"5712:57:85","nodes":[],"constant":false,"mutability":"mutable","name":"_tokens","nameLocation":"5762:7:85","scope":61007,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToTokenTypeMap_$63854_storage","typeString":"struct CustomEnumerableMap.AddressToTokenTypeMap"},"typeName":{"id":59918,"nodeType":"UserDefinedTypeName","pathNode":{"id":59917,"name":"CustomEnumerableMap.AddressToTokenTypeMap","nameLocations":["5712:19:85","5732:21:85"],"nodeType":"IdentifierPath","referencedDeclaration":63854,"src":"5712:41:85"},"referencedDeclaration":63854,"src":"5712:41:85","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToTokenTypeMap_$63854_storage_ptr","typeString":"struct CustomEnumerableMap.AddressToTokenTypeMap"}},"visibility":"private"},{"id":59922,"nodeType":"VariableDeclaration","src":"5775:50:85","nodes":[],"constant":false,"mutability":"mutable","name":"_bridgingPayments","nameLocation":"5808:17:85","scope":61007,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$53979_storage","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":59921,"nodeType":"UserDefinedTypeName","pathNode":{"id":59920,"name":"EnumerableSet.AddressSet","nameLocations":["5775:13:85","5789:10:85"],"nodeType":"IdentifierPath","referencedDeclaration":53979,"src":"5775:24:85"},"referencedDeclaration":53979,"src":"5775:24:85","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$53979_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"private"},{"id":59930,"nodeType":"FunctionDefinition","src":"5900:53:85","nodes":[],"body":{"id":59929,"nodeType":"Block","src":"5914:39:85","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":59926,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40141,"src":"5924:20:85","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":59927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5924:22:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":59928,"nodeType":"ExpressionStatement","src":"5924:22:85"}]},"documentation":{"id":59923,"nodeType":"StructuredDocumentation","src":"5832:63:85","text":" @custom:oz-upgrades-unsafe-allow constructor"},"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","parameters":{"id":59924,"nodeType":"ParameterList","parameters":[],"src":"5911:2:85"},"returnParameters":{"id":59925,"nodeType":"ParameterList","parameters":[],"src":"5914:0:85"},"scope":61007,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":60042,"nodeType":"FunctionDefinition","src":"6690:1002:85","nodes":[],"body":{"id":60041,"nodeType":"Block","src":"6907:785:85","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":59950,"name":"__AccessControl_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39425,"src":"6917:20:85","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":59951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6917:22:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":59952,"nodeType":"ExpressionStatement","src":"6917:22:85"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":59953,"name":"__Pausable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40479,"src":"6949:15:85","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":59954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6949:17:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":59955,"nodeType":"ExpressionStatement","src":"6949:17:85"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":59956,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40241,"src":"6976:22:85","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":59957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6976:24:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":59958,"nodeType":"ExpressionStatement","src":"6976:24:85"},{"expression":{"arguments":[{"id":59960,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39390,"src":"7022:18:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":59963,"name":"governanceAdmin_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59934,"src":"7050:16:85","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63114","typeString":"contract IGovernance"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IGovernance_$63114","typeString":"contract IGovernance"}],"id":59962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7042:7:85","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":59961,"name":"address","nodeType":"ElementaryTypeName","src":"7042:7:85","typeDescriptions":{}}},"id":59964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7042:25:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":59959,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39677,"src":"7011:10:85","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":59965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7011:57:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":59966,"nodeType":"ExpressionStatement","src":"7011:57:85"},{"expression":{"arguments":[{"id":59968,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59905,"src":"7090:11:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":59971,"name":"governanceAdmin_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59934,"src":"7111:16:85","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63114","typeString":"contract IGovernance"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IGovernance_$63114","typeString":"contract IGovernance"}],"id":59970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7103:7:85","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":59969,"name":"address","nodeType":"ElementaryTypeName","src":"7103:7:85","typeDescriptions":{}}},"id":59972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7103:25:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":59967,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39677,"src":"7079:10:85","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":59973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7079:50:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":59974,"nodeType":"ExpressionStatement","src":"7079:50:85"},{"expression":{"arguments":[{"id":59976,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59905,"src":"7150:11:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":59979,"name":"governancePauser_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59937,"src":"7171:17:85","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63114","typeString":"contract IGovernance"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IGovernance_$63114","typeString":"contract IGovernance"}],"id":59978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7163:7:85","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":59977,"name":"address","nodeType":"ElementaryTypeName","src":"7163:7:85","typeDescriptions":{}}},"id":59980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7163:26:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":59975,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39677,"src":"7139:10:85","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":59981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7139:51:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":59982,"nodeType":"ExpressionStatement","src":"7139:51:85"},{"expression":{"id":59985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":59983,"name":"_governanceAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59908,"src":"7201:16:85","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63114","typeString":"contract IGovernance"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":59984,"name":"governanceAdmin_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59934,"src":"7220:16:85","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63114","typeString":"contract IGovernance"}},"src":"7201:35:85","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63114","typeString":"contract IGovernance"}},"id":59986,"nodeType":"ExpressionStatement","src":"7201:35:85"},{"expression":{"id":59989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":59987,"name":"_governancePauser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59911,"src":"7246:17:85","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63114","typeString":"contract IGovernance"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":59988,"name":"governancePauser_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59937,"src":"7266:17:85","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63114","typeString":"contract IGovernance"}},"src":"7246:37:85","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63114","typeString":"contract IGovernance"}},"id":59990,"nodeType":"ExpressionStatement","src":"7246:37:85"},{"expression":{"id":59993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":59991,"name":"_messageQueue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59913,"src":"7293:13:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":59992,"name":"messageQueue_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59939,"src":"7309:13:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7293:29:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":59994,"nodeType":"ExpressionStatement","src":"7293:29:85"},{"expression":{"arguments":[{"id":59998,"name":"vftManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59941,"src":"7349:10:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":59995,"name":"_vftManagers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59916,"src":"7332:12:85","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$53809_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":59997,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7345:3:85","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":53827,"src":"7332:16:85","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Set_$53809_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$53809_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"}},"id":59999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7332:28:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":60000,"nodeType":"ExpressionStatement","src":"7332:28:85"},{"body":{"id":60039,"nodeType":"Block","src":"7416:270:85","statements":[{"assignments":[60014],"declarations":[{"constant":false,"id":60014,"mutability":"mutable","name":"tokenInfo","nameLocation":"7447:9:85","nodeType":"VariableDeclaration","scope":60039,"src":"7430:26:85","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$62718_memory_ptr","typeString":"struct IERC20Manager.TokenInfo"},"typeName":{"id":60013,"nodeType":"UserDefinedTypeName","pathNode":{"id":60012,"name":"TokenInfo","nameLocations":["7430:9:85"],"nodeType":"IdentifierPath","referencedDeclaration":62718,"src":"7430:9:85"},"referencedDeclaration":62718,"src":"7430:9:85","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$62718_storage_ptr","typeString":"struct IERC20Manager.TokenInfo"}},"visibility":"internal"}],"id":60018,"initialValue":{"baseExpression":{"id":60015,"name":"tokens_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59945,"src":"7459:7:85","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenInfo_$62718_memory_ptr_$dyn_memory_ptr","typeString":"struct IERC20Manager.TokenInfo memory[] memory"}},"id":60017,"indexExpression":{"id":60016,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60002,"src":"7467:1:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7459:10:85","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$62718_memory_ptr","typeString":"struct IERC20Manager.TokenInfo memory"}},"nodeType":"VariableDeclarationStatement","src":"7430:39:85"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_TokenType_$62711","typeString":"enum IERC20Manager.TokenType"},"id":60023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":60019,"name":"tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60014,"src":"7488:9:85","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$62718_memory_ptr","typeString":"struct IERC20Manager.TokenInfo memory"}},"id":60020,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7498:9:85","memberName":"tokenType","nodeType":"MemberAccess","referencedDeclaration":62717,"src":"7488:19:85","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$62711","typeString":"enum IERC20Manager.TokenType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":60021,"name":"TokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62711,"src":"7511:9:85","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TokenType_$62711_$","typeString":"type(enum IERC20Manager.TokenType)"}},"id":60022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7521:7:85","memberName":"Unknown","nodeType":"MemberAccess","referencedDeclaration":62708,"src":"7511:17:85","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$62711","typeString":"enum IERC20Manager.TokenType"}},"src":"7488:40:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":60037,"nodeType":"Block","src":"7594:82:85","statements":[{"expression":{"arguments":[{"expression":{"id":60031,"name":"tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60014,"src":"7624:9:85","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$62718_memory_ptr","typeString":"struct IERC20Manager.TokenInfo memory"}},"id":60032,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7634:5:85","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":62714,"src":"7624:15:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":60033,"name":"tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60014,"src":"7641:9:85","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$62718_memory_ptr","typeString":"struct IERC20Manager.TokenInfo memory"}},"id":60034,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7651:9:85","memberName":"tokenType","nodeType":"MemberAccess","referencedDeclaration":62717,"src":"7641:19:85","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$62711","typeString":"enum IERC20Manager.TokenType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_TokenType_$62711","typeString":"enum IERC20Manager.TokenType"}],"expression":{"id":60028,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59919,"src":"7612:7:85","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToTokenTypeMap_$63854_storage","typeString":"struct CustomEnumerableMap.AddressToTokenTypeMap storage ref"}},"id":60030,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7620:3:85","memberName":"set","nodeType":"MemberAccess","referencedDeclaration":63892,"src":"7612:11:85","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressToTokenTypeMap_$63854_storage_ptr_$_t_address_$_t_enum$_TokenType_$62711_$returns$_t_bool_$attached_to$_t_struct$_AddressToTokenTypeMap_$63854_storage_ptr_$","typeString":"function (struct CustomEnumerableMap.AddressToTokenTypeMap storage pointer,address,enum IERC20Manager.TokenType) returns (bool)"}},"id":60035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7612:49:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":60036,"nodeType":"ExpressionStatement","src":"7612:49:85"}]},"id":60038,"nodeType":"IfStatement","src":"7484:192:85","trueBody":{"id":60027,"nodeType":"Block","src":"7530:58:85","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":60024,"name":"InvalidTokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62655,"src":"7555:16:85","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":60025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7555:18:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":60026,"nodeType":"RevertStatement","src":"7548:25:85"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":60008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":60005,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60002,"src":"7391:1:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":60006,"name":"tokens_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59945,"src":"7395:7:85","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenInfo_$62718_memory_ptr_$dyn_memory_ptr","typeString":"struct IERC20Manager.TokenInfo memory[] memory"}},"id":60007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7403:6:85","memberName":"length","nodeType":"MemberAccess","src":"7395:14:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7391:18:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":60040,"initializationExpression":{"assignments":[60002],"declarations":[{"constant":false,"id":60002,"mutability":"mutable","name":"i","nameLocation":"7384:1:85","nodeType":"VariableDeclaration","scope":60040,"src":"7376:9:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60001,"name":"uint256","nodeType":"ElementaryTypeName","src":"7376:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":60004,"initialValue":{"hexValue":"30","id":60003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7388:1:85","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7376:13:85"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":60010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7411:3:85","subExpression":{"id":60009,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60002,"src":"7411:1:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":60011,"nodeType":"ExpressionStatement","src":"7411:3:85"},"nodeType":"ForStatement","src":"7371:315:85"}]},"documentation":{"id":59931,"nodeType":"StructuredDocumentation","src":"5959:726:85","text":" @dev Initializes the ERC20Manager contract with the message queue and VFT manager addresses.\n      GovernanceAdmin contract is used to upgrade, pause/unpause the ERC20Manager contract.\n      GovernancePauser contract is used to pause/unpause the ERC20Manager contract.\n @param governanceAdmin_ The address of the GovernanceAdmin contract that will process messages.\n @param governancePauser_ The address of the GovernanceAdmin contract that will process pauser messages.\n @param messageQueue_ The address of the message queue contract.\n @param vftManager The address of the VFT manager contract (on Vara Network).\n @param tokens_ The tokens that will be registered."},"functionSelector":"763b754a","implemented":true,"kind":"function","modifiers":[{"id":59948,"kind":"modifierInvocation","modifierName":{"id":59947,"name":"initializer","nameLocations":["6895:11:85"],"nodeType":"IdentifierPath","referencedDeclaration":40027,"src":"6895:11:85"},"nodeType":"ModifierInvocation","src":"6895:11:85"}],"name":"initialize","nameLocation":"6699:10:85","parameters":{"id":59946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":59934,"mutability":"mutable","name":"governanceAdmin_","nameLocation":"6731:16:85","nodeType":"VariableDeclaration","scope":60042,"src":"6719:28:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63114","typeString":"contract IGovernance"},"typeName":{"id":59933,"nodeType":"UserDefinedTypeName","pathNode":{"id":59932,"name":"IGovernance","nameLocations":["6719:11:85"],"nodeType":"IdentifierPath","referencedDeclaration":63114,"src":"6719:11:85"},"referencedDeclaration":63114,"src":"6719:11:85","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63114","typeString":"contract IGovernance"}},"visibility":"internal"},{"constant":false,"id":59937,"mutability":"mutable","name":"governancePauser_","nameLocation":"6769:17:85","nodeType":"VariableDeclaration","scope":60042,"src":"6757:29:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63114","typeString":"contract IGovernance"},"typeName":{"id":59936,"nodeType":"UserDefinedTypeName","pathNode":{"id":59935,"name":"IGovernance","nameLocations":["6757:11:85"],"nodeType":"IdentifierPath","referencedDeclaration":63114,"src":"6757:11:85"},"referencedDeclaration":63114,"src":"6757:11:85","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63114","typeString":"contract IGovernance"}},"visibility":"internal"},{"constant":false,"id":59939,"mutability":"mutable","name":"messageQueue_","nameLocation":"6804:13:85","nodeType":"VariableDeclaration","scope":60042,"src":"6796:21:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":59938,"name":"address","nodeType":"ElementaryTypeName","src":"6796:7:85","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":59941,"mutability":"mutable","name":"vftManager","nameLocation":"6835:10:85","nodeType":"VariableDeclaration","scope":60042,"src":"6827:18:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":59940,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6827:7:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":59945,"mutability":"mutable","name":"tokens_","nameLocation":"6874:7:85","nodeType":"VariableDeclaration","scope":60042,"src":"6855:26:85","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenInfo_$62718_memory_ptr_$dyn_memory_ptr","typeString":"struct IERC20Manager.TokenInfo[]"},"typeName":{"baseType":{"id":59943,"nodeType":"UserDefinedTypeName","pathNode":{"id":59942,"name":"TokenInfo","nameLocations":["6855:9:85"],"nodeType":"IdentifierPath","referencedDeclaration":62718,"src":"6855:9:85"},"referencedDeclaration":62718,"src":"6855:9:85","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$62718_storage_ptr","typeString":"struct IERC20Manager.TokenInfo"}},"id":59944,"nodeType":"ArrayTypeName","src":"6855:11:85","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenInfo_$62718_storage_$dyn_storage_ptr","typeString":"struct IERC20Manager.TokenInfo[]"}},"visibility":"internal"}],"src":"6709:178:85"},"returnParameters":{"id":59949,"nodeType":"ParameterList","parameters":[],"src":"6907:0:85"},"scope":61007,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":60054,"nodeType":"FunctionDefinition","src":"7817:108:85","nodes":[],"body":{"id":60053,"nodeType":"Block","src":"7876:49:85","nodes":[],"statements":[{"expression":{"arguments":[{"id":60050,"name":"_governanceAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59908,"src":"7901:16:85","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63114","typeString":"contract IGovernance"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IGovernance_$63114","typeString":"contract IGovernance"}],"id":60049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7893:7:85","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":60048,"name":"address","nodeType":"ElementaryTypeName","src":"7893:7:85","typeDescriptions":{}}},"id":60051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7893:25:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":60047,"id":60052,"nodeType":"Return","src":"7886:32:85"}]},"baseFunctions":[62724],"documentation":{"id":60043,"nodeType":"StructuredDocumentation","src":"7698:114:85","text":" @dev Returns governance admin address.\n @return governanceAdmin Governance admin address."},"functionSelector":"0058f6b8","implemented":true,"kind":"function","modifiers":[],"name":"governanceAdmin","nameLocation":"7826:15:85","parameters":{"id":60044,"nodeType":"ParameterList","parameters":[],"src":"7841:2:85"},"returnParameters":{"id":60047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60046,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60054,"src":"7867:7:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60045,"name":"address","nodeType":"ElementaryTypeName","src":"7867:7:85","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7866:9:85"},"scope":61007,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":60066,"nodeType":"FunctionDefinition","src":"8053:110:85","nodes":[],"body":{"id":60065,"nodeType":"Block","src":"8113:50:85","nodes":[],"statements":[{"expression":{"arguments":[{"id":60062,"name":"_governancePauser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59911,"src":"8138:17:85","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63114","typeString":"contract IGovernance"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IGovernance_$63114","typeString":"contract IGovernance"}],"id":60061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8130:7:85","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":60060,"name":"address","nodeType":"ElementaryTypeName","src":"8130:7:85","typeDescriptions":{}}},"id":60063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8130:26:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":60059,"id":60064,"nodeType":"Return","src":"8123:33:85"}]},"baseFunctions":[62730],"documentation":{"id":60055,"nodeType":"StructuredDocumentation","src":"7931:117:85","text":" @dev Returns governance pauser address.\n @return governancePauser Governance pauser address."},"functionSelector":"c81eb797","implemented":true,"kind":"function","modifiers":[],"name":"governancePauser","nameLocation":"8062:16:85","parameters":{"id":60056,"nodeType":"ParameterList","parameters":[],"src":"8078:2:85"},"returnParameters":{"id":60059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60058,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60066,"src":"8104:7:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60057,"name":"address","nodeType":"ElementaryTypeName","src":"8104:7:85","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8103:9:85"},"scope":61007,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":60078,"nodeType":"FunctionDefinition","src":"8279:102:85","nodes":[],"body":{"id":60077,"nodeType":"Block","src":"8335:46:85","nodes":[],"statements":[{"expression":{"arguments":[{"id":60074,"name":"_messageQueue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59913,"src":"8360:13:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8352:7:85","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":60072,"name":"address","nodeType":"ElementaryTypeName","src":"8352:7:85","typeDescriptions":{}}},"id":60075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8352:22:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":60071,"id":60076,"nodeType":"Return","src":"8345:29:85"}]},"baseFunctions":[62736],"documentation":{"id":60067,"nodeType":"StructuredDocumentation","src":"8169:105:85","text":" @dev Returns message queue address.\n @return messageQueue Message queue address."},"functionSelector":"3b70c18a","implemented":true,"kind":"function","modifiers":[],"name":"messageQueue","nameLocation":"8288:12:85","parameters":{"id":60068,"nodeType":"ParameterList","parameters":[],"src":"8300:2:85"},"returnParameters":{"id":60071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60070,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60078,"src":"8326:7:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60069,"name":"address","nodeType":"ElementaryTypeName","src":"8326:7:85","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8325:9:85"},"scope":61007,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":60089,"nodeType":"FunctionDefinition","src":"8515:105:85","nodes":[],"body":{"id":60088,"nodeType":"Block","src":"8575:45:85","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":60084,"name":"_vftManagers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59916,"src":"8592:12:85","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$53809_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":60085,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8605:6:85","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":53891,"src":"8592:19:85","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$53809_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Bytes32Set_$53809_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer) view returns (uint256)"}},"id":60086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8592:21:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":60083,"id":60087,"nodeType":"Return","src":"8585:28:85"}]},"baseFunctions":[62742],"documentation":{"id":60079,"nodeType":"StructuredDocumentation","src":"8387:123:85","text":" @dev Returns total number of VFT managers.\n @return totalVftManagers Total number of VFT managers."},"functionSelector":"240dfa95","implemented":true,"kind":"function","modifiers":[],"name":"totalVftManagers","nameLocation":"8524:16:85","parameters":{"id":60080,"nodeType":"ParameterList","parameters":[],"src":"8540:2:85"},"returnParameters":{"id":60083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60082,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60089,"src":"8566:7:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60081,"name":"uint256","nodeType":"ElementaryTypeName","src":"8566:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8565:9:85"},"scope":61007,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":60101,"nodeType":"FunctionDefinition","src":"8733:109:85","nodes":[],"body":{"id":60100,"nodeType":"Block","src":"8797:45:85","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":60096,"name":"_vftManagers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59916,"src":"8814:12:85","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$53809_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":60097,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8827:6:85","memberName":"values","nodeType":"MemberAccess","referencedDeclaration":53939,"src":"8814:19:85","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$53809_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$attached_to$_t_struct$_Bytes32Set_$53809_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer) view returns (bytes32[] memory)"}},"id":60098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8814:21:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":60095,"id":60099,"nodeType":"Return","src":"8807:28:85"}]},"baseFunctions":[62749],"documentation":{"id":60090,"nodeType":"StructuredDocumentation","src":"8626:102:85","text":" @dev Returns list of VFT managers.\n @return vftManagers List of VFT managers."},"functionSelector":"87be40b1","implemented":true,"kind":"function","modifiers":[],"name":"vftManagers","nameLocation":"8742:11:85","parameters":{"id":60091,"nodeType":"ParameterList","parameters":[],"src":"8753:2:85"},"returnParameters":{"id":60095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60094,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60101,"src":"8779:16:85","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":60092,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8779:7:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":60093,"nodeType":"ArrayTypeName","src":"8779:9:85","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"8778:18:85"},"scope":61007,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":60119,"nodeType":"FunctionDefinition","src":"9081:154:85","nodes":[],"body":{"id":60118,"nodeType":"Block","src":"9174:61:85","nodes":[],"statements":[{"expression":{"arguments":[{"id":60113,"name":"_vftManagers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59916,"src":"9200:12:85","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$53809_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},{"id":60114,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60104,"src":"9214:6:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":60115,"name":"limit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60106,"src":"9222:5:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32Set_$53809_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":60112,"name":"paginate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60375,"src":"9191:8:85","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$53809_storage_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,uint256,uint256) view returns (bytes32[] memory)"}},"id":60116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9191:37:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":60111,"id":60117,"nodeType":"Return","src":"9184:44:85"}]},"baseFunctions":[62760],"documentation":{"id":60102,"nodeType":"StructuredDocumentation","src":"8848:228:85","text":" @dev Returns list of VFT managers.\n @param offset Offset of the first VFT manager to return.\n @param limit Maximum number of VFT managers to return.\n @return vftManagers List of VFT managers."},"functionSelector":"c1c60921","implemented":true,"kind":"function","modifiers":[],"name":"vftManagers","nameLocation":"9090:11:85","parameters":{"id":60107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60104,"mutability":"mutable","name":"offset","nameLocation":"9110:6:85","nodeType":"VariableDeclaration","scope":60119,"src":"9102:14:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60103,"name":"uint256","nodeType":"ElementaryTypeName","src":"9102:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":60106,"mutability":"mutable","name":"limit","nameLocation":"9126:5:85","nodeType":"VariableDeclaration","scope":60119,"src":"9118:13:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60105,"name":"uint256","nodeType":"ElementaryTypeName","src":"9118:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9101:31:85"},"returnParameters":{"id":60111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60110,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60119,"src":"9156:16:85","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":60108,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9156:7:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":60109,"nodeType":"ArrayTypeName","src":"9156:9:85","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"9155:18:85"},"scope":61007,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":60133,"nodeType":"FunctionDefinition","src":"9450:128:85","nodes":[],"body":{"id":60132,"nodeType":"Block","src":"9521:57:85","nodes":[],"statements":[{"expression":{"arguments":[{"id":60129,"name":"vftManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60122,"src":"9560:10:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":60127,"name":"_vftManagers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59916,"src":"9538:12:85","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$53809_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":60128,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9551:8:85","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":53876,"src":"9538:21:85","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$53809_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$53809_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) view returns (bool)"}},"id":60130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9538:33:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":60126,"id":60131,"nodeType":"Return","src":"9531:40:85"}]},"baseFunctions":[62768],"documentation":{"id":60120,"nodeType":"StructuredDocumentation","src":"9241:204:85","text":" @dev Returns whether the VFT manager is registered.\n @param vftManager VFT manager address.\n @return isVftManager `true` if the VFT manager is registered, `false` otherwise."},"functionSelector":"4e689539","implemented":true,"kind":"function","modifiers":[],"name":"isVftManager","nameLocation":"9459:12:85","parameters":{"id":60123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60122,"mutability":"mutable","name":"vftManager","nameLocation":"9480:10:85","nodeType":"VariableDeclaration","scope":60133,"src":"9472:18:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":60121,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9472:7:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9471:20:85"},"returnParameters":{"id":60126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60125,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60133,"src":"9515:4:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":60124,"name":"bool","nodeType":"ElementaryTypeName","src":"9515:4:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9514:6:85"},"scope":61007,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":60144,"nodeType":"FunctionDefinition","src":"9695:95:85","nodes":[],"body":{"id":60143,"nodeType":"Block","src":"9750:40:85","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":60139,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59919,"src":"9767:7:85","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToTokenTypeMap_$63854_storage","typeString":"struct CustomEnumerableMap.AddressToTokenTypeMap storage ref"}},"id":60140,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9775:6:85","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":63979,"src":"9767:14:85","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressToTokenTypeMap_$63854_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressToTokenTypeMap_$63854_storage_ptr_$","typeString":"function (struct CustomEnumerableMap.AddressToTokenTypeMap storage pointer) view returns (uint256)"}},"id":60141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9767:16:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":60138,"id":60142,"nodeType":"Return","src":"9760:23:85"}]},"baseFunctions":[62774],"documentation":{"id":60134,"nodeType":"StructuredDocumentation","src":"9584:106:85","text":" @dev Returns total number of tokens.\n @return totalTokens Total number of tokens."},"functionSelector":"7e1c0c09","implemented":true,"kind":"function","modifiers":[],"name":"totalTokens","nameLocation":"9704:11:85","parameters":{"id":60135,"nodeType":"ParameterList","parameters":[],"src":"9715:2:85"},"returnParameters":{"id":60138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60137,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60144,"src":"9741:7:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60136,"name":"uint256","nodeType":"ElementaryTypeName","src":"9741:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9740:9:85"},"scope":61007,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":60156,"nodeType":"FunctionDefinition","src":"9886:97:85","nodes":[],"body":{"id":60155,"nodeType":"Block","src":"9945:38:85","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":60151,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59919,"src":"9962:7:85","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToTokenTypeMap_$63854_storage","typeString":"struct CustomEnumerableMap.AddressToTokenTypeMap storage ref"}},"id":60152,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9970:4:85","memberName":"keys","nodeType":"MemberAccess","referencedDeclaration":64135,"src":"9962:12:85","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressToTokenTypeMap_$63854_storage_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$attached_to$_t_struct$_AddressToTokenTypeMap_$63854_storage_ptr_$","typeString":"function (struct CustomEnumerableMap.AddressToTokenTypeMap storage pointer) view returns (address[] memory)"}},"id":60153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9962:14:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":60150,"id":60154,"nodeType":"Return","src":"9955:21:85"}]},"baseFunctions":[62781],"documentation":{"id":60145,"nodeType":"StructuredDocumentation","src":"9796:85:85","text":" @dev Returns list of tokens.\n @return tokens List of tokens."},"functionSelector":"9d63848a","implemented":true,"kind":"function","modifiers":[],"name":"tokens","nameLocation":"9895:6:85","parameters":{"id":60146,"nodeType":"ParameterList","parameters":[],"src":"9901:2:85"},"returnParameters":{"id":60150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60149,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60156,"src":"9927:16:85","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":60147,"name":"address","nodeType":"ElementaryTypeName","src":"9927:7:85","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":60148,"nodeType":"ArrayTypeName","src":"9927:9:85","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"9926:18:85"},"scope":61007,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":60190,"nodeType":"FunctionDefinition","src":"10193:306:85","nodes":[],"body":{"id":60189,"nodeType":"Block","src":"10281:218:85","nodes":[],"statements":[{"assignments":[60171],"declarations":[{"constant":false,"id":60171,"mutability":"mutable","name":"store","nameLocation":"10308:5:85","nodeType":"VariableDeclaration","scope":60189,"src":"10291:22:85","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":60169,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10291:7:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":60170,"nodeType":"ArrayTypeName","src":"10291:9:85","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":60179,"initialValue":{"arguments":[{"expression":{"expression":{"id":60173,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59919,"src":"10325:7:85","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToTokenTypeMap_$63854_storage","typeString":"struct CustomEnumerableMap.AddressToTokenTypeMap storage ref"}},"id":60174,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10333:6:85","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":63853,"src":"10325:14:85","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$50734_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},"id":60175,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10340:5:85","memberName":"_keys","nodeType":"MemberAccess","referencedDeclaration":50729,"src":"10325:20:85","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$53809_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},{"id":60176,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60159,"src":"10347:6:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":60177,"name":"limit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60161,"src":"10355:5:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32Set_$53809_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":60172,"name":"paginate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60375,"src":"10316:8:85","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$53809_storage_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,uint256,uint256) view returns (bytes32[] memory)"}},"id":60178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10316:45:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10291:70:85"},{"assignments":[60184],"declarations":[{"constant":false,"id":60184,"mutability":"mutable","name":"result","nameLocation":"10388:6:85","nodeType":"VariableDeclaration","scope":60189,"src":"10371:23:85","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":60182,"name":"address","nodeType":"ElementaryTypeName","src":"10371:7:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":60183,"nodeType":"ArrayTypeName","src":"10371:9:85","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":60185,"nodeType":"VariableDeclarationStatement","src":"10371:23:85"},{"AST":{"nativeSrc":"10430:39:85","nodeType":"YulBlock","src":"10430:39:85","statements":[{"nativeSrc":"10444:15:85","nodeType":"YulAssignment","src":"10444:15:85","value":{"name":"store","nativeSrc":"10454:5:85","nodeType":"YulIdentifier","src":"10454:5:85"},"variableNames":[{"name":"result","nativeSrc":"10444:6:85","nodeType":"YulIdentifier","src":"10444:6:85"}]}]},"evmVersion":"prague","externalReferences":[{"declaration":60184,"isOffset":false,"isSlot":false,"src":"10444:6:85","valueSize":1},{"declaration":60171,"isOffset":false,"isSlot":false,"src":"10454:5:85","valueSize":1}],"flags":["memory-safe"],"id":60186,"nodeType":"InlineAssembly","src":"10405:64:85"},{"expression":{"id":60187,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60184,"src":"10486:6:85","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":60166,"id":60188,"nodeType":"Return","src":"10479:13:85"}]},"baseFunctions":[62792],"documentation":{"id":60157,"nodeType":"StructuredDocumentation","src":"9989:199:85","text":" @dev Returns list of tokens.\n @param offset Offset of the first token to return.\n @param limit Maximum number of tokens to return.\n @return tokens List of tokens."},"functionSelector":"8b4864d6","implemented":true,"kind":"function","modifiers":[],"name":"tokens","nameLocation":"10202:6:85","parameters":{"id":60162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60159,"mutability":"mutable","name":"offset","nameLocation":"10217:6:85","nodeType":"VariableDeclaration","scope":60190,"src":"10209:14:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60158,"name":"uint256","nodeType":"ElementaryTypeName","src":"10209:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":60161,"mutability":"mutable","name":"limit","nameLocation":"10233:5:85","nodeType":"VariableDeclaration","scope":60190,"src":"10225:13:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60160,"name":"uint256","nodeType":"ElementaryTypeName","src":"10225:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10208:31:85"},"returnParameters":{"id":60166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60190,"src":"10263:16:85","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":60163,"name":"address","nodeType":"ElementaryTypeName","src":"10263:7:85","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":60164,"nodeType":"ArrayTypeName","src":"10263:9:85","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10262:18:85"},"scope":61007,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":60210,"nodeType":"FunctionDefinition","src":"10681:161:85","nodes":[],"body":{"id":60209,"nodeType":"Block","src":"10752:90:85","nodes":[],"statements":[{"assignments":[null,60201],"declarations":[null,{"constant":false,"id":60201,"mutability":"mutable","name":"tokenType","nameLocation":"10775:9:85","nodeType":"VariableDeclaration","scope":60209,"src":"10765:19:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$62711","typeString":"enum IERC20Manager.TokenType"},"typeName":{"id":60200,"nodeType":"UserDefinedTypeName","pathNode":{"id":60199,"name":"TokenType","nameLocations":["10765:9:85"],"nodeType":"IdentifierPath","referencedDeclaration":62711,"src":"10765:9:85"},"referencedDeclaration":62711,"src":"10765:9:85","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$62711","typeString":"enum IERC20Manager.TokenType"}},"visibility":"internal"}],"id":60206,"initialValue":{"arguments":[{"id":60204,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60193,"src":"10803:5:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":60202,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59919,"src":"10788:7:85","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToTokenTypeMap_$63854_storage","typeString":"struct CustomEnumerableMap.AddressToTokenTypeMap storage ref"}},"id":60203,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10796:6:85","memberName":"tryGet","nodeType":"MemberAccess","referencedDeclaration":64069,"src":"10788:14:85","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressToTokenTypeMap_$63854_storage_ptr_$_t_address_$returns$_t_bool_$_t_enum$_TokenType_$62711_$attached_to$_t_struct$_AddressToTokenTypeMap_$63854_storage_ptr_$","typeString":"function (struct CustomEnumerableMap.AddressToTokenTypeMap storage pointer,address) view returns (bool,enum IERC20Manager.TokenType)"}},"id":60205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10788:21:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_enum$_TokenType_$62711_$","typeString":"tuple(bool,enum IERC20Manager.TokenType)"}},"nodeType":"VariableDeclarationStatement","src":"10762:47:85"},{"expression":{"id":60207,"name":"tokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60201,"src":"10826:9:85","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$62711","typeString":"enum IERC20Manager.TokenType"}},"functionReturnParameters":60198,"id":60208,"nodeType":"Return","src":"10819:16:85"}]},"baseFunctions":[62801],"documentation":{"id":60191,"nodeType":"StructuredDocumentation","src":"10505:171:85","text":" @dev Returns token type.\n @param token Token address.\n @return tokenType Token type. Returns `TokenType.Unknown` if token is not registered."},"functionSelector":"93272baf","implemented":true,"kind":"function","modifiers":[],"name":"getTokenType","nameLocation":"10690:12:85","parameters":{"id":60194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60193,"mutability":"mutable","name":"token","nameLocation":"10711:5:85","nodeType":"VariableDeclaration","scope":60210,"src":"10703:13:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60192,"name":"address","nodeType":"ElementaryTypeName","src":"10703:7:85","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10702:15:85"},"returnParameters":{"id":60198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60210,"src":"10741:9:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$62711","typeString":"enum IERC20Manager.TokenType"},"typeName":{"id":60196,"nodeType":"UserDefinedTypeName","pathNode":{"id":60195,"name":"TokenType","nameLocations":["10741:9:85"],"nodeType":"IdentifierPath","referencedDeclaration":62711,"src":"10741:9:85"},"referencedDeclaration":62711,"src":"10741:9:85","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$62711","typeString":"enum IERC20Manager.TokenType"}},"visibility":"internal"}],"src":"10740:11:85"},"scope":61007,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":60221,"nodeType":"FunctionDefinition","src":"10991:115:85","nodes":[],"body":{"id":60220,"nodeType":"Block","src":"11056:50:85","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":60216,"name":"_bridgingPayments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59922,"src":"11073:17:85","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$53979_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":60217,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11091:6:85","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":54088,"src":"11073:24:85","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$53979_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressSet_$53979_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"}},"id":60218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11073:26:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":60215,"id":60219,"nodeType":"Return","src":"11066:33:85"}]},"baseFunctions":[62807],"documentation":{"id":60211,"nodeType":"StructuredDocumentation","src":"10848:138:85","text":" @dev Returns total number of bridging payments.\n @return totalBridgingPayments Total number of bridging payments."},"functionSelector":"8b841f6c","implemented":true,"kind":"function","modifiers":[],"name":"totalBridgingPayments","nameLocation":"11000:21:85","parameters":{"id":60212,"nodeType":"ParameterList","parameters":[],"src":"11021:2:85"},"returnParameters":{"id":60215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60214,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60221,"src":"11047:7:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60213,"name":"uint256","nodeType":"ElementaryTypeName","src":"11047:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11046:9:85"},"scope":61007,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":60233,"nodeType":"FunctionDefinition","src":"11234:119:85","nodes":[],"body":{"id":60232,"nodeType":"Block","src":"11303:50:85","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":60228,"name":"_bridgingPayments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59922,"src":"11320:17:85","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$53979_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":60229,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11338:6:85","memberName":"values","nodeType":"MemberAccess","referencedDeclaration":54145,"src":"11320:24:85","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$53979_storage_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$attached_to$_t_struct$_AddressSet_$53979_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (address[] memory)"}},"id":60230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11320:26:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":60227,"id":60231,"nodeType":"Return","src":"11313:33:85"}]},"baseFunctions":[62814],"documentation":{"id":60222,"nodeType":"StructuredDocumentation","src":"11112:117:85","text":" @dev Returns list of bridging payments.\n @return bridgingPayments List of bridging payments."},"functionSelector":"109ec2e7","implemented":true,"kind":"function","modifiers":[],"name":"bridgingPayments","nameLocation":"11243:16:85","parameters":{"id":60223,"nodeType":"ParameterList","parameters":[],"src":"11259:2:85"},"returnParameters":{"id":60227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60233,"src":"11285:16:85","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":60224,"name":"address","nodeType":"ElementaryTypeName","src":"11285:7:85","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":60225,"nodeType":"ArrayTypeName","src":"11285:9:85","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"11284:18:85"},"scope":61007,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":60272,"nodeType":"FunctionDefinition","src":"11617:459:85","nodes":[],"body":{"id":60271,"nodeType":"Block","src":"11715:361:85","nodes":[],"statements":[{"assignments":[60248],"declarations":[{"constant":false,"id":60248,"mutability":"mutable","name":"bytes32Set","nameLocation":"11758:10:85","nodeType":"VariableDeclaration","scope":60271,"src":"11725:43:85","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$53809_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":60247,"nodeType":"UserDefinedTypeName","pathNode":{"id":60246,"name":"EnumerableSet.Bytes32Set","nameLocations":["11725:13:85","11739:10:85"],"nodeType":"IdentifierPath","referencedDeclaration":53809,"src":"11725:24:85"},"referencedDeclaration":53809,"src":"11725:24:85","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$53809_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"id":60249,"nodeType":"VariableDeclarationStatement","src":"11725:43:85"},{"AST":{"nativeSrc":"11803:65:85","nodeType":"YulBlock","src":"11803:65:85","statements":[{"nativeSrc":"11817:41:85","nodeType":"YulAssignment","src":"11817:41:85","value":{"name":"_bridgingPayments.slot","nativeSrc":"11836:22:85","nodeType":"YulIdentifier","src":"11836:22:85"},"variableNames":[{"name":"bytes32Set.slot","nativeSrc":"11817:15:85","nodeType":"YulIdentifier","src":"11817:15:85"}]}]},"evmVersion":"prague","externalReferences":[{"declaration":59922,"isOffset":false,"isSlot":true,"src":"11836:22:85","suffix":"slot","valueSize":1},{"declaration":60248,"isOffset":false,"isSlot":true,"src":"11817:15:85","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":60250,"nodeType":"InlineAssembly","src":"11778:90:85"},{"assignments":[60255],"declarations":[{"constant":false,"id":60255,"mutability":"mutable","name":"store","nameLocation":"11895:5:85","nodeType":"VariableDeclaration","scope":60271,"src":"11878:22:85","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":60253,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11878:7:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":60254,"nodeType":"ArrayTypeName","src":"11878:9:85","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":60261,"initialValue":{"arguments":[{"id":60257,"name":"bytes32Set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60248,"src":"11912:10:85","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$53809_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},{"id":60258,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60236,"src":"11924:6:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":60259,"name":"limit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60238,"src":"11932:5:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32Set_$53809_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":60256,"name":"paginate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60375,"src":"11903:8:85","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$53809_storage_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,uint256,uint256) view returns (bytes32[] memory)"}},"id":60260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11903:35:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"11878:60:85"},{"assignments":[60266],"declarations":[{"constant":false,"id":60266,"mutability":"mutable","name":"result","nameLocation":"11965:6:85","nodeType":"VariableDeclaration","scope":60271,"src":"11948:23:85","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":60264,"name":"address","nodeType":"ElementaryTypeName","src":"11948:7:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":60265,"nodeType":"ArrayTypeName","src":"11948:9:85","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":60267,"nodeType":"VariableDeclarationStatement","src":"11948:23:85"},{"AST":{"nativeSrc":"12007:39:85","nodeType":"YulBlock","src":"12007:39:85","statements":[{"nativeSrc":"12021:15:85","nodeType":"YulAssignment","src":"12021:15:85","value":{"name":"store","nativeSrc":"12031:5:85","nodeType":"YulIdentifier","src":"12031:5:85"},"variableNames":[{"name":"result","nativeSrc":"12021:6:85","nodeType":"YulIdentifier","src":"12021:6:85"}]}]},"evmVersion":"prague","externalReferences":[{"declaration":60266,"isOffset":false,"isSlot":false,"src":"12021:6:85","valueSize":1},{"declaration":60255,"isOffset":false,"isSlot":false,"src":"12031:5:85","valueSize":1}],"flags":["memory-safe"],"id":60268,"nodeType":"InlineAssembly","src":"11982:64:85"},{"expression":{"id":60269,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60266,"src":"12063:6:85","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":60243,"id":60270,"nodeType":"Return","src":"12056:13:85"}]},"baseFunctions":[62825],"documentation":{"id":60234,"nodeType":"StructuredDocumentation","src":"11359:253:85","text":" @dev Returns list of bridging payments.\n @param offset Offset of the first bridging payment to return.\n @param limit Maximum number of bridging payments to return.\n @return bridgingPayments List of bridging payments."},"functionSelector":"87e7a3a3","implemented":true,"kind":"function","modifiers":[],"name":"bridgingPayments","nameLocation":"11626:16:85","parameters":{"id":60239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60236,"mutability":"mutable","name":"offset","nameLocation":"11651:6:85","nodeType":"VariableDeclaration","scope":60272,"src":"11643:14:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60235,"name":"uint256","nodeType":"ElementaryTypeName","src":"11643:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":60238,"mutability":"mutable","name":"limit","nameLocation":"11667:5:85","nodeType":"VariableDeclaration","scope":60272,"src":"11659:13:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60237,"name":"uint256","nodeType":"ElementaryTypeName","src":"11659:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11642:31:85"},"returnParameters":{"id":60243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60242,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60272,"src":"11697:16:85","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":60240,"name":"address","nodeType":"ElementaryTypeName","src":"11697:7:85","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":60241,"nodeType":"ArrayTypeName","src":"11697:9:85","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"11696:18:85"},"scope":61007,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":60286,"nodeType":"FunctionDefinition","src":"12316:148:85","nodes":[],"body":{"id":60285,"nodeType":"Block","src":"12397:67:85","nodes":[],"statements":[{"expression":{"arguments":[{"id":60282,"name":"bridgingPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60275,"src":"12441:15:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":60280,"name":"_bridgingPayments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59922,"src":"12414:17:85","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$53979_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":60281,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12432:8:85","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":54073,"src":"12414:26:85","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$53979_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$53979_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"}},"id":60283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12414:43:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":60279,"id":60284,"nodeType":"Return","src":"12407:50:85"}]},"baseFunctions":[62833],"documentation":{"id":60273,"nodeType":"StructuredDocumentation","src":"12082:229:85","text":" @dev Returns whether the bridging payment is registered.\n @param bridgingPayment Bridging payment address.\n @return isBridgingPayment `true` if the bridging payment is registered, `false` otherwise."},"functionSelector":"0c9d9b97","implemented":true,"kind":"function","modifiers":[],"name":"isBridgingPayment","nameLocation":"12325:17:85","parameters":{"id":60276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60275,"mutability":"mutable","name":"bridgingPayment","nameLocation":"12351:15:85","nodeType":"VariableDeclaration","scope":60286,"src":"12343:23:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60274,"name":"address","nodeType":"ElementaryTypeName","src":"12343:7:85","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12342:25:85"},"returnParameters":{"id":60279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60278,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60286,"src":"12391:4:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":60277,"name":"bool","nodeType":"ElementaryTypeName","src":"12391:4:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12390:6:85"},"scope":61007,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":60375,"nodeType":"FunctionDefinition","src":"12721:622:85","nodes":[],"body":{"id":60374,"nodeType":"Block","src":"12883:460:85","nodes":[],"statements":[{"assignments":[60301],"declarations":[{"constant":false,"id":60301,"mutability":"mutable","name":"length","nameLocation":"12901:6:85","nodeType":"VariableDeclaration","scope":60374,"src":"12893:14:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60300,"name":"uint256","nodeType":"ElementaryTypeName","src":"12893:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":60305,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":60302,"name":"bytes32Set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60290,"src":"12910:10:85","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$53809_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":60303,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12921:6:85","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":53891,"src":"12910:17:85","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$53809_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Bytes32Set_$53809_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer) view returns (uint256)"}},"id":60304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12910:19:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12893:36:85"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":60308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":60306,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60292,"src":"12944:6:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":60307,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60301,"src":"12954:6:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12944:16:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":60316,"nodeType":"IfStatement","src":"12940:70:85","trueBody":{"id":60315,"nodeType":"Block","src":"12962:48:85","statements":[{"expression":{"arguments":[{"hexValue":"30","id":60312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12997:1:85","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":60311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"12983:13:85","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":60309,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12987:7:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":60310,"nodeType":"ArrayTypeName","src":"12987:9:85","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":60313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12983:16:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":60299,"id":60314,"nodeType":"Return","src":"12976:23:85"}]}},{"assignments":[60318],"declarations":[{"constant":false,"id":60318,"mutability":"mutable","name":"end","nameLocation":"13028:3:85","nodeType":"VariableDeclaration","scope":60374,"src":"13020:11:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60317,"name":"uint256","nodeType":"ElementaryTypeName","src":"13020:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":60322,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":60321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":60319,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60292,"src":"13034:6:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":60320,"name":"limit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60294,"src":"13043:5:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13034:14:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13020:28:85"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":60325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":60323,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60318,"src":"13062:3:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":60324,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60301,"src":"13068:6:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13062:12:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":60331,"nodeType":"IfStatement","src":"13058:55:85","trueBody":{"id":60330,"nodeType":"Block","src":"13076:37:85","statements":[{"expression":{"id":60328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":60326,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60318,"src":"13090:3:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":60327,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60301,"src":"13096:6:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13090:12:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":60329,"nodeType":"ExpressionStatement","src":"13090:12:85"}]}},{"assignments":[60333],"declarations":[{"constant":false,"id":60333,"mutability":"mutable","name":"size","nameLocation":"13131:4:85","nodeType":"VariableDeclaration","scope":60374,"src":"13123:12:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60332,"name":"uint256","nodeType":"ElementaryTypeName","src":"13123:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":60337,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":60336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":60334,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60318,"src":"13138:3:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":60335,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60292,"src":"13144:6:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13138:12:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13123:27:85"},{"assignments":[60342],"declarations":[{"constant":false,"id":60342,"mutability":"mutable","name":"result","nameLocation":"13177:6:85","nodeType":"VariableDeclaration","scope":60374,"src":"13160:23:85","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":60340,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13160:7:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":60341,"nodeType":"ArrayTypeName","src":"13160:9:85","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":60348,"initialValue":{"arguments":[{"id":60346,"name":"size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60333,"src":"13200:4:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":60345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"13186:13:85","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":60343,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13190:7:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":60344,"nodeType":"ArrayTypeName","src":"13190:9:85","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":60347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13186:19:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"13160:45:85"},{"body":{"id":60370,"nodeType":"Block","src":"13251:62:85","statements":[{"expression":{"id":60368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":60359,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60342,"src":"13265:6:85","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":60361,"indexExpression":{"id":60360,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60350,"src":"13272:1:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13265:9:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":60366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":60364,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60292,"src":"13291:6:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":60365,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60350,"src":"13300:1:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13291:10:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":60362,"name":"bytes32Set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60290,"src":"13277:10:85","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$53809_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":60363,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13288:2:85","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":53909,"src":"13277:13:85","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$53809_storage_ptr_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_struct$_Bytes32Set_$53809_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,uint256) view returns (bytes32)"}},"id":60367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13277:25:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"13265:37:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":60369,"nodeType":"ExpressionStatement","src":"13265:37:85"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":60355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":60353,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60350,"src":"13236:1:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":60354,"name":"size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60333,"src":"13240:4:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13236:8:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":60371,"initializationExpression":{"assignments":[60350],"declarations":[{"constant":false,"id":60350,"mutability":"mutable","name":"i","nameLocation":"13229:1:85","nodeType":"VariableDeclaration","scope":60371,"src":"13221:9:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60349,"name":"uint256","nodeType":"ElementaryTypeName","src":"13221:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":60352,"initialValue":{"hexValue":"30","id":60351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13233:1:85","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13221:13:85"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":60357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13246:3:85","subExpression":{"id":60356,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60350,"src":"13246:1:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":60358,"nodeType":"ExpressionStatement","src":"13246:3:85"},"nodeType":"ForStatement","src":"13216:97:85"},{"expression":{"id":60372,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60342,"src":"13330:6:85","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":60299,"id":60373,"nodeType":"Return","src":"13323:13:85"}]},"documentation":{"id":60287,"nodeType":"StructuredDocumentation","src":"12470:246:85","text":" @dev Returns list of items from the set.\n @param bytes32Set Set of items.\n @param offset Offset of the first item to return.\n @param limit Maximum number of items to return.\n @return items List of items."},"implemented":true,"kind":"function","modifiers":[],"name":"paginate","nameLocation":"12730:8:85","parameters":{"id":60295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60290,"mutability":"mutable","name":"bytes32Set","nameLocation":"12772:10:85","nodeType":"VariableDeclaration","scope":60375,"src":"12739:43:85","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$53809_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":60289,"nodeType":"UserDefinedTypeName","pathNode":{"id":60288,"name":"EnumerableSet.Bytes32Set","nameLocations":["12739:13:85","12753:10:85"],"nodeType":"IdentifierPath","referencedDeclaration":53809,"src":"12739:24:85"},"referencedDeclaration":53809,"src":"12739:24:85","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$53809_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":60292,"mutability":"mutable","name":"offset","nameLocation":"12792:6:85","nodeType":"VariableDeclaration","scope":60375,"src":"12784:14:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60291,"name":"uint256","nodeType":"ElementaryTypeName","src":"12784:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":60294,"mutability":"mutable","name":"limit","nameLocation":"12808:5:85","nodeType":"VariableDeclaration","scope":60375,"src":"12800:13:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60293,"name":"uint256","nodeType":"ElementaryTypeName","src":"12800:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12738:76:85"},"returnParameters":{"id":60299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60298,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60375,"src":"12861:16:85","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":60296,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12861:7:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":60297,"nodeType":"ArrayTypeName","src":"12861:9:85","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"12860:18:85"},"scope":61007,"stateMutability":"view","virtual":false,"visibility":"private"},{"id":60386,"nodeType":"FunctionDefinition","src":"13398:71:85","nodes":[],"body":{"id":60385,"nodeType":"Block","src":"13444:25:85","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":60382,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40550,"src":"13454:6:85","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":60383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13454:8:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":60384,"nodeType":"ExpressionStatement","src":"13454:8:85"}]},"baseFunctions":[63487],"documentation":{"id":60376,"nodeType":"StructuredDocumentation","src":"13349:44:85","text":" @dev Pauses the contract."},"functionSelector":"8456cb59","implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":60379,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59905,"src":"13431:11:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":60380,"kind":"modifierInvocation","modifierName":{"id":60378,"name":"onlyRole","nameLocations":["13422:8:85"],"nodeType":"IdentifierPath","referencedDeclaration":39419,"src":"13422:8:85"},"nodeType":"ModifierInvocation","src":"13422:21:85"}],"name":"pause","nameLocation":"13407:5:85","parameters":{"id":60377,"nodeType":"ParameterList","parameters":[],"src":"13412:2:85"},"returnParameters":{"id":60381,"nodeType":"ParameterList","parameters":[],"src":"13444:0:85"},"scope":61007,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":60397,"nodeType":"FunctionDefinition","src":"13526:75:85","nodes":[],"body":{"id":60396,"nodeType":"Block","src":"13574:27:85","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":60393,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40574,"src":"13584:8:85","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":60394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13584:10:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":60395,"nodeType":"ExpressionStatement","src":"13584:10:85"}]},"baseFunctions":[63491],"documentation":{"id":60387,"nodeType":"StructuredDocumentation","src":"13475:46:85","text":" @dev Unpauses the contract."},"functionSelector":"3f4ba83a","implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":60390,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59905,"src":"13561:11:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":60391,"kind":"modifierInvocation","modifierName":{"id":60389,"name":"onlyRole","nameLocations":["13552:8:85"],"nodeType":"IdentifierPath","referencedDeclaration":39419,"src":"13552:8:85"},"nodeType":"ModifierInvocation","src":"13552:21:85"}],"name":"unpause","nameLocation":"13535:7:85","parameters":{"id":60388,"nodeType":"ParameterList","parameters":[],"src":"13542:2:85"},"returnParameters":{"id":60392,"nodeType":"ParameterList","parameters":[],"src":"13574:0:85"},"scope":61007,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":60408,"nodeType":"FunctionDefinition","src":"13766:103:85","nodes":[],"body":{"id":60407,"nodeType":"Block","src":"13867:2:85","nodes":[],"statements":[]},"baseFunctions":[40323],"documentation":{"id":60398,"nodeType":"StructuredDocumentation","src":"13607:154:85","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract.\n      Called by {upgradeToAndCall}."},"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":60404,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39390,"src":"13847:18:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":60405,"kind":"modifierInvocation","modifierName":{"id":60403,"name":"onlyRole","nameLocations":["13838:8:85"],"nodeType":"IdentifierPath","referencedDeclaration":39419,"src":"13838:8:85"},"nodeType":"ModifierInvocation","src":"13838:28:85"}],"name":"_authorizeUpgrade","nameLocation":"13775:17:85","overrides":{"id":60402,"nodeType":"OverrideSpecifier","overrides":[],"src":"13829:8:85"},"parameters":{"id":60401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60400,"mutability":"mutable","name":"newImplementation","nameLocation":"13801:17:85","nodeType":"VariableDeclaration","scope":60408,"src":"13793:25:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60399,"name":"address","nodeType":"ElementaryTypeName","src":"13793:7:85","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13792:27:85"},"returnParameters":{"id":60406,"nodeType":"ParameterList","parameters":[],"src":"13867:0:85"},"scope":61007,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":60488,"nodeType":"FunctionDefinition","src":"14177:634:85","nodes":[],"body":{"id":60487,"nodeType":"Block","src":"14266:545:85","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":60422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":60420,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60413,"src":"14280:6:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":60421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14290:1:85","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14280:11:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":60427,"nodeType":"IfStatement","src":"14276:64:85","trueBody":{"id":60426,"nodeType":"Block","src":"14293:47:85","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":60423,"name":"InvalidAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62652,"src":"14314:13:85","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":60424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14314:15:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":60425,"nodeType":"RevertStatement","src":"14307:22:85"}]}},{"assignments":[null,60430],"declarations":[null,{"constant":false,"id":60430,"mutability":"mutable","name":"tokenType","nameLocation":"14363:9:85","nodeType":"VariableDeclaration","scope":60487,"src":"14353:19:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$62711","typeString":"enum IERC20Manager.TokenType"},"typeName":{"id":60429,"nodeType":"UserDefinedTypeName","pathNode":{"id":60428,"name":"TokenType","nameLocations":["14353:9:85"],"nodeType":"IdentifierPath","referencedDeclaration":62711,"src":"14353:9:85"},"referencedDeclaration":62711,"src":"14353:9:85","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$62711","typeString":"enum IERC20Manager.TokenType"}},"visibility":"internal"}],"id":60435,"initialValue":{"arguments":[{"id":60433,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60411,"src":"14391:5:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":60431,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59919,"src":"14376:7:85","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToTokenTypeMap_$63854_storage","typeString":"struct CustomEnumerableMap.AddressToTokenTypeMap storage ref"}},"id":60432,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14384:6:85","memberName":"tryGet","nodeType":"MemberAccess","referencedDeclaration":64069,"src":"14376:14:85","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressToTokenTypeMap_$63854_storage_ptr_$_t_address_$returns$_t_bool_$_t_enum$_TokenType_$62711_$attached_to$_t_struct$_AddressToTokenTypeMap_$63854_storage_ptr_$","typeString":"function (struct CustomEnumerableMap.AddressToTokenTypeMap storage pointer,address) view returns (bool,enum IERC20Manager.TokenType)"}},"id":60434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14376:21:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_enum$_TokenType_$62711_$","typeString":"tuple(bool,enum IERC20Manager.TokenType)"}},"nodeType":"VariableDeclarationStatement","src":"14350:47:85"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_TokenType_$62711","typeString":"enum IERC20Manager.TokenType"},"id":60439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":60436,"name":"tokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60430,"src":"14412:9:85","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$62711","typeString":"enum IERC20Manager.TokenType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":60437,"name":"TokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62711,"src":"14425:9:85","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TokenType_$62711_$","typeString":"type(enum IERC20Manager.TokenType)"}},"id":60438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14435:7:85","memberName":"Unknown","nodeType":"MemberAccess","referencedDeclaration":62708,"src":"14425:17:85","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$62711","typeString":"enum IERC20Manager.TokenType"}},"src":"14412:30:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_TokenType_$62711","typeString":"enum IERC20Manager.TokenType"},"id":60447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":60444,"name":"tokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60430,"src":"14504:9:85","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$62711","typeString":"enum IERC20Manager.TokenType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":60445,"name":"TokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62711,"src":"14517:9:85","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TokenType_$62711_$","typeString":"type(enum IERC20Manager.TokenType)"}},"id":60446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14527:8:85","memberName":"Ethereum","nodeType":"MemberAccess","referencedDeclaration":62709,"src":"14517:18:85","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$62711","typeString":"enum IERC20Manager.TokenType"}},"src":"14504:31:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_TokenType_$62711","typeString":"enum IERC20Manager.TokenType"},"id":60465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":60462,"name":"tokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60430,"src":"14637:9:85","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$62711","typeString":"enum IERC20Manager.TokenType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":60463,"name":"TokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62711,"src":"14650:9:85","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TokenType_$62711_$","typeString":"type(enum IERC20Manager.TokenType)"}},"id":60464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14660:4:85","memberName":"Gear","nodeType":"MemberAccess","referencedDeclaration":62710,"src":"14650:14:85","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$62711","typeString":"enum IERC20Manager.TokenType"}},"src":"14637:27:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":60476,"nodeType":"IfStatement","src":"14633:108:85","trueBody":{"id":60475,"nodeType":"Block","src":"14666:75:85","statements":[{"expression":{"arguments":[{"expression":{"id":60470,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14711:3:85","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":60471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14715:6:85","memberName":"sender","nodeType":"MemberAccess","src":"14711:10:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":60472,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60413,"src":"14723:6:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":60467,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60411,"src":"14695:5:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60466,"name":"IERC20Burnable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62627,"src":"14680:14:85","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Burnable_$62627_$","typeString":"type(contract IERC20Burnable)"}},"id":60468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14680:21:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Burnable_$62627","typeString":"contract IERC20Burnable"}},"id":60469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14702:8:85","memberName":"burnFrom","nodeType":"MemberAccess","referencedDeclaration":62626,"src":"14680:30:85","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":60473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14680:50:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":60474,"nodeType":"ExpressionStatement","src":"14680:50:85"}]}},"id":60477,"nodeType":"IfStatement","src":"14500:241:85","trueBody":{"id":60461,"nodeType":"Block","src":"14537:90:85","statements":[{"expression":{"arguments":[{"expression":{"id":60452,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14582:3:85","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":60453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14586:6:85","memberName":"sender","nodeType":"MemberAccess","src":"14582:10:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":60456,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"14602:4:85","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Manager_$61007","typeString":"contract ERC20Manager"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20Manager_$61007","typeString":"contract ERC20Manager"}],"id":60455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14594:7:85","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":60454,"name":"address","nodeType":"ElementaryTypeName","src":"14594:7:85","typeDescriptions":{}}},"id":60457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14594:13:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":60458,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60413,"src":"14609:6:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":60449,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60411,"src":"14558:5:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60448,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":42430,"src":"14551:6:85","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$42430_$","typeString":"type(contract IERC20)"}},"id":60450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14551:13:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$42430","typeString":"contract IERC20"}},"id":60451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14565:16:85","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":42764,"src":"14551:30:85","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$42430_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$42430_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":60459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14551:65:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":60460,"nodeType":"ExpressionStatement","src":"14551:65:85"}]}},"id":60478,"nodeType":"IfStatement","src":"14408:333:85","trueBody":{"id":60443,"nodeType":"Block","src":"14444:50:85","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":60440,"name":"InvalidTokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62655,"src":"14465:16:85","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":60441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14465:18:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":60442,"nodeType":"RevertStatement","src":"14458:25:85"}]}},{"eventCall":{"arguments":[{"expression":{"id":60480,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14774:3:85","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":60481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14778:6:85","memberName":"sender","nodeType":"MemberAccess","src":"14774:10:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":60482,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60415,"src":"14786:2:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":60483,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60411,"src":"14790:5:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":60484,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60413,"src":"14797:6:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":60479,"name":"BridgingRequested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62669,"src":"14756:17:85","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,bytes32,address,uint256)"}},"id":60485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14756:48:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":60486,"nodeType":"EmitStatement","src":"14751:53:85"}]},"baseFunctions":[62843],"documentation":{"id":60409,"nodeType":"StructuredDocumentation","src":"13875:297:85","text":" @dev Requests bridging of tokens.\n      Emits `BridgingRequested` event.\n @param token Token address.\n @param amount Amount of tokens to bridge.\n @param to Destination address.\n @dev Reverts if token is not registered with `InvalidTokenType` error."},"functionSelector":"c305870c","implemented":true,"kind":"function","modifiers":[{"id":60418,"kind":"modifierInvocation","modifierName":{"id":60417,"name":"whenNotPaused","nameLocations":["14252:13:85"],"nodeType":"IdentifierPath","referencedDeclaration":40465,"src":"14252:13:85"},"nodeType":"ModifierInvocation","src":"14252:13:85"}],"name":"requestBridging","nameLocation":"14186:15:85","parameters":{"id":60416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60411,"mutability":"mutable","name":"token","nameLocation":"14210:5:85","nodeType":"VariableDeclaration","scope":60488,"src":"14202:13:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60410,"name":"address","nodeType":"ElementaryTypeName","src":"14202:7:85","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":60413,"mutability":"mutable","name":"amount","nameLocation":"14225:6:85","nodeType":"VariableDeclaration","scope":60488,"src":"14217:14:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60412,"name":"uint256","nodeType":"ElementaryTypeName","src":"14217:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":60415,"mutability":"mutable","name":"to","nameLocation":"14241:2:85","nodeType":"VariableDeclaration","scope":60488,"src":"14233:10:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":60414,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14233:7:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14201:43:85"},"returnParameters":{"id":60419,"nodeType":"ParameterList","parameters":[],"src":"14266:0:85"},"scope":61007,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":60528,"nodeType":"FunctionDefinition","src":"15107:396:85","nodes":[],"body":{"id":60527,"nodeType":"Block","src":"15266:237:85","nodes":[],"statements":[{"condition":{"id":60506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"15280:44:85","subExpression":{"arguments":[{"id":60504,"name":"bridgingPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60497,"src":"15308:15:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":60502,"name":"_bridgingPayments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59922,"src":"15281:17:85","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$53979_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":60503,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15299:8:85","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":54073,"src":"15281:26:85","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$53979_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$53979_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"}},"id":60505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15281:43:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":60511,"nodeType":"IfStatement","src":"15276:106:85","trueBody":{"id":60510,"nodeType":"Block","src":"15326:56:85","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":60507,"name":"InvalidBridgingPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62658,"src":"15347:22:85","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":60508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15347:24:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":60509,"nodeType":"RevertStatement","src":"15340:31:85"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":60513,"name":"bridgingPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60497,"src":"15409:15:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60512,"name":"IBridgingPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62609,"src":"15392:16:85","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBridgingPayment_$62609_$","typeString":"type(contract IBridgingPayment)"}},"id":60514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15392:33:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBridgingPayment_$62609","typeString":"contract IBridgingPayment"}},"id":60515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15426:6:85","memberName":"payFee","nodeType":"MemberAccess","referencedDeclaration":62608,"src":"15392:40:85","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$","typeString":"function () payable external"}},"id":60518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":60516,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15440:3:85","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":60517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15444:5:85","memberName":"value","nodeType":"MemberAccess","src":"15440:9:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"15392:58:85","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$value","typeString":"function () payable external"}},"id":60519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15392:60:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":60520,"nodeType":"ExpressionStatement","src":"15392:60:85"},{"expression":{"arguments":[{"id":60522,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60491,"src":"15478:5:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":60523,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60493,"src":"15485:6:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":60524,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60495,"src":"15493:2:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":60521,"name":"requestBridging","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60488,"src":"15462:15:85","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (address,uint256,bytes32)"}},"id":60525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15462:34:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":60526,"nodeType":"ExpressionStatement","src":"15462:34:85"}]},"baseFunctions":[62855],"documentation":{"id":60489,"nodeType":"StructuredDocumentation","src":"14817:285:85","text":" @dev Requests bridging of tokens and pays fee to one of the `bridgingPayment` contracts.\n @param token Token address.\n @param amount Amount of tokens to bridge.\n @param to Destination address.\n @param bridgingPayment Bridging payment address."},"functionSelector":"1e324b52","implemented":true,"kind":"function","modifiers":[{"id":60500,"kind":"modifierInvocation","modifierName":{"id":60499,"name":"whenNotPaused","nameLocations":["15248:13:85"],"nodeType":"IdentifierPath","referencedDeclaration":40465,"src":"15248:13:85"},"nodeType":"ModifierInvocation","src":"15248:13:85"}],"name":"requestBridgingPayingFee","nameLocation":"15116:24:85","parameters":{"id":60498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60491,"mutability":"mutable","name":"token","nameLocation":"15149:5:85","nodeType":"VariableDeclaration","scope":60528,"src":"15141:13:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60490,"name":"address","nodeType":"ElementaryTypeName","src":"15141:7:85","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":60493,"mutability":"mutable","name":"amount","nameLocation":"15164:6:85","nodeType":"VariableDeclaration","scope":60528,"src":"15156:14:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60492,"name":"uint256","nodeType":"ElementaryTypeName","src":"15156:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":60495,"mutability":"mutable","name":"to","nameLocation":"15180:2:85","nodeType":"VariableDeclaration","scope":60528,"src":"15172:10:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":60494,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15172:7:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":60497,"mutability":"mutable","name":"bridgingPayment","nameLocation":"15192:15:85","nodeType":"VariableDeclaration","scope":60528,"src":"15184:23:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60496,"name":"address","nodeType":"ElementaryTypeName","src":"15184:7:85","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15140:68:85"},"returnParameters":{"id":60501,"nodeType":"ParameterList","parameters":[],"src":"15266:0:85"},"scope":61007,"stateMutability":"payable","virtual":false,"visibility":"public"},{"id":60597,"nodeType":"FunctionDefinition","src":"16140:602:85","nodes":[],"body":{"id":60596,"nodeType":"Block","src":"16400:342:85","nodes":[],"statements":[{"condition":{"id":60554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16414:44:85","subExpression":{"arguments":[{"id":60552,"name":"bridgingPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60545,"src":"16442:15:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":60550,"name":"_bridgingPayments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59922,"src":"16415:17:85","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$53979_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":60551,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16433:8:85","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":54073,"src":"16415:26:85","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$53979_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$53979_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"}},"id":60553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16415:43:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":60559,"nodeType":"IfStatement","src":"16410:106:85","trueBody":{"id":60558,"nodeType":"Block","src":"16460:56:85","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":60555,"name":"InvalidBridgingPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62658,"src":"16481:22:85","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":60556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16481:24:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":60557,"nodeType":"RevertStatement","src":"16474:31:85"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":60561,"name":"bridgingPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60545,"src":"16543:15:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60560,"name":"IBridgingPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62609,"src":"16526:16:85","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBridgingPayment_$62609_$","typeString":"type(contract IBridgingPayment)"}},"id":60562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16526:33:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBridgingPayment_$62609","typeString":"contract IBridgingPayment"}},"id":60563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16560:6:85","memberName":"payFee","nodeType":"MemberAccess","referencedDeclaration":62608,"src":"16526:40:85","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$","typeString":"function () payable external"}},"id":60566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":60564,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16574:3:85","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":60565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16578:5:85","memberName":"value","nodeType":"MemberAccess","src":"16574:9:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"16526:58:85","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$value","typeString":"function () payable external"}},"id":60567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16526:60:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":60568,"nodeType":"ExpressionStatement","src":"16526:60:85"},{"clauses":[{"block":{"id":60585,"nodeType":"Block","src":"16681:2:85","statements":[]},"errorName":"","id":60586,"nodeType":"TryCatchClause","src":"16681:2:85"},{"block":{"id":60587,"nodeType":"Block","src":"16690:2:85","statements":[]},"errorName":"","id":60588,"nodeType":"TryCatchClause","src":"16684:8:85"}],"externalCall":{"arguments":[{"expression":{"id":60573,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16627:3:85","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":60574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16631:6:85","memberName":"sender","nodeType":"MemberAccess","src":"16627:10:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":60577,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"16647:4:85","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Manager_$61007","typeString":"contract ERC20Manager"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20Manager_$61007","typeString":"contract ERC20Manager"}],"id":60576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16639:7:85","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":60575,"name":"address","nodeType":"ElementaryTypeName","src":"16639:7:85","typeDescriptions":{}}},"id":60578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16639:13:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":60579,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60533,"src":"16654:6:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":60580,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60537,"src":"16662:8:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":60581,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60539,"src":"16672:1:85","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":60582,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60541,"src":"16675:1:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":60583,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60543,"src":"16678:1:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"arguments":[{"id":60570,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60531,"src":"16613:5:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60569,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":42692,"src":"16600:12:85","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Permit_$42692_$","typeString":"type(contract IERC20Permit)"}},"id":60571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16600:19:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$42692","typeString":"contract IERC20Permit"}},"id":60572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16620:6:85","memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":42677,"src":"16600:26:85","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"}},"id":60584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16600:80:85","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":60589,"nodeType":"TryStatement","src":"16596:96:85"},{"expression":{"arguments":[{"id":60591,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60531,"src":"16717:5:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":60592,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60533,"src":"16724:6:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":60593,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60535,"src":"16732:2:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":60590,"name":"requestBridging","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60488,"src":"16701:15:85","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (address,uint256,bytes32)"}},"id":60594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16701:34:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":60595,"nodeType":"ExpressionStatement","src":"16701:34:85"}]},"baseFunctions":[62875],"documentation":{"id":60529,"nodeType":"StructuredDocumentation","src":"15509:626:85","text":" @dev Requests bridging of tokens and pays fee to one of the `bridgingPayment` contracts.\n      This function uses `permit` to approve spending of tokens to optimize gas costs.\n      (If token supports `permit` function).\n @param token Token address.\n @param amount Amount of tokens to bridge.\n @param to Destination address.\n @param deadline Deadline for the transaction to be executed.\n @param v ECDSA signature parameter.\n @param r ECDSA signature parameter.\n @param s ECDSA signature parameter.\n @param bridgingPayment Bridging payment address."},"functionSelector":"f6cdd9cc","implemented":true,"kind":"function","modifiers":[{"id":60548,"kind":"modifierInvocation","modifierName":{"id":60547,"name":"whenNotPaused","nameLocations":["16386:13:85"],"nodeType":"IdentifierPath","referencedDeclaration":40465,"src":"16386:13:85"},"nodeType":"ModifierInvocation","src":"16386:13:85"}],"name":"requestBridgingPayingFeeWithPermit","nameLocation":"16149:34:85","parameters":{"id":60546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60531,"mutability":"mutable","name":"token","nameLocation":"16201:5:85","nodeType":"VariableDeclaration","scope":60597,"src":"16193:13:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60530,"name":"address","nodeType":"ElementaryTypeName","src":"16193:7:85","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":60533,"mutability":"mutable","name":"amount","nameLocation":"16224:6:85","nodeType":"VariableDeclaration","scope":60597,"src":"16216:14:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60532,"name":"uint256","nodeType":"ElementaryTypeName","src":"16216:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":60535,"mutability":"mutable","name":"to","nameLocation":"16248:2:85","nodeType":"VariableDeclaration","scope":60597,"src":"16240:10:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":60534,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16240:7:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":60537,"mutability":"mutable","name":"deadline","nameLocation":"16268:8:85","nodeType":"VariableDeclaration","scope":60597,"src":"16260:16:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60536,"name":"uint256","nodeType":"ElementaryTypeName","src":"16260:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":60539,"mutability":"mutable","name":"v","nameLocation":"16292:1:85","nodeType":"VariableDeclaration","scope":60597,"src":"16286:7:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":60538,"name":"uint8","nodeType":"ElementaryTypeName","src":"16286:5:85","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":60541,"mutability":"mutable","name":"r","nameLocation":"16311:1:85","nodeType":"VariableDeclaration","scope":60597,"src":"16303:9:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":60540,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16303:7:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":60543,"mutability":"mutable","name":"s","nameLocation":"16330:1:85","nodeType":"VariableDeclaration","scope":60597,"src":"16322:9:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":60542,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16322:7:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":60545,"mutability":"mutable","name":"bridgingPayment","nameLocation":"16349:15:85","nodeType":"VariableDeclaration","scope":60597,"src":"16341:23:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60544,"name":"address","nodeType":"ElementaryTypeName","src":"16341:7:85","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16183:187:85"},"returnParameters":{"id":60549,"nodeType":"ParameterList","parameters":[],"src":"16400:0:85"},"scope":61007,"stateMutability":"payable","virtual":false,"visibility":"public"},{"id":60642,"nodeType":"FunctionDefinition","src":"17020:412:85","nodes":[],"body":{"id":60641,"nodeType":"Block","src":"17105:327:85","nodes":[],"statements":[{"assignments":[60609],"declarations":[{"constant":false,"id":60609,"mutability":"mutable","name":"bridgingPayment","nameLocation":"17131:15:85","nodeType":"VariableDeclaration","scope":60641,"src":"17115:31:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_BridgingPayment_$59706","typeString":"contract BridgingPayment"},"typeName":{"id":60608,"nodeType":"UserDefinedTypeName","pathNode":{"id":60607,"name":"BridgingPayment","nameLocations":["17115:15:85"],"nodeType":"IdentifierPath","referencedDeclaration":59706,"src":"17115:15:85"},"referencedDeclaration":59706,"src":"17115:15:85","typeDescriptions":{"typeIdentifier":"t_contract$_BridgingPayment_$59706","typeString":"contract BridgingPayment"}},"visibility":"internal"}],"id":60621,"initialValue":{"arguments":[{"arguments":[{"id":60615,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"17177:4:85","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Manager_$61007","typeString":"contract ERC20Manager"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20Manager_$61007","typeString":"contract ERC20Manager"}],"id":60614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17169:7:85","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":60613,"name":"address","nodeType":"ElementaryTypeName","src":"17169:7:85","typeDescriptions":{}}},"id":60616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17169:13:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":60617,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60600,"src":"17184:3:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":60618,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"17189:3:85","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":60619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17193:6:85","memberName":"sender","nodeType":"MemberAccess","src":"17189:10:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":60612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"17149:19:85","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_contract$_BridgingPayment_$59706_$","typeString":"function (address,uint256,address) returns (contract BridgingPayment)"},"typeName":{"id":60611,"nodeType":"UserDefinedTypeName","pathNode":{"id":60610,"name":"BridgingPayment","nameLocations":["17153:15:85"],"nodeType":"IdentifierPath","referencedDeclaration":59706,"src":"17153:15:85"},"referencedDeclaration":59706,"src":"17153:15:85","typeDescriptions":{"typeIdentifier":"t_contract$_BridgingPayment_$59706","typeString":"contract BridgingPayment"}}},"id":60620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17149:51:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_BridgingPayment_$59706","typeString":"contract BridgingPayment"}},"nodeType":"VariableDeclarationStatement","src":"17115:85:85"},{"assignments":[60623],"declarations":[{"constant":false,"id":60623,"mutability":"mutable","name":"bridgingPaymentAddress","nameLocation":"17219:22:85","nodeType":"VariableDeclaration","scope":60641,"src":"17211:30:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60622,"name":"address","nodeType":"ElementaryTypeName","src":"17211:7:85","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":60628,"initialValue":{"arguments":[{"id":60626,"name":"bridgingPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60609,"src":"17252:15:85","typeDescriptions":{"typeIdentifier":"t_contract$_BridgingPayment_$59706","typeString":"contract BridgingPayment"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BridgingPayment_$59706","typeString":"contract BridgingPayment"}],"id":60625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17244:7:85","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":60624,"name":"address","nodeType":"ElementaryTypeName","src":"17244:7:85","typeDescriptions":{}}},"id":60627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17244:24:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"17211:57:85"},{"expression":{"arguments":[{"id":60632,"name":"bridgingPaymentAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60623,"src":"17300:22:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":60629,"name":"_bridgingPayments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59922,"src":"17278:17:85","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$53979_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":60631,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17296:3:85","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":54006,"src":"17278:21:85","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$53979_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$53979_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":60633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17278:45:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":60634,"nodeType":"ExpressionStatement","src":"17278:45:85"},{"eventCall":{"arguments":[{"id":60636,"name":"bridgingPaymentAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60623,"src":"17362:22:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60635,"name":"BridgingPaymentCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62685,"src":"17339:22:85","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":60637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17339:46:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":60638,"nodeType":"EmitStatement","src":"17334:51:85"},{"expression":{"id":60639,"name":"bridgingPaymentAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60623,"src":"17403:22:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":60606,"id":60640,"nodeType":"Return","src":"17396:29:85"}]},"baseFunctions":[62883],"documentation":{"id":60598,"nodeType":"StructuredDocumentation","src":"16748:267:85","text":" @dev Creates a new `BridgingPayment` contract (ERC20Manager is factory).\n      Emits `BridgingPaymentCreated` event.\n @param fee Fee amount in wei.\n @return bridgingPaymentAddress Address of the created `bridgingPayment` contract."},"functionSelector":"38ff319f","implemented":true,"kind":"function","modifiers":[{"id":60603,"kind":"modifierInvocation","modifierName":{"id":60602,"name":"whenNotPaused","nameLocations":["17073:13:85"],"nodeType":"IdentifierPath","referencedDeclaration":40465,"src":"17073:13:85"},"nodeType":"ModifierInvocation","src":"17073:13:85"}],"name":"createBridgingPayment","nameLocation":"17029:21:85","parameters":{"id":60601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60600,"mutability":"mutable","name":"fee","nameLocation":"17059:3:85","nodeType":"VariableDeclaration","scope":60642,"src":"17051:11:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60599,"name":"uint256","nodeType":"ElementaryTypeName","src":"17051:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17050:13:85"},"returnParameters":{"id":60606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60605,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60642,"src":"17096:7:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60604,"name":"address","nodeType":"ElementaryTypeName","src":"17096:7:85","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17095:9:85"},"scope":61007,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":60695,"nodeType":"FunctionDefinition","src":"17660:575:85","nodes":[],"body":{"id":60694,"nodeType":"Block","src":"17732:503:85","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":60653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":60650,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"17746:3:85","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":60651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17750:6:85","memberName":"sender","nodeType":"MemberAccess","src":"17746:10:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":60652,"name":"_messageQueue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59913,"src":"17760:13:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"17746:27:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":60658,"nodeType":"IfStatement","src":"17742:80:85","trueBody":{"id":60657,"nodeType":"Block","src":"17775:47:85","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":60654,"name":"InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62643,"src":"17796:13:85","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":60655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17796:15:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":60656,"nodeType":"RevertStatement","src":"17789:22:85"}]}},{"condition":{"arguments":[{"id":60661,"name":"source","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60645,"src":"17858:6:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":60659,"name":"_vftManagers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59916,"src":"17836:12:85","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$53809_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":60660,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17849:8:85","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":53876,"src":"17836:21:85","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$53809_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$53809_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) view returns (bool)"}},"id":60662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17836:29:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":60677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":60673,"name":"source","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60645,"src":"18005:6:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":60674,"name":"_governanceAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59908,"src":"18015:16:85","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63114","typeString":"contract IGovernance"}},"id":60675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18032:10:85","memberName":"governance","nodeType":"MemberAccess","referencedDeclaration":63107,"src":"18015:27:85","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":60676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18015:29:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"18005:39:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":60691,"nodeType":"Block","src":"18182:47:85","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":60688,"name":"InvalidSource","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62646,"src":"18203:13:85","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":60689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18203:15:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":60690,"nodeType":"RevertStatement","src":"18196:22:85"}]},"id":60692,"nodeType":"IfStatement","src":"18001:228:85","trueBody":{"id":60687,"nodeType":"Block","src":"18046:130:85","statements":[{"condition":{"id":60681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18064:44:85","subExpression":{"arguments":[{"id":60679,"name":"payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60647,"src":"18100:7:85","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":60678,"name":"_tryParseAndApplyGovernanceMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61006,"src":"18065:34:85","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes_calldata_ptr_$returns$_t_bool_$","typeString":"function (bytes calldata) returns (bool)"}},"id":60680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18065:43:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":60686,"nodeType":"IfStatement","src":"18060:106:85","trueBody":{"id":60685,"nodeType":"Block","src":"18110:56:85","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":60682,"name":"InvalidPayload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62649,"src":"18135:14:85","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":60683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18135:16:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":60684,"nodeType":"RevertStatement","src":"18128:23:85"}]}}]}},"id":60693,"nodeType":"IfStatement","src":"17832:397:85","trueBody":{"id":60672,"nodeType":"Block","src":"17867:128:85","statements":[{"condition":{"id":60666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"17885:42:85","subExpression":{"arguments":[{"id":60664,"name":"payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60647,"src":"17919:7:85","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":60663,"name":"_tryParseAndApplyTransferMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60781,"src":"17886:32:85","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes_calldata_ptr_$returns$_t_bool_$","typeString":"function (bytes calldata) returns (bool)"}},"id":60665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17886:41:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":60671,"nodeType":"IfStatement","src":"17881:104:85","trueBody":{"id":60670,"nodeType":"Block","src":"17929:56:85","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":60667,"name":"InvalidPayload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62649,"src":"17954:14:85","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":60668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17954:16:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":60669,"nodeType":"RevertStatement","src":"17947:23:85"}]}}]}}]},"baseFunctions":[63235],"documentation":{"id":60643,"nodeType":"StructuredDocumentation","src":"17438:217:85","text":" @dev Handles message originated from Vara Network.\n @param source Source of the message (`ActorId` from Vara Network).\n @param payload Payload of the message (message from Vara Network)."},"functionSelector":"302ac5d0","implemented":true,"kind":"function","modifiers":[],"name":"handleMessage","nameLocation":"17669:13:85","parameters":{"id":60648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60645,"mutability":"mutable","name":"source","nameLocation":"17691:6:85","nodeType":"VariableDeclaration","scope":60695,"src":"17683:14:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":60644,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17683:7:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":60647,"mutability":"mutable","name":"payload","nameLocation":"17714:7:85","nodeType":"VariableDeclaration","scope":60695,"src":"17699:22:85","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":60646,"name":"bytes","nodeType":"ElementaryTypeName","src":"17699:5:85","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17682:40:85"},"returnParameters":{"id":60649,"nodeType":"ParameterList","parameters":[],"src":"17732:0:85"},"scope":61007,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":60781,"nodeType":"FunctionDefinition","src":"18697:1399:85","nodes":[],"body":{"id":60780,"nodeType":"Block","src":"18786:1310:85","nodes":[],"statements":[{"condition":{"id":60708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18800:42:85","subExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":60706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":60703,"name":"payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60698,"src":"18802:7:85","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":60704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18810:6:85","memberName":"length","nodeType":"MemberAccess","src":"18802:14:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":60705,"name":"TRANSFER_MESSAGE_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59802,"src":"18820:21:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18802:39:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":60707,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18801:41:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":60712,"nodeType":"IfStatement","src":"18796:85:85","trueBody":{"id":60711,"nodeType":"Block","src":"18844:37:85","statements":[{"expression":{"hexValue":"66616c7365","id":60709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"18865:5:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":60702,"id":60710,"nodeType":"Return","src":"18858:12:85"}]}},{"assignments":[60714],"declarations":[{"constant":false,"id":60714,"mutability":"mutable","name":"sender","nameLocation":"18899:6:85","nodeType":"VariableDeclaration","scope":60780,"src":"18891:14:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":60713,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18891:7:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":60715,"nodeType":"VariableDeclarationStatement","src":"18891:14:85"},{"assignments":[60717],"declarations":[{"constant":false,"id":60717,"mutability":"mutable","name":"receiver","nameLocation":"18923:8:85","nodeType":"VariableDeclaration","scope":60780,"src":"18915:16:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60716,"name":"address","nodeType":"ElementaryTypeName","src":"18915:7:85","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":60718,"nodeType":"VariableDeclarationStatement","src":"18915:16:85"},{"assignments":[60720],"declarations":[{"constant":false,"id":60720,"mutability":"mutable","name":"token","nameLocation":"18949:5:85","nodeType":"VariableDeclaration","scope":60780,"src":"18941:13:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60719,"name":"address","nodeType":"ElementaryTypeName","src":"18941:7:85","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":60721,"nodeType":"VariableDeclarationStatement","src":"18941:13:85"},{"assignments":[60723],"declarations":[{"constant":false,"id":60723,"mutability":"mutable","name":"amount","nameLocation":"18972:6:85","nodeType":"VariableDeclaration","scope":60780,"src":"18964:14:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60722,"name":"uint256","nodeType":"ElementaryTypeName","src":"18964:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":60724,"nodeType":"VariableDeclarationStatement","src":"18964:14:85"},{"AST":{"nativeSrc":"19088:550:85","nodeType":"YulBlock","src":"19088:550:85","statements":[{"nativeSrc":"19102:38:85","nodeType":"YulAssignment","src":"19102:38:85","value":{"arguments":[{"name":"payload.offset","nativeSrc":"19125:14:85","nodeType":"YulIdentifier","src":"19125:14:85"}],"functionName":{"name":"calldataload","nativeSrc":"19112:12:85","nodeType":"YulIdentifier","src":"19112:12:85"},"nativeSrc":"19112:28:85","nodeType":"YulFunctionCall","src":"19112:28:85"},"variableNames":[{"name":"sender","nativeSrc":"19102:6:85","nodeType":"YulIdentifier","src":"19102:6:85"}]},{"nativeSrc":"19277:79:85","nodeType":"YulAssignment","src":"19277:79:85","value":{"arguments":[{"name":"RECEIVER_BIT_SHIFT","nativeSrc":"19293:18:85","nodeType":"YulIdentifier","src":"19293:18:85"},{"arguments":[{"arguments":[{"name":"payload.offset","nativeSrc":"19330:14:85","nodeType":"YulIdentifier","src":"19330:14:85"},{"name":"OFFSET1","nativeSrc":"19346:7:85","nodeType":"YulIdentifier","src":"19346:7:85"}],"functionName":{"name":"add","nativeSrc":"19326:3:85","nodeType":"YulIdentifier","src":"19326:3:85"},"nativeSrc":"19326:28:85","nodeType":"YulFunctionCall","src":"19326:28:85"}],"functionName":{"name":"calldataload","nativeSrc":"19313:12:85","nodeType":"YulIdentifier","src":"19313:12:85"},"nativeSrc":"19313:42:85","nodeType":"YulFunctionCall","src":"19313:42:85"}],"functionName":{"name":"shr","nativeSrc":"19289:3:85","nodeType":"YulIdentifier","src":"19289:3:85"},"nativeSrc":"19289:67:85","nodeType":"YulFunctionCall","src":"19289:67:85"},"variableNames":[{"name":"receiver","nativeSrc":"19277:8:85","nodeType":"YulIdentifier","src":"19277:8:85"}]},{"nativeSrc":"19490:73:85","nodeType":"YulAssignment","src":"19490:73:85","value":{"arguments":[{"name":"TOKEN_BIT_SHIFT","nativeSrc":"19503:15:85","nodeType":"YulIdentifier","src":"19503:15:85"},{"arguments":[{"arguments":[{"name":"payload.offset","nativeSrc":"19537:14:85","nodeType":"YulIdentifier","src":"19537:14:85"},{"name":"OFFSET2","nativeSrc":"19553:7:85","nodeType":"YulIdentifier","src":"19553:7:85"}],"functionName":{"name":"add","nativeSrc":"19533:3:85","nodeType":"YulIdentifier","src":"19533:3:85"},"nativeSrc":"19533:28:85","nodeType":"YulFunctionCall","src":"19533:28:85"}],"functionName":{"name":"calldataload","nativeSrc":"19520:12:85","nodeType":"YulIdentifier","src":"19520:12:85"},"nativeSrc":"19520:42:85","nodeType":"YulFunctionCall","src":"19520:42:85"}],"functionName":{"name":"shr","nativeSrc":"19499:3:85","nodeType":"YulIdentifier","src":"19499:3:85"},"nativeSrc":"19499:64:85","nodeType":"YulFunctionCall","src":"19499:64:85"},"variableNames":[{"name":"token","nativeSrc":"19490:5:85","nodeType":"YulIdentifier","src":"19490:5:85"}]},{"nativeSrc":"19576:52:85","nodeType":"YulAssignment","src":"19576:52:85","value":{"arguments":[{"arguments":[{"name":"payload.offset","nativeSrc":"19603:14:85","nodeType":"YulIdentifier","src":"19603:14:85"},{"name":"OFFSET3","nativeSrc":"19619:7:85","nodeType":"YulIdentifier","src":"19619:7:85"}],"functionName":{"name":"add","nativeSrc":"19599:3:85","nodeType":"YulIdentifier","src":"19599:3:85"},"nativeSrc":"19599:28:85","nodeType":"YulFunctionCall","src":"19599:28:85"}],"functionName":{"name":"calldataload","nativeSrc":"19586:12:85","nodeType":"YulIdentifier","src":"19586:12:85"},"nativeSrc":"19586:42:85","nodeType":"YulFunctionCall","src":"19586:42:85"},"variableNames":[{"name":"amount","nativeSrc":"19576:6:85","nodeType":"YulIdentifier","src":"19576:6:85"}]}]},"evmVersion":"prague","externalReferences":[{"declaration":59814,"isOffset":false,"isSlot":false,"src":"19346:7:85","valueSize":1},{"declaration":59818,"isOffset":false,"isSlot":false,"src":"19553:7:85","valueSize":1},{"declaration":59822,"isOffset":false,"isSlot":false,"src":"19619:7:85","valueSize":1},{"declaration":59806,"isOffset":false,"isSlot":false,"src":"19293:18:85","valueSize":1},{"declaration":59810,"isOffset":false,"isSlot":false,"src":"19503:15:85","valueSize":1},{"declaration":60723,"isOffset":false,"isSlot":false,"src":"19576:6:85","valueSize":1},{"declaration":60698,"isOffset":true,"isSlot":false,"src":"19125:14:85","suffix":"offset","valueSize":1},{"declaration":60698,"isOffset":true,"isSlot":false,"src":"19330:14:85","suffix":"offset","valueSize":1},{"declaration":60698,"isOffset":true,"isSlot":false,"src":"19537:14:85","suffix":"offset","valueSize":1},{"declaration":60698,"isOffset":true,"isSlot":false,"src":"19603:14:85","suffix":"offset","valueSize":1},{"declaration":60717,"isOffset":false,"isSlot":false,"src":"19277:8:85","valueSize":1},{"declaration":60714,"isOffset":false,"isSlot":false,"src":"19102:6:85","valueSize":1},{"declaration":60720,"isOffset":false,"isSlot":false,"src":"19490:5:85","valueSize":1}],"flags":["memory-safe"],"id":60725,"nodeType":"InlineAssembly","src":"19063:575:85"},{"assignments":[null,60728],"declarations":[null,{"constant":false,"id":60728,"mutability":"mutable","name":"tokenType","nameLocation":"19661:9:85","nodeType":"VariableDeclaration","scope":60780,"src":"19651:19:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$62711","typeString":"enum IERC20Manager.TokenType"},"typeName":{"id":60727,"nodeType":"UserDefinedTypeName","pathNode":{"id":60726,"name":"TokenType","nameLocations":["19651:9:85"],"nodeType":"IdentifierPath","referencedDeclaration":62711,"src":"19651:9:85"},"referencedDeclaration":62711,"src":"19651:9:85","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$62711","typeString":"enum IERC20Manager.TokenType"}},"visibility":"internal"}],"id":60733,"initialValue":{"arguments":[{"id":60731,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60720,"src":"19689:5:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":60729,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59919,"src":"19674:7:85","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToTokenTypeMap_$63854_storage","typeString":"struct CustomEnumerableMap.AddressToTokenTypeMap storage ref"}},"id":60730,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19682:6:85","memberName":"tryGet","nodeType":"MemberAccess","referencedDeclaration":64069,"src":"19674:14:85","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressToTokenTypeMap_$63854_storage_ptr_$_t_address_$returns$_t_bool_$_t_enum$_TokenType_$62711_$attached_to$_t_struct$_AddressToTokenTypeMap_$63854_storage_ptr_$","typeString":"function (struct CustomEnumerableMap.AddressToTokenTypeMap storage pointer,address) view returns (bool,enum IERC20Manager.TokenType)"}},"id":60732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19674:21:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_enum$_TokenType_$62711_$","typeString":"tuple(bool,enum IERC20Manager.TokenType)"}},"nodeType":"VariableDeclarationStatement","src":"19648:47:85"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_TokenType_$62711","typeString":"enum IERC20Manager.TokenType"},"id":60737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":60734,"name":"tokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60728,"src":"19710:9:85","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$62711","typeString":"enum IERC20Manager.TokenType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":60735,"name":"TokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62711,"src":"19723:9:85","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TokenType_$62711_$","typeString":"type(enum IERC20Manager.TokenType)"}},"id":60736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19733:7:85","memberName":"Unknown","nodeType":"MemberAccess","referencedDeclaration":62708,"src":"19723:17:85","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$62711","typeString":"enum IERC20Manager.TokenType"}},"src":"19710:30:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_TokenType_$62711","typeString":"enum IERC20Manager.TokenType"},"id":60745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":60742,"name":"tokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60728,"src":"19802:9:85","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$62711","typeString":"enum IERC20Manager.TokenType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":60743,"name":"TokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62711,"src":"19815:9:85","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TokenType_$62711_$","typeString":"type(enum IERC20Manager.TokenType)"}},"id":60744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19825:8:85","memberName":"Ethereum","nodeType":"MemberAccess","referencedDeclaration":62709,"src":"19815:18:85","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$62711","typeString":"enum IERC20Manager.TokenType"}},"src":"19802:31:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_TokenType_$62711","typeString":"enum IERC20Manager.TokenType"},"id":60758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":60755,"name":"tokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60728,"src":"19914:9:85","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$62711","typeString":"enum IERC20Manager.TokenType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":60756,"name":"TokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62711,"src":"19927:9:85","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TokenType_$62711_$","typeString":"type(enum IERC20Manager.TokenType)"}},"id":60757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19937:4:85","memberName":"Gear","nodeType":"MemberAccess","referencedDeclaration":62710,"src":"19927:14:85","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$62711","typeString":"enum IERC20Manager.TokenType"}},"src":"19914:27:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":60768,"nodeType":"IfStatement","src":"19910:102:85","trueBody":{"id":60767,"nodeType":"Block","src":"19943:69:85","statements":[{"expression":{"arguments":[{"id":60763,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60717,"src":"19984:8:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":60764,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60723,"src":"19994:6:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":60760,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60720,"src":"19972:5:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60759,"name":"IERC20Mintable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63020,"src":"19957:14:85","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Mintable_$63020_$","typeString":"type(contract IERC20Mintable)"}},"id":60761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19957:21:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Mintable_$63020","typeString":"contract IERC20Mintable"}},"id":60762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19979:4:85","memberName":"mint","nodeType":"MemberAccess","referencedDeclaration":63019,"src":"19957:26:85","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":60765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19957:44:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":60766,"nodeType":"ExpressionStatement","src":"19957:44:85"}]}},"id":60769,"nodeType":"IfStatement","src":"19798:214:85","trueBody":{"id":60754,"nodeType":"Block","src":"19835:69:85","statements":[{"expression":{"arguments":[{"id":60750,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60717,"src":"19876:8:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":60751,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60723,"src":"19886:6:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":60747,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60720,"src":"19856:5:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60746,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":42430,"src":"19849:6:85","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$42430_$","typeString":"type(contract IERC20)"}},"id":60748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19849:13:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$42430","typeString":"contract IERC20"}},"id":60749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19863:12:85","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":42737,"src":"19849:26:85","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$42430_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$42430_$","typeString":"function (contract IERC20,address,uint256)"}},"id":60752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19849:44:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":60753,"nodeType":"ExpressionStatement","src":"19849:44:85"}]}},"id":60770,"nodeType":"IfStatement","src":"19706:306:85","trueBody":{"id":60741,"nodeType":"Block","src":"19742:50:85","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":60738,"name":"InvalidTokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62655,"src":"19763:16:85","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":60739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19763:18:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":60740,"nodeType":"RevertStatement","src":"19756:25:85"}]}},{"eventCall":{"arguments":[{"id":60772,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60714,"src":"20035:6:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":60773,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60717,"src":"20043:8:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":60774,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60720,"src":"20053:5:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":60775,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60723,"src":"20060:6:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":60771,"name":"Bridged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62680,"src":"20027:7:85","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,address,uint256)"}},"id":60776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20027:40:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":60777,"nodeType":"EmitStatement","src":"20022:45:85"},{"expression":{"hexValue":"74727565","id":60778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20085:4:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":60702,"id":60779,"nodeType":"Return","src":"20078:11:85"}]},"documentation":{"id":60696,"nodeType":"StructuredDocumentation","src":"18241:451:85","text":" @dev Tries to parse and apply transfer message originated from Vara Network.\n      Payload format:\n      ```solidity\n      address sender;\n      address receiver;\n      address token;\n      uint256 amount;\n      ```\n @param payload Payload of the message (message from Vara Network).\n @return success `true` if the message is parsed and applied, `false` otherwise."},"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseAndApplyTransferMessage","nameLocation":"18706:32:85","parameters":{"id":60699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60698,"mutability":"mutable","name":"payload","nameLocation":"18754:7:85","nodeType":"VariableDeclaration","scope":60781,"src":"18739:22:85","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":60697,"name":"bytes","nodeType":"ElementaryTypeName","src":"18739:5:85","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18738:24:85"},"returnParameters":{"id":60702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60701,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60781,"src":"18780:4:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":60700,"name":"bool","nodeType":"ElementaryTypeName","src":"18780:4:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"18779:6:85"},"scope":61007,"stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"id":61006,"nodeType":"FunctionDefinition","src":"21180:3791:85","nodes":[],"body":{"id":61005,"nodeType":"Block","src":"21271:3700:85","nodes":[],"statements":[{"condition":{"id":60794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"21285:21:85","subExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":60792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":60789,"name":"payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60784,"src":"21287:7:85","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":60790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21295:6:85","memberName":"length","nodeType":"MemberAccess","src":"21287:14:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":60791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21304:1:85","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"21287:18:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":60793,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21286:20:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":60798,"nodeType":"IfStatement","src":"21281:64:85","trueBody":{"id":60797,"nodeType":"Block","src":"21308:37:85","statements":[{"expression":{"hexValue":"66616c7365","id":60795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"21329:5:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":60788,"id":60796,"nodeType":"Return","src":"21322:12:85"}]}},{"assignments":[60800],"declarations":[{"constant":false,"id":60800,"mutability":"mutable","name":"discriminant","nameLocation":"21363:12:85","nodeType":"VariableDeclaration","scope":61005,"src":"21355:20:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60799,"name":"uint256","nodeType":"ElementaryTypeName","src":"21355:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":60801,"nodeType":"VariableDeclarationStatement","src":"21355:20:85"},{"AST":{"nativeSrc":"21410:225:85","nodeType":"YulBlock","src":"21410:225:85","statements":[{"nativeSrc":"21552:73:85","nodeType":"YulAssignment","src":"21552:73:85","value":{"arguments":[{"name":"DISCRIMINANT_BIT_SHIFT","nativeSrc":"21572:22:85","nodeType":"YulIdentifier","src":"21572:22:85"},{"arguments":[{"name":"payload.offset","nativeSrc":"21609:14:85","nodeType":"YulIdentifier","src":"21609:14:85"}],"functionName":{"name":"calldataload","nativeSrc":"21596:12:85","nodeType":"YulIdentifier","src":"21596:12:85"},"nativeSrc":"21596:28:85","nodeType":"YulFunctionCall","src":"21596:28:85"}],"functionName":{"name":"shr","nativeSrc":"21568:3:85","nodeType":"YulIdentifier","src":"21568:3:85"},"nativeSrc":"21568:57:85","nodeType":"YulFunctionCall","src":"21568:57:85"},"variableNames":[{"name":"discriminant","nativeSrc":"21552:12:85","nodeType":"YulIdentifier","src":"21552:12:85"}]}]},"evmVersion":"prague","externalReferences":[{"declaration":59830,"isOffset":false,"isSlot":false,"src":"21572:22:85","valueSize":1},{"declaration":60800,"isOffset":false,"isSlot":false,"src":"21552:12:85","valueSize":1},{"declaration":60784,"isOffset":true,"isSlot":false,"src":"21609:14:85","suffix":"offset","valueSize":1}],"flags":["memory-safe"],"id":60802,"nodeType":"InlineAssembly","src":"21385:250:85"},{"condition":{"id":60815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"21649:77:85","subExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":60813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":60805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":60803,"name":"discriminant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60800,"src":"21651:12:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":60804,"name":"ADD_VFT_MANAGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59838,"src":"21667:15:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21651:31:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":60812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":60806,"name":"discriminant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60800,"src":"21686:12:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[{"expression":{"id":60809,"name":"TokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62711,"src":"21710:9:85","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TokenType_$62711_$","typeString":"type(enum IERC20Manager.TokenType)"}},"id":60810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"21720:4:85","memberName":"Gear","nodeType":"MemberAccess","referencedDeclaration":62710,"src":"21710:14:85","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$62711","typeString":"enum IERC20Manager.TokenType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_TokenType_$62711","typeString":"enum IERC20Manager.TokenType"}],"id":60808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21702:7:85","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":60807,"name":"uint256","nodeType":"ElementaryTypeName","src":"21702:7:85","typeDescriptions":{}}},"id":60811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21702:23:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21686:39:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"21651:74:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":60814,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21650:76:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":60819,"nodeType":"IfStatement","src":"21645:120:85","trueBody":{"id":60818,"nodeType":"Block","src":"21728:37:85","statements":[{"expression":{"hexValue":"66616c7365","id":60816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"21749:5:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":60788,"id":60817,"nodeType":"Return","src":"21742:12:85"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":60822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":60820,"name":"discriminant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60800,"src":"21779:12:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":60821,"name":"ADD_VFT_MANAGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59838,"src":"21795:15:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21779:31:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":60850,"nodeType":"IfStatement","src":"21775:524:85","trueBody":{"id":60849,"nodeType":"Block","src":"21812:487:85","statements":[{"condition":{"id":60828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"21830:49:85","subExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":60826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":60823,"name":"payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60784,"src":"21832:7:85","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":60824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21840:6:85","memberName":"length","nodeType":"MemberAccess","src":"21832:14:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":60825,"name":"ADD_VFT_MANAGER_MESSAGE_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59848,"src":"21850:28:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21832:46:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":60827,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21831:48:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":60832,"nodeType":"IfStatement","src":"21826:100:85","trueBody":{"id":60831,"nodeType":"Block","src":"21881:45:85","statements":[{"expression":{"hexValue":"66616c7365","id":60829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"21906:5:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":60788,"id":60830,"nodeType":"Return","src":"21899:12:85"}]}},{"assignments":[60834],"declarations":[{"constant":false,"id":60834,"mutability":"mutable","name":"vftManager","nameLocation":"22036:10:85","nodeType":"VariableDeclaration","scope":60849,"src":"22028:18:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":60833,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22028:7:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":60835,"nodeType":"VariableDeclarationStatement","src":"22028:18:85"},{"AST":{"nativeSrc":"22085:88:85","nodeType":"YulBlock","src":"22085:88:85","statements":[{"nativeSrc":"22103:56:85","nodeType":"YulAssignment","src":"22103:56:85","value":{"arguments":[{"arguments":[{"name":"payload.offset","nativeSrc":"22134:14:85","nodeType":"YulIdentifier","src":"22134:14:85"},{"name":"OFFSET4","nativeSrc":"22150:7:85","nodeType":"YulIdentifier","src":"22150:7:85"}],"functionName":{"name":"add","nativeSrc":"22130:3:85","nodeType":"YulIdentifier","src":"22130:3:85"},"nativeSrc":"22130:28:85","nodeType":"YulFunctionCall","src":"22130:28:85"}],"functionName":{"name":"calldataload","nativeSrc":"22117:12:85","nodeType":"YulIdentifier","src":"22117:12:85"},"nativeSrc":"22117:42:85","nodeType":"YulFunctionCall","src":"22117:42:85"},"variableNames":[{"name":"vftManager","nativeSrc":"22103:10:85","nodeType":"YulIdentifier","src":"22103:10:85"}]}]},"evmVersion":"prague","externalReferences":[{"declaration":59834,"isOffset":false,"isSlot":false,"src":"22150:7:85","valueSize":1},{"declaration":60784,"isOffset":true,"isSlot":false,"src":"22134:14:85","suffix":"offset","valueSize":1},{"declaration":60834,"isOffset":false,"isSlot":false,"src":"22103:10:85","valueSize":1}],"flags":["memory-safe"],"id":60836,"nodeType":"InlineAssembly","src":"22060:113:85"},{"expression":{"arguments":[{"id":60840,"name":"vftManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60834,"src":"22204:10:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":60837,"name":"_vftManagers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59916,"src":"22187:12:85","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$53809_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":60839,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22200:3:85","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":53827,"src":"22187:16:85","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Set_$53809_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$53809_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"}},"id":60841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22187:28:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":60842,"nodeType":"ExpressionStatement","src":"22187:28:85"},{"eventCall":{"arguments":[{"id":60844,"name":"vftManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60834,"src":"22251:10:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":60843,"name":"VftManagerAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62690,"src":"22235:15:85","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$returns$__$","typeString":"function (bytes32)"}},"id":60845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22235:27:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":60846,"nodeType":"EmitStatement","src":"22230:32:85"},{"expression":{"hexValue":"74727565","id":60847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"22284:4:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":60788,"id":60848,"nodeType":"Return","src":"22277:11:85"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":60857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":60851,"name":"discriminant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60800,"src":"22313:12:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"expression":{"id":60854,"name":"TokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62711,"src":"22337:9:85","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TokenType_$62711_$","typeString":"type(enum IERC20Manager.TokenType)"}},"id":60855,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"22347:8:85","memberName":"Ethereum","nodeType":"MemberAccess","referencedDeclaration":62709,"src":"22337:18:85","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$62711","typeString":"enum IERC20Manager.TokenType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_TokenType_$62711","typeString":"enum IERC20Manager.TokenType"}],"id":60853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22329:7:85","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":60852,"name":"uint256","nodeType":"ElementaryTypeName","src":"22329:7:85","typeDescriptions":{}}},"id":60856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22329:27:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22313:43:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":60887,"nodeType":"IfStatement","src":"22309:712:85","trueBody":{"id":60886,"nodeType":"Block","src":"22358:663:85","statements":[{"condition":{"id":60863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"22376:57:85","subExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":60861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":60858,"name":"payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60784,"src":"22378:7:85","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":60859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22386:6:85","memberName":"length","nodeType":"MemberAccess","src":"22378:14:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":60860,"name":"REGISTER_ETHEREUM_TOKEN_MESSAGE_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59892,"src":"22396:36:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22378:54:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":60862,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22377:56:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":60867,"nodeType":"IfStatement","src":"22372:108:85","trueBody":{"id":60866,"nodeType":"Block","src":"22435:45:85","statements":[{"expression":{"hexValue":"66616c7365","id":60864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"22460:5:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":60788,"id":60865,"nodeType":"Return","src":"22453:12:85"}]}},{"assignments":[60869],"declarations":[{"constant":false,"id":60869,"mutability":"mutable","name":"token","nameLocation":"22590:5:85","nodeType":"VariableDeclaration","scope":60886,"src":"22582:13:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60868,"name":"address","nodeType":"ElementaryTypeName","src":"22582:7:85","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":60870,"nodeType":"VariableDeclarationStatement","src":"22582:13:85"},{"AST":{"nativeSrc":"22634:248:85","nodeType":"YulBlock","src":"22634:248:85","statements":[{"nativeSrc":"22786:82:85","nodeType":"YulAssignment","src":"22786:82:85","value":{"arguments":[{"name":"ETHEREUM_TOKEN_BIT_SHIFT","nativeSrc":"22799:24:85","nodeType":"YulIdentifier","src":"22799:24:85"},{"arguments":[{"arguments":[{"name":"payload.offset","nativeSrc":"22842:14:85","nodeType":"YulIdentifier","src":"22842:14:85"},{"name":"OFFSET4","nativeSrc":"22858:7:85","nodeType":"YulIdentifier","src":"22858:7:85"}],"functionName":{"name":"add","nativeSrc":"22838:3:85","nodeType":"YulIdentifier","src":"22838:3:85"},"nativeSrc":"22838:28:85","nodeType":"YulFunctionCall","src":"22838:28:85"}],"functionName":{"name":"calldataload","nativeSrc":"22825:12:85","nodeType":"YulIdentifier","src":"22825:12:85"},"nativeSrc":"22825:42:85","nodeType":"YulFunctionCall","src":"22825:42:85"}],"functionName":{"name":"shr","nativeSrc":"22795:3:85","nodeType":"YulIdentifier","src":"22795:3:85"},"nativeSrc":"22795:73:85","nodeType":"YulFunctionCall","src":"22795:73:85"},"variableNames":[{"name":"token","nativeSrc":"22786:5:85","nodeType":"YulIdentifier","src":"22786:5:85"}]}]},"evmVersion":"prague","externalReferences":[{"declaration":59896,"isOffset":false,"isSlot":false,"src":"22799:24:85","valueSize":1},{"declaration":59834,"isOffset":false,"isSlot":false,"src":"22858:7:85","valueSize":1},{"declaration":60784,"isOffset":true,"isSlot":false,"src":"22842:14:85","suffix":"offset","valueSize":1},{"declaration":60869,"isOffset":false,"isSlot":false,"src":"22786:5:85","valueSize":1}],"flags":["memory-safe"],"id":60871,"nodeType":"InlineAssembly","src":"22609:273:85"},{"expression":{"arguments":[{"id":60875,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60869,"src":"22908:5:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":60876,"name":"TokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62711,"src":"22915:9:85","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TokenType_$62711_$","typeString":"type(enum IERC20Manager.TokenType)"}},"id":60877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"22925:8:85","memberName":"Ethereum","nodeType":"MemberAccess","referencedDeclaration":62709,"src":"22915:18:85","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$62711","typeString":"enum IERC20Manager.TokenType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_TokenType_$62711","typeString":"enum IERC20Manager.TokenType"}],"expression":{"id":60872,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59919,"src":"22896:7:85","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToTokenTypeMap_$63854_storage","typeString":"struct CustomEnumerableMap.AddressToTokenTypeMap storage ref"}},"id":60874,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22904:3:85","memberName":"set","nodeType":"MemberAccess","referencedDeclaration":63892,"src":"22896:11:85","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressToTokenTypeMap_$63854_storage_ptr_$_t_address_$_t_enum$_TokenType_$62711_$returns$_t_bool_$attached_to$_t_struct$_AddressToTokenTypeMap_$63854_storage_ptr_$","typeString":"function (struct CustomEnumerableMap.AddressToTokenTypeMap storage pointer,address,enum IERC20Manager.TokenType) returns (bool)"}},"id":60878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22896:38:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":60879,"nodeType":"ExpressionStatement","src":"22896:38:85"},{"eventCall":{"arguments":[{"id":60881,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60869,"src":"22978:5:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60880,"name":"EthereumTokenRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62695,"src":"22954:23:85","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":60882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22954:30:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":60883,"nodeType":"EmitStatement","src":"22949:35:85"},{"expression":{"hexValue":"74727565","id":60884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"23006:4:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":60788,"id":60885,"nodeType":"Return","src":"22999:11:85"}]}},{"condition":{"id":60893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"23121:53:85","subExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":60891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":60888,"name":"payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60784,"src":"23123:7:85","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":60889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23131:6:85","memberName":"length","nodeType":"MemberAccess","src":"23123:14:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":60890,"name":"REGISTER_GEAR_TOKEN_MESSAGE_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59882,"src":"23141:32:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23123:50:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":60892,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"23122:52:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":60897,"nodeType":"IfStatement","src":"23117:96:85","trueBody":{"id":60896,"nodeType":"Block","src":"23176:37:85","statements":[{"expression":{"hexValue":"66616c7365","id":60894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"23197:5:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":60788,"id":60895,"nodeType":"Return","src":"23190:12:85"}]}},{"assignments":[60899],"declarations":[{"constant":false,"id":60899,"mutability":"mutable","name":"tokenName","nameLocation":"23231:9:85","nodeType":"VariableDeclaration","scope":61005,"src":"23223:17:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":60898,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23223:7:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":60900,"nodeType":"VariableDeclarationStatement","src":"23223:17:85"},{"assignments":[60902],"declarations":[{"constant":false,"id":60902,"mutability":"mutable","name":"tokenSymbol","nameLocation":"23258:11:85","nodeType":"VariableDeclaration","scope":61005,"src":"23250:19:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":60901,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23250:7:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":60903,"nodeType":"VariableDeclarationStatement","src":"23250:19:85"},{"assignments":[60905],"declarations":[{"constant":false,"id":60905,"mutability":"mutable","name":"tokenDecimals","nameLocation":"23285:13:85","nodeType":"VariableDeclaration","scope":61005,"src":"23279:19:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":60904,"name":"uint8","nodeType":"ElementaryTypeName","src":"23279:5:85","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":60906,"nodeType":"VariableDeclarationStatement","src":"23279:19:85"},{"AST":{"nativeSrc":"23713:454:85","nodeType":"YulBlock","src":"23713:454:85","statements":[{"nativeSrc":"23727:55:85","nodeType":"YulAssignment","src":"23727:55:85","value":{"arguments":[{"arguments":[{"name":"payload.offset","nativeSrc":"23757:14:85","nodeType":"YulIdentifier","src":"23757:14:85"},{"name":"OFFSET4","nativeSrc":"23773:7:85","nodeType":"YulIdentifier","src":"23773:7:85"}],"functionName":{"name":"add","nativeSrc":"23753:3:85","nodeType":"YulIdentifier","src":"23753:3:85"},"nativeSrc":"23753:28:85","nodeType":"YulFunctionCall","src":"23753:28:85"}],"functionName":{"name":"calldataload","nativeSrc":"23740:12:85","nodeType":"YulIdentifier","src":"23740:12:85"},"nativeSrc":"23740:42:85","nodeType":"YulFunctionCall","src":"23740:42:85"},"variableNames":[{"name":"tokenName","nativeSrc":"23727:9:85","nodeType":"YulIdentifier","src":"23727:9:85"}]},{"nativeSrc":"23795:57:85","nodeType":"YulAssignment","src":"23795:57:85","value":{"arguments":[{"arguments":[{"name":"payload.offset","nativeSrc":"23827:14:85","nodeType":"YulIdentifier","src":"23827:14:85"},{"name":"OFFSET5","nativeSrc":"23843:7:85","nodeType":"YulIdentifier","src":"23843:7:85"}],"functionName":{"name":"add","nativeSrc":"23823:3:85","nodeType":"YulIdentifier","src":"23823:3:85"},"nativeSrc":"23823:28:85","nodeType":"YulFunctionCall","src":"23823:28:85"}],"functionName":{"name":"calldataload","nativeSrc":"23810:12:85","nodeType":"YulIdentifier","src":"23810:12:85"},"nativeSrc":"23810:42:85","nodeType":"YulFunctionCall","src":"23810:42:85"},"variableNames":[{"name":"tokenSymbol","nativeSrc":"23795:11:85","nodeType":"YulIdentifier","src":"23795:11:85"}]},{"nativeSrc":"23865:59:85","nodeType":"YulAssignment","src":"23865:59:85","value":{"arguments":[{"arguments":[{"name":"payload.offset","nativeSrc":"23899:14:85","nodeType":"YulIdentifier","src":"23899:14:85"},{"name":"OFFSET6","nativeSrc":"23915:7:85","nodeType":"YulIdentifier","src":"23915:7:85"}],"functionName":{"name":"add","nativeSrc":"23895:3:85","nodeType":"YulIdentifier","src":"23895:3:85"},"nativeSrc":"23895:28:85","nodeType":"YulFunctionCall","src":"23895:28:85"}],"functionName":{"name":"calldataload","nativeSrc":"23882:12:85","nodeType":"YulIdentifier","src":"23882:12:85"},"nativeSrc":"23882:42:85","nodeType":"YulFunctionCall","src":"23882:42:85"},"variableNames":[{"name":"tokenDecimals","nativeSrc":"23865:13:85","nodeType":"YulIdentifier","src":"23865:13:85"}]},{"nativeSrc":"24067:90:85","nodeType":"YulAssignment","src":"24067:90:85","value":{"arguments":[{"name":"TOKEN_DECIMALS_BIT_SHIFT","nativeSrc":"24088:24:85","nodeType":"YulIdentifier","src":"24088:24:85"},{"arguments":[{"arguments":[{"name":"payload.offset","nativeSrc":"24131:14:85","nodeType":"YulIdentifier","src":"24131:14:85"},{"name":"OFFSET6","nativeSrc":"24147:7:85","nodeType":"YulIdentifier","src":"24147:7:85"}],"functionName":{"name":"add","nativeSrc":"24127:3:85","nodeType":"YulIdentifier","src":"24127:3:85"},"nativeSrc":"24127:28:85","nodeType":"YulFunctionCall","src":"24127:28:85"}],"functionName":{"name":"calldataload","nativeSrc":"24114:12:85","nodeType":"YulIdentifier","src":"24114:12:85"},"nativeSrc":"24114:42:85","nodeType":"YulFunctionCall","src":"24114:42:85"}],"functionName":{"name":"shr","nativeSrc":"24084:3:85","nodeType":"YulIdentifier","src":"24084:3:85"},"nativeSrc":"24084:73:85","nodeType":"YulFunctionCall","src":"24084:73:85"},"variableNames":[{"name":"tokenDecimals","nativeSrc":"24067:13:85","nodeType":"YulIdentifier","src":"24067:13:85"}]}]},"evmVersion":"prague","externalReferences":[{"declaration":59834,"isOffset":false,"isSlot":false,"src":"23773:7:85","valueSize":1},{"declaration":59868,"isOffset":false,"isSlot":false,"src":"23843:7:85","valueSize":1},{"declaration":59872,"isOffset":false,"isSlot":false,"src":"23915:7:85","valueSize":1},{"declaration":59872,"isOffset":false,"isSlot":false,"src":"24147:7:85","valueSize":1},{"declaration":59864,"isOffset":false,"isSlot":false,"src":"24088:24:85","valueSize":1},{"declaration":60784,"isOffset":true,"isSlot":false,"src":"23757:14:85","suffix":"offset","valueSize":1},{"declaration":60784,"isOffset":true,"isSlot":false,"src":"23827:14:85","suffix":"offset","valueSize":1},{"declaration":60784,"isOffset":true,"isSlot":false,"src":"23899:14:85","suffix":"offset","valueSize":1},{"declaration":60784,"isOffset":true,"isSlot":false,"src":"24131:14:85","suffix":"offset","valueSize":1},{"declaration":60905,"isOffset":false,"isSlot":false,"src":"23865:13:85","valueSize":1},{"declaration":60905,"isOffset":false,"isSlot":false,"src":"24067:13:85","valueSize":1},{"declaration":60899,"isOffset":false,"isSlot":false,"src":"23727:9:85","valueSize":1},{"declaration":60902,"isOffset":false,"isSlot":false,"src":"23795:11:85","valueSize":1}],"flags":["memory-safe"],"id":60907,"nodeType":"InlineAssembly","src":"23688:479:85"},{"assignments":[60909],"declarations":[{"constant":false,"id":60909,"mutability":"mutable","name":"tokenNameLength","nameLocation":"24183:15:85","nodeType":"VariableDeclaration","scope":61005,"src":"24177:21:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":60908,"name":"uint8","nodeType":"ElementaryTypeName","src":"24177:5:85","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":60916,"initialValue":{"arguments":[{"baseExpression":{"id":60912,"name":"tokenName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60899,"src":"24207:9:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":60914,"indexExpression":{"hexValue":"30","id":60913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24217:1:85","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24207:12:85","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":60911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24201:5:85","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":60910,"name":"uint8","nodeType":"ElementaryTypeName","src":"24201:5:85","typeDescriptions":{}}},"id":60915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24201:19:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"24177:43:85"},{"condition":{"id":60925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"24234:48:85","subExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":60923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":60919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":60917,"name":"tokenNameLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60909,"src":"24236:15:85","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"31","id":60918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24255:1:85","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24236:20:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":60922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":60920,"name":"tokenNameLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60909,"src":"24260:15:85","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3331","id":60921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24279:2:85","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"24260:21:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"24236:45:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":60924,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24235:47:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":60929,"nodeType":"IfStatement","src":"24230:91:85","trueBody":{"id":60928,"nodeType":"Block","src":"24284:37:85","statements":[{"expression":{"hexValue":"66616c7365","id":60926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"24305:5:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":60788,"id":60927,"nodeType":"Return","src":"24298:12:85"}]}},{"assignments":[60931],"declarations":[{"constant":false,"id":60931,"mutability":"mutable","name":"tokenSymbolLength","nameLocation":"24337:17:85","nodeType":"VariableDeclaration","scope":61005,"src":"24331:23:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":60930,"name":"uint8","nodeType":"ElementaryTypeName","src":"24331:5:85","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":60938,"initialValue":{"arguments":[{"baseExpression":{"id":60934,"name":"tokenSymbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60902,"src":"24363:11:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":60936,"indexExpression":{"hexValue":"30","id":60935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24375:1:85","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24363:14:85","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":60933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24357:5:85","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":60932,"name":"uint8","nodeType":"ElementaryTypeName","src":"24357:5:85","typeDescriptions":{}}},"id":60937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24357:21:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"24331:47:85"},{"condition":{"id":60947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"24392:52:85","subExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":60945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":60941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":60939,"name":"tokenSymbolLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60931,"src":"24394:17:85","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"31","id":60940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24415:1:85","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24394:22:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":60944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":60942,"name":"tokenSymbolLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60931,"src":"24420:17:85","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3331","id":60943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24441:2:85","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"24420:23:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"24394:49:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":60946,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24393:51:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":60951,"nodeType":"IfStatement","src":"24388:95:85","trueBody":{"id":60950,"nodeType":"Block","src":"24446:37:85","statements":[{"expression":{"hexValue":"66616c7365","id":60948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"24467:5:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":60788,"id":60949,"nodeType":"Return","src":"24460:12:85"}]}},{"assignments":[60953],"declarations":[{"constant":false,"id":60953,"mutability":"mutable","name":"tokenNameStr","nameLocation":"24507:12:85","nodeType":"VariableDeclaration","scope":61005,"src":"24493:26:85","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":60952,"name":"string","nodeType":"ElementaryTypeName","src":"24493:6:85","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":60958,"initialValue":{"arguments":[{"id":60956,"name":"tokenName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60899,"src":"24542:9:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":60954,"name":"LibString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64160,"src":"24522:9:85","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibString_$64160_$","typeString":"type(library LibString)"}},"id":60955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24532:9:85","memberName":"unpackOne","nodeType":"MemberAccess","referencedDeclaration":64159,"src":"24522:19:85","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_string_memory_ptr_$","typeString":"function (bytes32) pure returns (string memory)"}},"id":60957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24522:30:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"24493:59:85"},{"assignments":[60960],"declarations":[{"constant":false,"id":60960,"mutability":"mutable","name":"tokenSymbolStr","nameLocation":"24576:14:85","nodeType":"VariableDeclaration","scope":61005,"src":"24562:28:85","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":60959,"name":"string","nodeType":"ElementaryTypeName","src":"24562:6:85","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":60965,"initialValue":{"arguments":[{"id":60963,"name":"tokenSymbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60902,"src":"24613:11:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":60961,"name":"LibString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64160,"src":"24593:9:85","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibString_$64160_$","typeString":"type(library LibString)"}},"id":60962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24603:9:85","memberName":"unpackOne","nodeType":"MemberAccess","referencedDeclaration":64159,"src":"24593:19:85","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_string_memory_ptr_$","typeString":"function (bytes32) pure returns (string memory)"}},"id":60964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24593:32:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"24562:63:85"},{"assignments":[60968],"declarations":[{"constant":false,"id":60968,"mutability":"mutable","name":"gearSupply","nameLocation":"24652:10:85","nodeType":"VariableDeclaration","scope":61005,"src":"24636:26:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20GearSupply_$62571","typeString":"contract ERC20GearSupply"},"typeName":{"id":60967,"nodeType":"UserDefinedTypeName","pathNode":{"id":60966,"name":"ERC20GearSupply","nameLocations":["24636:15:85"],"nodeType":"IdentifierPath","referencedDeclaration":62571,"src":"24636:15:85"},"referencedDeclaration":62571,"src":"24636:15:85","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20GearSupply_$62571","typeString":"contract ERC20GearSupply"}},"visibility":"internal"}],"id":60980,"initialValue":{"arguments":[{"arguments":[{"id":60974,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"24693:4:85","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Manager_$61007","typeString":"contract ERC20Manager"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20Manager_$61007","typeString":"contract ERC20Manager"}],"id":60973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24685:7:85","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":60972,"name":"address","nodeType":"ElementaryTypeName","src":"24685:7:85","typeDescriptions":{}}},"id":60975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24685:13:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":60976,"name":"tokenNameStr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60953,"src":"24700:12:85","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":60977,"name":"tokenSymbolStr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60960,"src":"24714:14:85","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":60978,"name":"tokenDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60905,"src":"24730:13:85","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":60971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"24665:19:85","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_ERC20GearSupply_$62571_$","typeString":"function (address,string memory,string memory,uint8) returns (contract ERC20GearSupply)"},"typeName":{"id":60970,"nodeType":"UserDefinedTypeName","pathNode":{"id":60969,"name":"ERC20GearSupply","nameLocations":["24669:15:85"],"nodeType":"IdentifierPath","referencedDeclaration":62571,"src":"24669:15:85"},"referencedDeclaration":62571,"src":"24669:15:85","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20GearSupply_$62571","typeString":"contract ERC20GearSupply"}}},"id":60979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24665:79:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ERC20GearSupply_$62571","typeString":"contract ERC20GearSupply"}},"nodeType":"VariableDeclarationStatement","src":"24636:108:85"},{"assignments":[60982],"declarations":[{"constant":false,"id":60982,"mutability":"mutable","name":"tokenAddress","nameLocation":"24762:12:85","nodeType":"VariableDeclaration","scope":61005,"src":"24754:20:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60981,"name":"address","nodeType":"ElementaryTypeName","src":"24754:7:85","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":60987,"initialValue":{"arguments":[{"id":60985,"name":"gearSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60968,"src":"24785:10:85","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20GearSupply_$62571","typeString":"contract ERC20GearSupply"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20GearSupply_$62571","typeString":"contract ERC20GearSupply"}],"id":60984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24777:7:85","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":60983,"name":"address","nodeType":"ElementaryTypeName","src":"24777:7:85","typeDescriptions":{}}},"id":60986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24777:19:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"24754:42:85"},{"expression":{"arguments":[{"id":60991,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60982,"src":"24819:12:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":60992,"name":"TokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62711,"src":"24833:9:85","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TokenType_$62711_$","typeString":"type(enum IERC20Manager.TokenType)"}},"id":60993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"24843:4:85","memberName":"Gear","nodeType":"MemberAccess","referencedDeclaration":62710,"src":"24833:14:85","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$62711","typeString":"enum IERC20Manager.TokenType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_TokenType_$62711","typeString":"enum IERC20Manager.TokenType"}],"expression":{"id":60988,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59919,"src":"24807:7:85","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToTokenTypeMap_$63854_storage","typeString":"struct CustomEnumerableMap.AddressToTokenTypeMap storage ref"}},"id":60990,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24815:3:85","memberName":"set","nodeType":"MemberAccess","referencedDeclaration":63892,"src":"24807:11:85","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressToTokenTypeMap_$63854_storage_ptr_$_t_address_$_t_enum$_TokenType_$62711_$returns$_t_bool_$attached_to$_t_struct$_AddressToTokenTypeMap_$63854_storage_ptr_$","typeString":"function (struct CustomEnumerableMap.AddressToTokenTypeMap storage pointer,address,enum IERC20Manager.TokenType) returns (bool)"}},"id":60994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24807:41:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":60995,"nodeType":"ExpressionStatement","src":"24807:41:85"},{"eventCall":{"arguments":[{"id":60997,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60982,"src":"24884:12:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":60998,"name":"tokenNameStr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60953,"src":"24898:12:85","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":60999,"name":"tokenSymbolStr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60960,"src":"24912:14:85","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":61000,"name":"tokenDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60905,"src":"24928:13:85","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":60996,"name":"GearTokenRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62706,"src":"24864:19:85","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$__$","typeString":"function (address,string memory,string memory,uint8)"}},"id":61001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24864:78:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":61002,"nodeType":"EmitStatement","src":"24859:83:85"},{"expression":{"hexValue":"74727565","id":61003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"24960:4:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":60788,"id":61004,"nodeType":"Return","src":"24953:11:85"}]},"documentation":{"id":60782,"nodeType":"StructuredDocumentation","src":"20102:1073:85","text":" @dev Tries to parse and apply governance message originated from Vara Network.\n      Payload format:\n      ```solidity\n      uint8 discriminant;\n      ```\n      `discriminant` can be:\n      - `ADD_VFT_MANAGER = 0x00` - add new VFT manager to list of registered VFT managers\n          ```solidity\n          bytes32 vftManager; // 32 bytes\n          ```\n      - `TokenType.Ethereum = 0x01` - register Ethereum token\n          ```solidity\n          address token; // 20 bytes\n          ```\n      - `TokenType.Gear = 0x02` - register Gear token\n          ```solidity\n          bytes32 tokenName; // 1 byte length + 31 bytes datas\n          bytes32 tokenSymbol; // 1 byte length + 31 bytes data\n          uint8 tokenDecimals; // 1 byte\n          ```\n @param payload Payload of the message (message from Vara Network).\n @return success `true` if the message is parsed and applied, `false` otherwise."},"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseAndApplyGovernanceMessage","nameLocation":"21189:34:85","parameters":{"id":60785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60784,"mutability":"mutable","name":"payload","nameLocation":"21239:7:85","nodeType":"VariableDeclaration","scope":61006,"src":"21224:22:85","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":60783,"name":"bytes","nodeType":"ElementaryTypeName","src":"21224:5:85","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"21223:24:85"},"returnParameters":{"id":60788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60787,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":61006,"src":"21265:4:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":60786,"name":"bool","nodeType":"ElementaryTypeName","src":"21265:4:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"21264:6:85"},"scope":61007,"stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"abstract":false,"baseContracts":[{"baseName":{"id":59747,"name":"Initializable","nameLocations":["1566:13:85"],"nodeType":"IdentifierPath","referencedDeclaration":40187,"src":"1566:13:85"},"id":59748,"nodeType":"InheritanceSpecifier","src":"1566:13:85"},{"baseName":{"id":59749,"name":"AccessControlUpgradeable","nameLocations":["1585:24:85"],"nodeType":"IdentifierPath","referencedDeclaration":39724,"src":"1585:24:85"},"id":59750,"nodeType":"InheritanceSpecifier","src":"1585:24:85"},{"baseName":{"id":59751,"name":"PausableUpgradeable","nameLocations":["1615:19:85"],"nodeType":"IdentifierPath","referencedDeclaration":40575,"src":"1615:19:85"},"id":59752,"nodeType":"InheritanceSpecifier","src":"1615:19:85"},{"baseName":{"id":59753,"name":"UUPSUpgradeable","nameLocations":["1640:15:85"],"nodeType":"IdentifierPath","referencedDeclaration":40369,"src":"1640:15:85"},"id":59754,"nodeType":"InheritanceSpecifier","src":"1640:15:85"},{"baseName":{"id":59755,"name":"IPausable","nameLocations":["1661:9:85"],"nodeType":"IdentifierPath","referencedDeclaration":63492,"src":"1661:9:85"},"id":59756,"nodeType":"InheritanceSpecifier","src":"1661:9:85"},{"baseName":{"id":59757,"name":"IMessageHandler","nameLocations":["1676:15:85"],"nodeType":"IdentifierPath","referencedDeclaration":63236,"src":"1676:15:85"},"id":59758,"nodeType":"InheritanceSpecifier","src":"1676:15:85"},{"baseName":{"id":59759,"name":"IERC20Manager","nameLocations":["1697:13:85"],"nodeType":"IdentifierPath","referencedDeclaration":62884,"src":"1697:13:85"},"id":59760,"nodeType":"InheritanceSpecifier","src":"1697:13:85"}],"canonicalName":"ERC20Manager","contractDependencies":[59706,62571],"contractKind":"contract","fullyImplemented":true,"linearizedBaseContracts":[61007,62884,63236,63492,40369,40992,40575,39724,40615,47184,40698,40415,40187],"name":"ERC20Manager","nameLocation":"1546:12:85","scope":61008,"usedErrors":[39936,39939,40214,40219,40454,40457,40625,40628,41187,41200,42704,43166,44469,62643,62646,62649,62652,62655,62658],"usedEvents":[39944,40446,40451,40637,40646,40655,40940,62669,62680,62685,62690,62695,62706]}],"license":"GPL-3.0-or-later WITH Classpath-exception-2.0"},"id":85}