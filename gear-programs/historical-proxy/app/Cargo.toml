[package]
name = "historical-proxy-app"
version.workspace = true
edition.workspace = true

[dependencies]
sails-rs.workspace = true
parity-scale-codec.workspace = true
scale-info.workspace = true
eth-events-common.workspace = true
ethereum-common.workspace = true

[dev-dependencies]
futures.workspace = true
gclient.workspace = true
gear-core.workspace = true
gstd.workspace = true
sp-core = { workspace = true, features = ["std"] }
gtest.workspace = true
eth-events-common.workspace = true
eth-events-electra = { workspace = true, features = ["wasm-binary"] }
eth-events-electra-client.workspace = true
sails-rs = { workspace = true, features = ["gtest", "gclient", "debug"] }
tokio = { workspace = true, features = ["rt", "macros"] }
historical-proxy = { workspace = true, features = ["wasm-binary"] }
historical-proxy-client.workspace = true
vft-manager = { workspace = true, features = ["wasm-binary"] }
vft-manager-client.workspace = true
serde_json = { workspace = true }
serde = { workspace = true }
alloy = { workspace = true }
alloy-rlp = { workspace = true }
ethereum-common =  { workspace = true, features = ["std"] }
checkpoint_light_client-io = { workspace = true }
hex-literal = { workspace = true }

[target.'cfg(all(target_arch = "wasm32", target_os = "unknown"))'.dependencies]
getrandom = { workspace = true, features = ["custom"] }
lazy_static = { workspace = true, features = ["spin_no_std"] }

[build-dependencies]
sails-client-gen.workspace = true
