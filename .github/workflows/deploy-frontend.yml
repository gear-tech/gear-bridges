name: Deploy Frontend to k8s

on:
  workflow_dispatch:
  push:
    branches: ['do-tvara-faucet-request']
    paths:
      - js/frontend/**

env:
  ENVIRONMENT: prod
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
  KUBECTL_VERSION: 'v1.22.17'
  KUBE_NAMESPACE: zk-bridge
  KUBE_DEPLOYMENT_PREFIX: zk-bridge-temp
  REGISTRY: ghcr.io/${{ github.repository }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: prod
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get short SHA
        id: sha
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          file: js/frontend/Dockerfile
          tags: ${{ env.REGISTRY }}:temp-prod-${{ env.sha_short }}
          push: true
          build-args: |
            VITE_VARA_NODE_ADDRESS=${{ secrets.VITE_VARA_NODE_ADDRESS }}
            VITE_ETH_NODE_ADDRESS=${{ secrets.VITE_ETH_NODE_ADDRESS }}
            VITE_ETH_CHAIN_ID=${{ secrets.VITE_ETH_CHAIN_ID }}
            VITE_WALLET_CONNECT_PROJECT_ID=${{ secrets.VITE_WALLET_CONNECT_PROJECT_ID }}
            VITE_INDEXER_ADDRESS=${{ secrets.VITE_INDEXER_ADDRESS }}
            VITE_BRIDGING_PAYMENT_CONTRACT_ADDRESS=${{ secrets.VITE_BRIDGING_PAYMENT_CONTRACT_ADDRESS }}
            VITE_VFT_MANAGER_CONTRACT_ADDRESS=${{ secrets.VITE_VFT_MANAGER_CONTRACT_ADDRESS }}
            VITE_ETH_BRIDGING_PAYMENT_CONTRACT_ADDRESS=${{ secrets.VITE_ETH_BRIDGING_PAYMENT_CONTRACT_ADDRESS }}
            VITE_ERC20_MANAGER_CONTRACT_ADDRESS=${{ secrets.VITE_ERC20_MANAGER_CONTRACT_ADDRESS }}
            VITE_TOKEN_PRICE_API_URL=${{ secrets.VITE_TOKEN_PRICE_API_URL }}
            VITE_FAUCET_API_URL=${{ secrets.VITE_FAUCET_API_URL }}
            VITE_HCAPTCHA_SITEKEY=${{ secrets.VITE_HCAPTCHA_SITEKEY }}
            VITE_VARA_ARCHIVE_NODE_ADDRESS=${{ secrets.VITE_VARA_ARCHIVE_NODE_ADDRESS }}
            VITE_ETH_BEACON_NODE_ADDRESS=${{ secrets.VITE_ETH_BEACON_NODE_ADDRESS }}
            VITE_ETH_MESSAGE_QUEUE_CONTRACT_ADDRESS=${{ secrets.VITE_ETH_MESSAGE_QUEUE_CONTRACT_ADDRESS }}
            VITE_CHECKPOINT_CLIENT_CONTRACT_ADDRESS=${{ secrets.VITE_CHECKPOINT_CLIENT_CONTRACT_ADDRESS }}
            VITE_HISTORICAL_PROXY_CONTRACT_ADDRESS=${{ secrets.VITE_HISTORICAL_PROXY_CONTRACT_ADDRESS }}
            VITE_GTM_ID=${{ secrets.VITE_GTM_ID }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Update deployment image
        uses: kodermax/kubectl-aws-eks@main
        with:
          args: |
            set image deployment/${{ env.KUBE_DEPLOYMENT_PREFIX }}-${{ env.ENVIRONMENT }} \
            ${{ env.KUBE_DEPLOYMENT_PREFIX }}-${{ env.ENVIRONMENT }}=${{ env.REGISTRY }}:temp-prod-${{ env.sha_short }} \
            -n ${{ env.KUBE_NAMESPACE }}

      - name: Restart deployment
        uses: kodermax/kubectl-aws-eks@main
        with:
          args: |
            rollout restart deployment/${{ env.KUBE_DEPLOYMENT_PREFIX }}-${{ env.ENVIRONMENT }} \
            -n ${{ env.KUBE_NAMESPACE }}

      - name: Check deployment status
        uses: kodermax/kubectl-aws-eks@main
        with:
          args: |
            rollout status deployment/${{ env.KUBE_DEPLOYMENT_PREFIX }}-${{ env.ENVIRONMENT }} \
            --timeout=120s \
            -n ${{ env.KUBE_NAMESPACE }}
