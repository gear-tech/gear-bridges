[package]
name = "tests"
version.workspace = true
edition.workspace = true

[dependencies]
alloy.workspace = true
alloy-consensus.workspace = true
alloy-primitives.workspace = true
alloy-rlp.workspace = true
alloy-sol-types.workspace = true
anyhow.workspace = true
ark-bls12-381 = { workspace = true, features = ["curve"] }
ark-ec.workspace = true
ark-scale.workspace = true
ark-serialize.workspace = true
async-trait.workspace = true
bridging-payment.workspace = true
checkpoint-light-client = { workspace = true, features = ["wasm-binary"] }
checkpoint-light-client-client.workspace = true
checkpoint-light-client-io.workspace = true
eth-events-common.workspace = true
eth-events-deneb = { workspace = true, features = ["wasm-binary"] }
eth-events-deneb-client.workspace = true
eth-events-electra = { workspace = true, features = ["wasm-binary"] }
eth-events-electra-client.workspace = true
ethereum-common = { workspace = true, features = ["std"] }
ethereum-client.workspace = true
ethereum_beacon_client.workspace = true
futures.workspace = true
gclient.workspace = true
gear-common.workspace = true
gear-core.workspace = true
gstd.workspace = true
gtest.workspace = true
hex-literal = { workspace = true }
hex.workspace = true
historical-proxy = { workspace = true, features = ["wasm-binary"] }
historical-proxy-client.workspace = true
log.workspace = true
mock-contract = { workspace = true, features = ["std"] }
parity-scale-codec.workspace = true
pretty_env_logger.workspace = true
primitive-types.workspace = true
relayer.workspace = true
ruzstd.workspace = true
sails-rs = { workspace = true, features = ["gtest", "gclient", "debug"] }
scale-info.workspace = true
serde = { workspace = true }
serde_json = { workspace = true }
sp-core = { workspace = true, features = ["std"] }
sp-runtime = { workspace = true, features = ["std"] }
tokio = { workspace = true, features = ["rt", "macros"] }
vft = { workspace = true, features = ["wasm-binary"] }
vft-client = { workspace = true }
vft-manager = { workspace = true, features = ["wasm-binary", "mocks"] }
vft-manager-app.workspace = true
vft-manager-client.workspace = true
vft-vara = { workspace = true, features = ["wasm-binary"] }
vft-vara-client.workspace = true
