{"abi":[{"type":"constructor","inputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"DEFAULT_ADMIN_ROLE","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"PAUSER_ROLE","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"PROCESS_MESSAGE_DELAY","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"UPGRADE_INTERFACE_VERSION","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"disableEmergencyStop","inputs":[{"name":"newVerifier","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"emergencyStopAdmin","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getMerkleRoot","inputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"getMerkleRootTimestamp","inputs":[{"name":"merkleRoot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getRoleAdmin","inputs":[{"name":"role","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"governanceAdmin","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"governancePauser","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"grantRole","inputs":[{"name":"role","type":"bytes32","internalType":"bytes32"},{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"hasRole","inputs":[{"name":"role","type":"bytes32","internalType":"bytes32"},{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"initialize","inputs":[{"name":"governanceAdmin_","type":"address","internalType":"contract IGovernance"},{"name":"governancePauser_","type":"address","internalType":"contract IGovernance"},{"name":"emergencyStopAdmin_","type":"address","internalType":"address"},{"name":"verifier_","type":"address","internalType":"contract IVerifier"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"isEmergencyStopped","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isProcessed","inputs":[{"name":"messageNonce","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"pause","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"paused","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"processMessage","inputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"},{"name":"totalLeaves","type":"uint256","internalType":"uint256"},{"name":"leafIndex","type":"uint256","internalType":"uint256"},{"name":"message","type":"tuple","internalType":"struct VaraMessage","components":[{"name":"nonce","type":"uint256","internalType":"uint256"},{"name":"source","type":"bytes32","internalType":"bytes32"},{"name":"destination","type":"address","internalType":"address"},{"name":"payload","type":"bytes","internalType":"bytes"}]},{"name":"proof","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"proxiableUUID","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"renounceRole","inputs":[{"name":"role","type":"bytes32","internalType":"bytes32"},{"name":"callerConfirmation","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"revokeRole","inputs":[{"name":"role","type":"bytes32","internalType":"bytes32"},{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"submitMerkleRoot","inputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"},{"name":"merkleRoot","type":"bytes32","internalType":"bytes32"},{"name":"proof","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"supportsInterface","inputs":[{"name":"interfaceId","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"unpause","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"upgradeToAndCall","inputs":[{"name":"newImplementation","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"verifier","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"event","name":"EmergencyStopDisabled","inputs":[],"anonymous":false},{"type":"event","name":"EmergencyStopEnabled","inputs":[],"anonymous":false},{"type":"event","name":"Initialized","inputs":[{"name":"version","type":"uint64","indexed":false,"internalType":"uint64"}],"anonymous":false},{"type":"event","name":"MerkleRoot","inputs":[{"name":"blockNumber","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"merkleRoot","type":"bytes32","indexed":false,"internalType":"bytes32"}],"anonymous":false},{"type":"event","name":"MessageProcessed","inputs":[{"name":"blockNumber","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"messageHash","type":"bytes32","indexed":false,"internalType":"bytes32"},{"name":"messageNonce","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"messageDestination","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"Paused","inputs":[{"name":"account","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"RoleAdminChanged","inputs":[{"name":"role","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"previousAdminRole","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"newAdminRole","type":"bytes32","indexed":true,"internalType":"bytes32"}],"anonymous":false},{"type":"event","name":"RoleGranted","inputs":[{"name":"role","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"account","type":"address","indexed":true,"internalType":"address"},{"name":"sender","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"RoleRevoked","inputs":[{"name":"role","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"account","type":"address","indexed":true,"internalType":"address"},{"name":"sender","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"Unpaused","inputs":[{"name":"account","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"Upgraded","inputs":[{"name":"implementation","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"error","name":"AccessControlBadConfirmation","inputs":[]},{"type":"error","name":"AccessControlUnauthorizedAccount","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"neededRole","type":"bytes32","internalType":"bytes32"}]},{"type":"error","name":"AddressEmptyCode","inputs":[{"name":"target","type":"address","internalType":"address"}]},{"type":"error","name":"ERC1967InvalidImplementation","inputs":[{"name":"implementation","type":"address","internalType":"address"}]},{"type":"error","name":"ERC1967NonPayable","inputs":[]},{"type":"error","name":"EmergencyStop","inputs":[]},{"type":"error","name":"EmergencyStopNotEnabled","inputs":[]},{"type":"error","name":"EnforcedPause","inputs":[]},{"type":"error","name":"ExpectedPause","inputs":[]},{"type":"error","name":"FailedCall","inputs":[]},{"type":"error","name":"InvalidInitialization","inputs":[]},{"type":"error","name":"InvalidMerkleProof","inputs":[]},{"type":"error","name":"InvalidPlonkProof","inputs":[]},{"type":"error","name":"MerkleRootAlreadySet","inputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"MerkleRootDelayNotPassed","inputs":[]},{"type":"error","name":"MerkleRootNotFound","inputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"MessageAlreadyProcessed","inputs":[{"name":"messageNonce","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"NotEmergencyStopAdmin","inputs":[]},{"type":"error","name":"NotInitializing","inputs":[]},{"type":"error","name":"UUPSUnauthorizedCallContext","inputs":[]},{"type":"error","name":"UUPSUnsupportedProxiableUUID","inputs":[{"name":"slot","type":"bytes32","internalType":"bytes32"}]}],"bytecode":{"object":"0x60a080604052346100c257306080525f5160206118f45f395f51905f525460ff8160401c166100b3576002600160401b03196001600160401b03821601610060575b60405161182d90816100c78239608051818181610cd90152610da90152f35b6001600160401b0319166001600160401b039081175f5160206118f45f395f51905f525581527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a15f80610041565b63f92ee8a960e01b5f5260045ffd5b5f80fdfe6080806040526004361015610012575f80fd5b5f905f3560e01c90816258f6b81461125b5750806301ffc9a7146112055780630aab8ba5146111db5780630eb1a54414611142578063248a9ca3146111035780632b7ac3f3146110db5780632f2ff15d1461109157806336568abe1461104d5780633f4ba83a14610fcf5780634610d3aa14610fa55780634f1ef28614610d2d57806352d1902d14610cc75780635c975abb14610c995780638456cb5914610c2757806391d1485414610bd257806393eb47e9146107ae578063a217fddf14610792578063a8d7a64514610775578063ad3cb1cc14610719578063b13f222c146106f0578063bfe7edd7146106c1578063c81eb79714610698578063cca66a9d146103e5578063d547741f14610391578063e63ab1e914610375578063f8c8765e1461016e5763fddd483714610146575f80fd5b3461016b578060031936011261016b57602060ff60035460a01c166040519015158152f35b80fd5b503461016b57608036600319011261016b5761018861127d565b610190611293565b6044356001600160a01b03811690819003610371576064356001600160a01b038116929083900361036d575f51602061180d5f395f51905f52549360ff8560401c16159467ffffffffffffffff811680159081610365575b600114908161035b575b159081610352575b506103435767ffffffffffffffff1981166001175f51602061180d5f395f51905f525585610317575b5061022c611723565b610234611723565b61023c611723565b6001600160a01b03169061024f826113f8565b50610259826114a7565b506001600160a01b03169061026d826114a7565b506001600160601b0360a01b8654161785556001600160601b0360a01b60015416176001556001600160601b0360a01b60025416176002556001600160601b0360a01b60035416176003556102bf5780f35b68ff0000000000000000195f51602061180d5f395f51905f5254165f51602061180d5f395f51905f52557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a180f35b68ffffffffffffffffff191668010000000000000001175f51602061180d5f395f51905f52555f610223565b63f92ee8a960e01b8752600487fd5b9050155f6101fa565b303b1591506101f2565b8791506101e8565b8480fd5b8380fd5b503461016b578060031936011261016b57602060405160018152f35b503461016b57604036600319011261016b576103e16004356103b1611293565b906103dc6103d7825f525f5160206117cd5f395f51905f52602052600160405f20015490565b6113b2565b6115f8565b5080f35b503461016b57606036600319011261016b5760243560043560443567ffffffffffffffff811161037157366023820112156103715780600401359067ffffffffffffffff821161036d57366024838301011161036d5760018060a01b03600254163314906003549160ff8360a01c16908161068f575b506106805760405161046e6060826112a9565b600281526020810191604036843781511561066c578660401c835281516001101561066c579391906040810163ffffffff60601b8760601b1667ffffffffffffffff60801b8960801b1617905260206104e4604051968795633054963960e01b8752604060048801526024604488019201611342565b848103600319016024860152915180835291019190885b818110610653575060209492849003928492506001600160a01b031690505afa90811561064857849161060d575b50156105fe57808352600460205260408320549182156105af57821461059d57600160a01b60ff60a01b19600354161760035582526004602052816040812055815260056020528060408120557f015567d35557fdfcbb3bbfe9dbf4f5c651cb9e461e784ac02c8152fbdb7319718180a180f35b638d60c7ab60e01b8352600452602482fd5b7f48211a20c285b6b077b7917b8bb118eaa92efdfb8fa2e3b114ffa253e0b665ae925090604091818552600460205280838620558085526005602052428386205582519182526020820152a180f35b636859a69960e11b8352600483fd5b90506020813d602011610640575b81610628602093836112a9565b8101031261037157518015158103610371575f610529565b3d915061061b565b6040513d86823e3d90fd5b82518452869450602093840193909201916001016104fb565b634e487b7160e01b88526032600452602488fd5b6313a5ef3f60e21b8652600486fd5b9050155f61045b565b503461016b578060031936011261016b576001546040516001600160a01b039091168152602090f35b503461016b57602036600319011261016b5760ff60406020926004358152600684522054166040519015158152f35b503461016b578060031936011261016b576002546040516001600160a01b039091168152602090f35b503461016b578060031936011261016b576040805161073882826112a9565b6005815260208101640352e302e360dc1b81528251938492602084525180928160208601528585015e828201840152601f01601f19168101030190f35b503461016b578060031936011261016b57602060405161012c8152f35b503461016b578060031936011261016b57602090604051908152f35b5034610aa55760a0366003190112610aa55760043560643567ffffffffffffffff8111610aa557806004019060806003198236030112610aa5576084359167ffffffffffffffff8311610aa55736602384011215610aa55782600401359067ffffffffffffffff8211610aa5573660248360051b86010111610aa5575f54604051635aa6e67560e01b8152602485013591602090829060049082906001600160a01b03165afa908115610a9a575f91610ba0575b5081148015610b31575b60ff5f5160206117ed5f395f51905f5254169081610b28575b50610b195760025460035460a01c60ff1690336001600160a01b03919091161481610b10575b50610b0157813593845f52600660205260ff60405f205416610aee57865f52600460205260405f2054938415610adb57845f52600560205260405f205461012c8101809111610ac7574210610ab85761098190604483019587606461090f896112fb565b9501946109656074610921888b61130f565b80604095929551958693602085019889528d60408601526001600160601b03199060601b1660608501528484013781015f838201520301601f1981018352826112a9565b5190205f5260205f209889926044359260248035930190611694565b15610aa9575f858152600660205260409020805460ff191660011790556109ba906001600160a01b036109b3866112fb565b169361130f565b92803b15610aa5576109f3935f809460405196879586948593630302ac5d60e41b85526004850152604060248501526044840191611342565b03925af18015610a9a57610a57575b50917f994c669cfd9c0453d42c933a11c002a34d12d85563aebe99ca525fffc45454f89391610a326080946112fb565b604080519485526020850193909352918301526001600160a01b03166060820152a180f35b60809391955091610a8a5f7f994c669cfd9c0453d42c933a11c002a34d12d85563aebe99ca525fffc45454f896946112a9565b610a325f96929450509193610a02565b6040513d5f823e3d90fd5b5f80fd5b63582f497d60e11b5f5260045ffd5b63a4f7d3e960e01b5f5260045ffd5b634e487b7160e01b5f52601160045260245ffd5b876355d7a68b60e01b5f5260045260245ffd5b846338503e3360e21b5f5260045260245ffd5b6313a5ef3f60e21b5f5260045ffd5b9050155f6108ab565b63d93c066560e01b5f5260045ffd5b9050155f610885565b50600154604051635aa6e67560e01b815290602090829060049082906001600160a01b03165afa908115610a9a575f91610b6e575b50811461086c565b90506020813d602011610b98575b81610b89602093836112a9565b81010312610aa557515f610b66565b3d9150610b7c565b90506020813d602011610bca575b81610bbb602093836112a9565b81010312610aa557515f610862565b3d9150610bae565b34610aa5576040366003190112610aa557610beb611293565b6004355f525f5160206117cd5f395f51905f5260205260405f209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b34610aa5575f366003190112610aa557610c3f611362565b5f5160206117ed5f395f51905f525460ff8116610b195760019060ff1916175f5160206117ed5f395f51905f52557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a1005b34610aa5575f366003190112610aa557602060ff5f5160206117ed5f395f51905f5254166040519015158152f35b34610aa5575f366003190112610aa5577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163003610d1e5760206040515f5160206117ad5f395f51905f528152f35b63703e46dd60e11b5f5260045ffd5b6040366003190112610aa557610d4161127d565b6024359067ffffffffffffffff8211610aa55736602383011215610aa557816004013590610d6e826112df565b91610d7c60405193846112a9565b80835260208301933660248383010111610aa557815f926024602093018737840101526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016308114908115610f83575b50610d1e57335f9081527fb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d602052604090205460ff1615610f6c576040516352d1902d60e01b81526001600160a01b0382169390602081600481885afa5f9181610f38575b50610e515784634c9c8ce360e01b5f5260045260245ffd5b805f5160206117ad5f395f51905f52869203610f265750823b15610f14575f5160206117ad5f395f51905f5280546001600160a01b031916821790557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a2825115610efb575f8091610ef1945190845af43d15610ef3573d91610ed5836112df565b92610ee360405194856112a9565b83523d5f602085013e61174e565b005b60609161174e565b50505034610f0557005b63b398979f60e01b5f5260045ffd5b634c9c8ce360e01b5f5260045260245ffd5b632a87526960e21b5f5260045260245ffd5b9091506020813d602011610f64575b81610f54602093836112a9565b81010312610aa557519086610e39565b3d9150610f47565b63e2517d3f60e01b5f52336004525f60245260445ffd5b5f5160206117ad5f395f51905f52546001600160a01b03161415905084610dd4565b34610aa5576020366003190112610aa5576004355f526005602052602060405f2054604051908152f35b34610aa5575f366003190112610aa557610fe7611362565b5f5160206117ed5f395f51905f525460ff81161561103e5760ff19165f5160206117ed5f395f51905f52557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a1005b638dfc202b60e01b5f5260045ffd5b34610aa5576040366003190112610aa557611066611293565b336001600160a01b0382160361108257610ef1906004356115f8565b63334bd91960e11b5f5260045ffd5b34610aa5576040366003190112610aa557610ef16004356110b0611293565b906110d66103d7825f525f5160206117cd5f395f51905f52602052600160405f20015490565b611554565b34610aa5575f366003190112610aa5576003546040516001600160a01b039091168152602090f35b34610aa5576020366003190112610aa557602061113a6004355f525f5160206117cd5f395f51905f52602052600160405f20015490565b604051908152f35b34610aa5576020366003190112610aa55761115b61127d565b6003549060ff8260a01c16156111cc576002546001600160a01b031633036111bd576001600160a01b03166001600160a81b031991909116176003557f733865ee5918bf41dfad0ca1d8ddaa4c1d18103ae3d21e7436828b52762b87e05f80a1005b63662cadb560e01b5f5260045ffd5b63194ad54d60e31b5f5260045ffd5b34610aa5576020366003190112610aa5576004355f526004602052602060405f2054604051908152f35b34610aa5576020366003190112610aa55760043563ffffffff60e01b8116809103610aa557602090637965db0b60e01b811490811561124a575b506040519015158152f35b6301ffc9a760e01b1490508261123f565b34610aa5575f366003190112610aa5575f546001600160a01b03168152602090f35b600435906001600160a01b0382168203610aa557565b602435906001600160a01b0382168203610aa557565b90601f8019910116810190811067ffffffffffffffff8211176112cb57604052565b634e487b7160e01b5f52604160045260245ffd5b67ffffffffffffffff81116112cb57601f01601f191660200190565b356001600160a01b0381168103610aa55790565b903590601e1981360301821215610aa5570180359067ffffffffffffffff8211610aa557602001918136038313610aa557565b908060209392818452848401375f828201840152601f01601f1916010190565b335f9081527f2222dce04fae1e25cd76e9391151ad9e0187ef92144ac6ce9e4e09f2c453b751602052604090205460ff161561139a57565b63e2517d3f60e01b5f5233600452600160245260445ffd5b5f8181525f5160206117cd5f395f51905f526020908152604080832033845290915290205460ff16156113e25750565b63e2517d3f60e01b5f523360045260245260445ffd5b6001600160a01b0381165f9081527fb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d602052604090205460ff166114a2576001600160a01b03165f8181527fb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d60205260408120805460ff191660011790553391907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a4600190565b505f90565b6001600160a01b0381165f9081527f2222dce04fae1e25cd76e9391151ad9e0187ef92144ac6ce9e4e09f2c453b751602052604090205460ff166114a2576001600160a01b03165f8181527f2222dce04fae1e25cd76e9391151ad9e0187ef92144ac6ce9e4e09f2c453b75160205260408120805460ff191660019081179091553392917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9080a4600190565b5f8181525f5160206117cd5f395f51905f52602090815260408083206001600160a01b038616845290915290205460ff166115f2575f8181525f5160206117cd5f395f51905f52602090815260408083206001600160a01b0395909516808452949091528120805460ff19166001179055339291907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9080a4600190565b50505f90565b5f8181525f5160206117cd5f395f51905f52602090815260408083206001600160a01b038616845290915290205460ff16156115f2575f8181525f5160206117cd5f395f51905f52602090815260408083206001600160a01b0395909516808452949091528120805460ff19169055339291907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9080a4600190565b91949590929384811015611718575f969092905b8688101561170e57808860051b860135906001808716148015611702575b156116ed57505f5260205260018060405f20945b811c965f1901811c0197019694926116a8565b9091505f5260205260018060405f20946116da565b508760018701146116c6565b1495509350505050565b509450505050505f90565b60ff5f51602061180d5f395f51905f525460401c161561173f57565b631afcd79f60e31b5f5260045ffd5b90611772575080511561176357602081519101fd5b63d6bda27560e01b5f5260045ffd5b815115806117a3575b611783575090565b639996b31560e01b5f9081526001600160a01b0391909116600452602490fd5b50803b1561177b56fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00","sourceMap":"1300:11368:88:-:0;;;;;;;1171:4:23;1163:13;;-1:-1:-1;;;;;;;;;;;1300:11368:88;;;;;;7894:76:22;;-1:-1:-1;;;;;;;;;;;1300:11368:88;;7983:34:22;7979:146;;-1:-1:-1;1300:11368:88;;;;;;;;1163:13:23;1300:11368:88;;;;;;;;;;;7979:146:22;-1:-1:-1;;;;;;1300:11368:88;-1:-1:-1;;;;;1300:11368:88;;;-1:-1:-1;;;;;;;;;;;1300:11368:88;;;8085:29:22;;1300:11368:88;;8085:29:22;7979:146;;;;7894:76;7936:23;;;-1:-1:-1;7936:23:22;;-1:-1:-1;7936:23:22;1300:11368:88;;;","linkReferences":{}},"deployedBytecode":{"object":"0x6080806040526004361015610012575f80fd5b5f905f3560e01c90816258f6b81461125b5750806301ffc9a7146112055780630aab8ba5146111db5780630eb1a54414611142578063248a9ca3146111035780632b7ac3f3146110db5780632f2ff15d1461109157806336568abe1461104d5780633f4ba83a14610fcf5780634610d3aa14610fa55780634f1ef28614610d2d57806352d1902d14610cc75780635c975abb14610c995780638456cb5914610c2757806391d1485414610bd257806393eb47e9146107ae578063a217fddf14610792578063a8d7a64514610775578063ad3cb1cc14610719578063b13f222c146106f0578063bfe7edd7146106c1578063c81eb79714610698578063cca66a9d146103e5578063d547741f14610391578063e63ab1e914610375578063f8c8765e1461016e5763fddd483714610146575f80fd5b3461016b578060031936011261016b57602060ff60035460a01c166040519015158152f35b80fd5b503461016b57608036600319011261016b5761018861127d565b610190611293565b6044356001600160a01b03811690819003610371576064356001600160a01b038116929083900361036d575f51602061180d5f395f51905f52549360ff8560401c16159467ffffffffffffffff811680159081610365575b600114908161035b575b159081610352575b506103435767ffffffffffffffff1981166001175f51602061180d5f395f51905f525585610317575b5061022c611723565b610234611723565b61023c611723565b6001600160a01b03169061024f826113f8565b50610259826114a7565b506001600160a01b03169061026d826114a7565b506001600160601b0360a01b8654161785556001600160601b0360a01b60015416176001556001600160601b0360a01b60025416176002556001600160601b0360a01b60035416176003556102bf5780f35b68ff0000000000000000195f51602061180d5f395f51905f5254165f51602061180d5f395f51905f52557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a180f35b68ffffffffffffffffff191668010000000000000001175f51602061180d5f395f51905f52555f610223565b63f92ee8a960e01b8752600487fd5b9050155f6101fa565b303b1591506101f2565b8791506101e8565b8480fd5b8380fd5b503461016b578060031936011261016b57602060405160018152f35b503461016b57604036600319011261016b576103e16004356103b1611293565b906103dc6103d7825f525f5160206117cd5f395f51905f52602052600160405f20015490565b6113b2565b6115f8565b5080f35b503461016b57606036600319011261016b5760243560043560443567ffffffffffffffff811161037157366023820112156103715780600401359067ffffffffffffffff821161036d57366024838301011161036d5760018060a01b03600254163314906003549160ff8360a01c16908161068f575b506106805760405161046e6060826112a9565b600281526020810191604036843781511561066c578660401c835281516001101561066c579391906040810163ffffffff60601b8760601b1667ffffffffffffffff60801b8960801b1617905260206104e4604051968795633054963960e01b8752604060048801526024604488019201611342565b848103600319016024860152915180835291019190885b818110610653575060209492849003928492506001600160a01b031690505afa90811561064857849161060d575b50156105fe57808352600460205260408320549182156105af57821461059d57600160a01b60ff60a01b19600354161760035582526004602052816040812055815260056020528060408120557f015567d35557fdfcbb3bbfe9dbf4f5c651cb9e461e784ac02c8152fbdb7319718180a180f35b638d60c7ab60e01b8352600452602482fd5b7f48211a20c285b6b077b7917b8bb118eaa92efdfb8fa2e3b114ffa253e0b665ae925090604091818552600460205280838620558085526005602052428386205582519182526020820152a180f35b636859a69960e11b8352600483fd5b90506020813d602011610640575b81610628602093836112a9565b8101031261037157518015158103610371575f610529565b3d915061061b565b6040513d86823e3d90fd5b82518452869450602093840193909201916001016104fb565b634e487b7160e01b88526032600452602488fd5b6313a5ef3f60e21b8652600486fd5b9050155f61045b565b503461016b578060031936011261016b576001546040516001600160a01b039091168152602090f35b503461016b57602036600319011261016b5760ff60406020926004358152600684522054166040519015158152f35b503461016b578060031936011261016b576002546040516001600160a01b039091168152602090f35b503461016b578060031936011261016b576040805161073882826112a9565b6005815260208101640352e302e360dc1b81528251938492602084525180928160208601528585015e828201840152601f01601f19168101030190f35b503461016b578060031936011261016b57602060405161012c8152f35b503461016b578060031936011261016b57602090604051908152f35b5034610aa55760a0366003190112610aa55760043560643567ffffffffffffffff8111610aa557806004019060806003198236030112610aa5576084359167ffffffffffffffff8311610aa55736602384011215610aa55782600401359067ffffffffffffffff8211610aa5573660248360051b86010111610aa5575f54604051635aa6e67560e01b8152602485013591602090829060049082906001600160a01b03165afa908115610a9a575f91610ba0575b5081148015610b31575b60ff5f5160206117ed5f395f51905f5254169081610b28575b50610b195760025460035460a01c60ff1690336001600160a01b03919091161481610b10575b50610b0157813593845f52600660205260ff60405f205416610aee57865f52600460205260405f2054938415610adb57845f52600560205260405f205461012c8101809111610ac7574210610ab85761098190604483019587606461090f896112fb565b9501946109656074610921888b61130f565b80604095929551958693602085019889528d60408601526001600160601b03199060601b1660608501528484013781015f838201520301601f1981018352826112a9565b5190205f5260205f209889926044359260248035930190611694565b15610aa9575f858152600660205260409020805460ff191660011790556109ba906001600160a01b036109b3866112fb565b169361130f565b92803b15610aa5576109f3935f809460405196879586948593630302ac5d60e41b85526004850152604060248501526044840191611342565b03925af18015610a9a57610a57575b50917f994c669cfd9c0453d42c933a11c002a34d12d85563aebe99ca525fffc45454f89391610a326080946112fb565b604080519485526020850193909352918301526001600160a01b03166060820152a180f35b60809391955091610a8a5f7f994c669cfd9c0453d42c933a11c002a34d12d85563aebe99ca525fffc45454f896946112a9565b610a325f96929450509193610a02565b6040513d5f823e3d90fd5b5f80fd5b63582f497d60e11b5f5260045ffd5b63a4f7d3e960e01b5f5260045ffd5b634e487b7160e01b5f52601160045260245ffd5b876355d7a68b60e01b5f5260045260245ffd5b846338503e3360e21b5f5260045260245ffd5b6313a5ef3f60e21b5f5260045ffd5b9050155f6108ab565b63d93c066560e01b5f5260045ffd5b9050155f610885565b50600154604051635aa6e67560e01b815290602090829060049082906001600160a01b03165afa908115610a9a575f91610b6e575b50811461086c565b90506020813d602011610b98575b81610b89602093836112a9565b81010312610aa557515f610b66565b3d9150610b7c565b90506020813d602011610bca575b81610bbb602093836112a9565b81010312610aa557515f610862565b3d9150610bae565b34610aa5576040366003190112610aa557610beb611293565b6004355f525f5160206117cd5f395f51905f5260205260405f209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b34610aa5575f366003190112610aa557610c3f611362565b5f5160206117ed5f395f51905f525460ff8116610b195760019060ff1916175f5160206117ed5f395f51905f52557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a1005b34610aa5575f366003190112610aa557602060ff5f5160206117ed5f395f51905f5254166040519015158152f35b34610aa5575f366003190112610aa5577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163003610d1e5760206040515f5160206117ad5f395f51905f528152f35b63703e46dd60e11b5f5260045ffd5b6040366003190112610aa557610d4161127d565b6024359067ffffffffffffffff8211610aa55736602383011215610aa557816004013590610d6e826112df565b91610d7c60405193846112a9565b80835260208301933660248383010111610aa557815f926024602093018737840101526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016308114908115610f83575b50610d1e57335f9081527fb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d602052604090205460ff1615610f6c576040516352d1902d60e01b81526001600160a01b0382169390602081600481885afa5f9181610f38575b50610e515784634c9c8ce360e01b5f5260045260245ffd5b805f5160206117ad5f395f51905f52869203610f265750823b15610f14575f5160206117ad5f395f51905f5280546001600160a01b031916821790557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a2825115610efb575f8091610ef1945190845af43d15610ef3573d91610ed5836112df565b92610ee360405194856112a9565b83523d5f602085013e61174e565b005b60609161174e565b50505034610f0557005b63b398979f60e01b5f5260045ffd5b634c9c8ce360e01b5f5260045260245ffd5b632a87526960e21b5f5260045260245ffd5b9091506020813d602011610f64575b81610f54602093836112a9565b81010312610aa557519086610e39565b3d9150610f47565b63e2517d3f60e01b5f52336004525f60245260445ffd5b5f5160206117ad5f395f51905f52546001600160a01b03161415905084610dd4565b34610aa5576020366003190112610aa5576004355f526005602052602060405f2054604051908152f35b34610aa5575f366003190112610aa557610fe7611362565b5f5160206117ed5f395f51905f525460ff81161561103e5760ff19165f5160206117ed5f395f51905f52557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a1005b638dfc202b60e01b5f5260045ffd5b34610aa5576040366003190112610aa557611066611293565b336001600160a01b0382160361108257610ef1906004356115f8565b63334bd91960e11b5f5260045ffd5b34610aa5576040366003190112610aa557610ef16004356110b0611293565b906110d66103d7825f525f5160206117cd5f395f51905f52602052600160405f20015490565b611554565b34610aa5575f366003190112610aa5576003546040516001600160a01b039091168152602090f35b34610aa5576020366003190112610aa557602061113a6004355f525f5160206117cd5f395f51905f52602052600160405f20015490565b604051908152f35b34610aa5576020366003190112610aa55761115b61127d565b6003549060ff8260a01c16156111cc576002546001600160a01b031633036111bd576001600160a01b03166001600160a81b031991909116176003557f733865ee5918bf41dfad0ca1d8ddaa4c1d18103ae3d21e7436828b52762b87e05f80a1005b63662cadb560e01b5f5260045ffd5b63194ad54d60e31b5f5260045ffd5b34610aa5576020366003190112610aa5576004355f526004602052602060405f2054604051908152f35b34610aa5576020366003190112610aa55760043563ffffffff60e01b8116809103610aa557602090637965db0b60e01b811490811561124a575b506040519015158152f35b6301ffc9a760e01b1490508261123f565b34610aa5575f366003190112610aa5575f546001600160a01b03168152602090f35b600435906001600160a01b0382168203610aa557565b602435906001600160a01b0382168203610aa557565b90601f8019910116810190811067ffffffffffffffff8211176112cb57604052565b634e487b7160e01b5f52604160045260245ffd5b67ffffffffffffffff81116112cb57601f01601f191660200190565b356001600160a01b0381168103610aa55790565b903590601e1981360301821215610aa5570180359067ffffffffffffffff8211610aa557602001918136038313610aa557565b908060209392818452848401375f828201840152601f01601f1916010190565b335f9081527f2222dce04fae1e25cd76e9391151ad9e0187ef92144ac6ce9e4e09f2c453b751602052604090205460ff161561139a57565b63e2517d3f60e01b5f5233600452600160245260445ffd5b5f8181525f5160206117cd5f395f51905f526020908152604080832033845290915290205460ff16156113e25750565b63e2517d3f60e01b5f523360045260245260445ffd5b6001600160a01b0381165f9081527fb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d602052604090205460ff166114a2576001600160a01b03165f8181527fb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d60205260408120805460ff191660011790553391907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a4600190565b505f90565b6001600160a01b0381165f9081527f2222dce04fae1e25cd76e9391151ad9e0187ef92144ac6ce9e4e09f2c453b751602052604090205460ff166114a2576001600160a01b03165f8181527f2222dce04fae1e25cd76e9391151ad9e0187ef92144ac6ce9e4e09f2c453b75160205260408120805460ff191660019081179091553392917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9080a4600190565b5f8181525f5160206117cd5f395f51905f52602090815260408083206001600160a01b038616845290915290205460ff166115f2575f8181525f5160206117cd5f395f51905f52602090815260408083206001600160a01b0395909516808452949091528120805460ff19166001179055339291907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9080a4600190565b50505f90565b5f8181525f5160206117cd5f395f51905f52602090815260408083206001600160a01b038616845290915290205460ff16156115f2575f8181525f5160206117cd5f395f51905f52602090815260408083206001600160a01b0395909516808452949091528120805460ff19169055339291907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9080a4600190565b91949590929384811015611718575f969092905b8688101561170e57808860051b860135906001808716148015611702575b156116ed57505f5260205260018060405f20945b811c965f1901811c0197019694926116a8565b9091505f5260205260018060405f20946116da565b508760018701146116c6565b1495509350505050565b509450505050505f90565b60ff5f51602061180d5f395f51905f525460401c161561173f57565b631afcd79f60e31b5f5260045ffd5b90611772575080511561176357602081519101fd5b63d6bda27560e01b5f5260045ffd5b815115806117a3575b611783575090565b639996b31560e01b5f9081526001600160a01b0391909116600452602490fd5b50803b1561177b56fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00","sourceMap":"1300:11368:88:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4856:14;1300:11368;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1300:11368:88;;;;;;:::i;:::-;;;:::i;:::-;;;-1:-1:-1;;;;;1300:11368:88;;;;;;;;;;-1:-1:-1;;;;;1300:11368:88;;;;;;;;;-1:-1:-1;;;;;;;;;;;1300:11368:88;;;;;;;4301:16:22;1300:11368:88;;;;4724:16:22;;:34;;;;1300:11368:88;4803:1:22;4788:16;:50;;;;1300:11368:88;4853:13:22;:30;;;;1300:11368:88;4849:91:22;;;-1:-1:-1;;1300:11368:88;;4803:1:22;1300:11368:88;-1:-1:-1;;;;;;;;;;;1300:11368:88;;4977:67:22;;1300:11368:88;6891:76:22;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;1300:11368:88;;3389:57;1300:11368;3389:57;:::i;:::-;;3457:50;;;:::i;:::-;-1:-1:-1;;;;;;1300:11368:88;;3517:51;1300:11368;3517:51;:::i;:::-;;-1:-1:-1;;;;;1300:11368:88;;;;;;;;-1:-1:-1;;;;;1300:11368:88;;4803:1:22;1300:11368:88;;;4803:1:22;1300:11368:88;-1:-1:-1;;;;;1300:11368:88;;3671:41;1300:11368;;;3671:41;1300:11368;-1:-1:-1;;;;;1300:11368:88;;3722:21;1300:11368;;;3722:21;1300:11368;5064:101:22;;1300:11368:88;;5064:101:22;1300:11368:88;;-1:-1:-1;;;;;;;;;;;1300:11368:88;;-1:-1:-1;;;;;;;;;;;1300:11368:88;5140:14:22;1300:11368:88;;;4803:1:22;1300:11368:88;;5140:14:22;1300:11368:88;;4977:67:22;-1:-1:-1;;1300:11368:88;;;-1:-1:-1;;;;;;;;;;;1300:11368:88;4977:67:22;;;4849:91;-1:-1:-1;;;4906:23:22;;1300:11368:88;4906:23:22;;4853:30;4870:13;;;4853:30;;;4788:50;4816:4;4808:25;:30;;-1:-1:-1;4788:50:22;;4724:34;;;-1:-1:-1;4724:34:22;;1300:11368:88;;;;;;;;;;;;;;;;;;;;;;;;1548:4;1300:11368;;;;;;;;;;-1:-1:-1;;1300:11368:88;;;;5815:26:20;1300:11368:88;;;;:::i;:::-;5785:18:20;3283:4;5785:18;;-1:-1:-1;1300:11368:88;-1:-1:-1;;;;;;;;;;;1300:11368:88;;4967:24:20;1300:11368:88;-1:-1:-1;1300:11368:88;4967:24:20;1300:11368:88;4807:191:20;;5785:18;3283:4;:::i;:::-;5815:26;:::i;:::-;;1300:11368:88;;;;;;;;;-1:-1:-1;;1300:11368:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6424:19;1300:11368;;6410:10;:33;1300:11368;6457:14;1300:11368;;;;;;;6457:43;;;;1300:11368;6453:96;;;1300:11368;;;;;;:::i;:::-;6424:19;1300:11368;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6742:3;1300:11368;;6688:122;1300:11368;;;;;;;;;;;;6826:46;;1300:11368;;6826:46;;1300:11368;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1300:11368:88;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1300:11368:88;;6826:46;;;;;;;-1:-1:-1;;;;;;1300:11368:88;;-1:-1:-1;6826:46:88;;;;;;;;;;;1300:11368;6825:47;;6821:104;;1300:11368;;;;;;;;;;;7004:23;;;;7047:32;;;;1300:11368;;;;;;;6457:14;1300:11368;;;6457:14;1300:11368;;;;;;;;;;;;;;;;;;;;;7262:22;;;;1300:11368;;7043:335;-1:-1:-1;;;7330:33:88;;1300:11368;;;7330:33;;7000:578;7532:35;1300:11368;;;;;;;;;;;;;;;;;;;;;;7497:15;1300:11368;;;;;;;;;;;;;7532:35;1300:11368;;6821:104;-1:-1:-1;;;6895:19:88;;1300:11368;6895:19;;6826:46;;;1300:11368;6826:46;;1300:11368;6826:46;;;;;;1300:11368;6826:46;;;:::i;:::-;;;1300:11368;;;;;;;;;;;;6826:46;;;;;;-1:-1:-1;6826:46:88;;;1300:11368;;;;;;;;;;;;;;;;-1:-1:-1;1300:11368:88;;;;;;;;;;;;;;-1:-1:-1;;;1300:11368:88;;;;;;;;6453:96;-1:-1:-1;;;6523:15:88;;1300:11368;10659:15;6523;6457:43;6475:25;;;6457:43;;;1300:11368;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1300:11368:88;;;;;;;;;;;;;;;-1:-1:-1;;1300:11368:88;;;;;;;;;;;;12627:18;1300:11368;;;;;;;;;;;;;;;;;;;;;;;;;;4436:19;1300:11368;;;-1:-1:-1;;;;;1300:11368:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;1300:11368:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1300:11368:88;;;;;;;;;;;;;;;;;;;;;;;1608:9;1300:11368;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1300:11368:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;10328:29:88;;1300:11368;10310:14;;1300:11368;;;;;;;;;;-1:-1:-1;;;;;1300:11368:88;10328:29;;;;;;;1300:11368;10328:29;;;1300:11368;10310:47;;;:99;;;;1300:11368;;-1:-1:-1;;;;;;;;;;;1300:11368:88;;10423:32;;;;1300:11368;10419:85;;;10560:19;1300:11368;10593:14;1300:11368;;;;;;10546:10;-1:-1:-1;;;;;1300:11368:88;;;;10546:33;1300:11368;10593:43;;1300:11368;10589:96;;;1300:11368;;;;;;10699:18;1300:11368;;;;;;;;10695:109;;1300:11368;;;;;;;;;;10875:24;;;10871:93;;1300:11368;;;;;;;;;;1608:9;1300:11368;;;;;;;11041:15;:51;11037:115;;11221:92;7772:19:102;1300:11368:88;7772:19:102;;;;1300:11368:88;7772:19:102;;;:::i;:::-;7793:15;;;7724:85;1300:11368:88;7793:15:102;;;;:::i;:::-;1300:11368:88;;;;;;7724:85:102;;;1300:11368:88;7724:85:102;;1300:11368:88;;;;;;;;-1:-1:-1;;;;;1300:11368:88;;;;;;;;;;;;;;;;;;;;7724:85:102;;;;;;;;;;:::i;:::-;1300:11368:88;7714:96:102;;1300:11368:88;7883:111:102;1300:11368:88;;7883:111:102;1300:11368:88;;;;;;;;;;;11221:92;;:::i;:::-;11220:93;11216:151;;1300:11368;;;;10699:18;1300:11368;;;;;;;-1:-1:-1;;1300:11368:88;;;;;11495:15;;-1:-1:-1;;;;;11444:19:88;;;:::i;:::-;1300:11368;11495:15;;:::i;:::-;11428:83;;;;;;1300:11368;;;;;;;;;;;;;;;;;11428:83;;1300:11368;11428:83;;1300:11368;;;;;;;;;;;:::i;:::-;11428:83;;;;;;;;;;1300:11368;11585:19;;11527:78;11585:19;;;1300:11368;11585:19;;:::i;:::-;1300:11368;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1300:11368:88;;;;;11527:78;1300:11368;;11428:83;1300:11368;11428:83;;;;;;1300:11368;11527:78;11428:83;;;:::i;:::-;11585:19;1300:11368;11428:83;;;;;;;;;;1300:11368;;;;;;;;;11428:83;1300:11368;;;11216:151;11336:20;;;1300:11368;11336:20;1300:11368;;11336:20;11037:115;11115:26;;;1300:11368;11115:26;1300:11368;;11115:26;1300:11368;;;;;;;;;;;;10871:93;10922:31;;;;1300:11368;10922:31;1300:11368;;;;10922:31;10695:109;10755:38;;;;1300:11368;10755:38;1300:11368;;;;10755:38;10589:96;10659:15;;;1300:11368;10659:15;1300:11368;;10659:15;10593:43;10611:25;;;10593:43;;;10419:85;2805:15:25;;;1300:11368:88;10478:15;1300:11368;;10478:15;10423:32;10435:20;;;10423:32;;;10310:99;-1:-1:-1;1300:11368:88;;;;-1:-1:-1;;;10379:30:88;;1300:11368;;;;;;;;;-1:-1:-1;;;;;1300:11368:88;10379:30;;;;;;;1300:11368;10379:30;;;10310:99;10361:48;;;10310:99;;10379:30;;;1300:11368;10379:30;;1300:11368;10379:30;;;;;;1300:11368;10379:30;;;:::i;:::-;;;1300:11368;;;;;10379:30;;;;;;-1:-1:-1;10379:30:88;;10328:29;;;1300:11368;10328:29;;1300:11368;10328:29;;;;;;1300:11368;10328:29;;;:::i;:::-;;;1300:11368;;;;;10328:29;;;;;;-1:-1:-1;10328:29:88;;1300:11368;;;;;;-1:-1:-1;;1300:11368:88;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;;;;;;1300:11368:88;;;;;3949:31:20;1300:11368:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1300:11368:88;;;;3283:4:20;;:::i;:::-;-1:-1:-1;;;;;;;;;;;1300:11368:88;;;;2770:61:25;;1548:4:88;1300:11368;;;;;-1:-1:-1;;;;;;;;;;;1300:11368:88;3319:20:25;1300:11368:88;;;966:10:24;1300:11368:88;;3319:20:25;1300:11368:88;;;;;;;-1:-1:-1;;1300:11368:88;;;;;;-1:-1:-1;;;;;;;;;;;1300:11368:88;;;;;;;;;;;;;;;;-1:-1:-1;;1300:11368:88;;;;5090:6:23;-1:-1:-1;;;;;1300:11368:88;5081:4:23;5073:23;5069:145;;1300:11368:88;;;-1:-1:-1;;;;;;;;;;;1300:11368:88;;;5069:145:23;4844:29;;;1300:11368:88;5174:29:23;1300:11368:88;;5174:29:23;1300:11368:88;;;-1:-1:-1;;1300:11368:88;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4667:6:23;1300:11368:88;4658:4:23;4650:23;;;:120;;;;1300:11368:88;4633:251:23;;;966:10:24;1300:11368:88;;;;;;;;;;;;;4516:23:20;4512:108;;1300:11368:88;;-1:-1:-1;;;6131:52:23;;-1:-1:-1;;;;;1300:11368:88;;;;;;;;;6131:52:23;;1300:11368:88;;6131:52:23;;;1300:11368:88;-1:-1:-1;6127:437:23;;1805:47:37;;;;1300:11368:88;6493:60:23;1300:11368:88;;;;6493:60:23;6127:437;6225:40;-1:-1:-1;;;;;;;;;;;6225:40:23;;;6221:120;;1748:29:37;;;:34;1744:119;;-1:-1:-1;;;;;;;;;;;1300:11368:88;;-1:-1:-1;;;;;;1300:11368:88;;;;;2407:36:37;-1:-1:-1;;2407:36:37;1300:11368:88;;2458:15:37;:11;;1300:11368:88;4065:25:51;;4107:55;4065:25;;;;;;1300:11368:88;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;4107:55:51;:::i;:::-;1300:11368:88;;;;4107:55:51;:::i;2454:148:37:-;6163:9;;;;6159:70;;1300:11368:88;6159:70:37;6199:19;;;1300:11368:88;6199:19:37;1300:11368:88;;6199:19:37;1744:119;1805:47;;;1300:11368:88;1805:47:37;1300:11368:88;;;;1805:47:37;6221:120:23;6292:34;;;1300:11368:88;6292:34:23;1300:11368:88;;;;6292:34:23;6131:52;;;;1300:11368:88;6131:52:23;;1300:11368:88;6131:52:23;;;;;;1300:11368:88;6131:52:23;;;:::i;:::-;;;1300:11368:88;;;;;6131:52:23;;;;;;;-1:-1:-1;6131:52:23;;4512:108:20;4562:47;;;1300:11368:88;4562:47:20;966:10:24;1300:11368:88;;;;;;;4562:47:20;4650:120:23;-1:-1:-1;;;;;;;;;;;1300:11368:88;-1:-1:-1;;;;;1300:11368:88;4728:42:23;;;-1:-1:-1;4650:120:23;;;1300:11368:88;;;;;;-1:-1:-1;;1300:11368:88;;;;;;;;8367:21;1300:11368;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1300:11368:88;;;;3283:4:20;;:::i;:::-;-1:-1:-1;;;;;;;;;;;1300:11368:88;;;;2971:9:25;2967:62;;1300:11368:88;;;-1:-1:-1;;;;;;;;;;;1300:11368:88;3627:22:25;1300:11368:88;;;966:10:24;1300:11368:88;;3627:22:25;1300:11368:88;2967:62:25;3003:15;;;1300:11368:88;3003:15:25;1300:11368:88;;3003:15:25;1300:11368:88;;;;;;-1:-1:-1;;1300:11368:88;;;;;;:::i;:::-;966:10:24;-1:-1:-1;;;;;1300:11368:88;;6489:34:20;6485:102;;6597:37;1300:11368:88;;;6597:37:20;:::i;6485:102::-;6546:30;;;1300:11368:88;6546:30:20;1300:11368:88;;6546:30:20;1300:11368:88;;;;;;-1:-1:-1;;1300:11368:88;;;;5398:25:20;1300:11368:88;;;;:::i;:::-;5368:18:20;3283:4;5368:18;;-1:-1:-1;1300:11368:88;-1:-1:-1;;;;;;;;;;;1300:11368:88;;4967:24:20;1300:11368:88;-1:-1:-1;1300:11368:88;4967:24:20;1300:11368:88;4807:191:20;;3283:4;5398:25;:::i;1300:11368:88:-;;;;;;-1:-1:-1;;1300:11368:88;;;;4641:9;1300:11368;;;-1:-1:-1;;;;;1300:11368:88;;;;;;;;;;;;;;-1:-1:-1;;1300:11368:88;;;;;;;;-1:-1:-1;1300:11368:88;-1:-1:-1;;;;;;;;;;;1300:11368:88;;4967:24:20;1300:11368:88;-1:-1:-1;1300:11368:88;4967:24:20;1300:11368:88;4807:191:20;;1300:11368:88;;;;;;;;;;;;;-1:-1:-1;;1300:11368:88;;;;;;:::i;:::-;12026:14;1300:11368;;;;;;;12025:15;12021:78;;12127:19;1300:11368;-1:-1:-1;;;;;1300:11368:88;12113:10;:33;12109:94;;-1:-1:-1;;;;;1300:11368:88;-1:-1:-1;;;;;;1300:11368:88;;;;;12026:14;1300:11368;12295:23;1300:11368;;12295:23;1300:11368;12109:94;12169:23;;;1300:11368;12169:23;1300:11368;;12169:23;12021:78;12063:25;;;1300:11368;12063:25;1300:11368;;12063:25;1300:11368;;;;;;-1:-1:-1;;1300:11368:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1300:11368:88;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3599:47:20;;;:87;;;;1300:11368:88;;;;;;;;;;3599:87:20;-1:-1:-1;;;1101:40:26;;-1:-1:-1;3599:87:20;;;1300:11368:88;;;;;;-1:-1:-1;;1300:11368:88;;;;;;-1:-1:-1;;;;;1300:11368:88;;;;;;;;;;-1:-1:-1;;;;;1300:11368:88;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;1300:11368:88;;;;;;:::o;:::-;;;7724:85:102;;1300:11368:88;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;1300:11368:88;;;;;-1:-1:-1;1300:11368:88;;;;;;;;;-1:-1:-1;;1300:11368:88;;;;:::o;:::-;;-1:-1:-1;;;;;1300:11368:88;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;1300:11368:88;;;;;;;;-1:-1:-1;;1300:11368:88;;;;:::o;4196:103:20:-;966:10:24;-1:-1:-1;1300:11368:88;;;;;;;;;;;;4516:23:20;4512:108;;4196:103::o;4512:108::-;4562:47;;;-1:-1:-1;4562:47:20;966:10:24;4562:47:20;1300:11368:88;1548:4;1300:11368;;;-1:-1:-1;4562:47:20;4196:103;-1:-1:-1;1300:11368:88;;;-1:-1:-1;;;;;;;;;;;1300:11368:88;;;;;;;;966:10:24;1300:11368:88;;;;;;;;;;4516:23:20;4512:108;;4196:103;:::o;4512:108::-;4562:47;;;-1:-1:-1;4562:47:20;966:10:24;4562:47:20;1300:11368:88;;;;-1:-1:-1;4562:47:20;7318:387;-1:-1:-1;;;;;1300:11368:88;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1300:11368:88;;;;;;;;;;;;;-1:-1:-1;;1300:11368:88;;;;;966:10:24;;1300:11368:88;7580:40:20;1300:11368:88;;7580:40:20;7557:4;7634:11;:::o;7480:219::-;7676:12;1300:11368:88;7676:12:20;:::o;7318:387::-;-1:-1:-1;;;;;1300:11368:88;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1300:11368:88;;;;;;;;;;;;;-1:-1:-1;;1300:11368:88;4803:1:22;1300:11368:88;;;;;;966:10:24;;1300:11368:88;7580:40:20;;1300:11368:88;7580:40:20;4803:1:22;7634:11:20;:::o;7318:387::-;1300:11368:88;;;;-1:-1:-1;;;;;;;;;;;1300:11368:88;;;;;;;;-1:-1:-1;;;;;1300:11368:88;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1300:11368:88;;;;;;;;-1:-1:-1;;;;;1300:11368:88;;;;;;;;;;;;;;;-1:-1:-1;;1300:11368:88;;;;;966:10:24;;1300:11368:88;;7580:40:20;;1300:11368:88;7580:40:20;7557:4;7634:11;:::o;7480:219::-;7676:12;;1300:11368:88;7676:12:20;:::o;7942:388::-;1300:11368:88;;;;-1:-1:-1;;;;;;;;;;;1300:11368:88;;;;;;;;-1:-1:-1;;;;;1300:11368:88;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1300:11368:88;;;;;;;;-1:-1:-1;;;;;1300:11368:88;;;;;;;;;;;;;;;-1:-1:-1;;1300:11368:88;;;966:10:24;;1300:11368:88;;8205:40:20;;1300:11368:88;8205:40:20;1300:11368:88;8259:11:20;:::o;1324:381:108:-;;;;;;;1543:27;;;;1539:70;;1300:11368:88;;2296:28:108;;;2450:3;2432:16;;;;;;2469:20;1300:11368:88;;;;;;;2632:1:108;1300:11368:88;;;2789:17:108;:45;;;;2450:3;2785:207;;;889:135:64;1300:11368:88;889:135:64;;;2632:1:108;889:135:64;;1300:11368:88;889:135:64;2785:207:108;;1300:11368:88;;;;;;;;;2450:3:108;1300:11368:88;2417:13:108;;;;;2785:207;889:135:64;;;1300:11368:88;889:135:64;;;2632:1:108;889:135:64;;1300:11368:88;889:135:64;2785:207:108;;;2789:45;1300:11368:88;;2632:1:108;1300:11368:88;;2810:24:108;2789:45;;2432:16;1626:72;;-1:-1:-1;2432:16:108;-1:-1:-1;;;;1324:381:108:o;1539:70::-;1586:12;;;;;;;1300:11368:88;1586:12:108;:::o;7082:141:22:-;1300:11368:88;-1:-1:-1;;;;;;;;;;;1300:11368:88;;;;7148:18:22;7144:73;;7082:141::o;7144:73::-;7189:17;;;-1:-1:-1;7189:17:22;;-1:-1:-1;7189:17:22;4437:582:51;;4609:8;;-1:-1:-1;1300:11368:88;;5690:21:51;:17;;5815:105;;;;;;5686:301;5957:19;;;5710:1;5957:19;;5710:1;5957:19;4605:408;1300:11368:88;;4857:22:51;:49;;;4605:408;4853:119;;4985:17;;:::o;4853:119::-;-1:-1:-1;;;4878:1:51;4933:24;;;-1:-1:-1;;;;;1300:11368:88;;;;4933:24:51;1300:11368:88;;;4933:24:51;4857:49;4883:18;;;:23;4857:49;","linkReferences":{},"immutableReferences":{"40546":[{"start":3289,"length":32},{"start":3497,"length":32}]}},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","PAUSER_ROLE()":"e63ab1e9","PROCESS_MESSAGE_DELAY()":"a8d7a645","UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","disableEmergencyStop(address)":"0eb1a544","emergencyStopAdmin()":"b13f222c","getMerkleRoot(uint256)":"0aab8ba5","getMerkleRootTimestamp(bytes32)":"4610d3aa","getRoleAdmin(bytes32)":"248a9ca3","governanceAdmin()":"0058f6b8","governancePauser()":"c81eb797","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","initialize(address,address,address,address)":"f8c8765e","isEmergencyStopped()":"fddd4837","isProcessed(uint256)":"bfe7edd7","pause()":"8456cb59","paused()":"5c975abb","processMessage(uint256,uint256,uint256,(uint256,bytes32,address,bytes),bytes32[])":"93eb47e9","proxiableUUID()":"52d1902d","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","submitMerkleRoot(uint256,bytes32,bytes)":"cca66a9d","supportsInterface(bytes4)":"01ffc9a7","unpause()":"3f4ba83a","upgradeToAndCall(address,bytes)":"4f1ef286","verifier()":"2b7ac3f3"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmergencyStop\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmergencyStopNotEnabled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMerkleProof\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPlonkProof\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"MerkleRootAlreadySet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MerkleRootDelayNotPassed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"MerkleRootNotFound\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"messageNonce\",\"type\":\"uint256\"}],\"name\":\"MessageAlreadyProcessed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotEmergencyStopAdmin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EmergencyStopDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EmergencyStopEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"MerkleRoot\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"messageNonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"messageDestination\",\"type\":\"address\"}],\"name\":\"MessageProcessed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PROCESS_MESSAGE_DELAY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newVerifier\",\"type\":\"address\"}],\"name\":\"disableEmergencyStop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyStopAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getMerkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"getMerkleRootTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governanceAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governancePauser\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IGovernance\",\"name\":\"governanceAdmin_\",\"type\":\"address\"},{\"internalType\":\"contract IGovernance\",\"name\":\"governancePauser_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"emergencyStopAdmin_\",\"type\":\"address\"},{\"internalType\":\"contract IVerifier\",\"name\":\"verifier_\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isEmergencyStopped\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"messageNonce\",\"type\":\"uint256\"}],\"name\":\"isProcessed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalLeaves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"leafIndex\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"source\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"struct VaraMessage\",\"name\":\"message\",\"type\":\"tuple\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"processMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"}],\"name\":\"submitMerkleRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verifier\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"MessageQueue smart contract is responsible for storing Merkle roots for blocks      that were observed on Vara Network. Before storing Merkle roots, MessageQueue      verifies received Merkle roots with help of Verifier smart contract.      MessageQueue smart contract is also responsible for verifying and processing      received messages originated from Vara Network.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"EmergencyStop()\":[{\"details\":\"Emergency stop status is enabled.\"}],\"EmergencyStopNotEnabled()\":[{\"details\":\"Emergency stop is not enabled.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"InvalidMerkleProof()\":[{\"details\":\"Merkle proof is invalid.\"}],\"InvalidPlonkProof()\":[{\"details\":\"The plonk proof is invalid.\"}],\"MerkleRootAlreadySet(uint256)\":[{\"details\":\"Merkle root is already set.\"}],\"MerkleRootDelayNotPassed()\":[{\"details\":\"Merkle root delay is not passed.\"}],\"MerkleRootNotFound(uint256)\":[{\"details\":\"Merkle root is not found for the block number in MessageQueue smart contract.\"}],\"MessageAlreadyProcessed(uint256)\":[{\"details\":\"Message nonce is already processed.\"}],\"NotEmergencyStopAdmin()\":[{\"details\":\"Caller is not emergency stop admin.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"EmergencyStopDisabled()\":{\"details\":\"Emitted when emergency stop status is disabled.\"},\"EmergencyStopEnabled()\":{\"details\":\"Emitted when emergency stop status is enabled.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"MerkleRoot(uint256,bytes32)\":{\"details\":\"Emitted when block number and merkle root are stored.\"},\"MessageProcessed(uint256,bytes32,uint256,address)\":{\"details\":\"Emitted when message is processed.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"disableEmergencyStop(address)\":{\"details\":\"Disables emergency stop status and sets new verifier.      This function can only be called by emergency stop admin.Reverts if:      - Emergency stop status is not enabled.      - Caller is not emergency stop admin.\",\"params\":{\"newVerifier\":\"New verifier address.\"}},\"emergencyStopAdmin()\":{\"details\":\"Returns emergency stop admin address.\",\"returns\":{\"_0\":\"emergencyStopAdmin Emergency stop admin address.\"}},\"getMerkleRoot(uint256)\":{\"details\":\"Returns merkle root for specified block number.      Returns `bytes32(0)` if merkle root was not provided for specified block number.\",\"params\":{\"blockNumber\":\"Target block number.\"},\"returns\":{\"_0\":\"merkleRoot Merkle root for specified block number.\"}},\"getMerkleRootTimestamp(bytes32)\":{\"details\":\"Returns timestamp when merkle root was set.      Returns `0` if merkle root was not provided for specified block number.\",\"params\":{\"merkleRoot\":\"Target merkle root.\"},\"returns\":{\"_0\":\"timestamp Timestamp when merkle root was set.\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"governanceAdmin()\":{\"details\":\"Returns governance admin address.\",\"returns\":{\"_0\":\"governanceAdmin Governance admin address.\"}},\"governancePauser()\":{\"details\":\"Returns governance pauser address.\",\"returns\":{\"_0\":\"governancePauser Governance pauser address.\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"initialize(address,address,address,address)\":{\"details\":\"Initializes the MessageQueue contract with the Verifier address.      GovernanceAdmin contract is used to upgrade, pause/unpause the MessageQueue contract.      GovernancePauser contract is used to pause/unpause the MessageQueue contract.\",\"params\":{\"emergencyStopAdmin_\":\"The address of EOA (multi-sig) that will control `submitMerkleRoot` and `processMessage`                            in case of an emergency stop. This EOA will be able to disable the emergency stop at                            the same time along with the verifier change.\",\"governanceAdmin_\":\"The address of the GovernanceAdmin contract that will process messages.\",\"governancePauser_\":\"The address of the GovernanceAdmin contract that will process pauser messages.\",\"verifier_\":\"The address of the Verifier contract that will verify merkle roots.\"}},\"isEmergencyStopped()\":{\"details\":\"Returns emergency stop status.\",\"returns\":{\"_0\":\"isEmergencyStopped emergency stop status.\"}},\"isProcessed(uint256)\":{\"details\":\"Checks if message was already processed.\",\"params\":{\"messageNonce\":\"Message nonce to check.\"},\"returns\":{\"_0\":\"isProcessed `true` if message was already processed, `false` otherwise.\"}},\"pause()\":{\"details\":\"Pauses the contract.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"processMessage(uint256,uint256,uint256,(uint256,bytes32,address,bytes),bytes32[])\":{\"details\":\"Verifies and processes message originated from Vara Network.      In this process, MessageQueue smart contract will calculate Merkle root      for message and validate that it corresponds to Merkle root which is already stored      in MessageQueue smart contract for same block number. If proof is correct, nonce of received      message will be stored in smart contract and message will be forwarded to adequate message      processor, either ERC20Manager or Governance smart contract.      Upon successful processing of the message MessageProcessed event is emited.      It is important to note that anyone can submit a message because all messages      will be validated against previously stored Merkle roots in the MessageQueue smart contract.Reverts if:      - MessageQueue is paused and message source is not any governance address.      - MessageQueue emergency stop status is set.      - Message nonce is already processed.      - Merkle root is not set for the block number in MessageQueue smart contract.      - Merkle proof is invalid.      - Message processing fails.\",\"params\":{\"blockNumber\":\"Block number of block containing target merkle tree.\",\"leafIndex\":\"Index of leaf containing target message.\",\"message\":\"Target message.\",\"proof\":\"Merkle proof of inclusion of leaf #`leafIndex` into target merkle tree that              was included into `blockNumber`.\",\"totalLeaves\":\"Number of leaves in target merkle tree.\"}},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"submitMerkleRoot(uint256,bytes32,bytes)\":{\"details\":\"Receives, verifies and stores Merkle roots from Vara Network.      Upon successfully storing data about block number and corresponding Merkle root,      MessageQueue smart contract will emit a `MerkleRoot` event.      It is important to note that anyone can submit a Merkle root because only      validated Merkle roots will be stored in the MessageQueue smart contract.Reverts if emergency stop status is set with `EmergencyStop` error.Reverts if `proof` or `publicInputs` are malformed with `InvalidPlonkProof` error.\",\"params\":{\"blockNumber\":\"Block number on Vara Network.\",\"merkleRoot\":\"Merkle root of transactions included in block with corresponding block number.\",\"proof\":\"Serialised Plonk proof (using gnark's `MarshalSolidity`).\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"unpause()\":{\"details\":\"Unpauses the contract.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"verifier()\":{\"details\":\"Returns verifier address.\",\"returns\":{\"_0\":\"verifier Verifier address.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/MessageQueue.sol\":\"MessageQueue\"},\"debug\":{\"revertStrings\":\"strip\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"appendCBOR\":false,\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":script/=script/\",\":src/=src/\",\":test/=test/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x85a70e2b1b65e9ba456add364d22b97eb9944083df1c39c0b4bd6a4b5aa386a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d32a33be6ca4d8e89b9e82e3f9cec7a6c4e040534152313ff55da85b8f193059\",\"dweb:/ipfs/QmeR55L8t2A8xZ1nvT5y4yVWfFbbmpaGAtGBMz3GGNpuyP\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0xa6bf6b7efe0e6625a9dcd30c5ddf52c4c24fe8372f37c7de9dbf5034746768d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c353ee3705bbf6fadb84c0fb10ef1b736e8ca3ca1867814349d1487ed207beb\",\"dweb:/ipfs/QmcugaPssrzGGE8q4YZKm2ZhnD3kCijjcgdWWg76nWt3FY\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x6694b63ddb2c59bbe341c846171798350e8f72fa02189fcdeaca864e28b54e1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d945d33e2189ac4e531e4ed228f59ca957b3898c4f9051f4b8c7ae44d72b23a\",\"dweb:/ipfs/QmRcEwubTe3xyXxthijs5fVzEgUFSxeddjd5PGfhBnkunX\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xbf2aefe54b76d7f7bcd4f6da1080b7b1662611937d870b880db584d09cea56b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5e7e2f12e0feec75296e57f51f82fdaa8bd1551f4b8cc6560442c0bf60f818c\",\"dweb:/ipfs/QmcW9wDMaQ8RbQibMarfp17a3bABzY5KraWe2YDwuUrUoz\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x82f757819bf2429a0d4db141b99a4bbe5039e4ef86dfb94e2e6d40577ed5b28b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37c30ed931e19fb71fdb806bb504cfdb9913b7127545001b64d4487783374422\",\"dweb:/ipfs/QmUBHpv4hm3ZmwJ4GH8BeVzK4mv41Q6vBbWXxn8HExPXza\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0xa1ad192cd45317c788618bef5cb1fb3ca4ce8b230f6433ac68cc1d850fb81618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b43447bb85a53679d269a403c693b9d88d6c74177dfb35eddca63abaf7cf110a\",\"dweb:/ipfs/QmXSDmpd4bNZj1PDgegr6C4w1jDaWHXCconC3rYiw9TSkQ\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0x20462ddb2665e9521372c76b001d0ce196e59dbbd989de9af5576cad0bd5628b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f417fd12aeec8fbfaceaa30e3a08a0724c0bc39de363e2acf6773c897abbaf6d\",\"dweb:/ipfs/QmU4Hko6sApdweVM92CsiuLKkCk8HfyBeutF89PCTz5Tye\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://032d1201d839435be2c85b72e33206b3ea980c569d6ebf7fa57d811ab580a82f\",\"dweb:/ipfs/QmeqQjAtMvdZT2tG7zm39itcRJkuwu8AEReK6WRnLJ18DD\"]},\"lib/openzeppelin-contracts/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/Hashes.sol\":{\"keccak256\":\"0x8cbd338f083224b4b6f0ff42cbda641a0a6c31ffcdca197452b97fe4d0918269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f517dec5ba0c6491395acbf7f1d621f4e89e8f218bf5303c867b1c5ad70c6b11\",\"dweb:/ipfs/QmWmXHRLEw8W6ckth7NyYTU88YfvuS7xSsfae5ksL8qNUe\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"src/MessageQueue.sol\":{\"keccak256\":\"0xf21f09b93652abc36e7d864ac5a8a9c40f47a24fbc8f3aee8e79c7c444a7c6b7\",\"license\":\"GPL-3.0-or-later WITH Classpath-exception-2.0\",\"urls\":[\"bzz-raw://2a42f83b00fc831ccc661f71e3bad8e910f77f33ec3e56705f1f329d2fdc3291\",\"dweb:/ipfs/QmRRmRYVSLXjwPo9eHg2SdAemtBDYvxPjtE4ojspVC5yWD\"]},\"src/interfaces/IGovernance.sol\":{\"keccak256\":\"0xb880d19a426558ef89a3f4a5ea000a7d8ba0bb402963bbdb6961cb6ddf4afe66\",\"license\":\"GPL-3.0-or-later WITH Classpath-exception-2.0\",\"urls\":[\"bzz-raw://7ce0a7c7319f0337d1af8af13000f93399c4f99ab649d2eb7fab4fc327e4b2a2\",\"dweb:/ipfs/QmXi8cHWd7yqeB2ur1tVe65jCKgzA3JeJtr5cswszthqsu\"]},\"src/interfaces/IMessageHandler.sol\":{\"keccak256\":\"0xdd5b8224c958a8275b4ea8478d3cf027facb032997a3cafa4c400cd8d231fdb9\",\"license\":\"GPL-3.0-or-later WITH Classpath-exception-2.0\",\"urls\":[\"bzz-raw://a5cf746eef9be910603ae0020c64cec73c687d3c657b3fbe916c6f99968b85e8\",\"dweb:/ipfs/QmTM3Pwf8PaH8PMRTtho78NQVbXbrm6pRsvbGN7TMDPNAq\"]},\"src/interfaces/IMessageQueue.sol\":{\"keccak256\":\"0x0d06ac22fcdc8fd63b3b012703a67ae57b4ccee161df106c746b32bcecd9b795\",\"license\":\"GPL-3.0-or-later WITH Classpath-exception-2.0\",\"urls\":[\"bzz-raw://47314d496c6010aa89fb48fc1a23419d120d15dc62553f56d88072e7a0965740\",\"dweb:/ipfs/QmRuNPtYN5fj7eGPFBvfh7VouccaJrJXFZMqz41JciMJZP\"]},\"src/interfaces/IPausable.sol\":{\"keccak256\":\"0x6d3c910562c9049a3a8e59d148623d37b546b6557563c8c202305864703f4394\",\"license\":\"GPL-3.0-or-later WITH Classpath-exception-2.0\",\"urls\":[\"bzz-raw://6e907b1040394cf61f68f7cedc3ce7f0572fb0efa1803afee6e266b83c0f8298\",\"dweb:/ipfs/QmeWZWAJN3m9yA7fWWAyuEzwTxvVfW5yRPbZmZMixGUoZq\"]},\"src/interfaces/IVerifier.sol\":{\"keccak256\":\"0x6926e4a42dfd668108fe3753fb7d3bf54f311b8247802ee95ef205a2e58d944e\",\"license\":\"GPL-3.0-or-later WITH Classpath-exception-2.0\",\"urls\":[\"bzz-raw://bed632769b05b8578d430e9501dae8a3790b35738210079805cd6f0caefea272\",\"dweb:/ipfs/QmaY6f7ZgR782CUA96ECV2P7b4Daf9SzfFSqME8Beb5RLR\"]},\"src/libraries/BinaryMerkleTree.sol\":{\"keccak256\":\"0xe34833802d6ab38c095b3ee72aff9eae954ffcc7e1e39c20db539d71ba0ba971\",\"license\":\"GPL-3.0-or-later WITH Classpath-exception-2.0\",\"urls\":[\"bzz-raw://920723fdcb08b39373daa9f0cd63c7c47f434d389f84d29323054dbcb42f7230\",\"dweb:/ipfs/QmdULduKN8bc9UrEXAaTAiAHWpE1E3jjVXx3pidd1wxesD\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.30+commit.73712a01"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"type":"error","name":"AccessControlBadConfirmation"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"type":"error","name":"AccessControlUnauthorizedAccount"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"type":"error","name":"AddressEmptyCode"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"type":"error","name":"ERC1967InvalidImplementation"},{"inputs":[],"type":"error","name":"ERC1967NonPayable"},{"inputs":[],"type":"error","name":"EmergencyStop"},{"inputs":[],"type":"error","name":"EmergencyStopNotEnabled"},{"inputs":[],"type":"error","name":"EnforcedPause"},{"inputs":[],"type":"error","name":"ExpectedPause"},{"inputs":[],"type":"error","name":"FailedCall"},{"inputs":[],"type":"error","name":"InvalidInitialization"},{"inputs":[],"type":"error","name":"InvalidMerkleProof"},{"inputs":[],"type":"error","name":"InvalidPlonkProof"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"type":"error","name":"MerkleRootAlreadySet"},{"inputs":[],"type":"error","name":"MerkleRootDelayNotPassed"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"type":"error","name":"MerkleRootNotFound"},{"inputs":[{"internalType":"uint256","name":"messageNonce","type":"uint256"}],"type":"error","name":"MessageAlreadyProcessed"},{"inputs":[],"type":"error","name":"NotEmergencyStopAdmin"},{"inputs":[],"type":"error","name":"NotInitializing"},{"inputs":[],"type":"error","name":"UUPSUnauthorizedCallContext"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"type":"error","name":"UUPSUnsupportedProxiableUUID"},{"inputs":[],"type":"event","name":"EmergencyStopDisabled","anonymous":false},{"inputs":[],"type":"event","name":"EmergencyStopEnabled","anonymous":false},{"inputs":[{"internalType":"uint64","name":"version","type":"uint64","indexed":false}],"type":"event","name":"Initialized","anonymous":false},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256","indexed":false},{"internalType":"bytes32","name":"merkleRoot","type":"bytes32","indexed":false}],"type":"event","name":"MerkleRoot","anonymous":false},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256","indexed":false},{"internalType":"bytes32","name":"messageHash","type":"bytes32","indexed":false},{"internalType":"uint256","name":"messageNonce","type":"uint256","indexed":false},{"internalType":"address","name":"messageDestination","type":"address","indexed":false}],"type":"event","name":"MessageProcessed","anonymous":false},{"inputs":[{"internalType":"address","name":"account","type":"address","indexed":false}],"type":"event","name":"Paused","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32","indexed":true},{"internalType":"bytes32","name":"previousAdminRole","type":"bytes32","indexed":true},{"internalType":"bytes32","name":"newAdminRole","type":"bytes32","indexed":true}],"type":"event","name":"RoleAdminChanged","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32","indexed":true},{"internalType":"address","name":"account","type":"address","indexed":true},{"internalType":"address","name":"sender","type":"address","indexed":true}],"type":"event","name":"RoleGranted","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32","indexed":true},{"internalType":"address","name":"account","type":"address","indexed":true},{"internalType":"address","name":"sender","type":"address","indexed":true}],"type":"event","name":"RoleRevoked","anonymous":false},{"inputs":[{"internalType":"address","name":"account","type":"address","indexed":false}],"type":"event","name":"Unpaused","anonymous":false},{"inputs":[{"internalType":"address","name":"implementation","type":"address","indexed":true}],"type":"event","name":"Upgraded","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"PAUSER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"PROCESS_MESSAGE_DELAY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"address","name":"newVerifier","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"disableEmergencyStop"},{"inputs":[],"stateMutability":"view","type":"function","name":"emergencyStopAdmin","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"view","type":"function","name":"getMerkleRoot","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"bytes32","name":"merkleRoot","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getMerkleRootTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"governanceAdmin","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"governancePauser","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"grantRole"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"contract IGovernance","name":"governanceAdmin_","type":"address"},{"internalType":"contract IGovernance","name":"governancePauser_","type":"address"},{"internalType":"address","name":"emergencyStopAdmin_","type":"address"},{"internalType":"contract IVerifier","name":"verifier_","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"initialize"},{"inputs":[],"stateMutability":"view","type":"function","name":"isEmergencyStopped","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"messageNonce","type":"uint256"}],"stateMutability":"view","type":"function","name":"isProcessed","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"pause"},{"inputs":[],"stateMutability":"view","type":"function","name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"uint256","name":"totalLeaves","type":"uint256"},{"internalType":"uint256","name":"leafIndex","type":"uint256"},{"internalType":"struct VaraMessage","name":"message","type":"tuple","components":[{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes32","name":"source","type":"bytes32"},{"internalType":"address","name":"destination","type":"address"},{"internalType":"bytes","name":"payload","type":"bytes"}]},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"processMessage"},{"inputs":[],"stateMutability":"view","type":"function","name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"renounceRole"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"revokeRole"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"bytes32","name":"merkleRoot","type":"bytes32"},{"internalType":"bytes","name":"proof","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"submitMerkleRoot"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"stateMutability":"view","type":"function","name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"unpause"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"payable","type":"function","name":"upgradeToAndCall"},{"inputs":[],"stateMutability":"view","type":"function","name":"verifier","outputs":[{"internalType":"address","name":"","type":"address"}]}],"devdoc":{"kind":"dev","methods":{"constructor":{"custom:oz-upgrades-unsafe-allow":"constructor"},"disableEmergencyStop(address)":{"details":"Disables emergency stop status and sets new verifier.      This function can only be called by emergency stop admin.Reverts if:      - Emergency stop status is not enabled.      - Caller is not emergency stop admin.","params":{"newVerifier":"New verifier address."}},"emergencyStopAdmin()":{"details":"Returns emergency stop admin address.","returns":{"_0":"emergencyStopAdmin Emergency stop admin address."}},"getMerkleRoot(uint256)":{"details":"Returns merkle root for specified block number.      Returns `bytes32(0)` if merkle root was not provided for specified block number.","params":{"blockNumber":"Target block number."},"returns":{"_0":"merkleRoot Merkle root for specified block number."}},"getMerkleRootTimestamp(bytes32)":{"details":"Returns timestamp when merkle root was set.      Returns `0` if merkle root was not provided for specified block number.","params":{"merkleRoot":"Target merkle root."},"returns":{"_0":"timestamp Timestamp when merkle root was set."}},"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"governanceAdmin()":{"details":"Returns governance admin address.","returns":{"_0":"governanceAdmin Governance admin address."}},"governancePauser()":{"details":"Returns governance pauser address.","returns":{"_0":"governancePauser Governance pauser address."}},"grantRole(bytes32,address)":{"details":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"initialize(address,address,address,address)":{"details":"Initializes the MessageQueue contract with the Verifier address.      GovernanceAdmin contract is used to upgrade, pause/unpause the MessageQueue contract.      GovernancePauser contract is used to pause/unpause the MessageQueue contract.","params":{"emergencyStopAdmin_":"The address of EOA (multi-sig) that will control `submitMerkleRoot` and `processMessage`                            in case of an emergency stop. This EOA will be able to disable the emergency stop at                            the same time along with the verifier change.","governanceAdmin_":"The address of the GovernanceAdmin contract that will process messages.","governancePauser_":"The address of the GovernanceAdmin contract that will process pauser messages.","verifier_":"The address of the Verifier contract that will verify merkle roots."}},"isEmergencyStopped()":{"details":"Returns emergency stop status.","returns":{"_0":"isEmergencyStopped emergency stop status."}},"isProcessed(uint256)":{"details":"Checks if message was already processed.","params":{"messageNonce":"Message nonce to check."},"returns":{"_0":"isProcessed `true` if message was already processed, `false` otherwise."}},"pause()":{"details":"Pauses the contract."},"paused()":{"details":"Returns true if the contract is paused, and false otherwise."},"processMessage(uint256,uint256,uint256,(uint256,bytes32,address,bytes),bytes32[])":{"details":"Verifies and processes message originated from Vara Network.      In this process, MessageQueue smart contract will calculate Merkle root      for message and validate that it corresponds to Merkle root which is already stored      in MessageQueue smart contract for same block number. If proof is correct, nonce of received      message will be stored in smart contract and message will be forwarded to adequate message      processor, either ERC20Manager or Governance smart contract.      Upon successful processing of the message MessageProcessed event is emited.      It is important to note that anyone can submit a message because all messages      will be validated against previously stored Merkle roots in the MessageQueue smart contract.Reverts if:      - MessageQueue is paused and message source is not any governance address.      - MessageQueue emergency stop status is set.      - Message nonce is already processed.      - Merkle root is not set for the block number in MessageQueue smart contract.      - Merkle proof is invalid.      - Message processing fails.","params":{"blockNumber":"Block number of block containing target merkle tree.","leafIndex":"Index of leaf containing target message.","message":"Target message.","proof":"Merkle proof of inclusion of leaf #`leafIndex` into target merkle tree that              was included into `blockNumber`.","totalLeaves":"Number of leaves in target merkle tree."}},"proxiableUUID()":{"details":"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."},"revokeRole(bytes32,address)":{"details":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."},"submitMerkleRoot(uint256,bytes32,bytes)":{"details":"Receives, verifies and stores Merkle roots from Vara Network.      Upon successfully storing data about block number and corresponding Merkle root,      MessageQueue smart contract will emit a `MerkleRoot` event.      It is important to note that anyone can submit a Merkle root because only      validated Merkle roots will be stored in the MessageQueue smart contract.Reverts if emergency stop status is set with `EmergencyStop` error.Reverts if `proof` or `publicInputs` are malformed with `InvalidPlonkProof` error.","params":{"blockNumber":"Block number on Vara Network.","merkleRoot":"Merkle root of transactions included in block with corresponding block number.","proof":"Serialised Plonk proof (using gnark's `MarshalSolidity`)."}},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"unpause()":{"details":"Unpauses the contract."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."},"verifier()":{"details":"Returns verifier address.","returns":{"_0":"verifier Verifier address."}}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/","script/=script/","src/=src/","test/=test/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"none","appendCBOR":false},"compilationTarget":{"src/MessageQueue.sol":"MessageQueue"},"evmVersion":"prague","libraries":{},"viaIR":true},"sources":{"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol":{"keccak256":"0x85a70e2b1b65e9ba456add364d22b97eb9944083df1c39c0b4bd6a4b5aa386a4","urls":["bzz-raw://d32a33be6ca4d8e89b9e82e3f9cec7a6c4e040534152313ff55da85b8f193059","dweb:/ipfs/QmeR55L8t2A8xZ1nvT5y4yVWfFbbmpaGAtGBMz3GGNpuyP"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol":{"keccak256":"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05","urls":["bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08","dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol":{"keccak256":"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63","urls":["bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec","dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol":{"keccak256":"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397","urls":["bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9","dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol":{"keccak256":"0xa6bf6b7efe0e6625a9dcd30c5ddf52c4c24fe8372f37c7de9dbf5034746768d5","urls":["bzz-raw://8c353ee3705bbf6fadb84c0fb10ef1b736e8ca3ca1867814349d1487ed207beb","dweb:/ipfs/QmcugaPssrzGGE8q4YZKm2ZhnD3kCijjcgdWWg76nWt3FY"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol":{"keccak256":"0x6694b63ddb2c59bbe341c846171798350e8f72fa02189fcdeaca864e28b54e1f","urls":["bzz-raw://7d945d33e2189ac4e531e4ed228f59ca957b3898c4f9051f4b8c7ae44d72b23a","dweb:/ipfs/QmRcEwubTe3xyXxthijs5fVzEgUFSxeddjd5PGfhBnkunX"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol":{"keccak256":"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c","urls":["bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d","dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol":{"keccak256":"0xbf2aefe54b76d7f7bcd4f6da1080b7b1662611937d870b880db584d09cea56b5","urls":["bzz-raw://f5e7e2f12e0feec75296e57f51f82fdaa8bd1551f4b8cc6560442c0bf60f818c","dweb:/ipfs/QmcW9wDMaQ8RbQibMarfp17a3bABzY5KraWe2YDwuUrUoz"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol":{"keccak256":"0x82f757819bf2429a0d4db141b99a4bbe5039e4ef86dfb94e2e6d40577ed5b28b","urls":["bzz-raw://37c30ed931e19fb71fdb806bb504cfdb9913b7127545001b64d4487783374422","dweb:/ipfs/QmUBHpv4hm3ZmwJ4GH8BeVzK4mv41Q6vBbWXxn8HExPXza"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol":{"keccak256":"0xa1ad192cd45317c788618bef5cb1fb3ca4ce8b230f6433ac68cc1d850fb81618","urls":["bzz-raw://b43447bb85a53679d269a403c693b9d88d6c74177dfb35eddca63abaf7cf110a","dweb:/ipfs/QmXSDmpd4bNZj1PDgegr6C4w1jDaWHXCconC3rYiw9TSkQ"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol":{"keccak256":"0x20462ddb2665e9521372c76b001d0ce196e59dbbd989de9af5576cad0bd5628b","urls":["bzz-raw://f417fd12aeec8fbfaceaa30e3a08a0724c0bc39de363e2acf6773c897abbaf6d","dweb:/ipfs/QmU4Hko6sApdweVM92CsiuLKkCk8HfyBeutF89PCTz5Tye"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Address.sol":{"keccak256":"0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0","urls":["bzz-raw://032d1201d839435be2c85b72e33206b3ea980c569d6ebf7fa57d811ab580a82f","dweb:/ipfs/QmeqQjAtMvdZT2tG7zm39itcRJkuwu8AEReK6WRnLJ18DD"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Errors.sol":{"keccak256":"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123","urls":["bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf","dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol":{"keccak256":"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97","urls":["bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b","dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/cryptography/Hashes.sol":{"keccak256":"0x8cbd338f083224b4b6f0ff42cbda641a0a6c31ffcdca197452b97fe4d0918269","urls":["bzz-raw://f517dec5ba0c6491395acbf7f1d621f4e89e8f218bf5303c867b1c5ad70c6b11","dweb:/ipfs/QmWmXHRLEw8W6ckth7NyYTU88YfvuS7xSsfae5ksL8qNUe"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol":{"keccak256":"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c","urls":["bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617","dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u"],"license":"MIT"},"src/MessageQueue.sol":{"keccak256":"0xf21f09b93652abc36e7d864ac5a8a9c40f47a24fbc8f3aee8e79c7c444a7c6b7","urls":["bzz-raw://2a42f83b00fc831ccc661f71e3bad8e910f77f33ec3e56705f1f329d2fdc3291","dweb:/ipfs/QmRRmRYVSLXjwPo9eHg2SdAemtBDYvxPjtE4ojspVC5yWD"],"license":"GPL-3.0-or-later WITH Classpath-exception-2.0"},"src/interfaces/IGovernance.sol":{"keccak256":"0xb880d19a426558ef89a3f4a5ea000a7d8ba0bb402963bbdb6961cb6ddf4afe66","urls":["bzz-raw://7ce0a7c7319f0337d1af8af13000f93399c4f99ab649d2eb7fab4fc327e4b2a2","dweb:/ipfs/QmXi8cHWd7yqeB2ur1tVe65jCKgzA3JeJtr5cswszthqsu"],"license":"GPL-3.0-or-later WITH Classpath-exception-2.0"},"src/interfaces/IMessageHandler.sol":{"keccak256":"0xdd5b8224c958a8275b4ea8478d3cf027facb032997a3cafa4c400cd8d231fdb9","urls":["bzz-raw://a5cf746eef9be910603ae0020c64cec73c687d3c657b3fbe916c6f99968b85e8","dweb:/ipfs/QmTM3Pwf8PaH8PMRTtho78NQVbXbrm6pRsvbGN7TMDPNAq"],"license":"GPL-3.0-or-later WITH Classpath-exception-2.0"},"src/interfaces/IMessageQueue.sol":{"keccak256":"0x0d06ac22fcdc8fd63b3b012703a67ae57b4ccee161df106c746b32bcecd9b795","urls":["bzz-raw://47314d496c6010aa89fb48fc1a23419d120d15dc62553f56d88072e7a0965740","dweb:/ipfs/QmRuNPtYN5fj7eGPFBvfh7VouccaJrJXFZMqz41JciMJZP"],"license":"GPL-3.0-or-later WITH Classpath-exception-2.0"},"src/interfaces/IPausable.sol":{"keccak256":"0x6d3c910562c9049a3a8e59d148623d37b546b6557563c8c202305864703f4394","urls":["bzz-raw://6e907b1040394cf61f68f7cedc3ce7f0572fb0efa1803afee6e266b83c0f8298","dweb:/ipfs/QmeWZWAJN3m9yA7fWWAyuEzwTxvVfW5yRPbZmZMixGUoZq"],"license":"GPL-3.0-or-later WITH Classpath-exception-2.0"},"src/interfaces/IVerifier.sol":{"keccak256":"0x6926e4a42dfd668108fe3753fb7d3bf54f311b8247802ee95ef205a2e58d944e","urls":["bzz-raw://bed632769b05b8578d430e9501dae8a3790b35738210079805cd6f0caefea272","dweb:/ipfs/QmaY6f7ZgR782CUA96ECV2P7b4Daf9SzfFSqME8Beb5RLR"],"license":"GPL-3.0-or-later WITH Classpath-exception-2.0"},"src/libraries/BinaryMerkleTree.sol":{"keccak256":"0xe34833802d6ab38c095b3ee72aff9eae954ffcc7e1e39c20db539d71ba0ba971","urls":["bzz-raw://920723fdcb08b39373daa9f0cd63c7c47f434d389f84d29323054dbcb42f7230","dweb:/ipfs/QmdULduKN8bc9UrEXAaTAiAHWpE1E3jjVXx3pidd1wxesD"],"license":"GPL-3.0-or-later WITH Classpath-exception-2.0"}},"version":1},"storageLayout":{"storage":[{"astId":61915,"contract":"src/MessageQueue.sol:MessageQueue","label":"_governanceAdmin","offset":0,"slot":"0","type":"t_contract(IGovernance)63462"},{"astId":61918,"contract":"src/MessageQueue.sol:MessageQueue","label":"_governancePauser","offset":0,"slot":"1","type":"t_contract(IGovernance)63462"},{"astId":61920,"contract":"src/MessageQueue.sol:MessageQueue","label":"_emergencyStopAdmin","offset":0,"slot":"2","type":"t_address"},{"astId":61923,"contract":"src/MessageQueue.sol:MessageQueue","label":"_verifier","offset":0,"slot":"3","type":"t_contract(IVerifier)63882"},{"astId":61925,"contract":"src/MessageQueue.sol:MessageQueue","label":"_emergencyStop","offset":20,"slot":"3","type":"t_bool"},{"astId":61929,"contract":"src/MessageQueue.sol:MessageQueue","label":"_blockNumbers","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_bytes32)"},{"astId":61933,"contract":"src/MessageQueue.sol:MessageQueue","label":"_merkleRootTimestamps","offset":0,"slot":"5","type":"t_mapping(t_bytes32,t_uint256)"},{"astId":61937,"contract":"src/MessageQueue.sol:MessageQueue","label":"_processedMessages","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_bool)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_contract(IGovernance)63462":{"encoding":"inplace","label":"contract IGovernance","numberOfBytes":"20"},"t_contract(IVerifier)63882":{"encoding":"inplace","label":"contract IVerifier","numberOfBytes":"20"},"t_mapping(t_bytes32,t_uint256)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_bool)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_uint256,t_bytes32)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => bytes32)","numberOfBytes":"32","value":"t_bytes32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"irOptimized":"/// @use-src 20:\"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol\", 22:\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\", 23:\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\", 24:\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\", 25:\"lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol\", 26:\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\", 27:\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\", 34:\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\", 66:\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\", 88:\"src/MessageQueue.sol\", 102:\"src/interfaces/IMessageQueue.sol\", 103:\"src/interfaces/IPausable.sol\"\nobject \"MessageQueue_62481\" {\n    code {\n        {\n            /// @src 88:1300:12668  \"contract MessageQueue is...\"\n            let _1 := memoryguard(0xa0)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            /// @src 23:1163:1176  \"address(this)\"\n            mstore(128, /** @src 23:1171:1175  \"this\" */ address())\n            /// @src 88:1300:12668  \"contract MessageQueue is...\"\n            let _2 := sload(/** @src 22:3147:3213  \"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\" */ 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00)\n            /// @src 22:7894:7970  \"if ($._initializing) {...\"\n            if /** @src 88:1300:12668  \"contract MessageQueue is...\" */ and(shr(64, _2), 0xff)\n            /// @src 22:7894:7970  \"if ($._initializing) {...\"\n            {\n                /// @src 22:7936:7959  \"InvalidInitialization()\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 22:7936:7959  \"InvalidInitialization()\" */ shl(224, 0xf92ee8a9))\n                revert(/** @src -1:-1:-1 */ 0, /** @src 22:7936:7959  \"InvalidInitialization()\" */ 4)\n            }\n            /// @src 22:7979:8125  \"if ($._initialized != type(uint64).max) {...\"\n            if /** @src 22:7983:8017  \"$._initialized != type(uint64).max\" */ iszero(eq(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ and(_2, sub(shl(64, 1), 1)), sub(shl(64, 1), 1)))\n            /// @src 22:7979:8125  \"if ($._initialized != type(uint64).max) {...\"\n            {\n                /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                sstore(/** @src 22:3147:3213  \"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\" */ 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ or(and(_2, not(sub(shl(64, 1), 1))), sub(shl(64, 1), 1)))\n                mstore(_1, sub(shl(64, 1), 1))\n                /// @src 22:8085:8114  \"Initialized(type(uint64).max)\"\n                log1(_1, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 32, /** @src 22:8085:8114  \"Initialized(type(uint64).max)\" */ 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2)\n            }\n            /// @src 88:1300:12668  \"contract MessageQueue is...\"\n            let _3 := mload(64)\n            let _4 := datasize(\"MessageQueue_62481_deployed\")\n            codecopy(_3, dataoffset(\"MessageQueue_62481_deployed\"), _4)\n            setimmutable(_3, \"40546\", mload(/** @src 23:1163:1176  \"address(this)\" */ 128))\n            /// @src 88:1300:12668  \"contract MessageQueue is...\"\n            return(_3, _4)\n        }\n    }\n    /// @use-src 20:\"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol\", 22:\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\", 23:\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\", 24:\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\", 25:\"lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol\", 26:\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\", 37:\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\", 51:\"lib/openzeppelin-contracts/contracts/utils/Address.sol\", 60:\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\", 64:\"lib/openzeppelin-contracts/contracts/utils/cryptography/Hashes.sol\", 88:\"src/MessageQueue.sol\", 102:\"src/interfaces/IMessageQueue.sol\", 108:\"src/libraries/BinaryMerkleTree.sol\"\n    object \"MessageQueue_62481_deployed\" {\n        code {\n            {\n                /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _2 := 0\n                    switch shr(224, calldataload(0))\n                    case 0x0058f6b8 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        mstore(_1, and(sload(0), sub(shl(160, 1), 1)))\n                        return(_1, 32)\n                    }\n                    case 0x01ffc9a7 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value := calldataload(4)\n                        let _3 := and(value, shl(224, 0xffffffff))\n                        if iszero(eq(value, _3)) { revert(0, 0) }\n                        /// @src 20:3599:3686  \"interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId)\"\n                        let expr := /** @src 20:3599:3646  \"interfaceId == type(IAccessControl).interfaceId\" */ eq(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ _3, /** @src 20:3614:3646  \"type(IAccessControl).interfaceId\" */ shl(224, 0x7965db0b))\n                        /// @src 20:3599:3686  \"interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId)\"\n                        if iszero(expr)\n                        {\n                            expr := /** @src 26:1101:1141  \"interfaceId == type(IERC165).interfaceId\" */ eq(_3, /** @src 26:1116:1141  \"type(IERC165).interfaceId\" */ shl(224, 0x01ffc9a7))\n                        }\n                        /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                        let memPos := mload(64)\n                        mstore(memPos, iszero(iszero(expr)))\n                        return(memPos, 32)\n                    }\n                    case 0x0aab8ba5 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, calldataload(4))\n                        mstore(32, 4)\n                        let _4 := sload(keccak256(0, 64))\n                        let memPos_1 := mload(64)\n                        mstore(memPos_1, _4)\n                        return(memPos_1, 32)\n                    }\n                    case 0x0eb1a544 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value0 := abi_decode_t_address()\n                        let _5 := sload(/** @src 88:12026:12040  \"_emergencyStop\" */ 0x03)\n                        /// @src 88:12021:12099  \"if (!_emergencyStop) {...\"\n                        if /** @src 88:12025:12040  \"!_emergencyStop\" */ iszero(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ and(shr(160, _5), 0xff))\n                        /// @src 88:12021:12099  \"if (!_emergencyStop) {...\"\n                        {\n                            /// @src 88:12063:12088  \"EmergencyStopNotEnabled()\"\n                            mstore(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0, /** @src 88:12063:12088  \"EmergencyStopNotEnabled()\" */ shl(227, 0x194ad54d))\n                            revert(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0, 4)\n                        }\n                        /// @src 88:12109:12203  \"if (msg.sender != _emergencyStopAdmin) {...\"\n                        if /** @src 88:12113:12146  \"msg.sender != _emergencyStopAdmin\" */ iszero(eq(/** @src 88:12113:12123  \"msg.sender\" */ caller(), /** @src 88:1300:12668  \"contract MessageQueue is...\" */ and(sload(/** @src 88:12127:12146  \"_emergencyStopAdmin\" */ 0x02), /** @src 88:1300:12668  \"contract MessageQueue is...\" */ sub(shl(160, 1), 1))))\n                        /// @src 88:12109:12203  \"if (msg.sender != _emergencyStopAdmin) {...\"\n                        {\n                            /// @src 88:12169:12192  \"NotEmergencyStopAdmin()\"\n                            mstore(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0, /** @src 88:12169:12192  \"NotEmergencyStopAdmin()\" */ shl(224, 0x662cadb5))\n                            revert(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0, 4)\n                        }\n                        sstore(/** @src 88:12026:12040  \"_emergencyStop\" */ 0x03, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ or(and(_5, shl(168, 0xffffffffffffffffffffff)), and(/** @src 88:12257:12279  \"IVerifier(newVerifier)\" */ value0, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ sub(shl(160, 1), 1))))\n                        /// @src 88:12295:12318  \"EmergencyStopDisabled()\"\n                        log1(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0, 0, /** @src 88:12295:12318  \"EmergencyStopDisabled()\" */ 0x733865ee5918bf41dfad0ca1d8ddaa4c1d18103ae3d21e7436828b52762b87e0)\n                        /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                        return(0, 0)\n                    }\n                    case 0x248a9ca3 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let ret := fun_getRoleAdmin(calldataload(4))\n                        let memPos_2 := mload(64)\n                        mstore(memPos_2, ret)\n                        return(memPos_2, 32)\n                    }\n                    case 0x2b7ac3f3 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let cleaned := and(sload(/** @src 88:4641:4650  \"_verifier\" */ 0x03), /** @src 88:1300:12668  \"contract MessageQueue is...\" */ sub(shl(160, 1), 1))\n                        let memPos_3 := mload(64)\n                        mstore(memPos_3, cleaned)\n                        return(memPos_3, 32)\n                    }\n                    case 0x2f2ff15d {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value_1 := calldataload(4)\n                        let value1 := abi_decode_address()\n                        /// @src 20:3283:3287  \"role\"\n                        fun__checkRole(/** @src 20:5368:5386  \"getRoleAdmin(role)\" */ fun_getRoleAdmin(value_1))\n                        /// @src 20:5398:5423  \"_grantRole(role, account)\"\n                        pop(fun_grantRole_40016(value_1, value1))\n                        /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                        return(0, 0)\n                    }\n                    case 0x36568abe {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value1_1 := abi_decode_address()\n                        /// @src 20:6485:6587  \"if (callerConfirmation != _msgSender()) {...\"\n                        if /** @src 20:6489:6523  \"callerConfirmation != _msgSender()\" */ iszero(eq(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ and(/** @src 20:6489:6523  \"callerConfirmation != _msgSender()\" */ value1_1, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ sub(shl(160, 1), 1)), /** @src 24:966:976  \"msg.sender\" */ caller()))\n                        /// @src 20:6485:6587  \"if (callerConfirmation != _msgSender()) {...\"\n                        {\n                            /// @src 20:6546:6576  \"AccessControlBadConfirmation()\"\n                            mstore(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0, /** @src 20:6546:6576  \"AccessControlBadConfirmation()\" */ shl(225, 0x334bd919))\n                            revert(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0, 4)\n                        }\n                        /// @src 20:6597:6634  \"_revokeRole(role, callerConfirmation)\"\n                        pop(fun_revokeRole(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ calldataload(4), /** @src 20:6597:6634  \"_revokeRole(role, callerConfirmation)\" */ value1_1))\n                        /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                        return(0, 0)\n                    }\n                    case 0x3f4ba83a {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 20:3283:3287  \"role\"\n                        fun_checkRole()\n                        /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                        let _6 := sload(/** @src 25:1237:1303  \"assembly {...\" */ 92891662540554778686986514950364265630913525426840345632122912437671245656832)\n                        /// @src 25:2967:3029  \"if (!paused()) {...\"\n                        if /** @src 25:2971:2980  \"!paused()\" */ iszero(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ and(_6, 0xff))\n                        /// @src 25:2967:3029  \"if (!paused()) {...\"\n                        {\n                            /// @src 25:3003:3018  \"ExpectedPause()\"\n                            mstore(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0, /** @src 25:3003:3018  \"ExpectedPause()\" */ shl(224, 0x8dfc202b))\n                            revert(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0, 4)\n                        }\n                        sstore(/** @src 25:1237:1303  \"assembly {...\" */ 92891662540554778686986514950364265630913525426840345632122912437671245656832, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ and(_6, not(255)))\n                        /// @src 25:3627:3649  \"Unpaused(_msgSender())\"\n                        let _7 := /** @src 88:1300:12668  \"contract MessageQueue is...\" */ mload(64)\n                        mstore(_7, /** @src 24:966:976  \"msg.sender\" */ caller())\n                        /// @src 25:3627:3649  \"Unpaused(_msgSender())\"\n                        log1(_7, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 32, /** @src 25:3627:3649  \"Unpaused(_msgSender())\" */ 0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa)\n                        /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                        return(0, 0)\n                    }\n                    case 0x4610d3aa {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, calldataload(4))\n                        mstore(32, /** @src 88:8367:8388  \"_merkleRootTimestamps\" */ 0x05)\n                        /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                        let _8 := sload(keccak256(0, 64))\n                        let memPos_4 := mload(64)\n                        mstore(memPos_4, _8)\n                        return(memPos_4, 32)\n                    }\n                    case 0x4f1ef286 {\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0_1 := abi_decode_t_address()\n                        let offset := calldataload(36)\n                        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n                        if iszero(slt(add(offset, 35), calldatasize())) { revert(0, 0) }\n                        let length := calldataload(add(4, offset))\n                        let _9 := array_allocation_size_bytes(length)\n                        let memPtr := mload(64)\n                        finalize_allocation(memPtr, _9)\n                        mstore(memPtr, length)\n                        let dst := add(memPtr, 32)\n                        if gt(add(add(offset, length), 36), calldatasize()) { revert(0, 0) }\n                        calldatacopy(dst, add(offset, 36), length)\n                        mstore(add(add(memPtr, length), 32), 0)\n                        /// @src 23:4650:4673  \"address(this) == __self\"\n                        let _10 := /** @src 88:1300:12668  \"contract MessageQueue is...\" */ and(/** @src 23:4667:4673  \"__self\" */ loadimmutable(\"40546\"), /** @src 88:1300:12668  \"contract MessageQueue is...\" */ sub(shl(160, 1), 1))\n                        /// @src 23:4650:4770  \"address(this) == __self || // Must be called through delegatecall...\"\n                        let expr_1 := /** @src 23:4650:4673  \"address(this) == __self\" */ eq(/** @src 23:4658:4662  \"this\" */ address(), /** @src 23:4650:4673  \"address(this) == __self\" */ _10)\n                        /// @src 23:4650:4770  \"address(this) == __self || // Must be called through delegatecall...\"\n                        if iszero(expr_1)\n                        {\n                            expr_1 := /** @src 23:4728:4770  \"ERC1967Utils.getImplementation() != __self\" */ iszero(eq(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ and(sload(/** @src 37:811:877  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc), /** @src 88:1300:12668  \"contract MessageQueue is...\" */ sub(shl(160, 1), 1)), /** @src 23:4728:4770  \"ERC1967Utils.getImplementation() != __self\" */ _10))\n                        }\n                        /// @src 23:4633:4884  \"if (...\"\n                        if expr_1\n                        {\n                            /// @src 23:4844:4873  \"UUPSUnauthorizedCallContext()\"\n                            mstore(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0, /** @src 23:4844:4873  \"UUPSUnauthorizedCallContext()\" */ shl(225, 0x703e46dd))\n                            revert(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0, 4)\n                        }\n                        mstore(0, 0)\n                        mstore(32, /** @src 20:2968:3039  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                        /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                        let dataSlot := keccak256(0, 64)\n                        /// @src 20:3949:3980  \"$._roles[role].hasRole[account]\"\n                        let dataSlot_1 := /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0\n                        mstore(0, and(/** @src 24:966:976  \"msg.sender\" */ caller(), /** @src 88:1300:12668  \"contract MessageQueue is...\" */ sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 20:3949:3963  \"$._roles[role]\" */ dataSlot)\n                        /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                        dataSlot_1 := keccak256(0, 0x40)\n                        /// @src 20:4512:4620  \"if (!hasRole(role, account)) {...\"\n                        if /** @src 20:4516:4539  \"!hasRole(role, account)\" */ iszero(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ and(sload(/** @src 20:3949:3980  \"$._roles[role].hasRole[account]\" */ dataSlot_1), /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0xff))\n                        /// @src 20:4512:4620  \"if (!hasRole(role, account)) {...\"\n                        {\n                            /// @src 20:4562:4609  \"AccessControlUnauthorizedAccount(account, role)\"\n                            mstore(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0, /** @src 20:4562:4609  \"AccessControlUnauthorizedAccount(account, role)\" */ shl(224, 0xe2517d3f))\n                            /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                            mstore(4, /** @src 24:966:976  \"msg.sender\" */ caller())\n                            /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                            mstore(36, 0)\n                            /// @src 20:4562:4609  \"AccessControlUnauthorizedAccount(account, role)\"\n                            revert(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0, 68)\n                        }\n                        let _11 := and(/** @src 23:6131:6167  \"IERC1822Proxiable(newImplementation)\" */ value0_1, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ sub(shl(160, 1), 1))\n                        /// @src 23:6131:6183  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                        let _12 := /** @src 88:1300:12668  \"contract MessageQueue is...\" */ mload(64)\n                        /// @src 23:6131:6183  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                        mstore(_12, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ shl(224, 0x52d1902d))\n                        /// @src 23:6131:6183  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                        let trySuccessCondition := staticcall(gas(), _11, _12, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 4, /** @src 23:6131:6183  \"IERC1822Proxiable(newImplementation).proxiableUUID()\" */ _12, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 32)\n                        /// @src 23:6131:6183  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                        let expr_2 := /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0\n                        /// @src 23:6131:6183  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                        if trySuccessCondition\n                        {\n                            let _13 := /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 32\n                            /// @src 23:6131:6183  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                            if gt(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ 32, /** @src 23:6131:6183  \"IERC1822Proxiable(newImplementation).proxiableUUID()\" */ returndatasize()) { _13 := returndatasize() }\n                            finalize_allocation(_12, _13)\n                            let value0_2 := /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0\n                            if slt(sub(/** @src 23:6131:6183  \"IERC1822Proxiable(newImplementation).proxiableUUID()\" */ add(_12, _13), _12), /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 32) { revert(0, 0) }\n                            value0_2 := mload(/** @src 23:6131:6183  \"IERC1822Proxiable(newImplementation).proxiableUUID()\" */ _12)\n                            expr_2 := value0_2\n                        }\n                        /// @src 23:6127:6564  \"try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {...\"\n                        switch iszero(trySuccessCondition)\n                        case 0 {\n                            /// @src 23:6221:6341  \"if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {...\"\n                            if /** @src 23:6225:6265  \"slot != ERC1967Utils.IMPLEMENTATION_SLOT\" */ iszero(eq(expr_2, /** @src 37:811:877  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc))\n                            /// @src 23:6221:6341  \"if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {...\"\n                            {\n                                /// @src 23:6292:6326  \"UUPSUnsupportedProxiableUUID(slot)\"\n                                mstore(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0, /** @src 23:6292:6326  \"UUPSUnsupportedProxiableUUID(slot)\" */ shl(226, 0x2a875269))\n                                /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                                mstore(4, expr_2)\n                                /// @src 23:6292:6326  \"UUPSUnsupportedProxiableUUID(slot)\"\n                                revert(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0, 36)\n                            }\n                            /// @src 37:1744:1863  \"if (newImplementation.code.length == 0) {...\"\n                            if /** @src 37:1748:1782  \"newImplementation.code.length == 0\" */ iszero(/** @src 37:1748:1777  \"newImplementation.code.length\" */ extcodesize(value0_1))\n                            /// @src 37:1744:1863  \"if (newImplementation.code.length == 0) {...\"\n                            {\n                                /// @src 37:1805:1852  \"ERC1967InvalidImplementation(newImplementation)\"\n                                mstore(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0, /** @src 37:1805:1852  \"ERC1967InvalidImplementation(newImplementation)\" */ shl(224, 0x4c9c8ce3))\n                                /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                                mstore(4, _11)\n                                /// @src 37:1805:1852  \"ERC1967InvalidImplementation(newImplementation)\"\n                                revert(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0, 36)\n                            }\n                            sstore(/** @src 37:811:877  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ or(and(sload(/** @src 37:811:877  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc), /** @src 88:1300:12668  \"contract MessageQueue is...\" */ shl(160, 0xffffffffffffffffffffffff)), _11))\n                            /// @src 37:2407:2443  \"IERC1967.Upgraded(newImplementation)\"\n                            log2(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0, 0, /** @src 37:2407:2443  \"IERC1967.Upgraded(newImplementation)\" */ 0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b, _11)\n                            /// @src 37:2454:2602  \"if (data.length > 0) {...\"\n                            switch /** @src 37:2458:2473  \"data.length > 0\" */ iszero(iszero(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ mload(/** @src 37:2458:2469  \"data.length\" */ memPtr)))\n                            case /** @src 37:2454:2602  \"if (data.length > 0) {...\" */ 0 {\n                                /// @src 37:6159:6229  \"if (msg.value > 0) {...\"\n                                if /** @src 37:6163:6176  \"msg.value > 0\" */ iszero(iszero(/** @src 37:6163:6172  \"msg.value\" */ callvalue()))\n                                /// @src 37:6159:6229  \"if (msg.value > 0) {...\"\n                                {\n                                    /// @src 37:6199:6218  \"ERC1967NonPayable()\"\n                                    mstore(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0, /** @src 37:6199:6218  \"ERC1967NonPayable()\" */ shl(224, 0xb398979f))\n                                    revert(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0, 4)\n                                }\n                            }\n                            default /// @src 37:2454:2602  \"if (data.length > 0) {...\"\n                            {\n                                /// @src 51:4065:4090  \"target.delegatecall(data)\"\n                                let expr_component := delegatecall(gas(), value0_1, dst, mload(memPtr), /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0, 0)\n                                /// @src 51:4065:4090  \"target.delegatecall(data)\"\n                                let data := /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0\n                                switch returndatasize()\n                                case 0 { data := 96 }\n                                default {\n                                    let _14 := returndatasize()\n                                    let _15 := array_allocation_size_bytes(_14)\n                                    let memPtr_1 := mload(64)\n                                    finalize_allocation(memPtr_1, _15)\n                                    mstore(memPtr_1, _14)\n                                    data := memPtr_1\n                                    returndatacopy(add(memPtr_1, 32), 0, returndatasize())\n                                }\n                                /// @src 51:4107:4162  \"verifyCallResultFromTarget(target, success, returndata)\"\n                                pop(fun_verifyCallResultFromTarget(value0_1, expr_component, /** @src 51:4065:4090  \"target.delegatecall(data)\" */ data))\n                            }\n                        }\n                        default /// @src 23:6127:6564  \"try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {...\"\n                        {\n                            /// @src 23:6493:6553  \"ERC1967Utils.ERC1967InvalidImplementation(newImplementation)\"\n                            mstore(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0, /** @src 37:1805:1852  \"ERC1967InvalidImplementation(newImplementation)\" */ shl(224, 0x4c9c8ce3))\n                            /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                            mstore(4, _11)\n                            /// @src 23:6493:6553  \"ERC1967Utils.ERC1967InvalidImplementation(newImplementation)\"\n                            revert(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0, 36)\n                        }\n                        return(0, 0)\n                    }\n                    case 0x52d1902d {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 23:5069:5214  \"if (address(this) != __self) {...\"\n                        if /** @src 23:5073:5096  \"address(this) != __self\" */ iszero(eq(/** @src 23:5081:5085  \"this\" */ address(), /** @src 88:1300:12668  \"contract MessageQueue is...\" */ and(/** @src 23:5090:5096  \"__self\" */ loadimmutable(\"40546\"), /** @src 88:1300:12668  \"contract MessageQueue is...\" */ sub(shl(160, 1), 1))))\n                        /// @src 23:5069:5214  \"if (address(this) != __self) {...\"\n                        {\n                            /// @src 23:5174:5203  \"UUPSUnauthorizedCallContext()\"\n                            mstore(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0, /** @src 23:4844:4873  \"UUPSUnauthorizedCallContext()\" */ shl(225, 0x703e46dd))\n                            /// @src 23:5174:5203  \"UUPSUnauthorizedCallContext()\"\n                            revert(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0, 4)\n                        }\n                        let memPos_5 := mload(64)\n                        mstore(memPos_5, /** @src 37:811:877  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc)\n                        /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                        return(memPos_5, 32)\n                    }\n                    case 0x5c975abb {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_2 := and(sload(/** @src 25:1237:1303  \"assembly {...\" */ 92891662540554778686986514950364265630913525426840345632122912437671245656832), /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0xff)\n                        let memPos_6 := mload(64)\n                        mstore(memPos_6, iszero(iszero(value_2)))\n                        return(memPos_6, 32)\n                    }\n                    case 0x8456cb59 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 20:3283:3287  \"role\"\n                        fun_checkRole()\n                        /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                        let _16 := sload(/** @src 25:1237:1303  \"assembly {...\" */ 92891662540554778686986514950364265630913525426840345632122912437671245656832)\n                        /// @src 25:2770:2831  \"if (paused()) {...\"\n                        if /** @src 88:1300:12668  \"contract MessageQueue is...\" */ and(_16, 0xff)\n                        /// @src 25:2770:2831  \"if (paused()) {...\"\n                        {\n                            /// @src 25:2805:2820  \"EnforcedPause()\"\n                            mstore(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0, /** @src 25:2805:2820  \"EnforcedPause()\" */ shl(224, 0xd93c0665))\n                            revert(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0, 4)\n                        }\n                        sstore(/** @src 25:1237:1303  \"assembly {...\" */ 92891662540554778686986514950364265630913525426840345632122912437671245656832, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ or(and(_16, not(255)), /** @src 88:1548:1552  \"0x01\" */ 0x01))\n                        /// @src 25:3319:3339  \"Paused(_msgSender())\"\n                        let _17 := /** @src 88:1300:12668  \"contract MessageQueue is...\" */ mload(64)\n                        mstore(_17, /** @src 24:966:976  \"msg.sender\" */ caller())\n                        /// @src 25:3319:3339  \"Paused(_msgSender())\"\n                        log1(_17, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 32, /** @src 25:3319:3339  \"Paused(_msgSender())\" */ 0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258)\n                        /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                        return(0, 0)\n                    }\n                    case 0x91d14854 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value1_2 := abi_decode_address()\n                        mstore(0, calldataload(4))\n                        mstore(32, /** @src 20:2968:3039  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                        /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                        let dataSlot_2 := keccak256(0, 64)\n                        /// @src 20:3949:3980  \"$._roles[role].hasRole[account]\"\n                        let dataSlot_3 := /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0\n                        mstore(0, and(value1_2, sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 20:3949:3963  \"$._roles[role]\" */ dataSlot_2)\n                        /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                        dataSlot_3 := keccak256(0, 0x40)\n                        let value_3 := and(sload(/** @src 20:3949:3980  \"$._roles[role].hasRole[account]\" */ dataSlot_3), /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0xff)\n                        let memPos_7 := mload(64)\n                        mstore(memPos_7, iszero(iszero(value_3)))\n                        return(memPos_7, 32)\n                    }\n                    case 0x93eb47e9 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 160) { revert(0, 0) }\n                        let value_4 := calldataload(4)\n                        let offset_1 := calldataload(100)\n                        if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n                        let _18 := add(4, offset_1)\n                        if slt(add(sub(calldatasize(), offset_1), not(3)), 128) { revert(0, 0) }\n                        let offset_2 := calldataload(132)\n                        if gt(offset_2, 0xffffffffffffffff) { revert(0, 0) }\n                        if iszero(slt(add(offset_2, 35), calldatasize())) { revert(0, 0) }\n                        let length_1 := calldataload(add(4, offset_2))\n                        if gt(length_1, 0xffffffffffffffff) { revert(0, 0) }\n                        if gt(add(add(offset_2, shl(5, length_1)), 36), calldatasize()) { revert(0, 0) }\n                        let value_5 := calldataload(/** @src 88:10310:10324  \"message.source\" */ add(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ offset_1, 36))\n                        let cleaned_1 := and(sload(0), sub(shl(160, 1), 1))\n                        /// @src 88:10328:10357  \"_governanceAdmin.governance()\"\n                        let _19 := /** @src 88:1300:12668  \"contract MessageQueue is...\" */ mload(64)\n                        /// @src 88:10328:10357  \"_governanceAdmin.governance()\"\n                        mstore(_19, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ shl(224, 0x5aa6e675))\n                        /// @src 88:10328:10357  \"_governanceAdmin.governance()\"\n                        let _20 := staticcall(gas(), cleaned_1, _19, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 4, /** @src 88:10328:10357  \"_governanceAdmin.governance()\" */ _19, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 32)\n                        /// @src 88:10328:10357  \"_governanceAdmin.governance()\"\n                        if iszero(_20)\n                        {\n                            /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                            let pos := mload(64)\n                            returndatacopy(pos, 0, returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 88:10328:10357  \"_governanceAdmin.governance()\"\n                        let expr_3 := /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0\n                        /// @src 88:10328:10357  \"_governanceAdmin.governance()\"\n                        if _20\n                        {\n                            let _21 := /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 32\n                            /// @src 88:10328:10357  \"_governanceAdmin.governance()\"\n                            if gt(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ 32, /** @src 88:10328:10357  \"_governanceAdmin.governance()\" */ returndatasize()) { _21 := returndatasize() }\n                            finalize_allocation(_19, _21)\n                            let value0_3 := /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0\n                            if slt(sub(/** @src 88:10328:10357  \"_governanceAdmin.governance()\" */ add(_19, _21), _19), /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 32) { revert(0, 0) }\n                            value0_3 := mload(/** @src 88:10328:10357  \"_governanceAdmin.governance()\" */ _19)\n                            expr_3 := value0_3\n                        }\n                        /// @src 88:10310:10409  \"message.source == _governanceAdmin.governance() || message.source == _governancePauser.governance()\"\n                        let expr_4 := /** @src 88:10310:10357  \"message.source == _governanceAdmin.governance()\" */ eq(value_5, expr_3)\n                        /// @src 88:10310:10409  \"message.source == _governanceAdmin.governance() || message.source == _governancePauser.governance()\"\n                        if iszero(expr_4)\n                        {\n                            /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                            let cleaned_2 := and(sload(1), sub(shl(160, 1), 1))\n                            /// @src 88:10379:10409  \"_governancePauser.governance()\"\n                            let _22 := /** @src 88:1300:12668  \"contract MessageQueue is...\" */ mload(64)\n                            /// @src 88:10379:10409  \"_governancePauser.governance()\"\n                            mstore(_22, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ shl(224, 0x5aa6e675))\n                            /// @src 88:10379:10409  \"_governancePauser.governance()\"\n                            let _23 := staticcall(gas(), cleaned_2, _22, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 4, /** @src 88:10379:10409  \"_governancePauser.governance()\" */ _22, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 32)\n                            /// @src 88:10379:10409  \"_governancePauser.governance()\"\n                            if iszero(_23)\n                            {\n                                /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                                let pos_1 := mload(64)\n                                returndatacopy(pos_1, 0, returndatasize())\n                                revert(pos_1, returndatasize())\n                            }\n                            /// @src 88:10379:10409  \"_governancePauser.governance()\"\n                            let expr_5 := /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0\n                            /// @src 88:10379:10409  \"_governancePauser.governance()\"\n                            if _23\n                            {\n                                let _24 := /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 32\n                                /// @src 88:10379:10409  \"_governancePauser.governance()\"\n                                if gt(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ 32, /** @src 88:10379:10409  \"_governancePauser.governance()\" */ returndatasize()) { _24 := returndatasize() }\n                                finalize_allocation(_22, _24)\n                                let value0_4 := /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0\n                                if slt(sub(/** @src 88:10379:10409  \"_governancePauser.governance()\" */ add(_22, _24), _22), /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 32) { revert(0, 0) }\n                                value0_4 := mload(/** @src 88:10379:10409  \"_governancePauser.governance()\" */ _22)\n                                expr_5 := value0_4\n                            }\n                            /// @src 88:10310:10409  \"message.source == _governanceAdmin.governance() || message.source == _governancePauser.governance()\"\n                            expr_4 := /** @src 88:10361:10409  \"message.source == _governancePauser.governance()\" */ eq(value_5, expr_5)\n                        }\n                        /// @src 88:10423:10455  \"paused() && !isFromAdminOrPauser\"\n                        let expr_6 := /** @src 88:1300:12668  \"contract MessageQueue is...\" */ and(sload(/** @src 25:1237:1303  \"assembly {...\" */ 92891662540554778686986514950364265630913525426840345632122912437671245656832), /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0xff)\n                        /// @src 88:10423:10455  \"paused() && !isFromAdminOrPauser\"\n                        if expr_6\n                        {\n                            expr_6 := /** @src 88:10435:10455  \"!isFromAdminOrPauser\" */ iszero(expr_4)\n                        }\n                        /// @src 88:10419:10504  \"if (paused() && !isFromAdminOrPauser) {...\"\n                        if expr_6\n                        {\n                            /// @src 88:10478:10493  \"EnforcedPause()\"\n                            mstore(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0, /** @src 25:2805:2820  \"EnforcedPause()\" */ shl(224, 0xd93c0665))\n                            /// @src 88:10478:10493  \"EnforcedPause()\"\n                            revert(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0, 4)\n                        }\n                        /// @src 88:10546:10579  \"msg.sender == _emergencyStopAdmin\"\n                        let expr_7 := eq(/** @src 88:10546:10556  \"msg.sender\" */ caller(), /** @src 88:1300:12668  \"contract MessageQueue is...\" */ and(sload(/** @src 88:10560:10579  \"_emergencyStopAdmin\" */ 0x02), /** @src 88:1300:12668  \"contract MessageQueue is...\" */ sub(shl(160, 1), 1)))\n                        /// @src 88:10593:10636  \"_emergencyStop && !isFromEmergencyStopAdmin\"\n                        let expr_8 := /** @src 88:1300:12668  \"contract MessageQueue is...\" */ and(shr(160, sload(/** @src 88:10593:10607  \"_emergencyStop\" */ 0x03)), /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0xff)\n                        /// @src 88:10593:10636  \"_emergencyStop && !isFromEmergencyStopAdmin\"\n                        if expr_8\n                        {\n                            expr_8 := /** @src 88:10611:10636  \"!isFromEmergencyStopAdmin\" */ iszero(expr_7)\n                        }\n                        /// @src 88:10589:10685  \"if (_emergencyStop && !isFromEmergencyStopAdmin) {...\"\n                        if expr_8\n                        {\n                            /// @src 88:10659:10674  \"EmergencyStop()\"\n                            mstore(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0, /** @src 88:10659:10674  \"EmergencyStop()\" */ shl(226, 0x13a5ef3f))\n                            revert(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0, 4)\n                        }\n                        let value_6 := calldataload(_18)\n                        mstore(0, value_6)\n                        mstore(32, /** @src 88:10699:10717  \"_processedMessages\" */ 0x06)\n                        /// @src 88:10695:10804  \"if (_processedMessages[message.nonce]) {...\"\n                        if /** @src 88:1300:12668  \"contract MessageQueue is...\" */ and(sload(keccak256(0, 64)), 0xff)\n                        /// @src 88:10695:10804  \"if (_processedMessages[message.nonce]) {...\"\n                        {\n                            /// @src 88:10755:10793  \"MessageAlreadyProcessed(message.nonce)\"\n                            mstore(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0, /** @src 88:10755:10793  \"MessageAlreadyProcessed(message.nonce)\" */ shl(226, 0x38503e33))\n                            /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                            mstore(4, value_6)\n                            /// @src 88:10755:10793  \"MessageAlreadyProcessed(message.nonce)\"\n                            revert(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0, 36)\n                        }\n                        mstore(0, value_4)\n                        mstore(32, 4)\n                        let _25 := sload(keccak256(0, 64))\n                        /// @src 88:10871:10964  \"if (merkleRoot == bytes32(0)) {...\"\n                        if /** @src 88:10875:10899  \"merkleRoot == bytes32(0)\" */ iszero(_25)\n                        /// @src 88:10871:10964  \"if (merkleRoot == bytes32(0)) {...\"\n                        {\n                            /// @src 88:10922:10953  \"MerkleRootNotFound(blockNumber)\"\n                            mstore(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0, /** @src 88:10922:10953  \"MerkleRootNotFound(blockNumber)\" */ shl(224, 0x55d7a68b))\n                            /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                            mstore(4, value_4)\n                            /// @src 88:10922:10953  \"MerkleRootNotFound(blockNumber)\"\n                            revert(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0, 36)\n                        }\n                        mstore(0, _25)\n                        mstore(32, 5)\n                        let _26 := sload(keccak256(0, 64))\n                        let sum := add(_26, /** @src 88:1608:1617  \"5 minutes\" */ 0x012c)\n                        /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                        if gt(_26, sum)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 36)\n                        }\n                        /// @src 88:11037:11152  \"if (block.timestamp < timestamp + PROCESS_MESSAGE_DELAY) {...\"\n                        if /** @src 88:11041:11092  \"block.timestamp < timestamp + PROCESS_MESSAGE_DELAY\" */ lt(/** @src 88:11041:11056  \"block.timestamp\" */ timestamp(), /** @src 88:11041:11092  \"block.timestamp < timestamp + PROCESS_MESSAGE_DELAY\" */ sum)\n                        /// @src 88:11037:11152  \"if (block.timestamp < timestamp + PROCESS_MESSAGE_DELAY) {...\"\n                        {\n                            /// @src 88:11115:11141  \"MerkleRootDelayNotPassed()\"\n                            mstore(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0, /** @src 88:11115:11141  \"MerkleRootDelayNotPassed()\" */ shl(224, 0xa4f7d3e9))\n                            revert(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0, 4)\n                        }\n                        /// @src 102:7772:7791  \"message.destination\"\n                        let _27 := add(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ offset_1, 68)\n                        /// @src 102:7772:7791  \"message.destination\"\n                        let expr_9 := read_from_calldatat_address(_27)\n                        /// @src 102:7793:7808  \"message.payload\"\n                        let _28 := add(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ offset_1, 100)\n                        /// @src 102:7793:7808  \"message.payload\"\n                        let expr_offset, expr_length := access_calldata_tail_bytes_calldata(_18, _28)\n                        /// @src 102:7724:7809  \"abi.encodePacked(message.nonce, message.source, message.destination, message.payload)\"\n                        let expr_mpos := /** @src 88:1300:12668  \"contract MessageQueue is...\" */ mload(64)\n                        /// @src 102:7724:7809  \"abi.encodePacked(message.nonce, message.source, message.destination, message.payload)\"\n                        let _29 := add(expr_mpos, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 32)\n                        mstore(_29, value_6)\n                        mstore(add(/** @src 102:7724:7809  \"abi.encodePacked(message.nonce, message.source, message.destination, message.payload)\" */ expr_mpos, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 64), value_5)\n                        mstore(add(/** @src 102:7724:7809  \"abi.encodePacked(message.nonce, message.source, message.destination, message.payload)\" */ expr_mpos, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 96), and(shl(96, expr_9), not(0xffffffffffffffffffffffff)))\n                        calldatacopy(add(/** @src 102:7724:7809  \"abi.encodePacked(message.nonce, message.source, message.destination, message.payload)\" */ expr_mpos, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 116), expr_offset, expr_length)\n                        let _30 := add(/** @src 102:7724:7809  \"abi.encodePacked(message.nonce, message.source, message.destination, message.payload)\" */ expr_mpos, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ expr_length)\n                        mstore(add(_30, 116), 0)\n                        /// @src 102:7724:7809  \"abi.encodePacked(message.nonce, message.source, message.destination, message.payload)\"\n                        let _31 := add(sub(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ _30, /** @src 102:7724:7809  \"abi.encodePacked(message.nonce, message.source, message.destination, message.payload)\" */ expr_mpos), /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 116)\n                        /// @src 102:7724:7809  \"abi.encodePacked(message.nonce, message.source, message.destination, message.payload)\"\n                        mstore(expr_mpos, add(_31, not(31)))\n                        finalize_allocation(expr_mpos, _31)\n                        /// @src 102:7883:7994  \"assembly (\\\"memory-safe\\\") {...\"\n                        mstore(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0, /** @src 102:7714:7810  \"keccak256(abi.encodePacked(message.nonce, message.source, message.destination, message.payload))\" */ keccak256(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ _29, mload(/** @src 102:7714:7810  \"keccak256(abi.encodePacked(message.nonce, message.source, message.destination, message.payload))\" */ expr_mpos)))\n                        /// @src 102:8004:8016  \"return hash2\"\n                        let var := /** @src 102:7883:7994  \"assembly (\\\"memory-safe\\\") {...\" */ keccak256(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0, 32)\n                        /// @src 88:11216:11367  \"if (!BinaryMerkleTree.verifyProofCalldata(merkleRoot, proof, totalLeaves, leafIndex, messageHash)) {...\"\n                        if /** @src 88:11220:11313  \"!BinaryMerkleTree.verifyProofCalldata(merkleRoot, proof, totalLeaves, leafIndex, messageHash)\" */ iszero(/** @src 88:11221:11313  \"BinaryMerkleTree.verifyProofCalldata(merkleRoot, proof, totalLeaves, leafIndex, messageHash)\" */ fun_verifyProofCalldata(_25, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ add(offset_2, 36), /** @src 88:11221:11313  \"BinaryMerkleTree.verifyProofCalldata(merkleRoot, proof, totalLeaves, leafIndex, messageHash)\" */ length_1, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ calldataload(36), calldataload(68), /** @src 88:11221:11313  \"BinaryMerkleTree.verifyProofCalldata(merkleRoot, proof, totalLeaves, leafIndex, messageHash)\" */ var))\n                        /// @src 88:11216:11367  \"if (!BinaryMerkleTree.verifyProofCalldata(merkleRoot, proof, totalLeaves, leafIndex, messageHash)) {...\"\n                        {\n                            /// @src 88:11336:11356  \"InvalidMerkleProof()\"\n                            mstore(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0, /** @src 88:11336:11356  \"InvalidMerkleProof()\" */ shl(225, 0x582f497d))\n                            revert(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0, 4)\n                        }\n                        mstore(0, value_6)\n                        mstore(32, /** @src 88:10699:10717  \"_processedMessages\" */ 0x06)\n                        /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                        let dataSlot_4 := keccak256(0, 64)\n                        sstore(dataSlot_4, or(and(sload(dataSlot_4), not(255)), 1))\n                        let _32 := and(/** @src 88:11444:11463  \"message.destination\" */ read_from_calldatat_address(_27), /** @src 88:1300:12668  \"contract MessageQueue is...\" */ sub(shl(160, 1), 1))\n                        /// @src 88:11495:11510  \"message.payload\"\n                        let expr_offset_1, expr_length_1 := access_calldata_tail_bytes_calldata(_18, _28)\n                        /// @src 88:11428:11511  \"IMessageHandler(message.destination).handleMessage(message.source, message.payload)\"\n                        if iszero(extcodesize(_32))\n                        {\n                            /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                            revert(0, 0)\n                        }\n                        /// @src 88:11428:11511  \"IMessageHandler(message.destination).handleMessage(message.source, message.payload)\"\n                        let _33 := /** @src 88:1300:12668  \"contract MessageQueue is...\" */ mload(64)\n                        /// @src 88:11428:11511  \"IMessageHandler(message.destination).handleMessage(message.source, message.payload)\"\n                        mstore(_33, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ shl(228, 0x0302ac5d))\n                        mstore(/** @src 88:11428:11511  \"IMessageHandler(message.destination).handleMessage(message.source, message.payload)\" */ add(_33, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 4), value_5)\n                        mstore(add(/** @src 88:11428:11511  \"IMessageHandler(message.destination).handleMessage(message.source, message.payload)\" */ _33, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 36), 64)\n                        /// @src 88:11428:11511  \"IMessageHandler(message.destination).handleMessage(message.source, message.payload)\"\n                        let _34 := call(gas(), _32, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0, /** @src 88:11428:11511  \"IMessageHandler(message.destination).handleMessage(message.source, message.payload)\" */ _33, sub(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ abi_encode_bytes_calldata(expr_offset_1, expr_length_1, add(/** @src 88:11428:11511  \"IMessageHandler(message.destination).handleMessage(message.source, message.payload)\" */ _33, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 68)), /** @src 88:11428:11511  \"IMessageHandler(message.destination).handleMessage(message.source, message.payload)\" */ _33), _33, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0)\n                        /// @src 88:11428:11511  \"IMessageHandler(message.destination).handleMessage(message.source, message.payload)\"\n                        if iszero(_34)\n                        {\n                            /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                            let pos_2 := mload(64)\n                            returndatacopy(pos_2, 0, returndatasize())\n                            revert(pos_2, returndatasize())\n                        }\n                        /// @src 88:11428:11511  \"IMessageHandler(message.destination).handleMessage(message.source, message.payload)\"\n                        if _34\n                        {\n                            finalize_allocation(_33, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0)\n                            _2 := 0\n                        }\n                        /// @src 88:11585:11604  \"message.destination\"\n                        let expr_10 := read_from_calldatat_address(_27)\n                        /// @src 88:11527:11605  \"MessageProcessed(blockNumber, messageHash, message.nonce, message.destination)\"\n                        let _35 := /** @src 88:1300:12668  \"contract MessageQueue is...\" */ mload(64)\n                        mstore(_35, value_4)\n                        mstore(add(_35, 32), var)\n                        mstore(add(_35, 64), value_6)\n                        mstore(add(_35, 96), and(expr_10, sub(shl(160, 1), 1)))\n                        /// @src 88:11527:11605  \"MessageProcessed(blockNumber, messageHash, message.nonce, message.destination)\"\n                        log1(_35, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 128, /** @src 88:11527:11605  \"MessageProcessed(blockNumber, messageHash, message.nonce, message.destination)\" */ 0x994c669cfd9c0453d42c933a11c002a34d12d85563aebe99ca525fffc45454f8)\n                        /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                        return(_2, _2)\n                    }\n                    case 0xa217fddf {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let memPos_8 := mload(64)\n                        mstore(memPos_8, _2)\n                        return(memPos_8, 32)\n                    }\n                    case 0xa8d7a645 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let memPos_9 := mload(64)\n                        mstore(memPos_9, /** @src 88:1608:1617  \"5 minutes\" */ 0x012c)\n                        /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                        return(memPos_9, 32)\n                    }\n                    case 0xad3cb1cc {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let size := /** @src -1:-1:-1 */ _2\n                        /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                        let _36 := _2\n                        _36 := /** @src -1:-1:-1 */ _2\n                        /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                        size := 64\n                        let memPtr_2 := mload(size)\n                        finalize_allocation(memPtr_2, size)\n                        mstore(memPtr_2, 5)\n                        let _37 := add(memPtr_2, 32)\n                        mstore(_37, \"5.0.0\")\n                        let memPos_10 := mload(size)\n                        mstore(memPos_10, 32)\n                        let length_2 := mload(memPtr_2)\n                        mstore(add(memPos_10, 32), length_2)\n                        mcopy(add(memPos_10, size), _37, length_2)\n                        mstore(add(add(memPos_10, length_2), size), _2)\n                        return(memPos_10, add(sub(add(memPos_10, and(add(length_2, 31), /** @src 102:7724:7809  \"abi.encodePacked(message.nonce, message.source, message.destination, message.payload)\" */ not(31))), /** @src 88:1300:12668  \"contract MessageQueue is...\" */ memPos_10), size))\n                    }\n                    case 0xb13f222c {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let cleaned_3 := and(sload(/** @src 88:4436:4455  \"_emergencyStopAdmin\" */ 0x02), /** @src 88:1300:12668  \"contract MessageQueue is...\" */ sub(shl(160, 1), 1))\n                        let memPos_11 := mload(64)\n                        mstore(memPos_11, cleaned_3)\n                        return(memPos_11, 32)\n                    }\n                    case 0xbfe7edd7 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                        mstore(_2, calldataload(4))\n                        mstore(32, /** @src 88:12627:12645  \"_processedMessages\" */ 0x06)\n                        /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                        let value_7 := and(sload(keccak256(_2, 64)), 0xff)\n                        let memPos_12 := mload(64)\n                        mstore(memPos_12, iszero(iszero(value_7)))\n                        return(memPos_12, 32)\n                    }\n                    case 0xc81eb797 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let cleaned_4 := and(sload(/** @src 88:4196:4213  \"_governancePauser\" */ 0x01), /** @src 88:1300:12668  \"contract MessageQueue is...\" */ sub(shl(160, 1), 1))\n                        let memPos_13 := mload(64)\n                        mstore(memPos_13, cleaned_4)\n                        return(memPos_13, 32)\n                    }\n                    case 0xcca66a9d {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(_2, _2) }\n                        let value_8 := calldataload(4)\n                        let value_9 := calldataload(36)\n                        let offset_3 := calldataload(68)\n                        if gt(offset_3, 0xffffffffffffffff) { revert(_2, _2) }\n                        if iszero(slt(add(offset_3, 35), calldatasize())) { revert(_2, _2) }\n                        let length_3 := calldataload(add(4, offset_3))\n                        if gt(length_3, 0xffffffffffffffff) { revert(_2, _2) }\n                        if gt(add(add(offset_3, length_3), 36), calldatasize()) { revert(_2, _2) }\n                        /// @src 88:6410:6443  \"msg.sender == _emergencyStopAdmin\"\n                        let expr_11 := eq(/** @src 88:6410:6420  \"msg.sender\" */ caller(), /** @src 88:1300:12668  \"contract MessageQueue is...\" */ and(sload(/** @src 88:6424:6443  \"_emergencyStopAdmin\" */ 0x02), /** @src 88:1300:12668  \"contract MessageQueue is...\" */ sub(shl(160, 1), 1)))\n                        let _38 := sload(/** @src 88:6457:6471  \"_emergencyStop\" */ 0x03)\n                        /// @src 88:6457:6500  \"_emergencyStop && !isFromEmergencyStopAdmin\"\n                        let expr_12 := /** @src 88:1300:12668  \"contract MessageQueue is...\" */ and(shr(160, _38), 0xff)\n                        /// @src 88:6457:6500  \"_emergencyStop && !isFromEmergencyStopAdmin\"\n                        if expr_12\n                        {\n                            expr_12 := /** @src 88:6475:6500  \"!isFromEmergencyStopAdmin\" */ iszero(expr_11)\n                        }\n                        /// @src 88:6453:6549  \"if (_emergencyStop && !isFromEmergencyStopAdmin) {...\"\n                        if expr_12\n                        {\n                            /// @src 88:6523:6538  \"EmergencyStop()\"\n                            mstore(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ _2, /** @src 88:10659:10674  \"EmergencyStop()\" */ shl(226, 0x13a5ef3f))\n                            /// @src 88:6523:6538  \"EmergencyStop()\"\n                            revert(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ _2, 4)\n                        }\n                        let size_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                        let _39 := /** @src -1:-1:-1 */ 0\n                        /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                        _39 := /** @src -1:-1:-1 */ 0\n                        /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                        size_1 := 96\n                        let memPtr_3 := mload(64)\n                        finalize_allocation(memPtr_3, 96)\n                        mstore(memPtr_3, /** @src 88:6424:6443  \"_emergencyStopAdmin\" */ 0x02)\n                        /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                        let dataStart := add(memPtr_3, 32)\n                        calldatacopy(dataStart, calldatasize(), add(96, /** @src 102:7724:7809  \"abi.encodePacked(message.nonce, message.source, message.destination, message.payload)\" */ not(31)))\n                        /// @src 88:6617:6660  \"publicInputs[0] = uint256(merkleRoot) >> 64\"\n                        let addr := /** @src -1:-1:-1 */ _2\n                        /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                        if iszero(mload(memPtr_3))\n                        {\n                            mstore(_2, shl(224, 0x4e487b71))\n                            mstore(4, 0x32)\n                            revert(_2, 36)\n                        }\n                        addr := dataStart\n                        mstore(dataStart, shr(64, value_9))\n                        /// @src 88:6670:6810  \"publicInputs[1] = ((uint256(merkleRoot) & uint256(type(uint64).max)) << 128)...\"\n                        let addr_1 := /** @src -1:-1:-1 */ _2\n                        /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                        if iszero(lt(1, mload(memPtr_3)))\n                        {\n                            mstore(_2, shl(224, 0x4e487b71))\n                            mstore(4, 0x32)\n                            revert(_2, 36)\n                        }\n                        addr_1 := add(memPtr_3, 64)\n                        mstore(addr_1, /** @src 88:6688:6810  \"((uint256(merkleRoot) & uint256(type(uint64).max)) << 128)...\" */ or(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ and(shl(/** @src 88:6742:6745  \"128\" */ 0x80, /** @src 88:6690:6737  \"uint256(merkleRoot) & uint256(type(uint64).max)\" */ value_9), /** @src 88:1300:12668  \"contract MessageQueue is...\" */ shl(128, 0xffffffffffffffff)), and(shl(96, /** @src 88:6763:6802  \"blockNumber & uint256(type(uint32).max)\" */ value_8), /** @src 88:1300:12668  \"contract MessageQueue is...\" */ shl(96, 0xffffffff))))\n                        /// @src 88:6826:6872  \"_verifier.safeVerifyProof(proof, publicInputs)\"\n                        let _40 := /** @src 88:1300:12668  \"contract MessageQueue is...\" */ mload(64)\n                        /// @src 88:6826:6872  \"_verifier.safeVerifyProof(proof, publicInputs)\"\n                        mstore(_40, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ shl(224, 0x30549639))\n                        mstore(/** @src 88:6826:6872  \"_verifier.safeVerifyProof(proof, publicInputs)\" */ add(_40, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 4), 64)\n                        let tail := abi_encode_bytes_calldata(add(offset_3, 36), length_3, add(/** @src 88:6826:6872  \"_verifier.safeVerifyProof(proof, publicInputs)\" */ _40, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 68))\n                        mstore(add(/** @src 88:6826:6872  \"_verifier.safeVerifyProof(proof, publicInputs)\" */ _40, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 36), add(sub(tail, /** @src 88:6826:6872  \"_verifier.safeVerifyProof(proof, publicInputs)\" */ _40), /** @src 88:1300:12668  \"contract MessageQueue is...\" */ not(3)))\n                        let pos_3 := tail\n                        let length_4 := mload(memPtr_3)\n                        mstore(tail, length_4)\n                        pos_3 := add(tail, 32)\n                        let srcPtr := dataStart\n                        let i := _2\n                        for { } lt(i, length_4) { i := add(i, 1) }\n                        {\n                            mstore(pos_3, mload(srcPtr))\n                            pos_3 := add(pos_3, 32)\n                            srcPtr := add(srcPtr, 32)\n                        }\n                        /// @src 88:6826:6872  \"_verifier.safeVerifyProof(proof, publicInputs)\"\n                        let _41 := staticcall(gas(), /** @src 88:1300:12668  \"contract MessageQueue is...\" */ and(_38, sub(shl(160, 1), 1)), /** @src 88:6826:6872  \"_verifier.safeVerifyProof(proof, publicInputs)\" */ _40, sub(pos_3, _40), _40, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 32)\n                        /// @src 88:6826:6872  \"_verifier.safeVerifyProof(proof, publicInputs)\"\n                        if iszero(_41)\n                        {\n                            /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                            let pos_4 := mload(64)\n                            returndatacopy(pos_4, _2, returndatasize())\n                            revert(pos_4, returndatasize())\n                        }\n                        /// @src 88:6826:6872  \"_verifier.safeVerifyProof(proof, publicInputs)\"\n                        let expr_13 := /** @src 88:1300:12668  \"contract MessageQueue is...\" */ _2\n                        /// @src 88:6826:6872  \"_verifier.safeVerifyProof(proof, publicInputs)\"\n                        if _41\n                        {\n                            let _42 := /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 32\n                            /// @src 88:6826:6872  \"_verifier.safeVerifyProof(proof, publicInputs)\"\n                            if gt(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ 32, /** @src 88:6826:6872  \"_verifier.safeVerifyProof(proof, publicInputs)\" */ returndatasize()) { _42 := returndatasize() }\n                            finalize_allocation(_40, _42)\n                            /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                            if slt(sub(/** @src 88:6826:6872  \"_verifier.safeVerifyProof(proof, publicInputs)\" */ add(_40, _42), /** @src 88:1300:12668  \"contract MessageQueue is...\" */ _40), 32) { revert(_2, _2) }\n                            let value_10 := mload(_40)\n                            if iszero(eq(value_10, iszero(iszero(value_10)))) { revert(_2, _2) }\n                            /// @src 88:6826:6872  \"_verifier.safeVerifyProof(proof, publicInputs)\"\n                            expr_13 := value_10\n                        }\n                        /// @src 88:6821:6925  \"if (!_verifier.safeVerifyProof(proof, publicInputs)) {...\"\n                        if /** @src 88:6825:6872  \"!_verifier.safeVerifyProof(proof, publicInputs)\" */ iszero(expr_13)\n                        /// @src 88:6821:6925  \"if (!_verifier.safeVerifyProof(proof, publicInputs)) {...\"\n                        {\n                            /// @src 88:6895:6914  \"InvalidPlonkProof()\"\n                            mstore(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ _2, /** @src 88:6895:6914  \"InvalidPlonkProof()\" */ shl(225, 0x6859a699))\n                            revert(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ _2, 4)\n                        }\n                        mstore(_2, value_8)\n                        mstore(32, 4)\n                        let _43 := sload(keccak256(_2, 64))\n                        /// @src 88:7000:7578  \"if (previousMerkleRoot != 0) {...\"\n                        switch /** @src 88:7004:7027  \"previousMerkleRoot != 0\" */ iszero(iszero(_43))\n                        case /** @src 88:7000:7578  \"if (previousMerkleRoot != 0) {...\" */ 0 {\n                            /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                            mstore(_2, value_8)\n                            mstore(32, 4)\n                            sstore(keccak256(_2, 64), value_9)\n                            mstore(_2, value_9)\n                            mstore(32, 5)\n                            sstore(keccak256(_2, 64), /** @src 88:7497:7512  \"block.timestamp\" */ timestamp())\n                            /// @src 88:7532:7567  \"MerkleRoot(blockNumber, merkleRoot)\"\n                            let _44 := /** @src 88:1300:12668  \"contract MessageQueue is...\" */ mload(64)\n                            mstore(_44, value_8)\n                            mstore(add(_44, 32), value_9)\n                            /// @src 88:7532:7567  \"MerkleRoot(blockNumber, merkleRoot)\"\n                            log1(_44, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 64, /** @src 88:7532:7567  \"MerkleRoot(blockNumber, merkleRoot)\" */ 0x48211a20c285b6b077b7917b8bb118eaa92efdfb8fa2e3b114ffa253e0b665ae)\n                        }\n                        default /// @src 88:7000:7578  \"if (previousMerkleRoot != 0) {...\"\n                        {\n                            /// @src 88:7043:7378  \"if (previousMerkleRoot != merkleRoot) {...\"\n                            switch /** @src 88:7047:7079  \"previousMerkleRoot != merkleRoot\" */ iszero(eq(_43, value_9))\n                            case /** @src 88:7043:7378  \"if (previousMerkleRoot != merkleRoot) {...\" */ 0 {\n                                /// @src 88:7330:7363  \"MerkleRootAlreadySet(blockNumber)\"\n                                mstore(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ _2, /** @src 88:7330:7363  \"MerkleRootAlreadySet(blockNumber)\" */ shl(224, 0x8d60c7ab))\n                                /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                                mstore(4, value_8)\n                                /// @src 88:7330:7363  \"MerkleRootAlreadySet(blockNumber)\"\n                                revert(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ _2, 36)\n                            }\n                            default /// @src 88:7043:7378  \"if (previousMerkleRoot != merkleRoot) {...\"\n                            {\n                                /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                                sstore(/** @src 88:6457:6471  \"_emergencyStop\" */ 0x03, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ or(and(sload(/** @src 88:6457:6471  \"_emergencyStop\" */ 0x03), /** @src 88:1300:12668  \"contract MessageQueue is...\" */ not(shl(160, 255))), shl(160, 1)))\n                                mstore(_2, value_8)\n                                mstore(32, 4)\n                                let dataSlot_5 := keccak256(_2, 64)\n                                let result := /** @src -1:-1:-1 */ _2\n                                /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                                result := _2\n                                sstore(dataSlot_5, _2)\n                                mstore(_2, _43)\n                                mstore(32, 5)\n                                let dataSlot_6 := keccak256(_2, 64)\n                                let result_1 := /** @src -1:-1:-1 */ _2\n                                /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                                result_1 := _2\n                                sstore(dataSlot_6, _2)\n                                /// @src 88:7262:7284  \"EmergencyStopEnabled()\"\n                                log1(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ _2, _2, /** @src 88:7262:7284  \"EmergencyStopEnabled()\" */ 0x015567d35557fdfcbb3bbfe9dbf4f5c651cb9e461e784ac02c8152fbdb731971)\n                            }\n                        }\n                        /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                        return(_2, _2)\n                    }\n                    case 0xd547741f {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(_2, _2) }\n                        let value_11 := calldataload(4)\n                        let value1_3 := abi_decode_address()\n                        /// @src 20:3283:3287  \"role\"\n                        fun__checkRole(/** @src 20:5785:5803  \"getRoleAdmin(role)\" */ fun_getRoleAdmin(value_11))\n                        /// @src 20:5815:5841  \"_revokeRole(role, account)\"\n                        pop(fun_revokeRole(value_11, value1_3))\n                        /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                        return(_2, _2)\n                    }\n                    case 0xe63ab1e9 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let memPos_14 := mload(64)\n                        mstore(memPos_14, /** @src 88:1548:1552  \"0x01\" */ 0x01)\n                        /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                        return(memPos_14, 32)\n                    }\n                    case 0xf8c8765e {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 128) { revert(_2, _2) }\n                        let value0_5 := abi_decode_t_address()\n                        let value1_4 := abi_decode_address()\n                        let value_12 := /** @src -1:-1:-1 */ _2\n                        /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                        value_12 := calldataload(68)\n                        let _45 := and(value_12, sub(shl(160, 1), 1))\n                        if iszero(eq(value_12, _45)) { revert(_2, _2) }\n                        let value_13 := calldataload(100)\n                        let _46 := and(value_13, sub(shl(160, 1), 1))\n                        if iszero(eq(value_13, _46)) { revert(_2, _2) }\n                        let _47 := sload(/** @src 22:3147:3213  \"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\" */ 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00)\n                        /// @src 22:4301:4317  \"!$._initializing\"\n                        let _48 := iszero(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ and(shr(64, _47), 0xff))\n                        let value_14 := and(_47, 0xffffffffffffffff)\n                        /// @src 22:4724:4758  \"initialized == 0 && isTopLevelCall\"\n                        let expr_14 := /** @src 22:4724:4740  \"initialized == 0\" */ iszero(value_14)\n                        /// @src 22:4724:4758  \"initialized == 0 && isTopLevelCall\"\n                        if expr_14 { expr_14 := _48 }\n                        /// @src 22:4788:4838  \"initialized == 1 && address(this).code.length == 0\"\n                        let expr_15 := /** @src 22:4788:4804  \"initialized == 1\" */ eq(value_14, /** @src 22:4803:4804  \"1\" */ 0x01)\n                        /// @src 22:4788:4838  \"initialized == 1 && address(this).code.length == 0\"\n                        if expr_15\n                        {\n                            expr_15 := /** @src 22:4808:4838  \"address(this).code.length == 0\" */ iszero(/** @src 22:4808:4833  \"address(this).code.length\" */ extcodesize(/** @src 22:4816:4820  \"this\" */ address()))\n                        }\n                        /// @src 22:4853:4883  \"!initialSetup && !construction\"\n                        let expr_16 := /** @src 22:4853:4866  \"!initialSetup\" */ iszero(expr_14)\n                        /// @src 22:4853:4883  \"!initialSetup && !construction\"\n                        if expr_16\n                        {\n                            expr_16 := /** @src 22:4870:4883  \"!construction\" */ iszero(expr_15)\n                        }\n                        /// @src 22:4849:4940  \"if (!initialSetup && !construction) {...\"\n                        if expr_16\n                        {\n                            /// @src 22:4906:4929  \"InvalidInitialization()\"\n                            mstore(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ _2, /** @src 22:4906:4929  \"InvalidInitialization()\" */ shl(224, 0xf92ee8a9))\n                            revert(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ _2, 4)\n                        }\n                        sstore(/** @src 22:3147:3213  \"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\" */ 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ or(and(_47, not(0xffffffffffffffff)), /** @src 22:4803:4804  \"1\" */ 0x01))\n                        /// @src 22:4977:5044  \"if (isTopLevelCall) {...\"\n                        if _48\n                        {\n                            /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                            sstore(/** @src 22:3147:3213  \"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\" */ 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ or(and(_47, not(0xffffffffffffffffff)), 0x010000000000000001))\n                        }\n                        /// @src 22:6891:6967  \"modifier onlyInitializing() {...\"\n                        fun_checkInitializing()\n                        fun_checkInitializing()\n                        fun_checkInitializing()\n                        /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                        let _49 := and(/** @src 88:3420:3445  \"address(governanceAdmin_)\" */ value0_5, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ sub(shl(160, 1), 1))\n                        /// @src 88:3389:3446  \"_grantRole(DEFAULT_ADMIN_ROLE, address(governanceAdmin_))\"\n                        pop(fun__grantRole(_49))\n                        /// @src 88:3457:3507  \"_grantRole(PAUSER_ROLE, address(governanceAdmin_))\"\n                        pop(fun_grantRole(_49))\n                        /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                        let _50 := and(/** @src 88:3541:3567  \"address(governancePauser_)\" */ value1_4, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ sub(shl(160, 1), 1))\n                        /// @src 88:3517:3568  \"_grantRole(PAUSER_ROLE, address(governancePauser_))\"\n                        pop(fun_grantRole(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ _50))\n                        sstore(_2, or(and(sload(_2), shl(160, 0xffffffffffffffffffffffff)), _49))\n                        sstore(/** @src 22:4803:4804  \"1\" */ 0x01, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ or(and(sload(/** @src 22:4803:4804  \"1\" */ 0x01), /** @src 88:1300:12668  \"contract MessageQueue is...\" */ shl(160, 0xffffffffffffffffffffffff)), _50))\n                        sstore(/** @src 88:3671:3712  \"_emergencyStopAdmin = emergencyStopAdmin_\" */ 0x02, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ or(and(sload(/** @src 88:3671:3712  \"_emergencyStopAdmin = emergencyStopAdmin_\" */ 0x02), /** @src 88:1300:12668  \"contract MessageQueue is...\" */ shl(160, 0xffffffffffffffffffffffff)), _45))\n                        sstore(/** @src 88:3722:3743  \"_verifier = verifier_\" */ 0x03, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ or(and(sload(/** @src 88:3722:3743  \"_verifier = verifier_\" */ 0x03), /** @src 88:1300:12668  \"contract MessageQueue is...\" */ shl(160, 0xffffffffffffffffffffffff)), _46))\n                        /// @src 22:5064:5165  \"if (isTopLevelCall) {...\"\n                        if _48\n                        {\n                            /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                            sstore(/** @src 22:3147:3213  \"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\" */ 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ and(sload(/** @src 22:3147:3213  \"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\" */ 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00), /** @src 88:1300:12668  \"contract MessageQueue is...\" */ not(0xff0000000000000000)))\n                            /// @src 22:5140:5154  \"Initialized(1)\"\n                            let _51 := /** @src 88:1300:12668  \"contract MessageQueue is...\" */ mload(64)\n                            mstore(_51, /** @src 22:4803:4804  \"1\" */ 0x01)\n                            /// @src 22:5140:5154  \"Initialized(1)\"\n                            log1(_51, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 32, /** @src 22:5140:5154  \"Initialized(1)\" */ 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2)\n                        }\n                        /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                        return(_2, _2)\n                    }\n                    case 0xfddd4837 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let value_15 := and(shr(160, sload(/** @src 88:4856:4870  \"_emergencyStop\" */ 0x03)), /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0xff)\n                        let memPos_15 := mload(64)\n                        mstore(memPos_15, iszero(iszero(value_15)))\n                        return(memPos_15, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_decode_t_address() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), /** @src 102:7724:7809  \"abi.encodePacked(message.nonce, message.source, message.destination, message.payload)\" */ not(31)))\n                /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function array_allocation_size_bytes(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                size := add(and(add(length, 31), /** @src 102:7724:7809  \"abi.encodePacked(message.nonce, message.source, message.destination, message.payload)\" */ not(31)), /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0x20)\n            }\n            /// @ast-id 39872 @src 20:4807:4998  \"function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {...\"\n            function fun_getRoleAdmin(var_role) -> var\n            {\n                /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ var_role)\n                mstore(0x20, /** @src 20:2968:3039  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                /// @src 20:4960:4991  \"return $._roles[role].adminRole\"\n                var := /** @src 88:1300:12668  \"contract MessageQueue is...\" */ sload(/** @src 20:4967:4991  \"$._roles[role].adminRole\" */ add(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0x40), /** @src 20:4967:4991  \"$._roles[role].adminRole\" */ 1))\n            }\n            /// @src 88:1300:12668  \"contract MessageQueue is...\"\n            function read_from_calldatat_address(ptr) -> returnValue\n            {\n                let value := calldataload(ptr)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                returnValue := value\n            }\n            function access_calldata_tail_bytes_calldata(base_ref, ptr_to_tail) -> addr, length\n            {\n                let rel_offset_of_tail := calldataload(ptr_to_tail)\n                if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(30)))) { revert(0, 0) }\n                let addr_1 := add(base_ref, rel_offset_of_tail)\n                length := calldataload(addr_1)\n                if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                addr := add(addr_1, 0x20)\n                if sgt(addr, sub(calldatasize(), length)) { revert(0, 0) }\n            }\n            function abi_encode_bytes_calldata(start, length, pos) -> end\n            {\n                mstore(pos, length)\n                calldatacopy(add(pos, 0x20), start, length)\n                mstore(add(add(pos, length), 0x20), /** @src -1:-1:-1 */ 0)\n                /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                end := add(add(pos, and(add(length, 31), /** @src 102:7724:7809  \"abi.encodePacked(message.nonce, message.source, message.destination, message.payload)\" */ not(31))), /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0x20)\n            }\n            /// @ast-id 39830 @src 20:4196:4299  \"function _checkRole(bytes32 role) internal view virtual {...\"\n            function fun_checkRole()\n            {\n                /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 88:1548:1552  \"0x01\" */ 0x01)\n                /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                mstore(0x20, /** @src 20:2968:3039  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0x40)\n                /// @src 20:3949:3980  \"$._roles[role].hasRole[account]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ and(/** @src 24:966:976  \"msg.sender\" */ caller(), /** @src 88:1300:12668  \"contract MessageQueue is...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 20:3949:3963  \"$._roles[role]\" */ dataSlot)\n                /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0x40)\n                /// @src 20:4512:4620  \"if (!hasRole(role, account)) {...\"\n                if /** @src 20:4516:4539  \"!hasRole(role, account)\" */ iszero(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ and(sload(/** @src 20:3949:3980  \"$._roles[role].hasRole[account]\" */ dataSlot_1), /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0xff))\n                /// @src 20:4512:4620  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 20:4562:4609  \"AccessControlUnauthorizedAccount(account, role)\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 20:4562:4609  \"AccessControlUnauthorizedAccount(account, role)\" */ shl(224, 0xe2517d3f))\n                    /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                    mstore(/** @src 20:4562:4609  \"AccessControlUnauthorizedAccount(account, role)\" */ 4, /** @src 24:966:976  \"msg.sender\" */ caller())\n                    /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                    mstore(36, /** @src 88:1548:1552  \"0x01\" */ 0x01)\n                    /// @src 20:4562:4609  \"AccessControlUnauthorizedAccount(account, role)\"\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 68)\n                }\n            }\n            /// @ast-id 39830 @src 20:4196:4299  \"function _checkRole(bytes32 role) internal view virtual {...\"\n            function fun__checkRole(var_role)\n            {\n                /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ var_role)\n                mstore(0x20, /** @src 20:2968:3039  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0x40)\n                /// @src 20:3949:3980  \"$._roles[role].hasRole[account]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ and(/** @src 24:966:976  \"msg.sender\" */ caller(), /** @src 88:1300:12668  \"contract MessageQueue is...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 20:3949:3963  \"$._roles[role]\" */ dataSlot)\n                /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0x40)\n                /// @src 20:4512:4620  \"if (!hasRole(role, account)) {...\"\n                if /** @src 20:4516:4539  \"!hasRole(role, account)\" */ iszero(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ and(sload(/** @src 20:3949:3980  \"$._roles[role].hasRole[account]\" */ dataSlot_1), /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0xff))\n                /// @src 20:4512:4620  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 20:4562:4609  \"AccessControlUnauthorizedAccount(account, role)\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 20:4562:4609  \"AccessControlUnauthorizedAccount(account, role)\" */ shl(224, 0xe2517d3f))\n                    /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                    mstore(/** @src 20:4562:4609  \"AccessControlUnauthorizedAccount(account, role)\" */ 4, /** @src 24:966:976  \"msg.sender\" */ caller())\n                    /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                    mstore(36, var_role)\n                    /// @src 20:4562:4609  \"AccessControlUnauthorizedAccount(account, role)\"\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 68)\n                }\n            }\n            /// @ast-id 40016 @src 20:7318:7705  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n            function fun__grantRole(var_account) -> var\n            {\n                /// @src 20:7395:7399  \"bool\"\n                var := /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0\n                mstore(0, 0)\n                mstore(0x20, /** @src 20:2968:3039  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                let dataSlot := keccak256(0, 0x40)\n                /// @src 20:3949:3980  \"$._roles[role].hasRole[account]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ and(/** @src 20:7485:7507  \"hasRole(role, account)\" */ var_account, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 20:3949:3963  \"$._roles[role]\" */ dataSlot)\n                /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0x40)\n                /// @src 20:7480:7699  \"if (!hasRole(role, account)) {...\"\n                switch /** @src 20:7484:7507  \"!hasRole(role, account)\" */ iszero(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ and(sload(/** @src 20:3949:3980  \"$._roles[role].hasRole[account]\" */ dataSlot_1), /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0xff))\n                case /** @src 20:7480:7699  \"if (!hasRole(role, account)) {...\" */ 0 {\n                    /// @src 20:7676:7688  \"return false\"\n                    var := /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0\n                    /// @src 20:7676:7688  \"return false\"\n                    leave\n                }\n                default /// @src 20:7480:7699  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                    mstore(0, 0)\n                    mstore(0x20, /** @src 20:2968:3039  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                    /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                    let dataSlot_2 := keccak256(0, 0x40)\n                    /// @src 20:7523:7554  \"$._roles[role].hasRole[account]\"\n                    let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                    /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ and(/** @src 20:7523:7554  \"$._roles[role].hasRole[account]\" */ var_account, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ sub(shl(160, 1), 1)))\n                    mstore(0x20, /** @src 20:7523:7537  \"$._roles[role]\" */ dataSlot_2)\n                    /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                    dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0x40)\n                    sstore(/** @src 20:7523:7554  \"$._roles[role].hasRole[account]\" */ dataSlot_3, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ or(and(sload(/** @src 20:7523:7554  \"$._roles[role].hasRole[account]\" */ dataSlot_3), /** @src 88:1300:12668  \"contract MessageQueue is...\" */ not(255)), /** @src 20:7557:7561  \"true\" */ 0x01))\n                    /// @src 20:7580:7620  \"RoleGranted(role, account, _msgSender())\"\n                    log4(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0, 0, /** @src 20:7580:7620  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0, and(/** @src 20:7580:7620  \"RoleGranted(role, account, _msgSender())\" */ var_account, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ sub(shl(160, 1), 1)), /** @src 24:966:976  \"msg.sender\" */ caller())\n                    /// @src 20:7634:7645  \"return true\"\n                    var := /** @src 20:7557:7561  \"true\" */ 0x01\n                    /// @src 20:7634:7645  \"return true\"\n                    leave\n                }\n            }\n            /// @ast-id 40016 @src 20:7318:7705  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n            function fun_grantRole(var_account) -> var\n            {\n                /// @src 20:7395:7399  \"bool\"\n                var := /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0\n                mstore(0, /** @src 22:4803:4804  \"1\" */ 0x01)\n                /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                mstore(0x20, /** @src 20:2968:3039  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                let dataSlot := keccak256(0, 0x40)\n                /// @src 20:3949:3980  \"$._roles[role].hasRole[account]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ and(/** @src 20:7485:7507  \"hasRole(role, account)\" */ var_account, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 20:3949:3963  \"$._roles[role]\" */ dataSlot)\n                /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0x40)\n                /// @src 20:7480:7699  \"if (!hasRole(role, account)) {...\"\n                switch /** @src 20:7484:7507  \"!hasRole(role, account)\" */ iszero(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ and(sload(/** @src 20:3949:3980  \"$._roles[role].hasRole[account]\" */ dataSlot_1), /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0xff))\n                case /** @src 20:7480:7699  \"if (!hasRole(role, account)) {...\" */ 0 {\n                    /// @src 20:7676:7688  \"return false\"\n                    var := /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0\n                    /// @src 20:7676:7688  \"return false\"\n                    leave\n                }\n                default /// @src 20:7480:7699  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                    mstore(0, /** @src 22:4803:4804  \"1\" */ 0x01)\n                    /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                    mstore(0x20, /** @src 20:2968:3039  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                    /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                    let dataSlot_2 := keccak256(0, 0x40)\n                    /// @src 20:7523:7554  \"$._roles[role].hasRole[account]\"\n                    let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                    /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ and(/** @src 20:7523:7554  \"$._roles[role].hasRole[account]\" */ var_account, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ sub(shl(160, 1), 1)))\n                    mstore(0x20, /** @src 20:7523:7537  \"$._roles[role]\" */ dataSlot_2)\n                    /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                    dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0x40)\n                    sstore(/** @src 20:7523:7554  \"$._roles[role].hasRole[account]\" */ dataSlot_3, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ or(and(sload(/** @src 20:7523:7554  \"$._roles[role].hasRole[account]\" */ dataSlot_3), /** @src 88:1300:12668  \"contract MessageQueue is...\" */ not(255)), /** @src 22:4803:4804  \"1\" */ 0x01))\n                    /// @src 20:7580:7620  \"RoleGranted(role, account, _msgSender())\"\n                    log4(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0, 0, /** @src 20:7580:7620  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, /** @src 22:4803:4804  \"1\" */ 0x01, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ and(/** @src 20:7580:7620  \"RoleGranted(role, account, _msgSender())\" */ var_account, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ sub(shl(160, 1), 1)), /** @src 24:966:976  \"msg.sender\" */ caller())\n                    /// @src 20:7634:7645  \"return true\"\n                    var := /** @src 22:4803:4804  \"1\" */ 0x01\n                    /// @src 20:7634:7645  \"return true\"\n                    leave\n                }\n            }\n            /// @ast-id 40016 @src 20:7318:7705  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n            function fun_grantRole_40016(var_role, var_account) -> var_\n            {\n                /// @src 20:7395:7399  \"bool\"\n                var_ := /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0\n                mstore(0, var_role)\n                mstore(0x20, /** @src 20:2968:3039  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                let dataSlot := keccak256(0, 0x40)\n                /// @src 20:3949:3980  \"$._roles[role].hasRole[account]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ and(/** @src 20:7485:7507  \"hasRole(role, account)\" */ var_account, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 20:3949:3963  \"$._roles[role]\" */ dataSlot)\n                /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0x40)\n                /// @src 20:7480:7699  \"if (!hasRole(role, account)) {...\"\n                switch /** @src 20:7484:7507  \"!hasRole(role, account)\" */ iszero(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ and(sload(/** @src 20:3949:3980  \"$._roles[role].hasRole[account]\" */ dataSlot_1), /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0xff))\n                case /** @src 20:7480:7699  \"if (!hasRole(role, account)) {...\" */ 0 {\n                    /// @src 20:7676:7688  \"return false\"\n                    var_ := /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0\n                    /// @src 20:7676:7688  \"return false\"\n                    leave\n                }\n                default /// @src 20:7480:7699  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                    mstore(0, var_role)\n                    mstore(0x20, /** @src 20:2968:3039  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                    /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                    let dataSlot_2 := keccak256(0, 0x40)\n                    /// @src 20:7523:7554  \"$._roles[role].hasRole[account]\"\n                    let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                    /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ and(/** @src 20:7523:7554  \"$._roles[role].hasRole[account]\" */ var_account, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ sub(shl(160, 1), 1)))\n                    mstore(0x20, /** @src 20:7523:7537  \"$._roles[role]\" */ dataSlot_2)\n                    /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                    dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0x40)\n                    sstore(/** @src 20:7523:7554  \"$._roles[role].hasRole[account]\" */ dataSlot_3, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ or(and(sload(/** @src 20:7523:7554  \"$._roles[role].hasRole[account]\" */ dataSlot_3), /** @src 88:1300:12668  \"contract MessageQueue is...\" */ not(255)), /** @src 20:7557:7561  \"true\" */ 0x01))\n                    /// @src 20:7580:7620  \"RoleGranted(role, account, _msgSender())\"\n                    log4(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0, 0, /** @src 20:7580:7620  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, var_role, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ and(/** @src 20:7580:7620  \"RoleGranted(role, account, _msgSender())\" */ var_account, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ sub(shl(160, 1), 1)), /** @src 24:966:976  \"msg.sender\" */ caller())\n                    /// @src 20:7634:7645  \"return true\"\n                    var_ := /** @src 20:7557:7561  \"true\" */ 0x01\n                    /// @src 20:7634:7645  \"return true\"\n                    leave\n                }\n            }\n            /// @ast-id 40062 @src 20:7942:8330  \"function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n            function fun_revokeRole(var_role, var_account) -> var\n            {\n                /// @src 20:8020:8024  \"bool\"\n                var := /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0\n                mstore(0, var_role)\n                mstore(0x20, /** @src 20:2968:3039  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                let dataSlot := keccak256(0, 0x40)\n                /// @src 20:3949:3980  \"$._roles[role].hasRole[account]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ and(/** @src 20:8109:8131  \"hasRole(role, account)\" */ var_account, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 20:3949:3963  \"$._roles[role]\" */ dataSlot)\n                /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0x40)\n                /// @src 20:8105:8324  \"if (hasRole(role, account)) {...\"\n                switch /** @src 88:1300:12668  \"contract MessageQueue is...\" */ and(sload(/** @src 20:3949:3980  \"$._roles[role].hasRole[account]\" */ dataSlot_1), /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0xff)\n                case /** @src 20:8105:8324  \"if (hasRole(role, account)) {...\" */ 0 {\n                    /// @src 20:8301:8313  \"return false\"\n                    var := /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0\n                    /// @src 20:8301:8313  \"return false\"\n                    leave\n                }\n                default /// @src 20:8105:8324  \"if (hasRole(role, account)) {...\"\n                {\n                    /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                    mstore(0, var_role)\n                    mstore(0x20, /** @src 20:2968:3039  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                    /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                    let dataSlot_2 := keccak256(0, 0x40)\n                    /// @src 20:8147:8178  \"$._roles[role].hasRole[account]\"\n                    let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                    /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ and(/** @src 20:8147:8178  \"$._roles[role].hasRole[account]\" */ var_account, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ sub(shl(160, 1), 1)))\n                    mstore(0x20, /** @src 20:8147:8161  \"$._roles[role]\" */ dataSlot_2)\n                    /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                    dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0x40)\n                    sstore(/** @src 20:8147:8178  \"$._roles[role].hasRole[account]\" */ dataSlot_3, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ and(sload(/** @src 20:8147:8178  \"$._roles[role].hasRole[account]\" */ dataSlot_3), /** @src 88:1300:12668  \"contract MessageQueue is...\" */ not(255)))\n                    /// @src 20:8205:8245  \"RoleRevoked(role, account, _msgSender())\"\n                    log4(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0, 0, /** @src 20:8205:8245  \"RoleRevoked(role, account, _msgSender())\" */ 0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b, var_role, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ and(/** @src 20:8205:8245  \"RoleRevoked(role, account, _msgSender())\" */ var_account, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ sub(shl(160, 1), 1)), /** @src 24:966:976  \"msg.sender\" */ caller())\n                    /// @src 20:8259:8270  \"return true\"\n                    var := /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 1\n                    /// @src 20:8259:8270  \"return true\"\n                    leave\n                }\n            }\n            /// @ast-id 63935 @src 108:1324:1705  \"function verifyProofCalldata(...\"\n            function fun_verifyProofCalldata(var_root, var_proof_offset, var_proof_length, var_numberOfLeaves, var_leafIndex, var_leafHash) -> var\n            {\n                /// @src 108:1523:1527  \"bool\"\n                var := /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0\n                /// @src 108:1539:1609  \"if (leafIndex >= numberOfLeaves) {...\"\n                if /** @src 108:1543:1570  \"leafIndex >= numberOfLeaves\" */ iszero(lt(var_leafIndex, var_numberOfLeaves))\n                /// @src 108:1539:1609  \"if (leafIndex >= numberOfLeaves) {...\"\n                {\n                    /// @src 108:1586:1598  \"return false\"\n                    var := /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0\n                    /// @src 108:1586:1598  \"return false\"\n                    leave\n                }\n                /// @src 108:2296:2324  \"uint256 position = leafIndex\"\n                let var_position := var_leafIndex\n                /// @src 108:2334:2364  \"uint256 width = numberOfLeaves\"\n                let var_width := var_numberOfLeaves\n                /// @src 108:2374:2401  \"bytes32 computed = leafHash\"\n                let var_computed := var_leafHash\n                /// @src 108:2417:2430  \"uint256 i = 0\"\n                let var_i := /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0\n                /// @src 108:2412:3115  \"for (uint256 i = 0; i < proof.length; i++) {...\"\n                for { }\n                /** @src 108:2632:2633  \"1\" */ 0x01\n                /// @src 108:2417:2430  \"uint256 i = 0\"\n                {\n                    /// @src 108:2450:2453  \"i++\"\n                    var_i := /** @src 88:1300:12668  \"contract MessageQueue is...\" */ add(/** @src 108:2450:2453  \"i++\" */ var_i, /** @src 108:2632:2633  \"1\" */ 0x01)\n                }\n                /// @src 108:2450:2453  \"i++\"\n                {\n                    /// @src 108:2432:2448  \"i < proof.length\"\n                    let _1 := iszero(lt(var_i, /** @src 108:2436:2448  \"proof.length\" */ var_proof_length))\n                    /// @src 108:2432:2448  \"i < proof.length\"\n                    if _1 { break }\n                    /// @src 108:2469:2489  \"bytes32 a = computed\"\n                    let var_a := var_computed\n                    /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                    _1 := 0\n                    let value := calldataload(add(var_proof_offset, shl(5, var_i)))\n                    /// @src 108:2789:2834  \"position % 2 == 1 || positionPlusOne == width\"\n                    let expr := /** @src 108:2789:2806  \"position % 2 == 1\" */ eq(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ and(var_position, /** @src 108:2632:2633  \"1\" */ 0x01), 0x01)\n                    /// @src 108:2789:2834  \"position % 2 == 1 || positionPlusOne == width\"\n                    if iszero(expr)\n                    {\n                        expr := /** @src 108:2810:2834  \"positionPlusOne == width\" */ eq(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ add(/** @src 108:2621:2633  \"position + 1\" */ var_position, /** @src 108:2632:2633  \"1\" */ 0x01), /** @src 108:2810:2834  \"positionPlusOne == width\" */ var_width)\n                    }\n                    /// @src 108:2785:2992  \"if (position % 2 == 1 || positionPlusOne == width) {...\"\n                    switch expr\n                    case 0 {\n                        /// @src 64:889:1024  \"assembly (\\\"memory-safe\\\") {...\"\n                        mstore(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0, /** @src 64:889:1024  \"assembly (\\\"memory-safe\\\") {...\" */ var_computed)\n                        mstore(0x20, value)\n                        /// @src 108:2935:2977  \"computed = Hashes.efficientKeccak256(a, b)\"\n                        var_computed := /** @src 64:889:1024  \"assembly (\\\"memory-safe\\\") {...\" */ keccak256(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0, /** @src 64:889:1024  \"assembly (\\\"memory-safe\\\") {...\" */ 0x40)\n                    }\n                    default /// @src 108:2785:2992  \"if (position % 2 == 1 || positionPlusOne == width) {...\"\n                    {\n                        /// @src 64:889:1024  \"assembly (\\\"memory-safe\\\") {...\"\n                        mstore(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0, /** @src 64:889:1024  \"assembly (\\\"memory-safe\\\") {...\" */ value)\n                        mstore(0x20, var_a)\n                        /// @src 108:2854:2896  \"computed = Hashes.efficientKeccak256(b, a)\"\n                        var_computed := /** @src 64:889:1024  \"assembly (\\\"memory-safe\\\") {...\" */ keccak256(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0, /** @src 64:889:1024  \"assembly (\\\"memory-safe\\\") {...\" */ 0x40)\n                    }\n                    /// @src 108:3006:3019  \"position /= 2\"\n                    var_position := /** @src 88:1300:12668  \"contract MessageQueue is...\" */ shr(/** @src 108:2632:2633  \"1\" */ 0x01, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ var_position)\n                    /// @src 108:3061:3090  \"width = ((width - 1) / 2) + 1\"\n                    var_width := /** @src 88:1300:12668  \"contract MessageQueue is...\" */ add(shr(/** @src 108:2632:2633  \"1\" */ 0x01, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ add(/** @src 108:3071:3080  \"width - 1\" */ var_width, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ not(0))), /** @src 108:2632:2633  \"1\" */ 0x01)\n                }\n                /// @src 108:1619:1698  \"return processProofCalldata(proof, numberOfLeaves, leafIndex, leafHash) == root\"\n                var := /** @src 108:1626:1698  \"processProofCalldata(proof, numberOfLeaves, leafIndex, leafHash) == root\" */ eq(var_computed, var_root)\n            }\n            /// @ast-id 40434 @src 22:7082:7223  \"function _checkInitializing() internal view virtual {...\"\n            function fun_checkInitializing()\n            {\n                /// @src 22:7144:7217  \"if (!_isInitializing()) {...\"\n                if /** @src 22:7148:7166  \"!_isInitializing()\" */ iszero(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ and(shr(64, sload(/** @src 22:3147:3213  \"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\" */ 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00)), /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 0xff))\n                /// @src 22:7144:7217  \"if (!_isInitializing()) {...\"\n                {\n                    /// @src 22:7189:7206  \"NotInitializing()\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 22:7189:7206  \"NotInitializing()\" */ shl(227, 0x1afcd79f))\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 22:7189:7206  \"NotInitializing()\" */ 4)\n                }\n            }\n            /// @ast-id 43712 @src 51:4437:5019  \"function verifyCallResultFromTarget(...\"\n            function fun_verifyCallResultFromTarget(var_target, var_success, var_returndata_mpos) -> var_mpos\n            {\n                /// @src 51:4581:4593  \"bytes memory\"\n                var_mpos := /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 96\n                /// @src 51:4605:5013  \"if (!success) {...\"\n                switch /** @src 51:4609:4617  \"!success\" */ iszero(var_success)\n                case /** @src 51:4605:5013  \"if (!success) {...\" */ 0 {\n                    /// @src 51:4857:4906  \"returndata.length == 0 && target.code.length == 0\"\n                    let expr := /** @src 51:4857:4879  \"returndata.length == 0\" */ iszero(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ mload(/** @src 51:4857:4874  \"returndata.length\" */ var_returndata_mpos))\n                    /// @src 51:4857:4906  \"returndata.length == 0 && target.code.length == 0\"\n                    if expr\n                    {\n                        expr := /** @src 51:4883:4906  \"target.code.length == 0\" */ iszero(/** @src 51:4883:4901  \"target.code.length\" */ extcodesize(var_target))\n                    }\n                    /// @src 51:4853:4972  \"if (returndata.length == 0 && target.code.length == 0) {...\"\n                    if expr\n                    {\n                        /// @src 51:4933:4957  \"AddressEmptyCode(target)\"\n                        mstore(/** @src 51:4878:4879  \"0\" */ 0x00, /** @src 51:4933:4957  \"AddressEmptyCode(target)\" */ shl(224, 0x9996b315))\n                        /// @src 88:1300:12668  \"contract MessageQueue is...\"\n                        mstore(/** @src 51:4933:4957  \"AddressEmptyCode(target)\" */ 4, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ and(var_target, sub(shl(160, 1), 1)))\n                        /// @src 51:4933:4957  \"AddressEmptyCode(target)\"\n                        revert(/** @src 51:4878:4879  \"0\" */ 0x00, /** @src 88:1300:12668  \"contract MessageQueue is...\" */ 36)\n                    }\n                    /// @src 51:4985:5002  \"return returndata\"\n                    var_mpos := var_returndata_mpos\n                    leave\n                }\n                default /// @src 51:4605:5013  \"if (!success) {...\"\n                {\n                    /// @src 51:5686:5987  \"if (returndata.length > 0) {...\"\n                    switch /** @src 51:5690:5711  \"returndata.length > 0\" */ iszero(iszero(/** @src 88:1300:12668  \"contract MessageQueue is...\" */ mload(/** @src 51:5690:5707  \"returndata.length\" */ var_returndata_mpos)))\n                    case /** @src 51:5686:5987  \"if (returndata.length > 0) {...\" */ 0 {\n                        /// @src 51:5957:5976  \"Errors.FailedCall()\"\n                        mstore(/** @src 51:5710:5711  \"0\" */ 0x00, /** @src 51:5957:5976  \"Errors.FailedCall()\" */ shl(224, 0xd6bda275))\n                        revert(/** @src 51:5710:5711  \"0\" */ 0x00, /** @src 51:5957:5976  \"Errors.FailedCall()\" */ 4)\n                    }\n                    default /// @src 51:5686:5987  \"if (returndata.length > 0) {...\"\n                    {\n                        /// @src 51:5815:5920  \"assembly (\\\"memory-safe\\\") {...\"\n                        revert(add(var_returndata_mpos, 0x20), mload(var_returndata_mpos))\n                    }\n                }\n            }\n        }\n        data \".metadata\" hex\"\"\n    }\n}\n","ast":{"absolutePath":"src/MessageQueue.sol","id":62482,"exportedSymbols":{"AccessControlUpgradeable":[40063],"BinaryMerkleTree":[64186],"Hasher":[63828],"IGovernance":[63462],"IMessageHandler":[63584],"IMessageQueue":[63760],"IPausable":[63840],"IVerifier":[63882],"Initializable":[40526],"MessageQueue":[62481],"PausableUpgradeable":[40914],"UUPSUpgradeable":[40708],"VaraMessage":[63613]},"nodeType":"SourceUnit","src":"74:12595:88","nodes":[{"id":61861,"nodeType":"PragmaDirective","src":"74:24:88","nodes":[],"literals":["solidity","^","0.8",".30"]},{"id":61863,"nodeType":"ImportDirective","src":"100:96:88","nodes":[],"absolutePath":"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","nameLocation":"-1:-1:-1","scope":62482,"sourceUnit":40527,"symbolAliases":[{"foreign":{"id":61862,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40526,"src":"108:13:88","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":61865,"nodeType":"ImportDirective","src":"197:113:88","nodes":[],"absolutePath":"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","nameLocation":"-1:-1:-1","scope":62482,"sourceUnit":40064,"symbolAliases":[{"foreign":{"id":61864,"name":"AccessControlUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40063,"src":"205:24:88","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":61867,"nodeType":"ImportDirective","src":"311:102:88","nodes":[],"absolutePath":"lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol","nameLocation":"-1:-1:-1","scope":62482,"sourceUnit":40915,"symbolAliases":[{"foreign":{"id":61866,"name":"PausableUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40914,"src":"319:19:88","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":61869,"nodeType":"ImportDirective","src":"414:100:88","nodes":[],"absolutePath":"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","nameLocation":"-1:-1:-1","scope":62482,"sourceUnit":40709,"symbolAliases":[{"foreign":{"id":61868,"name":"UUPSUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40708,"src":"422:15:88","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":61871,"nodeType":"ImportDirective","src":"515:57:88","nodes":[],"absolutePath":"src/interfaces/IGovernance.sol","file":"./interfaces/IGovernance.sol","nameLocation":"-1:-1:-1","scope":62482,"sourceUnit":63573,"symbolAliases":[{"foreign":{"id":61870,"name":"IGovernance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63462,"src":"523:11:88","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":61873,"nodeType":"ImportDirective","src":"573:65:88","nodes":[],"absolutePath":"src/interfaces/IMessageHandler.sol","file":"./interfaces/IMessageHandler.sol","nameLocation":"-1:-1:-1","scope":62482,"sourceUnit":63585,"symbolAliases":[{"foreign":{"id":61872,"name":"IMessageHandler","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63584,"src":"581:15:88","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":61877,"nodeType":"ImportDirective","src":"639:82:88","nodes":[],"absolutePath":"src/interfaces/IMessageQueue.sol","file":"./interfaces/IMessageQueue.sol","nameLocation":"-1:-1:-1","scope":62482,"sourceUnit":63829,"symbolAliases":[{"foreign":{"id":61874,"name":"VaraMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63613,"src":"647:11:88","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":61875,"name":"IMessageQueue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63760,"src":"660:13:88","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":61876,"name":"Hasher","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63828,"src":"675:6:88","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":61879,"nodeType":"ImportDirective","src":"722:53:88","nodes":[],"absolutePath":"src/interfaces/IPausable.sol","file":"./interfaces/IPausable.sol","nameLocation":"-1:-1:-1","scope":62482,"sourceUnit":63841,"symbolAliases":[{"foreign":{"id":61878,"name":"IPausable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63840,"src":"730:9:88","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":61881,"nodeType":"ImportDirective","src":"776:53:88","nodes":[],"absolutePath":"src/interfaces/IVerifier.sol","file":"./interfaces/IVerifier.sol","nameLocation":"-1:-1:-1","scope":62482,"sourceUnit":63883,"symbolAliases":[{"foreign":{"id":61880,"name":"IVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63882,"src":"784:9:88","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":61883,"nodeType":"ImportDirective","src":"830:66:88","nodes":[],"absolutePath":"src/libraries/BinaryMerkleTree.sol","file":"./libraries/BinaryMerkleTree.sol","nameLocation":"-1:-1:-1","scope":62482,"sourceUnit":64187,"symbolAliases":[{"foreign":{"id":61882,"name":"BinaryMerkleTree","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64186,"src":"838:16:88","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":62481,"nodeType":"ContractDefinition","src":"1300:11368:88","nodes":[{"id":61900,"nodeType":"UsingForDirective","src":"1459:29:88","nodes":[],"global":false,"libraryName":{"id":61897,"name":"Hasher","nameLocations":["1465:6:88"],"nodeType":"IdentifierPath","referencedDeclaration":63828,"src":"1465:6:88"},"typeName":{"id":61899,"nodeType":"UserDefinedTypeName","pathNode":{"id":61898,"name":"VaraMessage","nameLocations":["1476:11:88"],"nodeType":"IdentifierPath","referencedDeclaration":63613,"src":"1476:11:88"},"referencedDeclaration":63613,"src":"1476:11:88","typeDescriptions":{"typeIdentifier":"t_struct$_VaraMessage_$63613_storage_ptr","typeString":"struct VaraMessage"}}},{"id":61909,"nodeType":"VariableDeclaration","src":"1494:60:88","nodes":[],"constant":true,"functionSelector":"e63ab1e9","mutability":"constant","name":"PAUSER_ROLE","nameLocation":"1518:11:88","scope":62481,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":61901,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1494:7:88","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"arguments":[{"hexValue":"30783031","id":61906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1548:4:88","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":61905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1540:7:88","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":61904,"name":"uint256","nodeType":"ElementaryTypeName","src":"1540:7:88","typeDescriptions":{}}},"id":61907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1540:13:88","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":61903,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1532:7:88","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":61902,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1532:7:88","typeDescriptions":{}}},"id":61908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1532:22:88","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"id":61912,"nodeType":"VariableDeclaration","src":"1560:57:88","nodes":[],"constant":true,"functionSelector":"a8d7a645","mutability":"constant","name":"PROCESS_MESSAGE_DELAY","nameLocation":"1584:21:88","scope":62481,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":61910,"name":"uint256","nodeType":"ElementaryTypeName","src":"1560:7:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"35","id":61911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1608:9:88","subdenomination":"minutes","typeDescriptions":{"typeIdentifier":"t_rational_300_by_1","typeString":"int_const 300"},"value":"5"},"visibility":"public"},{"id":61915,"nodeType":"VariableDeclaration","src":"1624:36:88","nodes":[],"constant":false,"mutability":"mutable","name":"_governanceAdmin","nameLocation":"1644:16:88","scope":62481,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63462","typeString":"contract IGovernance"},"typeName":{"id":61914,"nodeType":"UserDefinedTypeName","pathNode":{"id":61913,"name":"IGovernance","nameLocations":["1624:11:88"],"nodeType":"IdentifierPath","referencedDeclaration":63462,"src":"1624:11:88"},"referencedDeclaration":63462,"src":"1624:11:88","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63462","typeString":"contract IGovernance"}},"visibility":"private"},{"id":61918,"nodeType":"VariableDeclaration","src":"1666:37:88","nodes":[],"constant":false,"mutability":"mutable","name":"_governancePauser","nameLocation":"1686:17:88","scope":62481,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63462","typeString":"contract IGovernance"},"typeName":{"id":61917,"nodeType":"UserDefinedTypeName","pathNode":{"id":61916,"name":"IGovernance","nameLocations":["1666:11:88"],"nodeType":"IdentifierPath","referencedDeclaration":63462,"src":"1666:11:88"},"referencedDeclaration":63462,"src":"1666:11:88","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63462","typeString":"contract IGovernance"}},"visibility":"private"},{"id":61920,"nodeType":"VariableDeclaration","src":"1709:35:88","nodes":[],"constant":false,"mutability":"mutable","name":"_emergencyStopAdmin","nameLocation":"1725:19:88","scope":62481,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61919,"name":"address","nodeType":"ElementaryTypeName","src":"1709:7:88","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"id":61923,"nodeType":"VariableDeclaration","src":"1750:27:88","nodes":[],"constant":false,"mutability":"mutable","name":"_verifier","nameLocation":"1768:9:88","scope":62481,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IVerifier_$63882","typeString":"contract IVerifier"},"typeName":{"id":61922,"nodeType":"UserDefinedTypeName","pathNode":{"id":61921,"name":"IVerifier","nameLocations":["1750:9:88"],"nodeType":"IdentifierPath","referencedDeclaration":63882,"src":"1750:9:88"},"referencedDeclaration":63882,"src":"1750:9:88","typeDescriptions":{"typeIdentifier":"t_contract$_IVerifier_$63882","typeString":"contract IVerifier"}},"visibility":"private"},{"id":61925,"nodeType":"VariableDeclaration","src":"1783:27:88","nodes":[],"constant":false,"mutability":"mutable","name":"_emergencyStop","nameLocation":"1796:14:88","scope":62481,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":61924,"name":"bool","nodeType":"ElementaryTypeName","src":"1783:4:88","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"id":61929,"nodeType":"VariableDeclaration","src":"1816:72:88","nodes":[],"constant":false,"mutability":"mutable","name":"_blockNumbers","nameLocation":"1875:13:88","scope":62481,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"},"typeName":{"id":61928,"keyName":"blockNumber","keyNameLocation":"1832:11:88","keyType":{"id":61926,"name":"uint256","nodeType":"ElementaryTypeName","src":"1824:7:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1816:50:88","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"},"valueName":"merkleRoot","valueNameLocation":"1855:10:88","valueType":{"id":61927,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1847:7:88","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},"visibility":"private"},{"id":61933,"nodeType":"VariableDeclaration","src":"1894:78:88","nodes":[],"constant":false,"mutability":"mutable","name":"_merkleRootTimestamps","nameLocation":"1951:21:88","scope":62481,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":61932,"keyName":"merkleRoot","keyNameLocation":"1910:10:88","keyType":{"id":61930,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1902:7:88","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1894:48:88","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"timestamp","valueNameLocation":"1932:9:88","valueType":{"id":61931,"name":"uint256","nodeType":"ElementaryTypeName","src":"1924:7:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"id":61937,"nodeType":"VariableDeclaration","src":"1978:76:88","nodes":[],"constant":false,"mutability":"mutable","name":"_processedMessages","nameLocation":"2036:18:88","scope":62481,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"typeName":{"id":61936,"keyName":"messageNonce","keyNameLocation":"1994:12:88","keyType":{"id":61934,"name":"uint256","nodeType":"ElementaryTypeName","src":"1986:7:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1978:49:88","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"valueName":"isProcessed","valueNameLocation":"2015:11:88","valueType":{"id":61935,"name":"bool","nodeType":"ElementaryTypeName","src":"2010:4:88","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"private"},{"id":61945,"nodeType":"FunctionDefinition","src":"2129:53:88","nodes":[],"body":{"id":61944,"nodeType":"Block","src":"2143:39:88","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":61941,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40480,"src":"2153:20:88","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":61942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2153:22:88","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":61943,"nodeType":"ExpressionStatement","src":"2153:22:88"}]},"documentation":{"id":61938,"nodeType":"StructuredDocumentation","src":"2061:63:88","text":" @custom:oz-upgrades-unsafe-allow constructor"},"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","parameters":{"id":61939,"nodeType":"ParameterList","parameters":[],"src":"2140:2:88"},"returnParameters":{"id":61940,"nodeType":"ParameterList","parameters":[],"src":"2143:0:88"},"scope":62481,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":62012,"nodeType":"FunctionDefinition","src":"3097:653:88","nodes":[],"body":{"id":62011,"nodeType":"Block","src":"3285:465:88","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":61962,"name":"__AccessControl_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39764,"src":"3295:20:88","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":61963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3295:22:88","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":61964,"nodeType":"ExpressionStatement","src":"3295:22:88"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":61965,"name":"__Pausable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40818,"src":"3327:15:88","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":61966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3327:17:88","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":61967,"nodeType":"ExpressionStatement","src":"3327:17:88"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":61968,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40580,"src":"3354:22:88","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":61969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3354:24:88","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":61970,"nodeType":"ExpressionStatement","src":"3354:24:88"},{"expression":{"arguments":[{"id":61972,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39729,"src":"3400:18:88","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":61975,"name":"governanceAdmin_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61949,"src":"3428:16:88","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63462","typeString":"contract IGovernance"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IGovernance_$63462","typeString":"contract IGovernance"}],"id":61974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3420:7:88","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61973,"name":"address","nodeType":"ElementaryTypeName","src":"3420:7:88","typeDescriptions":{}}},"id":61976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3420:25:88","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":61971,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40016,"src":"3389:10:88","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":61977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3389:57:88","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":61978,"nodeType":"ExpressionStatement","src":"3389:57:88"},{"expression":{"arguments":[{"id":61980,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61909,"src":"3468:11:88","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":61983,"name":"governanceAdmin_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61949,"src":"3489:16:88","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63462","typeString":"contract IGovernance"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IGovernance_$63462","typeString":"contract IGovernance"}],"id":61982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3481:7:88","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61981,"name":"address","nodeType":"ElementaryTypeName","src":"3481:7:88","typeDescriptions":{}}},"id":61984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3481:25:88","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":61979,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40016,"src":"3457:10:88","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":61985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3457:50:88","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":61986,"nodeType":"ExpressionStatement","src":"3457:50:88"},{"expression":{"arguments":[{"id":61988,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61909,"src":"3528:11:88","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":61991,"name":"governancePauser_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61952,"src":"3549:17:88","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63462","typeString":"contract IGovernance"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IGovernance_$63462","typeString":"contract IGovernance"}],"id":61990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3541:7:88","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61989,"name":"address","nodeType":"ElementaryTypeName","src":"3541:7:88","typeDescriptions":{}}},"id":61992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3541:26:88","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":61987,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40016,"src":"3517:10:88","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":61993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3517:51:88","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":61994,"nodeType":"ExpressionStatement","src":"3517:51:88"},{"expression":{"id":61997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":61995,"name":"_governanceAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61915,"src":"3579:16:88","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63462","typeString":"contract IGovernance"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":61996,"name":"governanceAdmin_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61949,"src":"3598:16:88","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63462","typeString":"contract IGovernance"}},"src":"3579:35:88","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63462","typeString":"contract IGovernance"}},"id":61998,"nodeType":"ExpressionStatement","src":"3579:35:88"},{"expression":{"id":62001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":61999,"name":"_governancePauser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61918,"src":"3624:17:88","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63462","typeString":"contract IGovernance"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":62000,"name":"governancePauser_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61952,"src":"3644:17:88","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63462","typeString":"contract IGovernance"}},"src":"3624:37:88","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63462","typeString":"contract IGovernance"}},"id":62002,"nodeType":"ExpressionStatement","src":"3624:37:88"},{"expression":{"id":62005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":62003,"name":"_emergencyStopAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61920,"src":"3671:19:88","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":62004,"name":"emergencyStopAdmin_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61954,"src":"3693:19:88","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3671:41:88","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":62006,"nodeType":"ExpressionStatement","src":"3671:41:88"},{"expression":{"id":62009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":62007,"name":"_verifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61923,"src":"3722:9:88","typeDescriptions":{"typeIdentifier":"t_contract$_IVerifier_$63882","typeString":"contract IVerifier"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":62008,"name":"verifier_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61957,"src":"3734:9:88","typeDescriptions":{"typeIdentifier":"t_contract$_IVerifier_$63882","typeString":"contract IVerifier"}},"src":"3722:21:88","typeDescriptions":{"typeIdentifier":"t_contract$_IVerifier_$63882","typeString":"contract IVerifier"}},"id":62010,"nodeType":"ExpressionStatement","src":"3722:21:88"}]},"documentation":{"id":61946,"nodeType":"StructuredDocumentation","src":"2188:904:88","text":" @dev Initializes the MessageQueue contract with the Verifier address.\n      GovernanceAdmin contract is used to upgrade, pause/unpause the MessageQueue contract.\n      GovernancePauser contract is used to pause/unpause the MessageQueue contract.\n @param governanceAdmin_ The address of the GovernanceAdmin contract that will process messages.\n @param governancePauser_ The address of the GovernanceAdmin contract that will process pauser messages.\n @param emergencyStopAdmin_ The address of EOA (multi-sig) that will control `submitMerkleRoot` and `processMessage`\n                            in case of an emergency stop. This EOA will be able to disable the emergency stop at\n                            the same time along with the verifier change.\n @param verifier_ The address of the Verifier contract that will verify merkle roots."},"functionSelector":"f8c8765e","implemented":true,"kind":"function","modifiers":[{"id":61960,"kind":"modifierInvocation","modifierName":{"id":61959,"name":"initializer","nameLocations":["3273:11:88"],"nodeType":"IdentifierPath","referencedDeclaration":40366,"src":"3273:11:88"},"nodeType":"ModifierInvocation","src":"3273:11:88"}],"name":"initialize","nameLocation":"3106:10:88","parameters":{"id":61958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61949,"mutability":"mutable","name":"governanceAdmin_","nameLocation":"3138:16:88","nodeType":"VariableDeclaration","scope":62012,"src":"3126:28:88","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63462","typeString":"contract IGovernance"},"typeName":{"id":61948,"nodeType":"UserDefinedTypeName","pathNode":{"id":61947,"name":"IGovernance","nameLocations":["3126:11:88"],"nodeType":"IdentifierPath","referencedDeclaration":63462,"src":"3126:11:88"},"referencedDeclaration":63462,"src":"3126:11:88","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63462","typeString":"contract IGovernance"}},"visibility":"internal"},{"constant":false,"id":61952,"mutability":"mutable","name":"governancePauser_","nameLocation":"3176:17:88","nodeType":"VariableDeclaration","scope":62012,"src":"3164:29:88","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63462","typeString":"contract IGovernance"},"typeName":{"id":61951,"nodeType":"UserDefinedTypeName","pathNode":{"id":61950,"name":"IGovernance","nameLocations":["3164:11:88"],"nodeType":"IdentifierPath","referencedDeclaration":63462,"src":"3164:11:88"},"referencedDeclaration":63462,"src":"3164:11:88","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63462","typeString":"contract IGovernance"}},"visibility":"internal"},{"constant":false,"id":61954,"mutability":"mutable","name":"emergencyStopAdmin_","nameLocation":"3211:19:88","nodeType":"VariableDeclaration","scope":62012,"src":"3203:27:88","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61953,"name":"address","nodeType":"ElementaryTypeName","src":"3203:7:88","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":61957,"mutability":"mutable","name":"verifier_","nameLocation":"3250:9:88","nodeType":"VariableDeclaration","scope":62012,"src":"3240:19:88","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IVerifier_$63882","typeString":"contract IVerifier"},"typeName":{"id":61956,"nodeType":"UserDefinedTypeName","pathNode":{"id":61955,"name":"IVerifier","nameLocations":["3240:9:88"],"nodeType":"IdentifierPath","referencedDeclaration":63882,"src":"3240:9:88"},"referencedDeclaration":63882,"src":"3240:9:88","typeDescriptions":{"typeIdentifier":"t_contract$_IVerifier_$63882","typeString":"contract IVerifier"}},"visibility":"internal"}],"src":"3116:149:88"},"returnParameters":{"id":61961,"nodeType":"ParameterList","parameters":[],"src":"3285:0:88"},"scope":62481,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":62024,"nodeType":"FunctionDefinition","src":"3875:108:88","nodes":[],"body":{"id":62023,"nodeType":"Block","src":"3934:49:88","nodes":[],"statements":[{"expression":{"arguments":[{"id":62020,"name":"_governanceAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61915,"src":"3959:16:88","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63462","typeString":"contract IGovernance"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IGovernance_$63462","typeString":"contract IGovernance"}],"id":62019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3951:7:88","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":62018,"name":"address","nodeType":"ElementaryTypeName","src":"3951:7:88","typeDescriptions":{}}},"id":62021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3951:25:88","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":62017,"id":62022,"nodeType":"Return","src":"3944:32:88"}]},"baseFunctions":[63679],"documentation":{"id":62013,"nodeType":"StructuredDocumentation","src":"3756:114:88","text":" @dev Returns governance admin address.\n @return governanceAdmin Governance admin address."},"functionSelector":"0058f6b8","implemented":true,"kind":"function","modifiers":[],"name":"governanceAdmin","nameLocation":"3884:15:88","parameters":{"id":62014,"nodeType":"ParameterList","parameters":[],"src":"3899:2:88"},"returnParameters":{"id":62017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62016,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":62024,"src":"3925:7:88","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":62015,"name":"address","nodeType":"ElementaryTypeName","src":"3925:7:88","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3924:9:88"},"scope":62481,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":62036,"nodeType":"FunctionDefinition","src":"4111:110:88","nodes":[],"body":{"id":62035,"nodeType":"Block","src":"4171:50:88","nodes":[],"statements":[{"expression":{"arguments":[{"id":62032,"name":"_governancePauser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61918,"src":"4196:17:88","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63462","typeString":"contract IGovernance"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IGovernance_$63462","typeString":"contract IGovernance"}],"id":62031,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4188:7:88","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":62030,"name":"address","nodeType":"ElementaryTypeName","src":"4188:7:88","typeDescriptions":{}}},"id":62033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4188:26:88","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":62029,"id":62034,"nodeType":"Return","src":"4181:33:88"}]},"baseFunctions":[63685],"documentation":{"id":62025,"nodeType":"StructuredDocumentation","src":"3989:117:88","text":" @dev Returns governance pauser address.\n @return governancePauser Governance pauser address."},"functionSelector":"c81eb797","implemented":true,"kind":"function","modifiers":[],"name":"governancePauser","nameLocation":"4120:16:88","parameters":{"id":62026,"nodeType":"ParameterList","parameters":[],"src":"4136:2:88"},"returnParameters":{"id":62029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62028,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":62036,"src":"4162:7:88","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":62027,"name":"address","nodeType":"ElementaryTypeName","src":"4162:7:88","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4161:9:88"},"scope":62481,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":62045,"nodeType":"FunctionDefinition","src":"4357:105:88","nodes":[],"body":{"id":62044,"nodeType":"Block","src":"4419:43:88","nodes":[],"statements":[{"expression":{"id":62042,"name":"_emergencyStopAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61920,"src":"4436:19:88","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":62041,"id":62043,"nodeType":"Return","src":"4429:26:88"}]},"baseFunctions":[63691],"documentation":{"id":62037,"nodeType":"StructuredDocumentation","src":"4227:125:88","text":" @dev Returns emergency stop admin address.\n @return emergencyStopAdmin Emergency stop admin address."},"functionSelector":"b13f222c","implemented":true,"kind":"function","modifiers":[],"name":"emergencyStopAdmin","nameLocation":"4366:18:88","parameters":{"id":62038,"nodeType":"ParameterList","parameters":[],"src":"4384:2:88"},"returnParameters":{"id":62041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62040,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":62045,"src":"4410:7:88","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":62039,"name":"address","nodeType":"ElementaryTypeName","src":"4410:7:88","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4409:9:88"},"scope":62481,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":62057,"nodeType":"FunctionDefinition","src":"4564:94:88","nodes":[],"body":{"id":62056,"nodeType":"Block","src":"4616:42:88","nodes":[],"statements":[{"expression":{"arguments":[{"id":62053,"name":"_verifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61923,"src":"4641:9:88","typeDescriptions":{"typeIdentifier":"t_contract$_IVerifier_$63882","typeString":"contract IVerifier"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IVerifier_$63882","typeString":"contract IVerifier"}],"id":62052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4633:7:88","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":62051,"name":"address","nodeType":"ElementaryTypeName","src":"4633:7:88","typeDescriptions":{}}},"id":62054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4633:18:88","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":62050,"id":62055,"nodeType":"Return","src":"4626:25:88"}]},"baseFunctions":[63697],"documentation":{"id":62046,"nodeType":"StructuredDocumentation","src":"4468:91:88","text":" @dev Returns verifier address.\n @return verifier Verifier address."},"functionSelector":"2b7ac3f3","implemented":true,"kind":"function","modifiers":[],"name":"verifier","nameLocation":"4573:8:88","parameters":{"id":62047,"nodeType":"ParameterList","parameters":[],"src":"4581:2:88"},"returnParameters":{"id":62050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62049,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":62057,"src":"4607:7:88","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":62048,"name":"address","nodeType":"ElementaryTypeName","src":"4607:7:88","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4606:9:88"},"scope":62481,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":62066,"nodeType":"FunctionDefinition","src":"4780:97:88","nodes":[],"body":{"id":62065,"nodeType":"Block","src":"4839:38:88","nodes":[],"statements":[{"expression":{"id":62063,"name":"_emergencyStop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61925,"src":"4856:14:88","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":62062,"id":62064,"nodeType":"Return","src":"4849:21:88"}]},"baseFunctions":[63703],"documentation":{"id":62058,"nodeType":"StructuredDocumentation","src":"4664:111:88","text":" @dev Returns emergency stop status.\n @return isEmergencyStopped emergency stop status."},"functionSelector":"fddd4837","implemented":true,"kind":"function","modifiers":[],"name":"isEmergencyStopped","nameLocation":"4789:18:88","parameters":{"id":62059,"nodeType":"ParameterList","parameters":[],"src":"4807:2:88"},"returnParameters":{"id":62062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62061,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":62066,"src":"4833:4:88","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":62060,"name":"bool","nodeType":"ElementaryTypeName","src":"4833:4:88","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4832:6:88"},"scope":62481,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":62077,"nodeType":"FunctionDefinition","src":"4932:71:88","nodes":[],"body":{"id":62076,"nodeType":"Block","src":"4978:25:88","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":62073,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40889,"src":"4988:6:88","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":62074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4988:8:88","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":62075,"nodeType":"ExpressionStatement","src":"4988:8:88"}]},"baseFunctions":[63835],"documentation":{"id":62067,"nodeType":"StructuredDocumentation","src":"4883:44:88","text":" @dev Pauses the contract."},"functionSelector":"8456cb59","implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":62070,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61909,"src":"4965:11:88","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":62071,"kind":"modifierInvocation","modifierName":{"id":62069,"name":"onlyRole","nameLocations":["4956:8:88"],"nodeType":"IdentifierPath","referencedDeclaration":39758,"src":"4956:8:88"},"nodeType":"ModifierInvocation","src":"4956:21:88"}],"name":"pause","nameLocation":"4941:5:88","parameters":{"id":62068,"nodeType":"ParameterList","parameters":[],"src":"4946:2:88"},"returnParameters":{"id":62072,"nodeType":"ParameterList","parameters":[],"src":"4978:0:88"},"scope":62481,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":62088,"nodeType":"FunctionDefinition","src":"5060:75:88","nodes":[],"body":{"id":62087,"nodeType":"Block","src":"5108:27:88","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":62084,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40913,"src":"5118:8:88","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":62085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5118:10:88","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":62086,"nodeType":"ExpressionStatement","src":"5118:10:88"}]},"baseFunctions":[63839],"documentation":{"id":62078,"nodeType":"StructuredDocumentation","src":"5009:46:88","text":" @dev Unpauses the contract."},"functionSelector":"3f4ba83a","implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":62081,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61909,"src":"5095:11:88","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":62082,"kind":"modifierInvocation","modifierName":{"id":62080,"name":"onlyRole","nameLocations":["5086:8:88"],"nodeType":"IdentifierPath","referencedDeclaration":39758,"src":"5086:8:88"},"nodeType":"ModifierInvocation","src":"5086:21:88"}],"name":"unpause","nameLocation":"5069:7:88","parameters":{"id":62079,"nodeType":"ParameterList","parameters":[],"src":"5076:2:88"},"returnParameters":{"id":62083,"nodeType":"ParameterList","parameters":[],"src":"5108:0:88"},"scope":62481,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":62099,"nodeType":"FunctionDefinition","src":"5300:103:88","nodes":[],"body":{"id":62098,"nodeType":"Block","src":"5401:2:88","nodes":[],"statements":[]},"baseFunctions":[40662],"documentation":{"id":62089,"nodeType":"StructuredDocumentation","src":"5141:154:88","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract.\n      Called by {upgradeToAndCall}."},"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":62095,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39729,"src":"5381:18:88","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":62096,"kind":"modifierInvocation","modifierName":{"id":62094,"name":"onlyRole","nameLocations":["5372:8:88"],"nodeType":"IdentifierPath","referencedDeclaration":39758,"src":"5372:8:88"},"nodeType":"ModifierInvocation","src":"5372:28:88"}],"name":"_authorizeUpgrade","nameLocation":"5309:17:88","overrides":{"id":62093,"nodeType":"OverrideSpecifier","overrides":[],"src":"5363:8:88"},"parameters":{"id":62092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62091,"mutability":"mutable","name":"newImplementation","nameLocation":"5335:17:88","nodeType":"VariableDeclaration","scope":62099,"src":"5327:25:88","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":62090,"name":"address","nodeType":"ElementaryTypeName","src":"5327:7:88","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5326:27:88"},"returnParameters":{"id":62097,"nodeType":"ParameterList","parameters":[],"src":"5401:0:88"},"scope":62481,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":62253,"nodeType":"FunctionDefinition","src":"6270:1314:88","nodes":[],"body":{"id":62252,"nodeType":"Block","src":"6368:1216:88","nodes":[],"statements":[{"assignments":[62110],"declarations":[{"constant":false,"id":62110,"mutability":"mutable","name":"isFromEmergencyStopAdmin","nameLocation":"6383:24:88","nodeType":"VariableDeclaration","scope":62252,"src":"6378:29:88","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":62109,"name":"bool","nodeType":"ElementaryTypeName","src":"6378:4:88","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":62115,"initialValue":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":62114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":62111,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6410:3:88","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":62112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6414:6:88","memberName":"sender","nodeType":"MemberAccess","src":"6410:10:88","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":62113,"name":"_emergencyStopAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61920,"src":"6424:19:88","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6410:33:88","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"6378:65:88"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":62119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":62116,"name":"_emergencyStop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61925,"src":"6457:14:88","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":62118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6475:25:88","subExpression":{"id":62117,"name":"isFromEmergencyStopAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62110,"src":"6476:24:88","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6457:43:88","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":62124,"nodeType":"IfStatement","src":"6453:96:88","trueBody":{"id":62123,"nodeType":"Block","src":"6502:47:88","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":62120,"name":"EmergencyStop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63619,"src":"6523:13:88","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":62121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6523:15:88","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":62122,"nodeType":"RevertStatement","src":"6516:22:88"}]}},{"assignments":[62129],"declarations":[{"constant":false,"id":62129,"mutability":"mutable","name":"publicInputs","nameLocation":"6576:12:88","nodeType":"VariableDeclaration","scope":62252,"src":"6559:29:88","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":62127,"name":"uint256","nodeType":"ElementaryTypeName","src":"6559:7:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":62128,"nodeType":"ArrayTypeName","src":"6559:9:88","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":62135,"initialValue":{"arguments":[{"hexValue":"32","id":62133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6605:1:88","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"id":62132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"6591:13:88","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":62130,"name":"uint256","nodeType":"ElementaryTypeName","src":"6595:7:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":62131,"nodeType":"ArrayTypeName","src":"6595:9:88","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":62134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6591:16:88","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"6559:48:88"},{"expression":{"id":62145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":62136,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62129,"src":"6617:12:88","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":62138,"indexExpression":{"hexValue":"30","id":62137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6630:1:88","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6617:15:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":62144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":62141,"name":"merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62104,"src":"6643:10:88","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":62140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6635:7:88","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":62139,"name":"uint256","nodeType":"ElementaryTypeName","src":"6635:7:88","typeDescriptions":{}}},"id":62142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6635:19:88","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":62143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6658:2:88","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"6635:25:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6617:43:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":62146,"nodeType":"ExpressionStatement","src":"6617:43:88"},{"expression":{"id":62182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":62147,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62129,"src":"6670:12:88","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":62149,"indexExpression":{"hexValue":"31","id":62148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6683:1:88","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6670:15:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":62181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":62165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":62162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":62152,"name":"merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62104,"src":"6698:10:88","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":62151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6690:7:88","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":62150,"name":"uint256","nodeType":"ElementaryTypeName","src":"6690:7:88","typeDescriptions":{}}},"id":62153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6690:19:88","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":62158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6725:6:88","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":62157,"name":"uint64","nodeType":"ElementaryTypeName","src":"6725:6:88","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":62156,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6720:4:88","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":62159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6720:12:88","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":62160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6733:3:88","memberName":"max","nodeType":"MemberAccess","src":"6720:16:88","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":62155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6712:7:88","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":62154,"name":"uint256","nodeType":"ElementaryTypeName","src":"6712:7:88","typeDescriptions":{}}},"id":62161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6712:25:88","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6690:47:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":62163,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6689:49:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":62164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6742:3:88","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"6689:56:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":62166,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6688:58:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":62179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":62176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":62167,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62102,"src":"6763:11:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":62172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6790:6:88","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":62171,"name":"uint32","nodeType":"ElementaryTypeName","src":"6790:6:88","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":62170,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6785:4:88","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":62173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6785:12:88","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":62174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6798:3:88","memberName":"max","nodeType":"MemberAccess","src":"6785:16:88","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":62169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6777:7:88","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":62168,"name":"uint256","nodeType":"ElementaryTypeName","src":"6777:7:88","typeDescriptions":{}}},"id":62175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6777:25:88","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6763:39:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":62177,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6762:41:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3936","id":62178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6807:2:88","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"6762:47:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":62180,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6761:49:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6688:122:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6670:140:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":62183,"nodeType":"ExpressionStatement","src":"6670:140:88"},{"condition":{"id":62189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6825:47:88","subExpression":{"arguments":[{"id":62186,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62106,"src":"6852:5:88","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":62187,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62129,"src":"6859:12:88","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"expression":{"id":62184,"name":"_verifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61923,"src":"6826:9:88","typeDescriptions":{"typeIdentifier":"t_contract$_IVerifier_$63882","typeString":"contract IVerifier"}},"id":62185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6836:15:88","memberName":"safeVerifyProof","nodeType":"MemberAccess","referencedDeclaration":63881,"src":"6826:25:88","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory,uint256[] memory) view external returns (bool)"}},"id":62188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6826:46:88","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":62194,"nodeType":"IfStatement","src":"6821:104:88","trueBody":{"id":62193,"nodeType":"Block","src":"6874:51:88","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":62190,"name":"InvalidPlonkProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63622,"src":"6895:17:88","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":62191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6895:19:88","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":62192,"nodeType":"RevertStatement","src":"6888:26:88"}]}},{"assignments":[62196],"declarations":[{"constant":false,"id":62196,"mutability":"mutable","name":"previousMerkleRoot","nameLocation":"6943:18:88","nodeType":"VariableDeclaration","scope":62252,"src":"6935:26:88","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":62195,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6935:7:88","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":62200,"initialValue":{"baseExpression":{"id":62197,"name":"_blockNumbers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61929,"src":"6964:13:88","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"}},"id":62199,"indexExpression":{"id":62198,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62102,"src":"6978:11:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6964:26:88","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6935:55:88"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":62203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":62201,"name":"previousMerkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62196,"src":"7004:18:88","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":62202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7026:1:88","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7004:23:88","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":62250,"nodeType":"Block","src":"7394:184:88","statements":[{"expression":{"id":62236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":62232,"name":"_blockNumbers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61929,"src":"7408:13:88","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"}},"id":62234,"indexExpression":{"id":62233,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62102,"src":"7422:11:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7408:26:88","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":62235,"name":"merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62104,"src":"7437:10:88","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7408:39:88","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":62237,"nodeType":"ExpressionStatement","src":"7408:39:88"},{"expression":{"id":62243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":62238,"name":"_merkleRootTimestamps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61933,"src":"7461:21:88","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":62240,"indexExpression":{"id":62239,"name":"merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62104,"src":"7483:10:88","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7461:33:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":62241,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7497:5:88","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":62242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7503:9:88","memberName":"timestamp","nodeType":"MemberAccess","src":"7497:15:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7461:51:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":62244,"nodeType":"ExpressionStatement","src":"7461:51:88"},{"eventCall":{"arguments":[{"id":62246,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62102,"src":"7543:11:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":62247,"name":"merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62104,"src":"7556:10:88","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":62245,"name":"MerkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63662,"src":"7532:10:88","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (uint256,bytes32)"}},"id":62248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7532:35:88","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":62249,"nodeType":"EmitStatement","src":"7527:40:88"}]},"id":62251,"nodeType":"IfStatement","src":"7000:578:88","trueBody":{"id":62231,"nodeType":"Block","src":"7029:359:88","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":62206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":62204,"name":"previousMerkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62196,"src":"7047:18:88","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":62205,"name":"merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62104,"src":"7069:10:88","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7047:32:88","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":62229,"nodeType":"Block","src":"7305:73:88","statements":[{"errorCall":{"arguments":[{"id":62226,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62102,"src":"7351:11:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":62225,"name":"MerkleRootAlreadySet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63643,"src":"7330:20:88","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":62227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7330:33:88","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":62228,"nodeType":"RevertStatement","src":"7323:40:88"}]},"id":62230,"nodeType":"IfStatement","src":"7043:335:88","trueBody":{"id":62224,"nodeType":"Block","src":"7081:218:88","statements":[{"expression":{"id":62209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":62207,"name":"_emergencyStop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61925,"src":"7099:14:88","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":62208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7116:4:88","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7099:21:88","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":62210,"nodeType":"ExpressionStatement","src":"7099:21:88"},{"expression":{"id":62214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"7139:33:88","subExpression":{"baseExpression":{"id":62211,"name":"_blockNumbers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61929,"src":"7146:13:88","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"}},"id":62213,"indexExpression":{"id":62212,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62102,"src":"7160:11:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7146:26:88","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":62215,"nodeType":"ExpressionStatement","src":"7139:33:88"},{"expression":{"id":62219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"7190:48:88","subExpression":{"baseExpression":{"id":62216,"name":"_merkleRootTimestamps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61933,"src":"7197:21:88","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":62218,"indexExpression":{"id":62217,"name":"previousMerkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62196,"src":"7219:18:88","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7197:41:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":62220,"nodeType":"ExpressionStatement","src":"7190:48:88"},{"eventCall":{"arguments":[],"expression":{"argumentTypes":[],"id":62221,"name":"EmergencyStopEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63652,"src":"7262:20:88","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$__$returns$__$","typeString":"function ()"}},"id":62222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7262:22:88","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":62223,"nodeType":"EmitStatement","src":"7257:27:88"}]}}]}}]},"baseFunctions":[63713],"documentation":{"id":62100,"nodeType":"StructuredDocumentation","src":"5409:856:88","text":" @dev Receives, verifies and stores Merkle roots from Vara Network.\n      Upon successfully storing data about block number and corresponding Merkle root,\n      MessageQueue smart contract will emit a `MerkleRoot` event.\n      It is important to note that anyone can submit a Merkle root because only\n      validated Merkle roots will be stored in the MessageQueue smart contract.\n @param blockNumber Block number on Vara Network.\n @param merkleRoot Merkle root of transactions included in block with corresponding block number.\n @param proof Serialised Plonk proof (using gnark's `MarshalSolidity`).\n @dev Reverts if emergency stop status is set with `EmergencyStop` error.\n @dev Reverts if `proof` or `publicInputs` are malformed with `InvalidPlonkProof` error."},"functionSelector":"cca66a9d","implemented":true,"kind":"function","modifiers":[],"name":"submitMerkleRoot","nameLocation":"6279:16:88","parameters":{"id":62107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62102,"mutability":"mutable","name":"blockNumber","nameLocation":"6304:11:88","nodeType":"VariableDeclaration","scope":62253,"src":"6296:19:88","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":62101,"name":"uint256","nodeType":"ElementaryTypeName","src":"6296:7:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":62104,"mutability":"mutable","name":"merkleRoot","nameLocation":"6325:10:88","nodeType":"VariableDeclaration","scope":62253,"src":"6317:18:88","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":62103,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6317:7:88","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":62106,"mutability":"mutable","name":"proof","nameLocation":"6352:5:88","nodeType":"VariableDeclaration","scope":62253,"src":"6337:20:88","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":62105,"name":"bytes","nodeType":"ElementaryTypeName","src":"6337:5:88","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6295:63:88"},"returnParameters":{"id":62108,"nodeType":"ParameterList","parameters":[],"src":"6368:0:88"},"scope":62481,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":62266,"nodeType":"FunctionDefinition","src":"7872:126:88","nodes":[],"body":{"id":62265,"nodeType":"Block","src":"7948:50:88","nodes":[],"statements":[{"expression":{"baseExpression":{"id":62261,"name":"_blockNumbers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61929,"src":"7965:13:88","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"}},"id":62263,"indexExpression":{"id":62262,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62256,"src":"7979:11:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7965:26:88","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":62260,"id":62264,"nodeType":"Return","src":"7958:33:88"}]},"baseFunctions":[63721],"documentation":{"id":62254,"nodeType":"StructuredDocumentation","src":"7590:277:88","text":" @dev Returns merkle root for specified block number.\n      Returns `bytes32(0)` if merkle root was not provided for specified block number.\n @param blockNumber Target block number.\n @return merkleRoot Merkle root for specified block number."},"functionSelector":"0aab8ba5","implemented":true,"kind":"function","modifiers":[],"name":"getMerkleRoot","nameLocation":"7881:13:88","parameters":{"id":62257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62256,"mutability":"mutable","name":"blockNumber","nameLocation":"7903:11:88","nodeType":"VariableDeclaration","scope":62266,"src":"7895:19:88","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":62255,"name":"uint256","nodeType":"ElementaryTypeName","src":"7895:7:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7894:21:88"},"returnParameters":{"id":62260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62259,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":62266,"src":"7939:7:88","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":62258,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7939:7:88","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7938:9:88"},"scope":62481,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":62279,"nodeType":"FunctionDefinition","src":"8266:141:88","nodes":[],"body":{"id":62278,"nodeType":"Block","src":"8350:57:88","nodes":[],"statements":[{"expression":{"baseExpression":{"id":62274,"name":"_merkleRootTimestamps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61933,"src":"8367:21:88","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":62276,"indexExpression":{"id":62275,"name":"merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62269,"src":"8389:10:88","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8367:33:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":62273,"id":62277,"nodeType":"Return","src":"8360:40:88"}]},"baseFunctions":[63729],"documentation":{"id":62267,"nodeType":"StructuredDocumentation","src":"8004:257:88","text":" @dev Returns timestamp when merkle root was set.\n      Returns `0` if merkle root was not provided for specified block number.\n @param merkleRoot Target merkle root.\n @return timestamp Timestamp when merkle root was set."},"functionSelector":"4610d3aa","implemented":true,"kind":"function","modifiers":[],"name":"getMerkleRootTimestamp","nameLocation":"8275:22:88","parameters":{"id":62270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62269,"mutability":"mutable","name":"merkleRoot","nameLocation":"8306:10:88","nodeType":"VariableDeclaration","scope":62279,"src":"8298:18:88","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":62268,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8298:7:88","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8297:20:88"},"returnParameters":{"id":62273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62272,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":62279,"src":"8341:7:88","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":62271,"name":"uint256","nodeType":"ElementaryTypeName","src":"8341:7:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8340:9:88"},"scope":62481,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":62431,"nodeType":"FunctionDefinition","src":"10065:1547:88","nodes":[],"body":{"id":62430,"nodeType":"Block","src":"10261:1351:88","nodes":[],"statements":[{"assignments":[62296],"declarations":[{"constant":false,"id":62296,"mutability":"mutable","name":"isFromAdminOrPauser","nameLocation":"10276:19:88","nodeType":"VariableDeclaration","scope":62430,"src":"10271:24:88","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":62295,"name":"bool","nodeType":"ElementaryTypeName","src":"10271:4:88","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":62310,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":62309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":62302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":62297,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62289,"src":"10310:7:88","typeDescriptions":{"typeIdentifier":"t_struct$_VaraMessage_$63613_calldata_ptr","typeString":"struct VaraMessage calldata"}},"id":62298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10318:6:88","memberName":"source","nodeType":"MemberAccess","referencedDeclaration":63608,"src":"10310:14:88","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":62299,"name":"_governanceAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61915,"src":"10328:16:88","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63462","typeString":"contract IGovernance"}},"id":62300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10345:10:88","memberName":"governance","nodeType":"MemberAccess","referencedDeclaration":63455,"src":"10328:27:88","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":62301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10328:29:88","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"10310:47:88","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":62308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":62303,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62289,"src":"10361:7:88","typeDescriptions":{"typeIdentifier":"t_struct$_VaraMessage_$63613_calldata_ptr","typeString":"struct VaraMessage calldata"}},"id":62304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10369:6:88","memberName":"source","nodeType":"MemberAccess","referencedDeclaration":63608,"src":"10361:14:88","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":62305,"name":"_governancePauser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61918,"src":"10379:17:88","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63462","typeString":"contract IGovernance"}},"id":62306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10397:10:88","memberName":"governance","nodeType":"MemberAccess","referencedDeclaration":63455,"src":"10379:28:88","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":62307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10379:30:88","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"10361:48:88","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10310:99:88","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"10271:138:88"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":62315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":62311,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40840,"src":"10423:6:88","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":62312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10423:8:88","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":62314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"10435:20:88","subExpression":{"id":62313,"name":"isFromAdminOrPauser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62296,"src":"10436:19:88","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10423:32:88","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":62320,"nodeType":"IfStatement","src":"10419:85:88","trueBody":{"id":62319,"nodeType":"Block","src":"10457:47:88","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":62316,"name":"EnforcedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40793,"src":"10478:13:88","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":62317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10478:15:88","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":62318,"nodeType":"RevertStatement","src":"10471:22:88"}]}},{"assignments":[62322],"declarations":[{"constant":false,"id":62322,"mutability":"mutable","name":"isFromEmergencyStopAdmin","nameLocation":"10519:24:88","nodeType":"VariableDeclaration","scope":62430,"src":"10514:29:88","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":62321,"name":"bool","nodeType":"ElementaryTypeName","src":"10514:4:88","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":62327,"initialValue":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":62326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":62323,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10546:3:88","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":62324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10550:6:88","memberName":"sender","nodeType":"MemberAccess","src":"10546:10:88","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":62325,"name":"_emergencyStopAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61920,"src":"10560:19:88","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10546:33:88","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"10514:65:88"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":62331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":62328,"name":"_emergencyStop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61925,"src":"10593:14:88","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":62330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"10611:25:88","subExpression":{"id":62329,"name":"isFromEmergencyStopAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62322,"src":"10612:24:88","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10593:43:88","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":62336,"nodeType":"IfStatement","src":"10589:96:88","trueBody":{"id":62335,"nodeType":"Block","src":"10638:47:88","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":62332,"name":"EmergencyStop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63619,"src":"10659:13:88","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":62333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10659:15:88","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":62334,"nodeType":"RevertStatement","src":"10652:22:88"}]}},{"condition":{"baseExpression":{"id":62337,"name":"_processedMessages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61937,"src":"10699:18:88","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":62340,"indexExpression":{"expression":{"id":62338,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62289,"src":"10718:7:88","typeDescriptions":{"typeIdentifier":"t_struct$_VaraMessage_$63613_calldata_ptr","typeString":"struct VaraMessage calldata"}},"id":62339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10726:5:88","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":63606,"src":"10718:13:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10699:33:88","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":62347,"nodeType":"IfStatement","src":"10695:109:88","trueBody":{"id":62346,"nodeType":"Block","src":"10734:70:88","statements":[{"errorCall":{"arguments":[{"expression":{"id":62342,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62289,"src":"10779:7:88","typeDescriptions":{"typeIdentifier":"t_struct$_VaraMessage_$63613_calldata_ptr","typeString":"struct VaraMessage calldata"}},"id":62343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10787:5:88","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":63606,"src":"10779:13:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":62341,"name":"MessageAlreadyProcessed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63627,"src":"10755:23:88","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":62344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10755:38:88","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":62345,"nodeType":"RevertStatement","src":"10748:45:88"}]}},{"assignments":[62349],"declarations":[{"constant":false,"id":62349,"mutability":"mutable","name":"merkleRoot","nameLocation":"10822:10:88","nodeType":"VariableDeclaration","scope":62430,"src":"10814:18:88","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":62348,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10814:7:88","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":62353,"initialValue":{"baseExpression":{"id":62350,"name":"_blockNumbers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61929,"src":"10835:13:88","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"}},"id":62352,"indexExpression":{"id":62351,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62282,"src":"10849:11:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10835:26:88","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"10814:47:88"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":62359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":62354,"name":"merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62349,"src":"10875:10:88","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":62357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10897:1:88","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10889:7:88","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":62355,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10889:7:88","typeDescriptions":{}}},"id":62358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10889:10:88","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"10875:24:88","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":62365,"nodeType":"IfStatement","src":"10871:93:88","trueBody":{"id":62364,"nodeType":"Block","src":"10901:63:88","statements":[{"errorCall":{"arguments":[{"id":62361,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62282,"src":"10941:11:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":62360,"name":"MerkleRootNotFound","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63632,"src":"10922:18:88","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":62362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10922:31:88","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":62363,"nodeType":"RevertStatement","src":"10915:38:88"}]}},{"assignments":[62367],"declarations":[{"constant":false,"id":62367,"mutability":"mutable","name":"timestamp","nameLocation":"10982:9:88","nodeType":"VariableDeclaration","scope":62430,"src":"10974:17:88","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":62366,"name":"uint256","nodeType":"ElementaryTypeName","src":"10974:7:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":62371,"initialValue":{"baseExpression":{"id":62368,"name":"_merkleRootTimestamps","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61933,"src":"10994:21:88","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":62370,"indexExpression":{"id":62369,"name":"merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62349,"src":"11016:10:88","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10994:33:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10974:53:88"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":62377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":62372,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"11041:5:88","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":62373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11047:9:88","memberName":"timestamp","nodeType":"MemberAccess","src":"11041:15:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":62376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":62374,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62367,"src":"11059:9:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":62375,"name":"PROCESS_MESSAGE_DELAY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61912,"src":"11071:21:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11059:33:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11041:51:88","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":62382,"nodeType":"IfStatement","src":"11037:115:88","trueBody":{"id":62381,"nodeType":"Block","src":"11094:58:88","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":62378,"name":"MerkleRootDelayNotPassed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63635,"src":"11115:24:88","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":62379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11115:26:88","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":62380,"nodeType":"RevertStatement","src":"11108:33:88"}]}},{"assignments":[62384],"declarations":[{"constant":false,"id":62384,"mutability":"mutable","name":"messageHash","nameLocation":"11170:11:88","nodeType":"VariableDeclaration","scope":62430,"src":"11162:19:88","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":62383,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11162:7:88","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":62388,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":62385,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62289,"src":"11184:7:88","typeDescriptions":{"typeIdentifier":"t_struct$_VaraMessage_$63613_calldata_ptr","typeString":"struct VaraMessage calldata"}},"id":62386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11192:12:88","memberName":"hashCalldata","nodeType":"MemberAccess","referencedDeclaration":63794,"src":"11184:20:88","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_VaraMessage_$63613_calldata_ptr_$returns$_t_bytes32_$attached_to$_t_struct$_VaraMessage_$63613_calldata_ptr_$","typeString":"function (struct VaraMessage calldata) pure returns (bytes32)"}},"id":62387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11184:22:88","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"11162:44:88"},{"condition":{"id":62397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11220:93:88","subExpression":{"arguments":[{"id":62391,"name":"merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62349,"src":"11258:10:88","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":62392,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62292,"src":"11270:5:88","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":62393,"name":"totalLeaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62284,"src":"11277:11:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":62394,"name":"leafIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62286,"src":"11290:9:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":62395,"name":"messageHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62384,"src":"11301:11:88","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":62389,"name":"BinaryMerkleTree","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64186,"src":"11221:16:88","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BinaryMerkleTree_$64186_$","typeString":"type(library BinaryMerkleTree)"}},"id":62390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11238:19:88","memberName":"verifyProofCalldata","nodeType":"MemberAccess","referencedDeclaration":63935,"src":"11221:36:88","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32[] calldata,uint256,uint256,bytes32) pure returns (bool)"}},"id":62396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11221:92:88","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":62402,"nodeType":"IfStatement","src":"11216:151:88","trueBody":{"id":62401,"nodeType":"Block","src":"11315:52:88","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":62398,"name":"InvalidMerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63638,"src":"11336:18:88","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":62399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11336:20:88","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":62400,"nodeType":"RevertStatement","src":"11329:27:88"}]}},{"expression":{"id":62408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":62403,"name":"_processedMessages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61937,"src":"11377:18:88","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":62406,"indexExpression":{"expression":{"id":62404,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62289,"src":"11396:7:88","typeDescriptions":{"typeIdentifier":"t_struct$_VaraMessage_$63613_calldata_ptr","typeString":"struct VaraMessage calldata"}},"id":62405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11404:5:88","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":63606,"src":"11396:13:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11377:33:88","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":62407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11413:4:88","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"11377:40:88","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":62409,"nodeType":"ExpressionStatement","src":"11377:40:88"},{"expression":{"arguments":[{"expression":{"id":62415,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62289,"src":"11479:7:88","typeDescriptions":{"typeIdentifier":"t_struct$_VaraMessage_$63613_calldata_ptr","typeString":"struct VaraMessage calldata"}},"id":62416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11487:6:88","memberName":"source","nodeType":"MemberAccess","referencedDeclaration":63608,"src":"11479:14:88","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":62417,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62289,"src":"11495:7:88","typeDescriptions":{"typeIdentifier":"t_struct$_VaraMessage_$63613_calldata_ptr","typeString":"struct VaraMessage calldata"}},"id":62418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11503:7:88","memberName":"payload","nodeType":"MemberAccess","referencedDeclaration":63612,"src":"11495:15:88","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"arguments":[{"expression":{"id":62411,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62289,"src":"11444:7:88","typeDescriptions":{"typeIdentifier":"t_struct$_VaraMessage_$63613_calldata_ptr","typeString":"struct VaraMessage calldata"}},"id":62412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11452:11:88","memberName":"destination","nodeType":"MemberAccess","referencedDeclaration":63610,"src":"11444:19:88","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":62410,"name":"IMessageHandler","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63584,"src":"11428:15:88","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IMessageHandler_$63584_$","typeString":"type(contract IMessageHandler)"}},"id":62413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11428:36:88","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IMessageHandler_$63584","typeString":"contract IMessageHandler"}},"id":62414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11465:13:88","memberName":"handleMessage","nodeType":"MemberAccess","referencedDeclaration":63583,"src":"11428:50:88","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory) external"}},"id":62419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11428:83:88","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":62420,"nodeType":"ExpressionStatement","src":"11428:83:88"},{"eventCall":{"arguments":[{"id":62422,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62282,"src":"11544:11:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":62423,"name":"messageHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62384,"src":"11557:11:88","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":62424,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62289,"src":"11570:7:88","typeDescriptions":{"typeIdentifier":"t_struct$_VaraMessage_$63613_calldata_ptr","typeString":"struct VaraMessage calldata"}},"id":62425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11578:5:88","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":63606,"src":"11570:13:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":62426,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62289,"src":"11585:7:88","typeDescriptions":{"typeIdentifier":"t_struct$_VaraMessage_$63613_calldata_ptr","typeString":"struct VaraMessage calldata"}},"id":62427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11593:11:88","memberName":"destination","nodeType":"MemberAccess","referencedDeclaration":63610,"src":"11585:19:88","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":62421,"name":"MessageProcessed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63673,"src":"11527:16:88","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_bytes32_$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,bytes32,uint256,address)"}},"id":62428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11527:78:88","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":62429,"nodeType":"EmitStatement","src":"11522:83:88"}]},"baseFunctions":[63745],"documentation":{"id":62280,"nodeType":"StructuredDocumentation","src":"8413:1647:88","text":" @dev Verifies and processes message originated from Vara Network.\n      In this process, MessageQueue smart contract will calculate Merkle root\n      for message and validate that it corresponds to Merkle root which is already stored\n      in MessageQueue smart contract for same block number. If proof is correct, nonce of received\n      message will be stored in smart contract and message will be forwarded to adequate message\n      processor, either ERC20Manager or Governance smart contract.\n      Upon successful processing of the message MessageProcessed event is emited.\n      It is important to note that anyone can submit a message because all messages\n      will be validated against previously stored Merkle roots in the MessageQueue smart contract.\n @param blockNumber Block number of block containing target merkle tree.\n @param totalLeaves Number of leaves in target merkle tree.\n @param leafIndex Index of leaf containing target message.\n @param message Target message.\n @param proof Merkle proof of inclusion of leaf #`leafIndex` into target merkle tree that\n              was included into `blockNumber`.\n @dev Reverts if:\n      - MessageQueue is paused and message source is not any governance address.\n      - MessageQueue emergency stop status is set.\n      - Message nonce is already processed.\n      - Merkle root is not set for the block number in MessageQueue smart contract.\n      - Merkle proof is invalid.\n      - Message processing fails."},"functionSelector":"93eb47e9","implemented":true,"kind":"function","modifiers":[],"name":"processMessage","nameLocation":"10074:14:88","parameters":{"id":62293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62282,"mutability":"mutable","name":"blockNumber","nameLocation":"10106:11:88","nodeType":"VariableDeclaration","scope":62431,"src":"10098:19:88","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":62281,"name":"uint256","nodeType":"ElementaryTypeName","src":"10098:7:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":62284,"mutability":"mutable","name":"totalLeaves","nameLocation":"10135:11:88","nodeType":"VariableDeclaration","scope":62431,"src":"10127:19:88","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":62283,"name":"uint256","nodeType":"ElementaryTypeName","src":"10127:7:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":62286,"mutability":"mutable","name":"leafIndex","nameLocation":"10164:9:88","nodeType":"VariableDeclaration","scope":62431,"src":"10156:17:88","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":62285,"name":"uint256","nodeType":"ElementaryTypeName","src":"10156:7:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":62289,"mutability":"mutable","name":"message","nameLocation":"10204:7:88","nodeType":"VariableDeclaration","scope":62431,"src":"10183:28:88","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_VaraMessage_$63613_calldata_ptr","typeString":"struct VaraMessage"},"typeName":{"id":62288,"nodeType":"UserDefinedTypeName","pathNode":{"id":62287,"name":"VaraMessage","nameLocations":["10183:11:88"],"nodeType":"IdentifierPath","referencedDeclaration":63613,"src":"10183:11:88"},"referencedDeclaration":63613,"src":"10183:11:88","typeDescriptions":{"typeIdentifier":"t_struct$_VaraMessage_$63613_storage_ptr","typeString":"struct VaraMessage"}},"visibility":"internal"},{"constant":false,"id":62292,"mutability":"mutable","name":"proof","nameLocation":"10240:5:88","nodeType":"VariableDeclaration","scope":62431,"src":"10221:24:88","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":62290,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10221:7:88","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":62291,"nodeType":"ArrayTypeName","src":"10221:9:88","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"10088:163:88"},"returnParameters":{"id":62294,"nodeType":"ParameterList","parameters":[],"src":"10261:0:88"},"scope":62481,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":62467,"nodeType":"FunctionDefinition","src":"11951:374:88","nodes":[],"body":{"id":62466,"nodeType":"Block","src":"12011:314:88","nodes":[],"statements":[{"condition":{"id":62438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"12025:15:88","subExpression":{"id":62437,"name":"_emergencyStop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61925,"src":"12026:14:88","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":62443,"nodeType":"IfStatement","src":"12021:78:88","trueBody":{"id":62442,"nodeType":"Block","src":"12042:57:88","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":62439,"name":"EmergencyStopNotEnabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63646,"src":"12063:23:88","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":62440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12063:25:88","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":62441,"nodeType":"RevertStatement","src":"12056:32:88"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":62447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":62444,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12113:3:88","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":62445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12117:6:88","memberName":"sender","nodeType":"MemberAccess","src":"12113:10:88","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":62446,"name":"_emergencyStopAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61920,"src":"12127:19:88","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12113:33:88","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":62452,"nodeType":"IfStatement","src":"12109:94:88","trueBody":{"id":62451,"nodeType":"Block","src":"12148:55:88","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":62448,"name":"NotEmergencyStopAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63649,"src":"12169:21:88","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":62449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12169:23:88","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":62450,"nodeType":"RevertStatement","src":"12162:30:88"}]}},{"expression":{"id":62455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":62453,"name":"_emergencyStop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61925,"src":"12213:14:88","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":62454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12230:5:88","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"12213:22:88","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":62456,"nodeType":"ExpressionStatement","src":"12213:22:88"},{"expression":{"id":62461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":62457,"name":"_verifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61923,"src":"12245:9:88","typeDescriptions":{"typeIdentifier":"t_contract$_IVerifier_$63882","typeString":"contract IVerifier"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":62459,"name":"newVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62434,"src":"12267:11:88","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":62458,"name":"IVerifier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63882,"src":"12257:9:88","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IVerifier_$63882_$","typeString":"type(contract IVerifier)"}},"id":62460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12257:22:88","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IVerifier_$63882","typeString":"contract IVerifier"}},"src":"12245:34:88","typeDescriptions":{"typeIdentifier":"t_contract$_IVerifier_$63882","typeString":"contract IVerifier"}},"id":62462,"nodeType":"ExpressionStatement","src":"12245:34:88"},{"eventCall":{"arguments":[],"expression":{"argumentTypes":[],"id":62463,"name":"EmergencyStopDisabled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63655,"src":"12295:21:88","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$__$returns$__$","typeString":"function ()"}},"id":62464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12295:23:88","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":62465,"nodeType":"EmitStatement","src":"12290:28:88"}]},"baseFunctions":[63751],"documentation":{"id":62432,"nodeType":"StructuredDocumentation","src":"11618:328:88","text":" @dev Disables emergency stop status and sets new verifier.\n      This function can only be called by emergency stop admin.\n @param newVerifier New verifier address.\n @dev Reverts if:\n      - Emergency stop status is not enabled.\n      - Caller is not emergency stop admin."},"functionSelector":"0eb1a544","implemented":true,"kind":"function","modifiers":[],"name":"disableEmergencyStop","nameLocation":"11960:20:88","parameters":{"id":62435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62434,"mutability":"mutable","name":"newVerifier","nameLocation":"11989:11:88","nodeType":"VariableDeclaration","scope":62467,"src":"11981:19:88","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":62433,"name":"address","nodeType":"ElementaryTypeName","src":"11981:7:88","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11980:21:88"},"returnParameters":{"id":62436,"nodeType":"ParameterList","parameters":[],"src":"12011:0:88"},"scope":62481,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":62480,"nodeType":"FunctionDefinition","src":"12538:128:88","nodes":[],"body":{"id":62479,"nodeType":"Block","src":"12610:56:88","nodes":[],"statements":[{"expression":{"baseExpression":{"id":62475,"name":"_processedMessages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61937,"src":"12627:18:88","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":62477,"indexExpression":{"id":62476,"name":"messageNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62470,"src":"12646:12:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12627:32:88","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":62474,"id":62478,"nodeType":"Return","src":"12620:39:88"}]},"baseFunctions":[63759],"documentation":{"id":62468,"nodeType":"StructuredDocumentation","src":"12331:202:88","text":" @dev Checks if message was already processed.\n @param messageNonce Message nonce to check.\n @return isProcessed `true` if message was already processed, `false` otherwise."},"functionSelector":"bfe7edd7","implemented":true,"kind":"function","modifiers":[],"name":"isProcessed","nameLocation":"12547:11:88","parameters":{"id":62471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62470,"mutability":"mutable","name":"messageNonce","nameLocation":"12567:12:88","nodeType":"VariableDeclaration","scope":62480,"src":"12559:20:88","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":62469,"name":"uint256","nodeType":"ElementaryTypeName","src":"12559:7:88","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12558:22:88"},"returnParameters":{"id":62474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":62480,"src":"12604:4:88","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":62472,"name":"bool","nodeType":"ElementaryTypeName","src":"12604:4:88","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12603:6:88"},"scope":62481,"stateMutability":"view","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"baseName":{"id":61885,"name":"Initializable","nameLocations":["1329:13:88"],"nodeType":"IdentifierPath","referencedDeclaration":40526,"src":"1329:13:88"},"id":61886,"nodeType":"InheritanceSpecifier","src":"1329:13:88"},{"baseName":{"id":61887,"name":"AccessControlUpgradeable","nameLocations":["1348:24:88"],"nodeType":"IdentifierPath","referencedDeclaration":40063,"src":"1348:24:88"},"id":61888,"nodeType":"InheritanceSpecifier","src":"1348:24:88"},{"baseName":{"id":61889,"name":"PausableUpgradeable","nameLocations":["1378:19:88"],"nodeType":"IdentifierPath","referencedDeclaration":40914,"src":"1378:19:88"},"id":61890,"nodeType":"InheritanceSpecifier","src":"1378:19:88"},{"baseName":{"id":61891,"name":"UUPSUpgradeable","nameLocations":["1403:15:88"],"nodeType":"IdentifierPath","referencedDeclaration":40708,"src":"1403:15:88"},"id":61892,"nodeType":"InheritanceSpecifier","src":"1403:15:88"},{"baseName":{"id":61893,"name":"IPausable","nameLocations":["1424:9:88"],"nodeType":"IdentifierPath","referencedDeclaration":63840,"src":"1424:9:88"},"id":61894,"nodeType":"InheritanceSpecifier","src":"1424:9:88"},{"baseName":{"id":61895,"name":"IMessageQueue","nameLocations":["1439:13:88"],"nodeType":"IdentifierPath","referencedDeclaration":63760,"src":"1439:13:88"},"id":61896,"nodeType":"InheritanceSpecifier","src":"1439:13:88"}],"canonicalName":"MessageQueue","contractDependencies":[],"contractKind":"contract","documentation":{"id":61884,"nodeType":"StructuredDocumentation","src":"898:401:88","text":" @dev MessageQueue smart contract is responsible for storing Merkle roots for blocks\n      that were observed on Vara Network. Before storing Merkle roots, MessageQueue\n      verifies received Merkle roots with help of Verifier smart contract.\n      MessageQueue smart contract is also responsible for verifying and processing\n      received messages originated from Vara Network."},"fullyImplemented":true,"linearizedBaseContracts":[62481,63760,63840,40708,41331,40914,40063,40954,47523,41037,40754,40526],"name":"MessageQueue","nameLocation":"1309:12:88","scope":62482,"usedErrors":[40275,40278,40553,40558,40793,40796,40964,40967,41526,41539,43505,44808,63619,63622,63627,63632,63635,63638,63643,63646,63649],"usedEvents":[40283,40785,40790,40976,40985,40994,41279,63652,63655,63662,63673]}],"license":"GPL-3.0-or-later WITH Classpath-exception-2.0"},"id":88}