{"abi":[{"type":"constructor","inputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"DEFAULT_ADMIN_ROLE","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"PAUSER_ROLE","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"UPGRADE_INTERFACE_VERSION","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"bridgingPayments","inputs":[],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"bridgingPayments","inputs":[{"name":"offset","type":"uint256","internalType":"uint256"},{"name":"limit","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"createBridgingPayment","inputs":[{"name":"fee","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"getRoleAdmin","inputs":[{"name":"role","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"getTokenType","inputs":[{"name":"token","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint8","internalType":"enum IERC20Manager.TokenType"}],"stateMutability":"view"},{"type":"function","name":"governanceAdmin","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"governancePauser","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"grantRole","inputs":[{"name":"role","type":"bytes32","internalType":"bytes32"},{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"handleMessage","inputs":[{"name":"source","type":"bytes32","internalType":"bytes32"},{"name":"payload","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"hasRole","inputs":[{"name":"role","type":"bytes32","internalType":"bytes32"},{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"initialize","inputs":[{"name":"governanceAdmin_","type":"address","internalType":"contract IGovernance"},{"name":"governancePauser_","type":"address","internalType":"contract IGovernance"},{"name":"messageQueue_","type":"address","internalType":"address"},{"name":"vftManager","type":"bytes32","internalType":"bytes32"},{"name":"tokens_","type":"tuple[]","internalType":"struct IERC20Manager.TokenInfo[]","components":[{"name":"token","type":"address","internalType":"address"},{"name":"tokenType","type":"uint8","internalType":"enum IERC20Manager.TokenType"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"isBridgingPayment","inputs":[{"name":"bridgingPayment","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isVftManager","inputs":[{"name":"vftManager","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"messageQueue","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"pause","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"paused","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"proxiableUUID","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"renounceRole","inputs":[{"name":"role","type":"bytes32","internalType":"bytes32"},{"name":"callerConfirmation","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"requestBridging","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"to","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"requestBridgingPayingFee","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"to","type":"bytes32","internalType":"bytes32"},{"name":"bridgingPayment","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"requestBridgingPayingFeeWithPermit","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"to","type":"bytes32","internalType":"bytes32"},{"name":"deadline","type":"uint256","internalType":"uint256"},{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"},{"name":"bridgingPayment","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"requestBridgingWithPermit","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"to","type":"bytes32","internalType":"bytes32"},{"name":"deadline","type":"uint256","internalType":"uint256"},{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"revokeRole","inputs":[{"name":"role","type":"bytes32","internalType":"bytes32"},{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"supportsInterface","inputs":[{"name":"interfaceId","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"tokens","inputs":[{"name":"offset","type":"uint256","internalType":"uint256"},{"name":"limit","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"tokens","inputs":[],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"totalBridgingPayments","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"totalTokens","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"totalVftManagers","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"unpause","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"upgradeToAndCall","inputs":[{"name":"newImplementation","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"vftManagers","inputs":[],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"vftManagers","inputs":[{"name":"offset","type":"uint256","internalType":"uint256"},{"name":"limit","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"event","name":"Bridged","inputs":[{"name":"from","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"token","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"BridgingPaymentCreated","inputs":[{"name":"bridgingPayment","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"BridgingRequested","inputs":[{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"token","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"EthereumTokenRegistered","inputs":[{"name":"token","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"GearTokenRegistered","inputs":[{"name":"token","type":"address","indexed":false,"internalType":"address"},{"name":"tokenName","type":"string","indexed":false,"internalType":"string"},{"name":"tokenSymbol","type":"string","indexed":false,"internalType":"string"},{"name":"tokenDecimals","type":"uint8","indexed":false,"internalType":"uint8"}],"anonymous":false},{"type":"event","name":"Initialized","inputs":[{"name":"version","type":"uint64","indexed":false,"internalType":"uint64"}],"anonymous":false},{"type":"event","name":"Paused","inputs":[{"name":"account","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"RoleAdminChanged","inputs":[{"name":"role","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"previousAdminRole","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"newAdminRole","type":"bytes32","indexed":true,"internalType":"bytes32"}],"anonymous":false},{"type":"event","name":"RoleGranted","inputs":[{"name":"role","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"account","type":"address","indexed":true,"internalType":"address"},{"name":"sender","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"RoleRevoked","inputs":[{"name":"role","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"account","type":"address","indexed":true,"internalType":"address"},{"name":"sender","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"Unpaused","inputs":[{"name":"account","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"Upgraded","inputs":[{"name":"implementation","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"VftManagerAdded","inputs":[{"name":"vftManager","type":"bytes32","indexed":false,"internalType":"bytes32"}],"anonymous":false},{"type":"error","name":"AccessControlBadConfirmation","inputs":[]},{"type":"error","name":"AccessControlUnauthorizedAccount","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"neededRole","type":"bytes32","internalType":"bytes32"}]},{"type":"error","name":"AddressEmptyCode","inputs":[{"name":"target","type":"address","internalType":"address"}]},{"type":"error","name":"ERC1967InvalidImplementation","inputs":[{"name":"implementation","type":"address","internalType":"address"}]},{"type":"error","name":"ERC1967NonPayable","inputs":[]},{"type":"error","name":"EnforcedPause","inputs":[]},{"type":"error","name":"ExpectedPause","inputs":[]},{"type":"error","name":"FailedCall","inputs":[]},{"type":"error","name":"InvalidAmount","inputs":[]},{"type":"error","name":"InvalidBridgingPayment","inputs":[]},{"type":"error","name":"InvalidInitialization","inputs":[]},{"type":"error","name":"InvalidPayload","inputs":[]},{"type":"error","name":"InvalidSender","inputs":[]},{"type":"error","name":"InvalidSource","inputs":[]},{"type":"error","name":"InvalidTokenType","inputs":[]},{"type":"error","name":"NotInitializing","inputs":[]},{"type":"error","name":"SafeERC20FailedOperation","inputs":[{"name":"token","type":"address","internalType":"address"}]},{"type":"error","name":"UUPSUnauthorizedCallContext","inputs":[]},{"type":"error","name":"UUPSUnsupportedProxiableUUID","inputs":[{"name":"slot","type":"bytes32","internalType":"bytes32"}]}],"bytecode":{"object":"0x60a080604052346100c257306080525f516020613ee75f395f51905f525460ff8160401c166100b3576002600160401b03196001600160401b03821601610060575b604051613e2090816100c78239608051818181610cd20152610da20152f35b6001600160401b0319166001600160401b039081175f516020613ee75f395f51905f525581527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a15f80610041565b63f92ee8a960e01b5f5260045ffd5b5f80fdfe6080806040526004361015610012575f80fd5b5f905f3560e01c90816258f6b81461153a5750806301ffc9a7146114e45780630c9d9b97146114ac578063109ec2e7146114385780631e324b5214611385578063240dfa9514611367578063248a9ca3146113275780632f2ff15d146112dc578063302ac5d01461119557806336568abe1461115057806338ff319f1461108b5780633b70c18a146110625780633f4ba83a14610fe25780634e68953914610fad5780634f1ef28614610d2657806352d1902d14610cbf5780635c975abb14610c905780636a762d5c14610c62578063763b754a146109165780637e1c0c09146108f85780638456cb591461088557806387be40b11461081057806387e7a3a3146107f55780638b4864d6146107da5780638b841f6c146107bc57806391d148541461076657806393272baf1461071a5780639d63848a14610699578063a217fddf1461067d578063ad3cb1cc14610634578063c1c6092114610609578063c305870c146104b3578063c81eb7971461048a578063d547741f14610436578063e63ab1e91461041a5763f6cdd9cc146101a9575f80fd5b610100366003190112610417576101be61155c565b6024356101c961161c565b9160e4356001600160a01b03811690819003610415576101e76116df565b6101fc815f52600960205260405f2054151590565b15610406578085913b156103ed5781600491604051928380926314b0812960e11b825234905af180156103a6576103f1575b50506102386116df565b6001600160a01b038116928490843b156103ed5760ff6040519163d505accf60e01b8352336004840152306024840152856044840152606435606484015216608482015260a43560a482015260c43560c4820152818160e48183895af16103d4575b50506102a46116df565b81156103c5576102b39061203e565b905060038110156103b157806102d25763a1e9dd9d60e01b8452600484fd5b6001810361034857506103156040516323b872dd60e01b60208201523360248201523060448201528260648201526064815261030f6084826115ca565b836121f8565b604051908152604435907ff80de57fd7626baaff7d867494866703686569822c2326ae60b2515ede953c3a60203392a480f35b60020361031557813b156103a25760405163079cc67960e41b8152336004820152602481018290528390818160448183885af180156103a65761038d575b5050610315565b81610397916115ca565b6103a257825f610386565b8280fd5b6040513d84823e3d90fd5b634e487b7160e01b84526021600452602484fd5b63162908e360e11b8452600484fd5b816103de916115ca565b6103e957835f61029a565b8380fd5b5080fd5b816103fb916115ca565b6103e957835f61022e565b631e37e19560e31b8552600485fd5b845b80fd5b5034610417578060031936011261041757602060405160018152f35b503461041757604036600319011261041757610486600435610456611572565b9061048161047c825f525f516020613dc05f395f51905f52602052600160405f20015490565b611756565b611d66565b5080f35b50346104175780600319360112610417576001546040516001600160a01b039091168152602090f35b5034610417576060366003190112610417576104cd61155c565b602435906104d96116df565b81156105fa576104e88161203e565b905060038110156103b157806105075763a1e9dd9d60e01b8452600484fd5b6001810361059257506105536040516323b872dd60e01b6020820152336024820152306044820152836064820152606481526105446084826115ca565b6001600160a01b0383166121f8565b6040519182526001600160a01b0316906044359033907ff80de57fd7626baaff7d867494866703686569822c2326ae60b2515ede953c3a90602090a480f35b60020361055357826001600160a01b038216803b156103ed5760405163079cc67960e41b8152336004820152602481018590529082908290604490829084905af180156103a6576105e5575b5050610553565b816105ef916115ca565b6103a257825f6105de565b63162908e360e11b8352600483fd5b50346104175761063061062461061e3661167d565b90611fc1565b60405191829182611644565b0390f35b5034610417578060031936011261041757506106306040516106576040826115ca565b60058152640352e302e360dc1b6020820152604051918291602083526020830190611693565b5034610417578060031936011261041757602090604051908152f35b503461041757806003193601126104175760405180916020600554928381520191600582527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0915b81811061070457610630856106f8818703826115ca565b60405191829182611588565b82548452602090930192600192830192016106e1565b50346104175760203660031901126104175761073c61073761155c565b61203e565b6040519150600381101561075257602092508152f35b634e487b7160e01b83526021600452602483fd5b5034610417576040366003190112610417576040610782611572565b9160043581525f516020613dc05f395f51905f52602052209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b50346104175780600319360112610417576020600854604051908152f35b5034610417576106306106f86107ef3661167d565b90611f44565b5034610417576106306106f861080a3661167d565b90611eab565b503461041757806003193601126104175760405180916020600354928381520191600382527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b915b81811061086f5761063085610624818703826115ca565b8254845260209093019260019283019201610858565b503461041757806003193601126104175761089e611706565b6108a66116df565b600160ff195f516020613de05f395f51905f525416175f516020613de05f395f51905f52557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a180f35b50346104175780600319360112610417576020600554604051908152f35b50346104175760a03660031901126104175761093061155c565b610938611572565b6044356001600160a01b038116908190036103e9576084359167ffffffffffffffff831161041557366023840112156104155782600401356109798161162c565b9361098760405195866115ca565b8185526024602086019260061b82010190368211610c5e57602401915b818310610be6575050505f516020613e005f395f51905f52549360ff8560401c16159467ffffffffffffffff811680159081610bde575b6001149081610bd4575b159081610bcb575b50610bbc5767ffffffffffffffff1981166001175f516020613e005f395f51905f525585610b90575b50610a1f61218d565b610a2761218d565b610a2f61218d565b6001600160a01b031690610a428261179c565b50610a4c8261184b565b506001600160a01b031690610a608261184b565b506001600160601b0360a01b8654161785556001600160601b0360a01b60015416176001556001600160601b0360a01b6002541617600255610aa36064356120d4565b50825b8151811015610b2f57610ab981836116b7565b51602081019081516003811015610b1b57610add5763a1e9dd9d60e01b8652600486fd5b519051906001600160a01b03166003821015610b075760019291610b0091611e02565b5001610aa6565b634e487b7160e01b86526021600452602486fd5b634e487b7160e01b87526021600452602487fd5b5050610b385780f35b68ff0000000000000000195f516020613e005f395f51905f5254165f516020613e005f395f51905f52557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a180f35b68ffffffffffffffffff191668010000000000000001175f516020613e005f395f51905f52555f610a16565b63f92ee8a960e01b8752600487fd5b9050155f6109ed565b303b1591506109e5565b8791506109db565b604083360312610c5e57604051906040820182811067ffffffffffffffff821117610c4a5760405283356001600160a01b0381168103610c465782526020840135906003821015610c4657826020928360409501528152019201916109a4565b8980fd5b634e487b7160e01b8a52604160045260248afd5b8780fd5b50346104175760e036600319011261041757610c7c61155c565b602435610c8761161c565b916102386116df565b5034610417578060031936011261041757602060ff5f516020613de05f395f51905f5254166040519015158152f35b50346104175780600319360112610417577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163003610d175760206040515f516020613da05f395f51905f528152f35b63703e46dd60e11b8152600490fd5b50604036600319011261041757610d3b61155c565b6024359067ffffffffffffffff82116103a257366023830112156103a25781600401359083610d6983611600565b93610d7760405195866115ca565b838552602085019336602482840101116103a257806024602093018637850101526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016308114908115610f8b575b50610f7c578380525f516020613dc05f395f51905f5260209081526040808620335f908152925290205460ff1615610f64576040516352d1902d60e01b81526001600160a01b0382169390602081600481885afa869181610f2c575b50610e4257634c9c8ce360e01b86526004859052602486fd5b93845f516020613da05f395f51905f52879603610f1a5750823b15610f08575f516020613da05f395f51905f5280546001600160a01b031916821790558491907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8380a2805115610eed576104869382915190845af43d15610ee5573d91610ec983611600565b92610ed760405194856115ca565b83523d85602085013e612250565b606091612250565b5050505034610ef95780f35b63b398979f60e01b8152600490fd5b634c9c8ce360e01b8552600452602484fd5b632a87526960e21b8652600452602485fd5b9091506020813d602011610f5c575b81610f48602093836115ca565b81010312610f585751905f610e29565b5f80fd5b3d9150610f3b565b63e2517d3f60e01b8452336004526024849052604484fd5b63703e46dd60e11b8452600484fd5b5f516020613da05f395f51905f52546001600160a01b0316141590505f610dcd565b5034610417576020366003190112610417576020610fd86004355f52600460205260405f2054151590565b6040519015158152f35b5034610417578060031936011261041757610ffb611706565b5f516020613de05f395f51905f525460ff8116156110535760ff19165f516020613de05f395f51905f52557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a180f35b638dfc202b60e01b8252600482fd5b50346104175780600319360112610417576002546040516001600160a01b039091168152602090f35b5034610417576020366003190112610417576110a56116df565b60405161043d8082019082821067ffffffffffffffff83111761113c5760609183916122af8339308152600435602082015233604082015203019082f0801561112f576020906001600160a01b03166110fd81612076565b507f9d5f66d985a12f505753a5f6417ed3c4ec6e68963ee0119770dda415f0d14ad082604051838152a1604051908152f35b50604051903d90823e3d90fd5b634e487b7160e01b84526041600452602484fd5b50346104175760403660031901126104175761116a611572565b336001600160a01b038216036111865761048690600435611d66565b63334bd91960e11b8252600482fd5b50346104175760403660031901126104175760043560243567ffffffffffffffff81116103a257366023820112156103a25780600401359167ffffffffffffffff83116103e957602482019160248436920101116103e9576002546001600160a01b031633036112cd57611214815f52600460205260405f2054151590565b1561123b57509061122491611bd6565b1561122c5780f35b637c6953f960e01b8152600490fd5b8354604051635aa6e67560e01b81529190602090839060049082906001600160a01b03165afa9182156112c257859261128e575b500361127f5790611224916119fe565b638154374b60e01b8352600483fd5b9091506020813d6020116112ba575b816112aa602093836115ca565b81010312610f585751905f61126f565b3d915061129d565b6040513d87823e3d90fd5b636edaef2f60e11b8452600484fd5b5034610417576040366003190112610417576104866004356112fc611572565b9061132261047c825f525f516020613dc05f395f51905f52602052600160405f20015490565b6118f8565b503461041757602036600319011261041757602061135f6004355f525f516020613dc05f395f51905f52602052600160405f20015490565b604051908152f35b50346104175780600319360112610417576020600354604051908152f35b506080366003190112610f585761139a61155c565b602435906064356001600160a01b03811690819003610f58576113bb6116df565b6113d0815f52600960205260405f2054151590565b1561142957803b15610f58575f600491604051928380926314b0812960e11b825234905af1801561141e57611409575b506104d96116df565b6114169193505f906115ca565b5f915f611400565b6040513d5f823e3d90fd5b631e37e19560e31b5f5260045ffd5b34610f58575f366003190112610f585760405180602060085491828152019060085f527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3905f5b81811061149657610630856106f8818703826115ca565b825484526020909301926001928301920161147f565b34610f58576020366003190112610f58576020610fd86001600160a01b036114d261155c565b165f52600960205260405f2054151590565b34610f58576020366003190112610f585760043563ffffffff60e01b8116809103610f5857602090637965db0b60e01b8114908115611529575b506040519015158152f35b6301ffc9a760e01b1490508261151e565b34610f58575f366003190112610f58575f546001600160a01b03168152602090f35b600435906001600160a01b0382168203610f5857565b602435906001600160a01b0382168203610f5857565b60206040818301928281528451809452019201905f5b8181106115ab5750505090565b82516001600160a01b031684526020938401939092019160010161159e565b90601f8019910116810190811067ffffffffffffffff8211176115ec57604052565b634e487b7160e01b5f52604160045260245ffd5b67ffffffffffffffff81116115ec57601f01601f191660200190565b6084359060ff82168203610f5857565b67ffffffffffffffff81116115ec5760051b60200190565b60206040818301928281528451809452019201905f5b8181106116675750505090565b825184526020938401939092019160010161165a565b6040906003190112610f58576004359060243590565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b80518210156116cb5760209160051b010190565b634e487b7160e01b5f52603260045260245ffd5b60ff5f516020613de05f395f51905f5254166116f757565b63d93c066560e01b5f5260045ffd5b335f9081527f2222dce04fae1e25cd76e9391151ad9e0187ef92144ac6ce9e4e09f2c453b751602052604090205460ff161561173e57565b63e2517d3f60e01b5f5233600452600160245260445ffd5b5f8181525f516020613dc05f395f51905f526020908152604080832033845290915290205460ff16156117865750565b63e2517d3f60e01b5f523360045260245260445ffd5b6001600160a01b0381165f9081527fb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d602052604090205460ff16611846576001600160a01b03165f8181527fb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d60205260408120805460ff191660011790553391907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a4600190565b505f90565b6001600160a01b0381165f9081527f2222dce04fae1e25cd76e9391151ad9e0187ef92144ac6ce9e4e09f2c453b751602052604090205460ff16611846576001600160a01b03165f8181527f2222dce04fae1e25cd76e9391151ad9e0187ef92144ac6ce9e4e09f2c453b75160205260408120805460ff191660019081179091553392917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9080a4600190565b5f8181525f516020613dc05f395f51905f52602090815260408083206001600160a01b038616845290915290205460ff16611996575f8181525f516020613dc05f395f51905f52602090815260408083206001600160a01b0395909516808452949091528120805460ff19166001179055339291907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9080a4600190565b50505f90565b919082018092116119a957565b634e487b7160e01b5f52601160045260245ffd5b926119f7906119e960609460ff9498979860018060a01b03168752608060208801526080870190611693565b908582036040870152611693565b9416910152565b90801561199657813560f81c60028111611b36578015611b9d57600114611b5557604203611846576001810135906041602182013591013560f81c91805f1a60018110159081611b49575b5015611b3657815f1a60018110159081611b3d575b5015611b3657611a8a611aaa919060405191604083016040525f8352601f8301525f6020835184010152565b919060405191604083016040525f8352601f8301525f6020835184010152565b6040516116b480820182811067ffffffffffffffff8211176115ec57858486611adb9386956126ec873930906119bd565b03905ff0801561141e577facef1c6c805d7395b4aeee279bc679beea84f01a1f1b08be7aef2af535bba81f936001600160a01b0390911691611b2e9190611b2184611e54565b50604051948594856119bd565b0390a1600190565b5050505f90565b601f915011155f611a5e565b601f915011155f611a49565b60150361184657602060017fdf6d7b91d41cb55ced11681822028e1605f72d50168b3898feb40ee04259d18292013560601c611b9081611e2f565b50604051908152a1600190565b5060210361184657602060017fc6b4ec1bc7a17331ef296e0810039347563e90c3fa496b4de270f6c5ff345abe920135611b90816120d4565b60685f920361199657602081013560601c603482013560601c91604881013590611bff8461203e565b90506003811015611d525780611c1e5763a1e9dd9d60e01b8652600486fd5b909192939450600181145f14611ca3575060405163a9059cbb60e01b6020808301919091526001600160a01b0385166024830152604480830185905282527fabdd326df16eff74bb67e4a6b3d6372ceba76796f256a7b7f8577108cf5db287929091611c9590611c8f6064826115ca565b876121f8565b6040519384523592a4600190565b600214611cd4575b60207fabdd326df16eff74bb67e4a6b3d6372ceba76796f256a7b7f8577108cf5db28791611c95565b833b15610f58576040516340c10f1960e01b81526001600160a01b038416600482015260248101839052905f8260448183895af190811561141e577fabdd326df16eff74bb67e4a6b3d6372ceba76796f256a7b7f8577108cf5db28792602092611d42575b50915050611cab565b5f611d4c916115ca565b5f611d39565b634e487b7160e01b5f52602160045260245ffd5b5f8181525f516020613dc05f395f51905f52602090815260408083206001600160a01b038616845290915290205460ff1615611996575f8181525f516020613dc05f395f51905f52602090815260408083206001600160a01b0395909516808452949091528120805460ff19169055339291907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9080a4600190565b6001600160a01b03166003821015611d5257611e2c91815f52600760205260405f20556005612132565b90565b6001600160a01b03165f81815260076020526040902060019055611e2c906005612132565b6001600160a01b03165f81815260076020526040902060029055611e2c906005612132565b90611e838261162c565b611e9060405191826115ca565b8281528092611ea1601f199161162c565b0190602036910137565b91906008549081841015611f2857611ec3908461199c565b90808211611f20575b508281039081116119a957611ee081611e79565b905f5b818110611ef1575090925050565b80611f08611f016001938861199c565b6008612061565b90549060031b1c611f1982866116b7565b5201611ee3565b90505f611ecc565b50509050604051611f3a6020826115ca565b5f81525f36813790565b91906005549081841015611f2857611f5c908461199c565b90808211611fb9575b508281039081116119a957611f7981611e79565b905f5b818110611f8a575090925050565b80611fa1611f9a6001938861199c565b6005612061565b90549060031b1c611fb282866116b7565b5201611f7c565b90505f611f65565b91906003549081841015611f2857611fd9908461199c565b90808211612036575b508281039081116119a957611ff681611e79565b905f5b818110612007575090925050565b8061201e6120176001938861199c565b6003612061565b90549060031b1c61202f82866116b7565b5201611ff9565b90505f611fe2565b612052906001600160a01b031660056121b8565b91906003831015611d52579190565b80548210156116cb575f5260205f2001905f90565b805f52600960205260405f2054155f1461184657600854600160401b8110156115ec578060016120ab92016008556008612061565b81549060031b9083821b915f19901b1916179055600854905f52600960205260405f2055600190565b805f52600460205260405f2054155f1461184657600354600160401b8110156115ec5780600161210992016003556003612061565b81549060031b9083821b915f19901b1916179055600354905f52600460205260405f2055600190565b5f82815260018201602052604090205461199657805490600160401b8210156115ec57612166826001809401835582612061565b81549060031b9085821b915f19901b19161790558054925f520160205260405f2055600190565b60ff5f516020613e005f395f51905f525460401c16156121a957565b631afcd79f60e31b5f5260045ffd5b9190805f526002830160205260405f20549283155f146121f0576121eb9293506001915f520160205260405f2054151590565b905f90565b505060019190565b905f602091828151910182855af11561141e575f513d61224757506001600160a01b0381163b155b6122275750565b635274afe760e01b5f9081526001600160a01b0391909116600452602490fd5b60011415612220565b90612274575080511561226557602081519101fd5b63d6bda27560e01b5f5260045ffd5b815115806122a5575b612285575090565b639996b31560e01b5f9081526001600160a01b0391909116600452602490fd5b50803b1561227d56fe60a0346100e757601f61043d38819003918201601f19168301916001600160401b038311848410176100eb578084926060946040528339810103126100e757610047816100ff565b602082015190916001600160a01b0390610063906040016100ff565b169182156100d4575f80546001600160a01b031981168517825560405194916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36080526001556103299081610114823960805181818161014c01526102000152f35b631e4fbdf760e01b5f525f60045260245ffd5b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b51906001600160a01b03821682036100e75756fe60806040526004361015610011575f80fd5b5f3560e01c806329610252146101f357806369fe0e2d146101d2578063715018a61461017b57806386ea825c146101375780638da5cb5b14610110578063ddca3f43146100f35763f2fde38b14610066575f80fd5b346100ef5760203660031901126100ef576004356001600160a01b038116908190036100ef57610094610303565b80156100dc575f80546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b5f525f60045260245ffd5b5f80fd5b346100ef575f3660031901126100ef576020600154604051908152f35b346100ef575f3660031901126100ef575f546040516001600160a01b039091168152602090f35b346100ef575f3660031901126100ef576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346100ef575f3660031901126100ef57610193610303565b5f80546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346100ef5760203660031901126100ef576101eb610303565b600435600155005b5f3660031901126100ef577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633036102f45760015434036102e5575f8080803460018060a01b038254165af13d156102e0573d67ffffffffffffffff81116102cc5760405190601f8101601f19908116603f0116820167ffffffffffffffff8111838210176102cc5760405281525f60203d92013e5b156102bd577faaeea0b595e409578c26dd16fa1bdb3a29a4d874694ecef3ca96376940f5fbfb5f80a1005b6353048b4960e11b5f5260045ffd5b634e487b7160e01b5f52604160045260245ffd5b610292565b631fbbed9560e01b5f5260045ffd5b63064917ff60e11b5f5260045ffd5b5f546001600160a01b0316330361031657565b63118cdaa760e01b5f523360045260245ffd61016080604052346104a0576116b4803803809161001d82856104a4565b83398101906080818303126104a05780516001600160a01b038116908190036104a05760208201516001600160401b0381116104a0578361005f9184016104c7565b60408301519093906001600160401b0381116104a0576060916100839185016104c7565b9201519160ff83168093036104a0576040938451926100a286856104a4565b60018452603160f81b6020850190815282519093906001600160401b0381116103b057600354600181811c91168015610496575b602082101461039257601f8111610433575b50806020601f82116001146103cf575f916103c4575b508160011b915f199060031b1c1916176003555b8051906001600160401b0382116103b05760045490600182811c921680156103a6575b60208310146103925781601f849311610324575b50602090601f83116001146102be575f926102b3575b50508160011b915f199060031b1c1916176004555b80156102a057600580546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a36101c48161051c565b610120526101d1836106a3565b6101405260208151910120918260e05251902080610100524660a05283519060208201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f84528583015260608201524660808201523060a082015260a0815261023c60c0826104a4565b5190206080523060c05260ff19600954161760095551610ed890816107dc823960805181610b4c015260a05181610c09015260c05181610b16015260e05181610b9b01526101005181610bc10152610120518161045f015261014051816104880152f35b631e4fbdf760e01b5f525f60045260245ffd5b015190505f8061015f565b60045f9081528281209350601f198516905b81811061030c57509084600195949392106102f4575b505050811b01600455610174565b01515f1960f88460031b161c191690555f80806102e6565b929360206001819287860151815501950193016102d0565b60045f529091507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f840160051c81019160208510610388575b90601f859493920160051c01905b81811061037a5750610149565b5f815584935060010161036d565b909150819061035f565b634e487b7160e01b5f52602260045260245ffd5b91607f1691610135565b634e487b7160e01b5f52604160045260245ffd5b90508401515f6100fe565b60035f9081528181209250601f198416905b81811061041b57509083600194939210610403575b5050811b01600355610112565b8601515f1960f88460031b161c191690555f806103f6565b9192602060018192868b0151815501940192016103e1565b60035f527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f830160051c8101916020841061048c575b601f0160051c01905b81811061048157506100e8565b5f8155600101610474565b909150819061046b565b90607f16906100d6565b5f80fd5b601f909101601f19168101906001600160401b038211908210176103b057604052565b81601f820112156104a0578051906001600160401b0382116103b057604051926104fb601f8401601f1916602001856104a4565b828452602083830101116104a057815f9260208093018386015e8301015290565b908151602081105f14610596575090601f815111610556576020815191015160208210610547571790565b5f198260200360031b1b161790565b604460209160405192839163305a27a960e01b83528160048401528051918291826024860152018484015e5f828201840152601f01601f19168101030190fd5b6001600160401b0381116103b057600654600181811c91168015610699575b602082101461039257601f8111610666575b50602092601f821160011461060557928192935f926105fa575b50508160011b915f199060031b1c19161760065560ff90565b015190505f806105e1565b601f1982169360065f52805f20915f5b86811061064e5750836001959610610636575b505050811b0160065560ff90565b01515f1960f88460031b161c191690555f8080610628565b91926020600181928685015181550194019201610615565b60065f52601f60205f20910160051c810190601f830160051c015b81811061068e57506105c7565b5f8155600101610681565b90607f16906105b5565b908151602081105f146106ce575090601f815111610556576020815191015160208210610547571790565b6001600160401b0381116103b057600754600181811c911680156107d1575b602082101461039257601f811161079e575b50602092601f821160011461073d57928192935f92610732575b50508160011b915f199060031b1c19161760075560ff90565b015190505f80610719565b601f1982169360075f52805f20915f5b868110610786575083600195961061076e575b505050811b0160075560ff90565b01515f1960f88460031b161c191690555f8080610760565b9192602060018192868501518155019401920161074d565b60075f52601f60205f20910160051c810190601f830160051c015b8181106107c657506106ff565b5f81556001016107b9565b90607f16906106ed56fe6080806040526004361015610012575f80fd5b5f3560e01c90816306fdde03146107bf57508063095ea7b31461079957806318160ddd1461077c57806323b872dd14610744578063313ce567146107245780633644e5151461070257806340c10f191461065657806342966c681461063957806370a0823114610602578063715018a6146105a757806379cc6790146105775780637ecebe001461053f57806384b0196e146104475780638da5cb5b1461041f57806395d89b411461033d578063a9059cbb1461030c578063d505accf146101c7578063dd62ed3e146101775763f2fde38b146100ed575f80fd5b3461017357602036600319011261017357610106610885565b61010e610c2f565b6001600160a01b0316801561016057600580546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3005b631e4fbdf760e01b5f525f60045260245ffd5b5f80fd5b3461017357604036600319011261017357610190610885565b61019861089b565b6001600160a01b039182165f908152600160209081526040808320949093168252928352819020549051908152f35b346101735760e0366003190112610173576101e0610885565b6101e861089b565b604435906064359260843560ff81168103610173578442116102f9576102bc6102c59160018060a01b03841696875f52600860205260405f20908154916001830190556040519060208201927f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c984528a604084015260018060a01b038916606084015289608084015260a083015260c082015260c0815261028a60e08261096a565b519020610295610b13565b906040519161190160f01b83526002830152602282015260c43591604260a4359220610dd7565b90929192610e64565b6001600160a01b03168481036102e257506102e09350610cda565b005b84906325c0072360e11b5f5260045260245260445ffd5b8463313c898160e11b5f5260045260245ffd5b3461017357604036600319011261017357610332610328610885565b6024359033610a69565b602060405160018152f35b34610173575f366003190112610173576040515f60045461035d816108b1565b80845290600181169081156103fb575060011461039d575b610399836103858185038261096a565b604051918291602083526020830190610861565b0390f35b60045f9081527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b939250905b8082106103e157509091508101602001610385610375565b9192600181602092548385880101520191019092916103c9565b60ff191660208086019190915291151560051b840190910191506103859050610375565b34610173575f366003190112610173576005546040516001600160a01b039091168152602090f35b34610173575f366003190112610173576104e36104837f0000000000000000000000000000000000000000000000000000000000000000610d3d565b6104ac7f0000000000000000000000000000000000000000000000000000000000000000610da0565b60206104f1604051926104bf838561096a565b5f84525f368137604051958695600f60f81b875260e08588015260e0870190610861565b908582036040870152610861565b4660608501523060808501525f60a085015283810360c08501528180845192838152019301915f5b82811061052857505050500390f35b835185528695509381019392810192600101610519565b34610173576020366003190112610173576001600160a01b03610560610885565b165f526008602052602060405f2054604051908152f35b34610173576040366003190112610173576102e0610593610885565b602435906105a28233836109a0565b610c56565b34610173575f366003190112610173576105bf610c2f565b600580546001600160a01b031981169091555f906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610173576020366003190112610173576001600160a01b03610623610885565b165f525f602052602060405f2054604051908152f35b34610173576020366003190112610173576102e060043533610c56565b346101735760403660031901126101735761066f610885565b6024359061067b610c2f565b6001600160a01b03169081156106ef57600254908082018092116106db5760207fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef915f9360025584845283825260408420818154019055604051908152a3005b634e487b7160e01b5f52601160045260245ffd5b63ec442f0560e01b5f525f60045260245ffd5b34610173575f36600319011261017357602061071c610b13565b604051908152f35b34610173575f36600319011261017357602060ff60095416604051908152f35b3461017357606036600319011261017357610332610760610885565b61076861089b565b604435916107778333836109a0565b610a69565b34610173575f366003190112610173576020600254604051908152f35b34610173576040366003190112610173576103326107b5610885565b6024359033610cda565b34610173575f366003190112610173575f6003546107dc816108b1565b80845290600181169081156103fb575060011461080357610399836103858185038261096a565b60035f9081527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b939250905b80821061084757509091508101602001610385610375565b91926001816020925483858801015201910190929161082f565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b600435906001600160a01b038216820361017357565b602435906001600160a01b038216820361017357565b90600182811c921680156108df575b60208310146108cb57565b634e487b7160e01b5f52602260045260245ffd5b91607f16916108c0565b5f92918154916108f8836108b1565b808352926001811690811561094d575060011461091457505050565b5f9081526020812093945091925b838310610933575060209250010190565b600181602092949394548385870101520191019190610922565b915050602093945060ff929192191683830152151560051b010190565b90601f8019910116810190811067ffffffffffffffff82111761098c57604052565b634e487b7160e01b5f52604160045260245ffd5b6001600160a01b039081165f818152600160209081526040808320948616835293905291909120549291905f1984106109da575b50505050565b828410610a46578015610a33576001600160a01b03821615610a20575f52600160205260405f209060018060a01b03165f5260205260405f20910390555f8080806109d4565b634a1406b160e11b5f525f60045260245ffd5b63e602df0560e01b5f525f60045260245ffd5b508290637dc7a0d960e11b5f5260018060a01b031660045260245260445260645ffd5b6001600160a01b0316908115610b00576001600160a01b03169182156106ef57815f525f60205260405f2054818110610ae757817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92602092855f525f84520360405f2055845f525f825260405f20818154019055604051908152a3565b8263391434e360e21b5f5260045260245260445260645ffd5b634b637e8f60e11b5f525f60045260245ffd5b307f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480610c06575b15610b6e577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f82527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a08152610c0060c08261096a565b51902090565b507f00000000000000000000000000000000000000000000000000000000000000004614610b45565b6005546001600160a01b03163303610c4357565b63118cdaa760e01b5f523360045260245ffd5b9091906001600160a01b03168015610b0057805f525f60205260405f2054838110610cc0576020845f94957fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef938587528684520360408620558060025403600255604051908152a3565b915063391434e360e21b5f5260045260245260445260645ffd5b6001600160a01b0316908115610a33576001600160a01b0316918215610a205760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591835f526001825260405f20855f5282528060405f2055604051908152a3565b60ff8114610d835760ff811690601f8211610d745760405191610d6160408461096a565b6020808452838101919036833783525290565b632cd44ac360e21b5f5260045ffd5b50604051610d9d81610d968160066108e9565b038261096a565b90565b60ff8114610dc45760ff811690601f8211610d745760405191610d6160408461096a565b50604051610d9d81610d968160076108e9565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411610e59579160209360809260ff5f9560405194855216868401526040830152606082015282805260015afa15610e4e575f516001600160a01b03811615610e4457905f905f90565b505f906001905f90565b6040513d5f823e3d90fd5b5050505f9160039190565b6004811015610ec45780610e76575050565b60018103610e8d5763f645eedf60e01b5f5260045ffd5b60028103610ea8575063fce698f760e01b5f5260045260245ffd5b600314610eb25750565b6335e2f38360e21b5f5260045260245ffd5b634e487b7160e01b5f52602160045260245ffd360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00","sourceMap":"1537:24407:95:-:0;;;;;;;1171:4:23;1163:13;;-1:-1:-1;;;;;;;;;;;1537:24407:95;;;;;;7894:76:22;;-1:-1:-1;;;;;;;;;;;1537:24407:95;;7983:34:22;7979:146;;-1:-1:-1;1537:24407:95;;;;;;;;1163:13:23;1537:24407:95;;;;;;;;;;;7979:146:22;-1:-1:-1;;;;;;1537:24407:95;-1:-1:-1;;;;;1537:24407:95;;;-1:-1:-1;;;;;;;;;;;1537:24407:95;;;8085:29:22;;1537:24407:95;;8085:29:22;7979:146;;;;7894:76;7936:23;;;-1:-1:-1;7936:23:22;;-1:-1:-1;7936:23:22;1537:24407:95;;;","linkReferences":{}},"deployedBytecode":{"object":"0x6080806040526004361015610012575f80fd5b5f905f3560e01c90816258f6b81461153a5750806301ffc9a7146114e45780630c9d9b97146114ac578063109ec2e7146114385780631e324b5214611385578063240dfa9514611367578063248a9ca3146113275780632f2ff15d146112dc578063302ac5d01461119557806336568abe1461115057806338ff319f1461108b5780633b70c18a146110625780633f4ba83a14610fe25780634e68953914610fad5780634f1ef28614610d2657806352d1902d14610cbf5780635c975abb14610c905780636a762d5c14610c62578063763b754a146109165780637e1c0c09146108f85780638456cb591461088557806387be40b11461081057806387e7a3a3146107f55780638b4864d6146107da5780638b841f6c146107bc57806391d148541461076657806393272baf1461071a5780639d63848a14610699578063a217fddf1461067d578063ad3cb1cc14610634578063c1c6092114610609578063c305870c146104b3578063c81eb7971461048a578063d547741f14610436578063e63ab1e91461041a5763f6cdd9cc146101a9575f80fd5b610100366003190112610417576101be61155c565b6024356101c961161c565b9160e4356001600160a01b03811690819003610415576101e76116df565b6101fc815f52600960205260405f2054151590565b15610406578085913b156103ed5781600491604051928380926314b0812960e11b825234905af180156103a6576103f1575b50506102386116df565b6001600160a01b038116928490843b156103ed5760ff6040519163d505accf60e01b8352336004840152306024840152856044840152606435606484015216608482015260a43560a482015260c43560c4820152818160e48183895af16103d4575b50506102a46116df565b81156103c5576102b39061203e565b905060038110156103b157806102d25763a1e9dd9d60e01b8452600484fd5b6001810361034857506103156040516323b872dd60e01b60208201523360248201523060448201528260648201526064815261030f6084826115ca565b836121f8565b604051908152604435907ff80de57fd7626baaff7d867494866703686569822c2326ae60b2515ede953c3a60203392a480f35b60020361031557813b156103a25760405163079cc67960e41b8152336004820152602481018290528390818160448183885af180156103a65761038d575b5050610315565b81610397916115ca565b6103a257825f610386565b8280fd5b6040513d84823e3d90fd5b634e487b7160e01b84526021600452602484fd5b63162908e360e11b8452600484fd5b816103de916115ca565b6103e957835f61029a565b8380fd5b5080fd5b816103fb916115ca565b6103e957835f61022e565b631e37e19560e31b8552600485fd5b845b80fd5b5034610417578060031936011261041757602060405160018152f35b503461041757604036600319011261041757610486600435610456611572565b9061048161047c825f525f516020613dc05f395f51905f52602052600160405f20015490565b611756565b611d66565b5080f35b50346104175780600319360112610417576001546040516001600160a01b039091168152602090f35b5034610417576060366003190112610417576104cd61155c565b602435906104d96116df565b81156105fa576104e88161203e565b905060038110156103b157806105075763a1e9dd9d60e01b8452600484fd5b6001810361059257506105536040516323b872dd60e01b6020820152336024820152306044820152836064820152606481526105446084826115ca565b6001600160a01b0383166121f8565b6040519182526001600160a01b0316906044359033907ff80de57fd7626baaff7d867494866703686569822c2326ae60b2515ede953c3a90602090a480f35b60020361055357826001600160a01b038216803b156103ed5760405163079cc67960e41b8152336004820152602481018590529082908290604490829084905af180156103a6576105e5575b5050610553565b816105ef916115ca565b6103a257825f6105de565b63162908e360e11b8352600483fd5b50346104175761063061062461061e3661167d565b90611fc1565b60405191829182611644565b0390f35b5034610417578060031936011261041757506106306040516106576040826115ca565b60058152640352e302e360dc1b6020820152604051918291602083526020830190611693565b5034610417578060031936011261041757602090604051908152f35b503461041757806003193601126104175760405180916020600554928381520191600582527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0915b81811061070457610630856106f8818703826115ca565b60405191829182611588565b82548452602090930192600192830192016106e1565b50346104175760203660031901126104175761073c61073761155c565b61203e565b6040519150600381101561075257602092508152f35b634e487b7160e01b83526021600452602483fd5b5034610417576040366003190112610417576040610782611572565b9160043581525f516020613dc05f395f51905f52602052209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b50346104175780600319360112610417576020600854604051908152f35b5034610417576106306106f86107ef3661167d565b90611f44565b5034610417576106306106f861080a3661167d565b90611eab565b503461041757806003193601126104175760405180916020600354928381520191600382527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b915b81811061086f5761063085610624818703826115ca565b8254845260209093019260019283019201610858565b503461041757806003193601126104175761089e611706565b6108a66116df565b600160ff195f516020613de05f395f51905f525416175f516020613de05f395f51905f52557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a180f35b50346104175780600319360112610417576020600554604051908152f35b50346104175760a03660031901126104175761093061155c565b610938611572565b6044356001600160a01b038116908190036103e9576084359167ffffffffffffffff831161041557366023840112156104155782600401356109798161162c565b9361098760405195866115ca565b8185526024602086019260061b82010190368211610c5e57602401915b818310610be6575050505f516020613e005f395f51905f52549360ff8560401c16159467ffffffffffffffff811680159081610bde575b6001149081610bd4575b159081610bcb575b50610bbc5767ffffffffffffffff1981166001175f516020613e005f395f51905f525585610b90575b50610a1f61218d565b610a2761218d565b610a2f61218d565b6001600160a01b031690610a428261179c565b50610a4c8261184b565b506001600160a01b031690610a608261184b565b506001600160601b0360a01b8654161785556001600160601b0360a01b60015416176001556001600160601b0360a01b6002541617600255610aa36064356120d4565b50825b8151811015610b2f57610ab981836116b7565b51602081019081516003811015610b1b57610add5763a1e9dd9d60e01b8652600486fd5b519051906001600160a01b03166003821015610b075760019291610b0091611e02565b5001610aa6565b634e487b7160e01b86526021600452602486fd5b634e487b7160e01b87526021600452602487fd5b5050610b385780f35b68ff0000000000000000195f516020613e005f395f51905f5254165f516020613e005f395f51905f52557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a180f35b68ffffffffffffffffff191668010000000000000001175f516020613e005f395f51905f52555f610a16565b63f92ee8a960e01b8752600487fd5b9050155f6109ed565b303b1591506109e5565b8791506109db565b604083360312610c5e57604051906040820182811067ffffffffffffffff821117610c4a5760405283356001600160a01b0381168103610c465782526020840135906003821015610c4657826020928360409501528152019201916109a4565b8980fd5b634e487b7160e01b8a52604160045260248afd5b8780fd5b50346104175760e036600319011261041757610c7c61155c565b602435610c8761161c565b916102386116df565b5034610417578060031936011261041757602060ff5f516020613de05f395f51905f5254166040519015158152f35b50346104175780600319360112610417577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163003610d175760206040515f516020613da05f395f51905f528152f35b63703e46dd60e11b8152600490fd5b50604036600319011261041757610d3b61155c565b6024359067ffffffffffffffff82116103a257366023830112156103a25781600401359083610d6983611600565b93610d7760405195866115ca565b838552602085019336602482840101116103a257806024602093018637850101526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016308114908115610f8b575b50610f7c578380525f516020613dc05f395f51905f5260209081526040808620335f908152925290205460ff1615610f64576040516352d1902d60e01b81526001600160a01b0382169390602081600481885afa869181610f2c575b50610e4257634c9c8ce360e01b86526004859052602486fd5b93845f516020613da05f395f51905f52879603610f1a5750823b15610f08575f516020613da05f395f51905f5280546001600160a01b031916821790558491907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8380a2805115610eed576104869382915190845af43d15610ee5573d91610ec983611600565b92610ed760405194856115ca565b83523d85602085013e612250565b606091612250565b5050505034610ef95780f35b63b398979f60e01b8152600490fd5b634c9c8ce360e01b8552600452602484fd5b632a87526960e21b8652600452602485fd5b9091506020813d602011610f5c575b81610f48602093836115ca565b81010312610f585751905f610e29565b5f80fd5b3d9150610f3b565b63e2517d3f60e01b8452336004526024849052604484fd5b63703e46dd60e11b8452600484fd5b5f516020613da05f395f51905f52546001600160a01b0316141590505f610dcd565b5034610417576020366003190112610417576020610fd86004355f52600460205260405f2054151590565b6040519015158152f35b5034610417578060031936011261041757610ffb611706565b5f516020613de05f395f51905f525460ff8116156110535760ff19165f516020613de05f395f51905f52557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a180f35b638dfc202b60e01b8252600482fd5b50346104175780600319360112610417576002546040516001600160a01b039091168152602090f35b5034610417576020366003190112610417576110a56116df565b60405161043d8082019082821067ffffffffffffffff83111761113c5760609183916122af8339308152600435602082015233604082015203019082f0801561112f576020906001600160a01b03166110fd81612076565b507f9d5f66d985a12f505753a5f6417ed3c4ec6e68963ee0119770dda415f0d14ad082604051838152a1604051908152f35b50604051903d90823e3d90fd5b634e487b7160e01b84526041600452602484fd5b50346104175760403660031901126104175761116a611572565b336001600160a01b038216036111865761048690600435611d66565b63334bd91960e11b8252600482fd5b50346104175760403660031901126104175760043560243567ffffffffffffffff81116103a257366023820112156103a25780600401359167ffffffffffffffff83116103e957602482019160248436920101116103e9576002546001600160a01b031633036112cd57611214815f52600460205260405f2054151590565b1561123b57509061122491611bd6565b1561122c5780f35b637c6953f960e01b8152600490fd5b8354604051635aa6e67560e01b81529190602090839060049082906001600160a01b03165afa9182156112c257859261128e575b500361127f5790611224916119fe565b638154374b60e01b8352600483fd5b9091506020813d6020116112ba575b816112aa602093836115ca565b81010312610f585751905f61126f565b3d915061129d565b6040513d87823e3d90fd5b636edaef2f60e11b8452600484fd5b5034610417576040366003190112610417576104866004356112fc611572565b9061132261047c825f525f516020613dc05f395f51905f52602052600160405f20015490565b6118f8565b503461041757602036600319011261041757602061135f6004355f525f516020613dc05f395f51905f52602052600160405f20015490565b604051908152f35b50346104175780600319360112610417576020600354604051908152f35b506080366003190112610f585761139a61155c565b602435906064356001600160a01b03811690819003610f58576113bb6116df565b6113d0815f52600960205260405f2054151590565b1561142957803b15610f58575f600491604051928380926314b0812960e11b825234905af1801561141e57611409575b506104d96116df565b6114169193505f906115ca565b5f915f611400565b6040513d5f823e3d90fd5b631e37e19560e31b5f5260045ffd5b34610f58575f366003190112610f585760405180602060085491828152019060085f527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3905f5b81811061149657610630856106f8818703826115ca565b825484526020909301926001928301920161147f565b34610f58576020366003190112610f58576020610fd86001600160a01b036114d261155c565b165f52600960205260405f2054151590565b34610f58576020366003190112610f585760043563ffffffff60e01b8116809103610f5857602090637965db0b60e01b8114908115611529575b506040519015158152f35b6301ffc9a760e01b1490508261151e565b34610f58575f366003190112610f58575f546001600160a01b03168152602090f35b600435906001600160a01b0382168203610f5857565b602435906001600160a01b0382168203610f5857565b60206040818301928281528451809452019201905f5b8181106115ab5750505090565b82516001600160a01b031684526020938401939092019160010161159e565b90601f8019910116810190811067ffffffffffffffff8211176115ec57604052565b634e487b7160e01b5f52604160045260245ffd5b67ffffffffffffffff81116115ec57601f01601f191660200190565b6084359060ff82168203610f5857565b67ffffffffffffffff81116115ec5760051b60200190565b60206040818301928281528451809452019201905f5b8181106116675750505090565b825184526020938401939092019160010161165a565b6040906003190112610f58576004359060243590565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b80518210156116cb5760209160051b010190565b634e487b7160e01b5f52603260045260245ffd5b60ff5f516020613de05f395f51905f5254166116f757565b63d93c066560e01b5f5260045ffd5b335f9081527f2222dce04fae1e25cd76e9391151ad9e0187ef92144ac6ce9e4e09f2c453b751602052604090205460ff161561173e57565b63e2517d3f60e01b5f5233600452600160245260445ffd5b5f8181525f516020613dc05f395f51905f526020908152604080832033845290915290205460ff16156117865750565b63e2517d3f60e01b5f523360045260245260445ffd5b6001600160a01b0381165f9081527fb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d602052604090205460ff16611846576001600160a01b03165f8181527fb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d60205260408120805460ff191660011790553391907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a4600190565b505f90565b6001600160a01b0381165f9081527f2222dce04fae1e25cd76e9391151ad9e0187ef92144ac6ce9e4e09f2c453b751602052604090205460ff16611846576001600160a01b03165f8181527f2222dce04fae1e25cd76e9391151ad9e0187ef92144ac6ce9e4e09f2c453b75160205260408120805460ff191660019081179091553392917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9080a4600190565b5f8181525f516020613dc05f395f51905f52602090815260408083206001600160a01b038616845290915290205460ff16611996575f8181525f516020613dc05f395f51905f52602090815260408083206001600160a01b0395909516808452949091528120805460ff19166001179055339291907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9080a4600190565b50505f90565b919082018092116119a957565b634e487b7160e01b5f52601160045260245ffd5b926119f7906119e960609460ff9498979860018060a01b03168752608060208801526080870190611693565b908582036040870152611693565b9416910152565b90801561199657813560f81c60028111611b36578015611b9d57600114611b5557604203611846576001810135906041602182013591013560f81c91805f1a60018110159081611b49575b5015611b3657815f1a60018110159081611b3d575b5015611b3657611a8a611aaa919060405191604083016040525f8352601f8301525f6020835184010152565b919060405191604083016040525f8352601f8301525f6020835184010152565b6040516116b480820182811067ffffffffffffffff8211176115ec57858486611adb9386956126ec873930906119bd565b03905ff0801561141e577facef1c6c805d7395b4aeee279bc679beea84f01a1f1b08be7aef2af535bba81f936001600160a01b0390911691611b2e9190611b2184611e54565b50604051948594856119bd565b0390a1600190565b5050505f90565b601f915011155f611a5e565b601f915011155f611a49565b60150361184657602060017fdf6d7b91d41cb55ced11681822028e1605f72d50168b3898feb40ee04259d18292013560601c611b9081611e2f565b50604051908152a1600190565b5060210361184657602060017fc6b4ec1bc7a17331ef296e0810039347563e90c3fa496b4de270f6c5ff345abe920135611b90816120d4565b60685f920361199657602081013560601c603482013560601c91604881013590611bff8461203e565b90506003811015611d525780611c1e5763a1e9dd9d60e01b8652600486fd5b909192939450600181145f14611ca3575060405163a9059cbb60e01b6020808301919091526001600160a01b0385166024830152604480830185905282527fabdd326df16eff74bb67e4a6b3d6372ceba76796f256a7b7f8577108cf5db287929091611c9590611c8f6064826115ca565b876121f8565b6040519384523592a4600190565b600214611cd4575b60207fabdd326df16eff74bb67e4a6b3d6372ceba76796f256a7b7f8577108cf5db28791611c95565b833b15610f58576040516340c10f1960e01b81526001600160a01b038416600482015260248101839052905f8260448183895af190811561141e577fabdd326df16eff74bb67e4a6b3d6372ceba76796f256a7b7f8577108cf5db28792602092611d42575b50915050611cab565b5f611d4c916115ca565b5f611d39565b634e487b7160e01b5f52602160045260245ffd5b5f8181525f516020613dc05f395f51905f52602090815260408083206001600160a01b038616845290915290205460ff1615611996575f8181525f516020613dc05f395f51905f52602090815260408083206001600160a01b0395909516808452949091528120805460ff19169055339291907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9080a4600190565b6001600160a01b03166003821015611d5257611e2c91815f52600760205260405f20556005612132565b90565b6001600160a01b03165f81815260076020526040902060019055611e2c906005612132565b6001600160a01b03165f81815260076020526040902060029055611e2c906005612132565b90611e838261162c565b611e9060405191826115ca565b8281528092611ea1601f199161162c565b0190602036910137565b91906008549081841015611f2857611ec3908461199c565b90808211611f20575b508281039081116119a957611ee081611e79565b905f5b818110611ef1575090925050565b80611f08611f016001938861199c565b6008612061565b90549060031b1c611f1982866116b7565b5201611ee3565b90505f611ecc565b50509050604051611f3a6020826115ca565b5f81525f36813790565b91906005549081841015611f2857611f5c908461199c565b90808211611fb9575b508281039081116119a957611f7981611e79565b905f5b818110611f8a575090925050565b80611fa1611f9a6001938861199c565b6005612061565b90549060031b1c611fb282866116b7565b5201611f7c565b90505f611f65565b91906003549081841015611f2857611fd9908461199c565b90808211612036575b508281039081116119a957611ff681611e79565b905f5b818110612007575090925050565b8061201e6120176001938861199c565b6003612061565b90549060031b1c61202f82866116b7565b5201611ff9565b90505f611fe2565b612052906001600160a01b031660056121b8565b91906003831015611d52579190565b80548210156116cb575f5260205f2001905f90565b805f52600960205260405f2054155f1461184657600854600160401b8110156115ec578060016120ab92016008556008612061565b81549060031b9083821b915f19901b1916179055600854905f52600960205260405f2055600190565b805f52600460205260405f2054155f1461184657600354600160401b8110156115ec5780600161210992016003556003612061565b81549060031b9083821b915f19901b1916179055600354905f52600460205260405f2055600190565b5f82815260018201602052604090205461199657805490600160401b8210156115ec57612166826001809401835582612061565b81549060031b9085821b915f19901b19161790558054925f520160205260405f2055600190565b60ff5f516020613e005f395f51905f525460401c16156121a957565b631afcd79f60e31b5f5260045ffd5b9190805f526002830160205260405f20549283155f146121f0576121eb9293506001915f520160205260405f2054151590565b905f90565b505060019190565b905f602091828151910182855af11561141e575f513d61224757506001600160a01b0381163b155b6122275750565b635274afe760e01b5f9081526001600160a01b0391909116600452602490fd5b60011415612220565b90612274575080511561226557602081519101fd5b63d6bda27560e01b5f5260045ffd5b815115806122a5575b612285575090565b639996b31560e01b5f9081526001600160a01b0391909116600452602490fd5b50803b1561227d56fe60a0346100e757601f61043d38819003918201601f19168301916001600160401b038311848410176100eb578084926060946040528339810103126100e757610047816100ff565b602082015190916001600160a01b0390610063906040016100ff565b169182156100d4575f80546001600160a01b031981168517825560405194916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36080526001556103299081610114823960805181818161014c01526102000152f35b631e4fbdf760e01b5f525f60045260245ffd5b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b51906001600160a01b03821682036100e75756fe60806040526004361015610011575f80fd5b5f3560e01c806329610252146101f357806369fe0e2d146101d2578063715018a61461017b57806386ea825c146101375780638da5cb5b14610110578063ddca3f43146100f35763f2fde38b14610066575f80fd5b346100ef5760203660031901126100ef576004356001600160a01b038116908190036100ef57610094610303565b80156100dc575f80546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b5f525f60045260245ffd5b5f80fd5b346100ef575f3660031901126100ef576020600154604051908152f35b346100ef575f3660031901126100ef575f546040516001600160a01b039091168152602090f35b346100ef575f3660031901126100ef576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346100ef575f3660031901126100ef57610193610303565b5f80546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346100ef5760203660031901126100ef576101eb610303565b600435600155005b5f3660031901126100ef577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633036102f45760015434036102e5575f8080803460018060a01b038254165af13d156102e0573d67ffffffffffffffff81116102cc5760405190601f8101601f19908116603f0116820167ffffffffffffffff8111838210176102cc5760405281525f60203d92013e5b156102bd577faaeea0b595e409578c26dd16fa1bdb3a29a4d874694ecef3ca96376940f5fbfb5f80a1005b6353048b4960e11b5f5260045ffd5b634e487b7160e01b5f52604160045260245ffd5b610292565b631fbbed9560e01b5f5260045ffd5b63064917ff60e11b5f5260045ffd5b5f546001600160a01b0316330361031657565b63118cdaa760e01b5f523360045260245ffd61016080604052346104a0576116b4803803809161001d82856104a4565b83398101906080818303126104a05780516001600160a01b038116908190036104a05760208201516001600160401b0381116104a0578361005f9184016104c7565b60408301519093906001600160401b0381116104a0576060916100839185016104c7565b9201519160ff83168093036104a0576040938451926100a286856104a4565b60018452603160f81b6020850190815282519093906001600160401b0381116103b057600354600181811c91168015610496575b602082101461039257601f8111610433575b50806020601f82116001146103cf575f916103c4575b508160011b915f199060031b1c1916176003555b8051906001600160401b0382116103b05760045490600182811c921680156103a6575b60208310146103925781601f849311610324575b50602090601f83116001146102be575f926102b3575b50508160011b915f199060031b1c1916176004555b80156102a057600580546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a36101c48161051c565b610120526101d1836106a3565b6101405260208151910120918260e05251902080610100524660a05283519060208201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f84528583015260608201524660808201523060a082015260a0815261023c60c0826104a4565b5190206080523060c05260ff19600954161760095551610ed890816107dc823960805181610b4c015260a05181610c09015260c05181610b16015260e05181610b9b01526101005181610bc10152610120518161045f015261014051816104880152f35b631e4fbdf760e01b5f525f60045260245ffd5b015190505f8061015f565b60045f9081528281209350601f198516905b81811061030c57509084600195949392106102f4575b505050811b01600455610174565b01515f1960f88460031b161c191690555f80806102e6565b929360206001819287860151815501950193016102d0565b60045f529091507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f840160051c81019160208510610388575b90601f859493920160051c01905b81811061037a5750610149565b5f815584935060010161036d565b909150819061035f565b634e487b7160e01b5f52602260045260245ffd5b91607f1691610135565b634e487b7160e01b5f52604160045260245ffd5b90508401515f6100fe565b60035f9081528181209250601f198416905b81811061041b57509083600194939210610403575b5050811b01600355610112565b8601515f1960f88460031b161c191690555f806103f6565b9192602060018192868b0151815501940192016103e1565b60035f527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f830160051c8101916020841061048c575b601f0160051c01905b81811061048157506100e8565b5f8155600101610474565b909150819061046b565b90607f16906100d6565b5f80fd5b601f909101601f19168101906001600160401b038211908210176103b057604052565b81601f820112156104a0578051906001600160401b0382116103b057604051926104fb601f8401601f1916602001856104a4565b828452602083830101116104a057815f9260208093018386015e8301015290565b908151602081105f14610596575090601f815111610556576020815191015160208210610547571790565b5f198260200360031b1b161790565b604460209160405192839163305a27a960e01b83528160048401528051918291826024860152018484015e5f828201840152601f01601f19168101030190fd5b6001600160401b0381116103b057600654600181811c91168015610699575b602082101461039257601f8111610666575b50602092601f821160011461060557928192935f926105fa575b50508160011b915f199060031b1c19161760065560ff90565b015190505f806105e1565b601f1982169360065f52805f20915f5b86811061064e5750836001959610610636575b505050811b0160065560ff90565b01515f1960f88460031b161c191690555f8080610628565b91926020600181928685015181550194019201610615565b60065f52601f60205f20910160051c810190601f830160051c015b81811061068e57506105c7565b5f8155600101610681565b90607f16906105b5565b908151602081105f146106ce575090601f815111610556576020815191015160208210610547571790565b6001600160401b0381116103b057600754600181811c911680156107d1575b602082101461039257601f811161079e575b50602092601f821160011461073d57928192935f92610732575b50508160011b915f199060031b1c19161760075560ff90565b015190505f80610719565b601f1982169360075f52805f20915f5b868110610786575083600195961061076e575b505050811b0160075560ff90565b01515f1960f88460031b161c191690555f8080610760565b9192602060018192868501518155019401920161074d565b60075f52601f60205f20910160051c810190601f830160051c015b8181106107c657506106ff565b5f81556001016107b9565b90607f16906106ed56fe6080806040526004361015610012575f80fd5b5f3560e01c90816306fdde03146107bf57508063095ea7b31461079957806318160ddd1461077c57806323b872dd14610744578063313ce567146107245780633644e5151461070257806340c10f191461065657806342966c681461063957806370a0823114610602578063715018a6146105a757806379cc6790146105775780637ecebe001461053f57806384b0196e146104475780638da5cb5b1461041f57806395d89b411461033d578063a9059cbb1461030c578063d505accf146101c7578063dd62ed3e146101775763f2fde38b146100ed575f80fd5b3461017357602036600319011261017357610106610885565b61010e610c2f565b6001600160a01b0316801561016057600580546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3005b631e4fbdf760e01b5f525f60045260245ffd5b5f80fd5b3461017357604036600319011261017357610190610885565b61019861089b565b6001600160a01b039182165f908152600160209081526040808320949093168252928352819020549051908152f35b346101735760e0366003190112610173576101e0610885565b6101e861089b565b604435906064359260843560ff81168103610173578442116102f9576102bc6102c59160018060a01b03841696875f52600860205260405f20908154916001830190556040519060208201927f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c984528a604084015260018060a01b038916606084015289608084015260a083015260c082015260c0815261028a60e08261096a565b519020610295610b13565b906040519161190160f01b83526002830152602282015260c43591604260a4359220610dd7565b90929192610e64565b6001600160a01b03168481036102e257506102e09350610cda565b005b84906325c0072360e11b5f5260045260245260445ffd5b8463313c898160e11b5f5260045260245ffd5b3461017357604036600319011261017357610332610328610885565b6024359033610a69565b602060405160018152f35b34610173575f366003190112610173576040515f60045461035d816108b1565b80845290600181169081156103fb575060011461039d575b610399836103858185038261096a565b604051918291602083526020830190610861565b0390f35b60045f9081527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b939250905b8082106103e157509091508101602001610385610375565b9192600181602092548385880101520191019092916103c9565b60ff191660208086019190915291151560051b840190910191506103859050610375565b34610173575f366003190112610173576005546040516001600160a01b039091168152602090f35b34610173575f366003190112610173576104e36104837f0000000000000000000000000000000000000000000000000000000000000000610d3d565b6104ac7f0000000000000000000000000000000000000000000000000000000000000000610da0565b60206104f1604051926104bf838561096a565b5f84525f368137604051958695600f60f81b875260e08588015260e0870190610861565b908582036040870152610861565b4660608501523060808501525f60a085015283810360c08501528180845192838152019301915f5b82811061052857505050500390f35b835185528695509381019392810192600101610519565b34610173576020366003190112610173576001600160a01b03610560610885565b165f526008602052602060405f2054604051908152f35b34610173576040366003190112610173576102e0610593610885565b602435906105a28233836109a0565b610c56565b34610173575f366003190112610173576105bf610c2f565b600580546001600160a01b031981169091555f906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610173576020366003190112610173576001600160a01b03610623610885565b165f525f602052602060405f2054604051908152f35b34610173576020366003190112610173576102e060043533610c56565b346101735760403660031901126101735761066f610885565b6024359061067b610c2f565b6001600160a01b03169081156106ef57600254908082018092116106db5760207fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef915f9360025584845283825260408420818154019055604051908152a3005b634e487b7160e01b5f52601160045260245ffd5b63ec442f0560e01b5f525f60045260245ffd5b34610173575f36600319011261017357602061071c610b13565b604051908152f35b34610173575f36600319011261017357602060ff60095416604051908152f35b3461017357606036600319011261017357610332610760610885565b61076861089b565b604435916107778333836109a0565b610a69565b34610173575f366003190112610173576020600254604051908152f35b34610173576040366003190112610173576103326107b5610885565b6024359033610cda565b34610173575f366003190112610173575f6003546107dc816108b1565b80845290600181169081156103fb575060011461080357610399836103858185038261096a565b60035f9081527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b939250905b80821061084757509091508101602001610385610375565b91926001816020925483858801015201910190929161082f565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b600435906001600160a01b038216820361017357565b602435906001600160a01b038216820361017357565b90600182811c921680156108df575b60208310146108cb57565b634e487b7160e01b5f52602260045260245ffd5b91607f16916108c0565b5f92918154916108f8836108b1565b808352926001811690811561094d575060011461091457505050565b5f9081526020812093945091925b838310610933575060209250010190565b600181602092949394548385870101520191019190610922565b915050602093945060ff929192191683830152151560051b010190565b90601f8019910116810190811067ffffffffffffffff82111761098c57604052565b634e487b7160e01b5f52604160045260245ffd5b6001600160a01b039081165f818152600160209081526040808320948616835293905291909120549291905f1984106109da575b50505050565b828410610a46578015610a33576001600160a01b03821615610a20575f52600160205260405f209060018060a01b03165f5260205260405f20910390555f8080806109d4565b634a1406b160e11b5f525f60045260245ffd5b63e602df0560e01b5f525f60045260245ffd5b508290637dc7a0d960e11b5f5260018060a01b031660045260245260445260645ffd5b6001600160a01b0316908115610b00576001600160a01b03169182156106ef57815f525f60205260405f2054818110610ae757817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92602092855f525f84520360405f2055845f525f825260405f20818154019055604051908152a3565b8263391434e360e21b5f5260045260245260445260645ffd5b634b637e8f60e11b5f525f60045260245ffd5b307f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480610c06575b15610b6e577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f82527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a08152610c0060c08261096a565b51902090565b507f00000000000000000000000000000000000000000000000000000000000000004614610b45565b6005546001600160a01b03163303610c4357565b63118cdaa760e01b5f523360045260245ffd5b9091906001600160a01b03168015610b0057805f525f60205260405f2054838110610cc0576020845f94957fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef938587528684520360408620558060025403600255604051908152a3565b915063391434e360e21b5f5260045260245260445260645ffd5b6001600160a01b0316908115610a33576001600160a01b0316918215610a205760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591835f526001825260405f20855f5282528060405f2055604051908152a3565b60ff8114610d835760ff811690601f8211610d745760405191610d6160408461096a565b6020808452838101919036833783525290565b632cd44ac360e21b5f5260045ffd5b50604051610d9d81610d968160066108e9565b038261096a565b90565b60ff8114610dc45760ff811690601f8211610d745760405191610d6160408461096a565b50604051610d9d81610d968160076108e9565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411610e59579160209360809260ff5f9560405194855216868401526040830152606082015282805260015afa15610e4e575f516001600160a01b03811615610e4457905f905f90565b505f906001905f90565b6040513d5f823e3d90fd5b5050505f9160039190565b6004811015610ec45780610e76575050565b60018103610e8d5763f645eedf60e01b5f5260045ffd5b60028103610ea8575063fce698f760e01b5f5260045260245ffd5b600314610eb25750565b6335e2f38360e21b5f5260045260245ffd5b634e487b7160e01b5f52602160045260245ffd360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00","sourceMap":"1537:24407:95:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1537:24407:95;;;;;;:::i;:::-;;;;;:::i;:::-;;;;-1:-1:-1;;;;;1537:24407:95;;;;;;;;1944:72:30;;:::i;:::-;12473:55:77;;-1:-1:-1;1537:24407:95;5197:14:77;1537:24407:95;;;-1:-1:-1;1537:24407:95;;5197:26:77;;5101:129;;12473:55;17461:44:95;17457:106;;17573:60;;;;;;;1537:24407;;;;;;;;;;;;17573:60;;17621:9;17573:60;;;;;;;;;1537:24407;1944:72:30;;;;:::i;:::-;-1:-1:-1;;;;;1537:24407:95;;;;;16408:80;;;;;1537:24407;;;;;;;16408:80;;16435:10;1537:24407;16408:80;;1537:24407;16455:4;1537:24407;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16408:80;;1537:24407;16408:80;;;;;;;1537:24407;1944:72:30;;;;:::i;:::-;14435:11:95;;14431:64;;14531:21;;;:::i;:::-;1537:24407;;;;;;;;14567:30;;;-1:-1:-1;;;14620:18:95;;1537:24407;14620:18;;14563:333;1537:24407;14659:31;;1537:24407;;;1745:53:56;1537:24407:95;;;;;;1745:53:56;;;16435:10:95;1537:24407;1745:53:56;;1537:24407:95;16455:4;1537:24407;;;;;;;;;;1745:53:56;;;1537:24407:95;1745:53:56;;:::i;:::-;;;:::i;:::-;1537:24407:95;;;;;;;16435:10;14911:48;1537:24407;16435:10;14911:48;;1537:24407;;14655:241;14805:14;14792:27;14655:241;14788:108;14835:50;;;;;1537:24407;;-1:-1:-1;;;14835:50:95;;16435:10;1537:24407;14835:50;;1537:24407;;;;;;;;;;;;;;14835:50;;;;;;;;;14788:108;;;14655:241;;14835:50;;;;;:::i;:::-;1537:24407;;14835:50;;;;1537:24407;;;;14835:50;1537:24407;;;;;;;;;;-1:-1:-1;;;1537:24407:95;;;;;;;;14431:64;-1:-1:-1;;;14469:15:95;;1537:24407;14469:15;;16408:80;;;;;:::i;:::-;1537:24407;;16408:80;;;;1537:24407;;;;16408:80;1537:24407;;;17573:60;;;;;:::i;:::-;1537:24407;;17573:60;;;;17457:106;-1:-1:-1;;;17528:24:95;;1537:24407;15502:24;17528;1537:24407;;;;;;;;;;;;;;;;;;;;;5528:4;1537:24407;;;;;;;;;;-1:-1:-1;;1537:24407:95;;;;5815:26:20;1537:24407:95;;;;:::i;:::-;5785:18:20;3283:4;5785:18;;-1:-1:-1;1537:24407:95;-1:-1:-1;;;;;;;;;;;1537:24407:95;;4967:24:20;1537:24407:95;-1:-1:-1;1537:24407:95;4967:24:20;1537:24407:95;4807:191:20;;5785:18;3283:4;:::i;:::-;5815:26;:::i;:::-;;1537:24407:95;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1537:24407:95;;;;;;;;;;;;;;;-1:-1:-1;;1537:24407:95;;;;;;:::i;:::-;;;1944:72:30;;;:::i;:::-;14435:11:95;;14431:64;;14531:21;;;:::i;:::-;1537:24407;;;;;;;;14567:30;;;-1:-1:-1;;;14620:18:95;;1537:24407;14620:18;;14563:333;1537:24407;14659:31;;1537:24407;;;1745:53:56;1537:24407:95;;;;;;1745:53:56;;;14737:10:95;1537:24407;1745:53:56;;1537:24407:95;14757:4;1537:24407;;;;;;;;;;1745:53:56;;;;;;:::i;:::-;-1:-1:-1;;;;;1537:24407:95;;1745:53:56;:::i;:::-;1537:24407:95;;;;;-1:-1:-1;;;;;1537:24407:95;;;;;14929:10;;14911:48;;1537:24407;;14911:48;1537:24407;;14655:241;14805:14;14792:27;14655:241;14788:108;1537:24407;-1:-1:-1;;;;;1537:24407:95;;14835:50;;;;;1537:24407;;-1:-1:-1;;;14835:50:95;;14866:10;1537:24407;14835:50;;1537:24407;;;;;;;;;;;;;;;;;;14835:50;;;;;;;;14788:108;;;14655:241;;14835:50;;;;;:::i;:::-;1537:24407;;14835:50;;;;14431:64;-1:-1:-1;;;14469:15:95;;1537:24407;14469:15;;1537:24407;;;;;;9346:37;1537:24407;;;:::i;:::-;9346:37;;:::i;:::-;1537:24407;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;1537:24407:95;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10117:7;1537:24407;;;;;;;10117:7;1537:24407;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1537:24407:95;;;;10943:21;1537:24407;;:::i;:::-;10943:21;:::i;:::-;1537:24407;;;-1:-1:-1;1537:24407:95;;;;;;;;;;;;;-1:-1:-1;;;1537:24407:95;;;;;;;;;;;;;;;-1:-1:-1;;1537:24407:95;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;;;;;;;1537:24407:95;;;3949:31:20;1537:24407:95;;;;;;-1:-1:-1;1537:24407:95;;;;;;-1:-1:-1;1537:24407:95;;;;;;;;;;;;;;;;;;;;;;;;;11228:17;1537:24407;;;;;;;;;;;;;10471:45;1537:24407;;;:::i;:::-;10471:45;;:::i;1537:24407::-;;;;;;12058:35;1537:24407;;;:::i;:::-;12058:35;;:::i;1537:24407::-;;;;;;;;;;;;;;;;;;8969:12;1537:24407;;;;;;;8969:12;1537:24407;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3283:4:20;;:::i;:::-;1944:72:30;;:::i;:::-;5528:4:95;1537:24407;;-1:-1:-1;;;;;;;;;;;1537:24407:95;;;-1:-1:-1;;;;;;;;;;;1537:24407:95;3319:20:30;1537:24407:95;;;966:10:28;1537:24407:95;;3319:20:30;1537:24407:95;;;;;;;;;;;;;;;;9922:7;1537:24407;;;;;;;;;;;;;;-1:-1:-1;;1537:24407:95;;;;;;:::i;:::-;;;:::i;:::-;;;-1:-1:-1;;;;;1537:24407:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1537:24407:95;;;;;;;4301:16:22;1537:24407:95;;;;4724:16:22;;:34;;;;1537:24407:95;;4788:16:22;:50;;;;1537:24407:95;4853:13:22;:30;;;;1537:24407:95;4849:91:22;;;-1:-1:-1;;1537:24407:95;;;;-1:-1:-1;;;;;;;;;;;1537:24407:95;;4977:67:22;;1537:24407:95;6891:76:22;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;1537:24407:95;;7011:57;1537:24407;7011:57;:::i;:::-;;7079:50;;;:::i;:::-;-1:-1:-1;;;;;;1537:24407:95;;7139:51;1537:24407;7139:51;:::i;:::-;;-1:-1:-1;;;;;1537:24407:95;;;;;;;;-1:-1:-1;;;;;1537:24407:95;;;;;;;;-1:-1:-1;;;;;1537:24407:95;;7293:29;1537:24407;;;7293:29;1537:24407;7898:23:77;1537:24407:95;;7898:23:77;:::i;:::-;;7376:13:95;7411:3;1537:24407;;7391:18;;;;;7459:10;;;;:::i;:::-;;1537:24407;7488:19;;1537:24407;;;;;;;;;7488:40;;-1:-1:-1;;;7555:18:95;;1537:24407;14620:18;7555;7484:192;1537:24407;;;;-1:-1:-1;;;;;1537:24407:95;;;;;;;;7612:49;;;;;:::i;:::-;;1537:24407;7376:13;;1537:24407;-1:-1:-1;;;1537:24407:95;;;;;;;;;-1:-1:-1;;;1537:24407:95;;;;;;;;7391:18;;;5064:101:22;;1537:24407:95;;5064:101:22;1537:24407:95;;-1:-1:-1;;;;;;;;;;;1537:24407:95;;-1:-1:-1;;;;;;;;;;;1537:24407:95;5140:14:22;1537:24407:95;;;;;;5140:14:22;1537:24407:95;;4977:67:22;-1:-1:-1;;1537:24407:95;;;-1:-1:-1;;;;;;;;;;;1537:24407:95;4977:67:22;;;4849:91;-1:-1:-1;;;4906:23:22;;1537:24407:95;4906:23:22;;4853:30;4870:13;;;4853:30;;;4788:50;4816:4;4808:25;:30;;-1:-1:-1;4788:50:22;;4724:34;;;-1:-1:-1;4724:34:22;;1537:24407:95;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1537:24407:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1537:24407:95;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1537:24407:95;;;;;;:::i;:::-;;;;;:::i;:::-;1944:72:30;;;:::i;1537:24407:95:-;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1537:24407:95;;;;;;;;;;;;;;;;;;;;;;;5090:6:23;-1:-1:-1;;;;;1537:24407:95;5081:4:23;5073:23;5069:145;;1537:24407:95;;;-1:-1:-1;;;;;;;;;;;1537:24407:95;;;5069:145:23;-1:-1:-1;;;5174:29:23;;1537:24407:95;;5174:29:23;1537:24407:95;-1:-1:-1;1537:24407:95;;-1:-1:-1;;1537:24407:95;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4667:6:23;1537:24407:95;4658:4:23;4650:23;;;:120;;;;1537:24407:95;4633:251:23;;;1537:24407:95;;;-1:-1:-1;;;;;;;;;;;1537:24407:95;;;;;;;;966:10:28;-1:-1:-1;1537:24407:95;;;;;;;;;;4516:23:20;4512:108;;1537:24407:95;;-1:-1:-1;;;6131:52:23;;-1:-1:-1;;;;;1537:24407:95;;;;;;;;;6131:52:23;;;;;;;1537:24407:95;-1:-1:-1;6127:437:23;;-1:-1:-1;;;6493:60:23;;1537:24407:95;;;;;1805:47:43;6493:60:23;6127:437;6225:40;;-1:-1:-1;;;;;;;;;;;6225:40:23;;;6221:120;;1748:29:43;;;:34;1744:119;;-1:-1:-1;;;;;;;;;;;1537:24407:95;;-1:-1:-1;;;;;;1537:24407:95;;;;;;;;2407:36:43;1537:24407:95;;2407:36:43;1537:24407:95;;2458:15:43;:11;;4107:55:57;4065:25;;;;;;;;1537:24407:95;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;4107:55:57;:::i;1537:24407:95:-;;;4107:55:57;:::i;2454:148:43:-;6163:9;;;;;6159:70;;1537:24407:95;;6159:70:43;-1:-1:-1;;;6199:19:43;;1537:24407:95;;6199:19:43;1744:119;-1:-1:-1;;;1805:47:43;;1537:24407:95;;;1805:47:43;;6221:120:23;-1:-1:-1;;;6292:34:23;;1537:24407:95;;;6292:34:23;;6131:52;;;;1537:24407:95;6131:52:23;;1537:24407:95;6131:52:23;;;;;;1537:24407:95;6131:52:23;;;:::i;:::-;;;1537:24407:95;;;;;6131:52:23;;;;1537:24407:95;-1:-1:-1;1537:24407:95;;6131:52:23;;;-1:-1:-1;6131:52:23;;4512:108:20;-1:-1:-1;;;4562:47:20;;966:10:28;1537:24407:95;;;;;;;4562:47:20;;4633:251:23;-1:-1:-1;;;4844:29:23;;1537:24407:95;4844:29:23;;4650:120;-1:-1:-1;;;;;;;;;;;1537:24407:95;-1:-1:-1;;;;;1537:24407:95;4728:42:23;;;-1:-1:-1;4650:120:23;;;1537:24407:95;;;;;;;-1:-1:-1;;1537:24407:95;;;;;8806:28:77;1537:24407:95;;-1:-1:-1;1537:24407:95;5197:14:77;1537:24407:95;;;-1:-1:-1;1537:24407:95;;5197:26:77;;5101:129;;8806:28;1537:24407:95;;;;;;;;;;;;;;;;;;;;;3283:4:20;;:::i;:::-;-1:-1:-1;;;;;;;;;;;1537:24407:95;;;;2971:9:30;2967:62;;1537:24407:95;;;-1:-1:-1;;;;;;;;;;;1537:24407:95;3627:22:30;1537:24407:95;;;966:10:28;1537:24407:95;;3627:22:30;1537:24407:95;;2967:62:30;-1:-1:-1;;;3003:15:30;;1537:24407:95;3003:15:30;;1537:24407:95;;;;;;;;;;;;;8515:13;1537:24407;;;-1:-1:-1;;;;;1537:24407:95;;;;;;;;;;;;;;;-1:-1:-1;;1537:24407:95;;;;1944:72:30;;:::i;:::-;1537:24407:95;;18120:51;;;;;;;;;;;;;;1537:24407;18120:51;;;;;;18148:4;1537:24407;;;;;;;;18160:10;1537:24407;;;;18120:51;;;;;;;;;1537:24407;;-1:-1:-1;;;;;1537:24407:95;11511:50:77;1537:24407:95;11511:50:77;:::i;:::-;;18310:46:95;1537:24407;;;;;;18310:46;1537:24407;;;;;;18120:51;1537:24407;;;;;;;;;;;18120:51;-1:-1:-1;;;1537:24407:95;;;;;;;;;;;;;;;-1:-1:-1;;1537:24407:95;;;;;;:::i;:::-;966:10:28;-1:-1:-1;;;;;1537:24407:95;;6489:34:20;6485:102;;6597:37;1537:24407:95;;;6597:37:20;:::i;6485:102::-;-1:-1:-1;;;6546:30:20;;1537:24407:95;6546:30:20;;1537:24407:95;;;;;;;-1:-1:-1;;1537:24407:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18731:13;1537:24407;-1:-1:-1;;;;;1537:24407:95;18717:10;:27;18713:80;;8806:28:77;;-1:-1:-1;1537:24407:95;5197:14:77;1537:24407:95;;;-1:-1:-1;1537:24407:95;;5197:26:77;;5101:129;;8806:28;18807:29:95;;;18857:41;;;;;:::i;:::-;18856:42;18852:104;;1537:24407;;18852:104;-1:-1:-1;;;18925:16:95;;1537:24407;;18925:16;18803:397;1537:24407;;;;-1:-1:-1;;;18986:29:95;;1537:24407;;;;;;;;;;-1:-1:-1;;;;;1537:24407:95;18986:29;;;;;;;;;;;18803:397;-1:-1:-1;18976:39:95;;;19036:43;;;;:::i;18972:228::-;-1:-1:-1;;;19174:15:95;;1537:24407;19174:15;;18986:29;;;;1537:24407;18986:29;;1537:24407;18986:29;;;;;;1537:24407;18986:29;;;:::i;:::-;;;1537:24407;;;;;18986:29;;;;;;;-1:-1:-1;18986:29:95;;;1537:24407;;;;;;;;;18713:80;-1:-1:-1;;;18767:15:95;;1537:24407;18767:15;;1537:24407;;;;;;;-1:-1:-1;;1537:24407:95;;;;5398:25:20;1537:24407:95;;;;:::i;:::-;5368:18:20;3283:4;5368:18;;-1:-1:-1;1537:24407:95;-1:-1:-1;;;;;;;;;;;1537:24407:95;;4967:24:20;1537:24407:95;-1:-1:-1;1537:24407:95;4967:24:20;1537:24407:95;4807:191:20;;3283:4;5398:25;:::i;1537:24407:95:-;;;;;;;-1:-1:-1;;1537:24407:95;;;;;;;;-1:-1:-1;1537:24407:95;-1:-1:-1;;;;;;;;;;;1537:24407:95;;4967:24:20;1537:24407:95;-1:-1:-1;1537:24407:95;4967:24:20;1537:24407:95;4807:191:20;;1537:24407:95;;;;;;;;;;;;;;;;;;;;;8747:12;1537:24407;;;;;;;;-1:-1:-1;1537:24407:95;;-1:-1:-1;;1537:24407:95;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;1537:24407:95;;;;;;;;1944:72:30;;:::i;:::-;12473:55:77;;-1:-1:-1;1537:24407:95;5197:14:77;1537:24407:95;;;-1:-1:-1;1537:24407:95;;5197:26:77;;5101:129;;12473:55;15435:44:95;15431:106;;15547:60;;;;;1537:24407;;;;;;;;;;;;15547:60;;15595:9;15547:60;;;;;;;;;1537:24407;1944:72:30;;;:::i;15547:60:95:-;;;;;1537:24407;15547:60;;:::i;:::-;1537:24407;15547:60;;;;;1537:24407;;;;;;;;;15431:106;15502:24;;;1537:24407;15502:24;1537:24407;;15502:24;1537:24407;;;;;;-1:-1:-1;;1537:24407:95;;;;;;;;11475:17;1537:24407;;;;;;;11475:17;1537:24407;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1537:24407:95;;;;;12473:55:77;-1:-1:-1;;;;;1537:24407:95;;:::i;:::-;;-1:-1:-1;1537:24407:95;5197:14:77;1537:24407:95;;;-1:-1:-1;1537:24407:95;;5197:26:77;;5101:129;;1537:24407:95;;;;;;-1:-1:-1;;1537:24407:95;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3599:47:20;;;:87;;;;1537:24407:95;;;;;;;;;;3599:87:20;-1:-1:-1;;;1101:40:32;;-1:-1:-1;3599:87:20;;;1537:24407:95;;;;;;-1:-1:-1;;1537:24407:95;;;;;;-1:-1:-1;;;;;1537:24407:95;;;;;;;;;;-1:-1:-1;;;;;1537:24407:95;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;1537:24407:95;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;1537:24407:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;1537:24407:95;;;;;-1:-1:-1;1537:24407:95;;;;;;;;;-1:-1:-1;;1537:24407:95;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;1537:24407:95;;;;;;;;-1:-1:-1;;1537:24407:95;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;2709:128:30;1537:24407:95;-1:-1:-1;;;;;;;;;;;1537:24407:95;;2770:61:30;;2709:128::o;2770:61::-;2805:15;;;-1:-1:-1;2805:15:30;;-1:-1:-1;2805:15:30;4196:103:20;966:10:28;-1:-1:-1;1537:24407:95;;;;;;;;;;;;4516:23:20;4512:108;;4196:103::o;4512:108::-;4562:47;;;-1:-1:-1;4562:47:20;966:10:28;4562:47:20;1537:24407:95;5528:4;1537:24407;;;-1:-1:-1;4562:47:20;4196:103;-1:-1:-1;1537:24407:95;;;-1:-1:-1;;;;;;;;;;;1537:24407:95;;;;;;;;966:10:28;1537:24407:95;;;;;;;;;;4516:23:20;4512:108;;4196:103;:::o;4512:108::-;4562:47;;;-1:-1:-1;4562:47:20;966:10:28;4562:47:20;1537:24407:95;;;;-1:-1:-1;4562:47:20;7318:387;-1:-1:-1;;;;;1537:24407:95;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1537:24407:95;;;;;;;;;;;;;-1:-1:-1;;1537:24407:95;;;;;966:10:28;;1537:24407:95;7580:40:20;1537:24407:95;;7580:40:20;7557:4;7634:11;:::o;7480:219::-;7676:12;1537:24407:95;7676:12:20;:::o;7318:387::-;-1:-1:-1;;;;;1537:24407:95;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1537:24407:95;;;;;;;;;;;;;-1:-1:-1;;1537:24407:95;4803:1:22;1537:24407:95;;;;;;966:10:28;;1537:24407:95;7580:40:20;;1537:24407:95;7580:40:20;4803:1:22;7634:11:20;:::o;7318:387::-;1537:24407:95;;;;-1:-1:-1;;;;;;;;;;;1537:24407:95;;;;;;;;-1:-1:-1;;;;;1537:24407:95;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1537:24407:95;;;;;;;;-1:-1:-1;;;;;1537:24407:95;;;;;;;;;;;;;;;-1:-1:-1;;1537:24407:95;;;;;966:10:28;;1537:24407:95;;7580:40:20;;1537:24407:95;7580:40:20;7557:4;7634:11;:::o;7480:219::-;7676:12;;1537:24407:95;7676:12:20;:::o;3769:2:95:-;;;;;;;;;;:::o;:::-;1537:24407;;;3769:2;;;;;;;;4884:77;;;;;;;1537:24407;4884:77;;;;1537:24407;;;;;;;;4884:77;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;1537:24407;;4884:77;;1537:24407;4884:77::o;22151:3791::-;;22258:18;;22252:64;;22356:250;;;;22681:14;22657:39;;22616:120;;22750:31;;22746:524;;22622:31;23284:43;23280:712;;3769:2;24094:50;24088:96;;22622:31;24659:479;;;;3769:2;;24659:479;;;;;;22356:250;24659:479;25178:12;;1537:24407;25178:12;22622:31;25207:20;;;:45;;;;22151:3791;25205:48;;25201:91;;25334:14;1537:24407;25334:14;22622:31;25365:22;;;:49;;;;22151:3791;25363:52;;25359:95;;25493:30;25564:32;25493:30;1294:522:122;1384:426;;;;;;;;;;;;;;;;;;;;;;;1294:522;25493:30:95;25564:32;1294:522:122;1384:426;;;;;;;;;;;;;;;;;;;;;;;1294:522;25564:32:95;1537:24407;;25636:79;;;;;;;;;;;;;;;;;;;;;;;25664:4;25636:79;;:::i;:::-;;;1537:24407;25636:79;;;;;25835:78;;-1:-1:-1;;;;;1537:24407:95;;;;25835:78;;1537:24407;25778:41;1537:24407;25778:41;:::i;:::-;;1537:24407;;25835:78;;;;;:::i;:::-;;;;22622:31;22151:3791;:::o;25359:95::-;25431:12;;;1537:24407;25431:12;:::o;25365:49::-;25412:2;25391:23;;;;25365:49;;;25207:45;25250:2;25231:21;;;;25207:45;;;23280:712;3769:2;23349:54;23343:108;;1537:24407;22622:31;23925:30;23580:273;;;;;23867:38;;;:::i;:::-;;1537:24407;;;;;23925:30;22622:31;23970:11;:::o;22746:524::-;22803:46;3769:2;22803:46;22797:100;;3769:2;22622:31;23206:27;23031:113;;;7898:23:77;;;:::i;19668:1399:95:-;3769:2;1537:24407;19751:4;19773:39;19767:85;;3769:2;20034:575;;;;;3769:2;20034:575;;;;;;3769:2;20034:575;;;20645:21;;;;:::i;:::-;1537:24407;;;;;;;;20681:30;;;-1:-1:-1;;;20734:18:95;;;14620;20734;20677:306;1537:24407;;;;;;;20773:31;;20769:214;1537:24407;;;-1:-1:-1;1537:24407:95;;-1:-1:-1;;;3769:2:95;1328:43:56;;;;;;;-1:-1:-1;;;;;1537:24407:95;;1328:43:56;;;1537:24407:95;;;;;;;;1328:43:56;;20998:40:95;;3769:2;;1328:43:56;;;1537:24407:95;;1328:43:56;:::i;:::-;;;:::i;:::-;1537:24407:95;;;;;20034:575;20998:40;;1537:24407;19668:1399;:::o;20769:214::-;20898:14;20885:27;20881:102;;20769:214;3769:2;20998:40;20769:214;;;20881:102;20928:44;;;;;1537:24407;;-1:-1:-1;;;20928:44:95;;-1:-1:-1;;;;;1537:24407:95;;20928:44;;;1537:24407;;;;;;;;-1:-1:-1;1537:24407:95;;;-1:-1:-1;20928:44:95;;;;;;;;20998:40;20928:44;3769:2;20928:44;;;20881:102;;;;;;;20928:44;1537:24407;20928:44;;;:::i;:::-;1537:24407;20928:44;;1537:24407;;;;;;;;;;;;7942:388:20;1537:24407:95;;;;-1:-1:-1;;;;;;;;;;;1537:24407:95;;;;;;;;-1:-1:-1;;;;;1537:24407:95;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1537:24407:95;;;;;;;;-1:-1:-1;;;;;1537:24407:95;;;;;;;;;;;;;;;-1:-1:-1;;1537:24407:95;;;966:10:28;;1537:24407:95;;8205:40:20;;1537:24407:95;8205:40:20;1537:24407:95;8259:11:20;:::o;771:246:121:-;-1:-1:-1;;;;;1537:24407:95;;;;;;;7898:23:77;1537:24407:95;;-1:-1:-1;1537:24407:95;3096:11:76;1537:24407:95;;;-1:-1:-1;1537:24407:95;;7612:7;7898:23:77;:::i;:::-;771:246:121;:::o;:::-;-1:-1:-1;;;;;1537:24407:95;-1:-1:-1;1537:24407:95;;;3096:11:76;1537:24407:95;;;;;;;;7898:23:77;;23867:7:95;7898:23:77;:::i;771:246:121:-;-1:-1:-1;;;;;1537:24407:95;-1:-1:-1;1537:24407:95;;;3096:11:76;1537:24407:95;;;;;25804:14;1537:24407;;7898:23:77;;25778:7:95;7898:23:77;:::i;1537:24407:95:-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;12876:622::-;;;11933:90;1537:24407;13099:16;;;;;13095:70;;13189:14;;;;:::i;:::-;13217:12;;;;13213:55;;12876:622;1537:24407;;;;;;;;;13341:19;;;:::i;:::-;13376:13;-1:-1:-1;13391:8:95;;;;;;-1:-1:-1;13478:13:95;;-1:-1:-1;;12876:622:95:o;13401:3::-;13446:10;5853:18:77;13446:10:95;1537:24407;13446:10;;;:::i;:::-;11933:90;5853:18:77;:::i;:::-;1537:24407:95;;;;;;13420:37;;;;:::i;:::-;1537:24407;;13376:13;;13213:55;13245:12;;13213:55;;;13095:70;1537:24407;;;;;;;;;;:::i;:::-;-1:-1:-1;1537:24407:95;;-1:-1:-1;1537:24407:95;;;13131:23;:::o;12876:622::-;;;10480:7;1537:24407;13099:16;;;;;13095:70;;13189:14;;;;:::i;:::-;13217:12;;;;13213:55;;12876:622;1537:24407;;;;;;;;;13341:19;;;:::i;:::-;13376:13;-1:-1:-1;13391:8:95;;;;;;-1:-1:-1;13478:13:95;;-1:-1:-1;;12876:622:95:o;13401:3::-;13446:10;5853:18:77;13446:10:95;1537:24407;13446:10;;;:::i;:::-;10480:7;5853:18:77;:::i;:::-;1537:24407:95;;;;;;13420:37;;;;:::i;:::-;1537:24407;;13376:13;;13213:55;13245:12;;13213:55;;;12876:622;;;9355:12;1537:24407;13099:16;;;;;13095:70;;13189:14;;;;:::i;:::-;13217:12;;;;13213:55;;12876:622;1537:24407;;;;;;;;;13341:19;;;:::i;:::-;13376:13;-1:-1:-1;13391:8:95;;;;;;-1:-1:-1;13478:13:95;;-1:-1:-1;;12876:622:95:o;13401:3::-;13446:10;5853:18:77;13446:10:95;1537:24407;13446:10;;;:::i;:::-;9355:12;5853:18:77;:::i;:::-;1537:24407:95;;;9355:12;1537:24407;;13420:37;;;;:::i;:::-;1537:24407;;13376:13;;13213:55;13245:12;;13213:55;;;3068:335:121;3267:64;;-1:-1:-1;;;;;1537:24407:95;14531:7;3267:64:121;:::i;:::-;1537:24407:95;;;;;;;;3341:55:121;3068:335;:::o;1537:24407:95:-;;;;;;;;-1:-1:-1;1537:24407:95;;-1:-1:-1;1537:24407:95;;;-1:-1:-1;1537:24407:95;:::o;2497:406:77:-;1537:24407:95;;;5197:14:77;1537:24407:95;;;;;;5197:26:77;2576:321;2580:22;;;18249:17:95;1537:24407;-1:-1:-1;;;1537:24407:95;;;;;;5197:14:77;1537:24407:95;;;18249:17;1537:24407;18249:17;1537:24407;:::i;:::-;;;;;;;;;;;;;;;;;;;;18249:17;1537:24407;;;;5197:14:77;1537:24407:95;;;;;;5197:14:77;2832:11;:::o;2497:406::-;1537:24407:95;;;5197:14:77;1537:24407:95;;;;;;5197:26:77;2576:321;2580:22;;;1537:24407:95;;-1:-1:-1;;;1537:24407:95;;;;;;5197:14:77;1537:24407:95;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;5197:14:77;1537:24407:95;;;;;;5197:14:77;2832:11;:::o;2497:406::-;-1:-1:-1;1537:24407:95;;;5197:14:77;;;1537:24407:95;;;;;;2581:21:77;;1537:24407:95;;;-1:-1:-1;;;1537:24407:95;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;2776:14:77;1537:24407:95;;;;;;;2832:11:77;:::o;7082:141:22:-;1537:24407:95;-1:-1:-1;;;;;;;;;;;1537:24407:95;;;;7148:18:22;7144:73;;7082:141::o;7144:73::-;7189:17;;;-1:-1:-1;7189:17:22;;-1:-1:-1;7189:17:22;5170:305:76;;;1537:24407:95;-1:-1:-1;1537:24407:95;5307:11:76;;;1537:24407:95;;;-1:-1:-1;1537:24407:95;;5337:17:76;;;5333:136;5337:17;;;8806:28:77;;;;5197:14;5101:129;-1:-1:-1;1537:24407:95;5197:14:77;1537:24407:95;;;-1:-1:-1;1537:24407:95;;5197:26:77;;5101:129;;8806:28;5370:39:76;-1:-1:-1;5370:39:76;:::o;5333:136::-;5440:18;;5448:4;5440:18;;:::o;8370:720:56:-;;-1:-1:-1;8507:421:56;8370:720;8507:421;;;;;;;;;;;;-1:-1:-1;8507:421:56;;8942:15;;-1:-1:-1;;;;;;1537:24407:95;;8960:26:56;:31;8942:68;8938:146;;8370:720;:::o;8938:146::-;-1:-1:-1;;;;9033:40:56;;;-1:-1:-1;;;;;1537:24407:95;;;;9033:40:56;1537:24407:95;;;9033:40:56;8942:68;9009:1;8994:16;;8942:68;;4437:582:57;;4609:8;;-1:-1:-1;1537:24407:95;;5690:21:57;:17;;5815:105;;;;;;5686:301;5957:19;;;5710:1;5957:19;;5710:1;5957:19;4605:408;1537:24407:95;;4857:22:57;:49;;;4605:408;4853:119;;4985:17;;:::o;4853:119::-;-1:-1:-1;;;4878:1:57;4933:24;;;-1:-1:-1;;;;;1537:24407:95;;;;4933:24:57;1537:24407:95;;;4933:24:57;4857:49;4883:18;;;:23;4857:49;","linkReferences":{},"immutableReferences":{"40546":[{"start":3282,"length":32},{"start":3490,"length":32}]}},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","PAUSER_ROLE()":"e63ab1e9","UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","bridgingPayments()":"109ec2e7","bridgingPayments(uint256,uint256)":"87e7a3a3","createBridgingPayment(uint256)":"38ff319f","getRoleAdmin(bytes32)":"248a9ca3","getTokenType(address)":"93272baf","governanceAdmin()":"0058f6b8","governancePauser()":"c81eb797","grantRole(bytes32,address)":"2f2ff15d","handleMessage(bytes32,bytes)":"302ac5d0","hasRole(bytes32,address)":"91d14854","initialize(address,address,address,bytes32,(address,uint8)[])":"763b754a","isBridgingPayment(address)":"0c9d9b97","isVftManager(bytes32)":"4e689539","messageQueue()":"3b70c18a","pause()":"8456cb59","paused()":"5c975abb","proxiableUUID()":"52d1902d","renounceRole(bytes32,address)":"36568abe","requestBridging(address,uint256,bytes32)":"c305870c","requestBridgingPayingFee(address,uint256,bytes32,address)":"1e324b52","requestBridgingPayingFeeWithPermit(address,uint256,bytes32,uint256,uint8,bytes32,bytes32,address)":"f6cdd9cc","requestBridgingWithPermit(address,uint256,bytes32,uint256,uint8,bytes32,bytes32)":"6a762d5c","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7","tokens()":"9d63848a","tokens(uint256,uint256)":"8b4864d6","totalBridgingPayments()":"8b841f6c","totalTokens()":"7e1c0c09","totalVftManagers()":"240dfa95","unpause()":"3f4ba83a","upgradeToAndCall(address,bytes)":"4f1ef286","vftManagers()":"87be40b1","vftManagers(uint256,uint256)":"c1c60921"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidBridgingPayment\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPayload\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSource\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTokenType\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"from\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Bridged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bridgingPayment\",\"type\":\"address\"}],\"name\":\"BridgingPaymentCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"to\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BridgingRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"EthereumTokenRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"tokenDecimals\",\"type\":\"uint8\"}],\"name\":\"GearTokenRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"vftManager\",\"type\":\"bytes32\"}],\"name\":\"VftManagerAdded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bridgingPayments\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"bridgingPayments\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"createBridgingPayment\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenType\",\"outputs\":[{\"internalType\":\"enum IERC20Manager.TokenType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governanceAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governancePauser\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"source\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"handleMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IGovernance\",\"name\":\"governanceAdmin_\",\"type\":\"address\"},{\"internalType\":\"contract IGovernance\",\"name\":\"governancePauser_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"messageQueue_\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"vftManager\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"enum IERC20Manager.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"}],\"internalType\":\"struct IERC20Manager.TokenInfo[]\",\"name\":\"tokens_\",\"type\":\"tuple[]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"bridgingPayment\",\"type\":\"address\"}],\"name\":\"isBridgingPayment\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"vftManager\",\"type\":\"bytes32\"}],\"name\":\"isVftManager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"messageQueue\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"to\",\"type\":\"bytes32\"}],\"name\":\"requestBridging\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"to\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"bridgingPayment\",\"type\":\"address\"}],\"name\":\"requestBridgingPayingFee\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"to\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"bridgingPayment\",\"type\":\"address\"}],\"name\":\"requestBridgingPayingFeeWithPermit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"to\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"requestBridgingWithPermit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"tokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBridgingPayments\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalVftManagers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vftManagers\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"vftManagers\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidAmount()\":[{\"details\":\"Error thrown when the amount is invalid.\"}],\"InvalidBridgingPayment()\":[{\"details\":\"Error thrown when the bridging payment is invalid (not created by `ERC20Manager`).\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"InvalidPayload()\":[{\"details\":\"Error thrown when the payload is invalid.\"}],\"InvalidSender()\":[{\"details\":\"Error thrown when the sender is not the message queue.\"}],\"InvalidSource()\":[{\"details\":\"Error thrown when the source is not the governance.\"}],\"InvalidTokenType()\":[{\"details\":\"Error thrown when the token type is invalid (`TokenType.Unknown`).\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Bridged(bytes32,address,address,uint256)\":{\"details\":\"Event emitted when bridging request is accepted.\"},\"BridgingPaymentCreated(address)\":{\"details\":\"Event emitted when bridging payment is created.\"},\"BridgingRequested(address,bytes32,address,uint256)\":{\"details\":\"Event emitted when bridging request is made.\"},\"EthereumTokenRegistered(address)\":{\"details\":\"Event emitted when Ethereum token is registered.\"},\"GearTokenRegistered(address,string,string,uint8)\":{\"details\":\"Event emitted when Gear token is registered.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"},\"VftManagerAdded(bytes32)\":{\"details\":\"Event emitted when VFT manager is added to list of VFT managers.\"}},\"kind\":\"dev\",\"methods\":{\"bridgingPayments()\":{\"details\":\"Returns list of bridging payments.\",\"returns\":{\"_0\":\"bridgingPayments List of bridging payments.\"}},\"bridgingPayments(uint256,uint256)\":{\"details\":\"Returns list of bridging payments.\",\"params\":{\"limit\":\"Maximum number of bridging payments to return.\",\"offset\":\"Offset of the first bridging payment to return.\"},\"returns\":{\"_0\":\"bridgingPayments List of bridging payments.\"}},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"createBridgingPayment(uint256)\":{\"details\":\"Creates a new `BridgingPayment` contract (ERC20Manager is factory).      Emits `BridgingPaymentCreated` event.\",\"params\":{\"fee\":\"Fee amount in wei.\"},\"returns\":{\"_0\":\"bridgingPaymentAddress Address of the created `bridgingPayment` contract.\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getTokenType(address)\":{\"details\":\"Returns token type.\",\"params\":{\"token\":\"Token address.\"},\"returns\":{\"_0\":\"tokenType Token type. Returns `TokenType.Unknown` if token is not registered.\"}},\"governanceAdmin()\":{\"details\":\"Returns governance admin address.\",\"returns\":{\"_0\":\"governanceAdmin Governance admin address.\"}},\"governancePauser()\":{\"details\":\"Returns governance pauser address.\",\"returns\":{\"_0\":\"governancePauser Governance pauser address.\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"handleMessage(bytes32,bytes)\":{\"details\":\"Handles message originated from Vara Network.\",\"params\":{\"payload\":\"Payload of the message (message from Vara Network).\",\"source\":\"Source of the message (`ActorId` from Vara Network).\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"initialize(address,address,address,bytes32,(address,uint8)[])\":{\"details\":\"Initializes the ERC20Manager contract with the message queue and VFT manager addresses.      GovernanceAdmin contract is used to upgrade, pause/unpause the ERC20Manager contract.      GovernancePauser contract is used to pause/unpause the ERC20Manager contract.\",\"params\":{\"governanceAdmin_\":\"The address of the GovernanceAdmin contract that will process messages.\",\"governancePauser_\":\"The address of the GovernanceAdmin contract that will process pauser messages.\",\"messageQueue_\":\"The address of the message queue contract.\",\"tokens_\":\"The tokens that will be registered.\",\"vftManager\":\"The address of the VFT manager contract (on Vara Network).\"}},\"isBridgingPayment(address)\":{\"details\":\"Returns whether the bridging payment is registered.\",\"params\":{\"bridgingPayment\":\"Bridging payment address.\"},\"returns\":{\"_0\":\"isBridgingPayment `true` if the bridging payment is registered, `false` otherwise.\"}},\"isVftManager(bytes32)\":{\"details\":\"Returns whether the VFT manager is registered.\",\"params\":{\"vftManager\":\"VFT manager address.\"},\"returns\":{\"_0\":\"isVftManager `true` if the VFT manager is registered, `false` otherwise.\"}},\"messageQueue()\":{\"details\":\"Returns message queue address.\",\"returns\":{\"_0\":\"messageQueue Message queue address.\"}},\"pause()\":{\"details\":\"Pauses the contract.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"requestBridging(address,uint256,bytes32)\":{\"details\":\"Requests bridging of tokens.      Emits `BridgingRequested` event.Reverts if token is not registered with `InvalidTokenType` error.\",\"params\":{\"amount\":\"Amount of tokens to bridge.\",\"to\":\"Destination address.\",\"token\":\"Token address.\"}},\"requestBridgingPayingFee(address,uint256,bytes32,address)\":{\"details\":\"Requests bridging of tokens and pays fee to one of the `bridgingPayment` contracts.\",\"params\":{\"amount\":\"Amount of tokens to bridge.\",\"bridgingPayment\":\"Bridging payment address.\",\"to\":\"Destination address.\",\"token\":\"Token address.\"}},\"requestBridgingPayingFeeWithPermit(address,uint256,bytes32,uint256,uint8,bytes32,bytes32,address)\":{\"details\":\"Requests bridging of tokens and pays fee to one of the `bridgingPayment` contracts.      This function uses `permit` to approve spending of tokens to optimize gas costs.      (If token supports `permit` function).\",\"params\":{\"amount\":\"Amount of tokens to bridge.\",\"bridgingPayment\":\"Bridging payment address.\",\"deadline\":\"Deadline for the transaction to be executed.\",\"r\":\"ECDSA signature parameter.\",\"s\":\"ECDSA signature parameter.\",\"to\":\"Destination address.\",\"token\":\"Token address.\",\"v\":\"ECDSA signature parameter.\"}},\"requestBridgingWithPermit(address,uint256,bytes32,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Requests bridging of tokens.      This function uses `permit` to approve spending of tokens to optimize gas costs.      (If token supports `permit` function).\",\"params\":{\"amount\":\"Amount of tokens to bridge.\",\"deadline\":\"Deadline for the transaction to be executed.\",\"r\":\"ECDSA signature parameter.\",\"s\":\"ECDSA signature parameter.\",\"to\":\"Destination address.\",\"token\":\"Token address.\",\"v\":\"ECDSA signature parameter.\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokens()\":{\"details\":\"Returns list of tokens.\",\"returns\":{\"_0\":\"tokens List of tokens.\"}},\"tokens(uint256,uint256)\":{\"details\":\"Returns list of tokens.\",\"params\":{\"limit\":\"Maximum number of tokens to return.\",\"offset\":\"Offset of the first token to return.\"},\"returns\":{\"_0\":\"tokens List of tokens.\"}},\"totalBridgingPayments()\":{\"details\":\"Returns total number of bridging payments.\",\"returns\":{\"_0\":\"totalBridgingPayments Total number of bridging payments.\"}},\"totalTokens()\":{\"details\":\"Returns total number of tokens.\",\"returns\":{\"_0\":\"totalTokens Total number of tokens.\"}},\"totalVftManagers()\":{\"details\":\"Returns total number of VFT managers.\",\"returns\":{\"_0\":\"totalVftManagers Total number of VFT managers.\"}},\"unpause()\":{\"details\":\"Unpauses the contract.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"vftManagers()\":{\"details\":\"Returns list of VFT managers.\",\"returns\":{\"_0\":\"vftManagers List of VFT managers.\"}},\"vftManagers(uint256,uint256)\":{\"details\":\"Returns list of VFT managers.\",\"params\":{\"limit\":\"Maximum number of VFT managers to return.\",\"offset\":\"Offset of the first VFT manager to return.\"},\"returns\":{\"_0\":\"vftManagers List of VFT managers.\"}}},\"stateVariables\":{\"ADD_VFT_MANAGER\":{\"details\":\"Add VFT manager message discriminant.\"},\"ADD_VFT_MANAGER_MESSAGE_SIZE\":{\"details\":\"Size of add VFT manager message.\"},\"AMOUNT_SIZE\":{\"details\":\"`uint256 amount` size.\"},\"DISCRIMINANT_BIT_SHIFT\":{\"details\":\"`uint8 discriminant` bit shift.\"},\"DISCRIMINANT_SIZE\":{\"details\":\"`uint8 discriminant` size.\"},\"ETHEREUM_TOKEN_BIT_SHIFT\":{\"details\":\"`address token` bit shift.\"},\"ETHEREUM_TOKEN_SIZE\":{\"details\":\"`address token` size.\"},\"OFFSET1\":{\"details\":\"`SENDER_SIZE` offset.\"},\"OFFSET2\":{\"details\":\"`SENDER_SIZE + RECEIVER_SIZE` offset.\"},\"OFFSET3\":{\"details\":\"`SENDER_SIZE + RECEIVER_SIZE + TOKEN_SIZE` offset.\"},\"OFFSET4\":{\"details\":\"`DISCRIMINANT_SIZE` offset.\"},\"OFFSET5\":{\"details\":\"`DISCRIMINANT_SIZE + TOKEN_NAME_SIZE` offset.\"},\"OFFSET6\":{\"details\":\"`DISCRIMINANT_SIZE + TOKEN_NAME_SIZE + TOKEN_SYMBOL_SIZE` offset.\"},\"RECEIVER_BIT_SHIFT\":{\"details\":\"`address receiver` bit shift.\"},\"RECEIVER_SIZE\":{\"details\":\"`address receiver` size.\"},\"REGISTER_ETHEREUM_TOKEN_MESSAGE_SIZE\":{\"details\":\"Size of register token message (for `TokenType.Ethereum`).\"},\"REGISTER_GEAR_TOKEN_MESSAGE_SIZE\":{\"details\":\"Size of register token message (for `TokenType.Gear`).\"},\"SENDER_SIZE\":{\"details\":\"`bytes32 sender` size.\"},\"TOKEN_BIT_SHIFT\":{\"details\":\"`address token` bit shift.\"},\"TOKEN_DECIMALS_BIT_SHIFT\":{\"details\":\"`uint8 tokenDecimals` bit shift.\"},\"TOKEN_DECIMALS_SIZE\":{\"details\":\"`uint8 tokenDecimals` size.\"},\"TOKEN_NAME_SIZE\":{\"details\":\"`bytes32 tokenName` size.\"},\"TOKEN_SIZE\":{\"details\":\"`address token` size.\"},\"TOKEN_SYMBOL_SIZE\":{\"details\":\"`bytes32 tokenSymbol` size.\"},\"TRANSFER_MESSAGE_SIZE\":{\"details\":\"Size of transfer message.\"},\"VFT_MANAGER_SIZE\":{\"details\":\"`bytes32 vftManager` size.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ERC20Manager.sol\":\"ERC20Manager\"},\"debug\":{\"revertStrings\":\"strip\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"appendCBOR\":false,\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":script/=script/\",\":src/=src/\",\":test/=test/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x85a70e2b1b65e9ba456add364d22b97eb9944083df1c39c0b4bd6a4b5aa386a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d32a33be6ca4d8e89b9e82e3f9cec7a6c4e040534152313ff55da85b8f193059\",\"dweb:/ipfs/QmeR55L8t2A8xZ1nvT5y4yVWfFbbmpaGAtGBMz3GGNpuyP\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0xa6bf6b7efe0e6625a9dcd30c5ddf52c4c24fe8372f37c7de9dbf5034746768d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c353ee3705bbf6fadb84c0fb10ef1b736e8ca3ca1867814349d1487ed207beb\",\"dweb:/ipfs/QmcugaPssrzGGE8q4YZKm2ZhnD3kCijjcgdWWg76nWt3FY\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x6694b63ddb2c59bbe341c846171798350e8f72fa02189fcdeaca864e28b54e1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d945d33e2189ac4e531e4ed228f59ca957b3898c4f9051f4b8c7ae44d72b23a\",\"dweb:/ipfs/QmRcEwubTe3xyXxthijs5fVzEgUFSxeddjd5PGfhBnkunX\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xbf2aefe54b76d7f7bcd4f6da1080b7b1662611937d870b880db584d09cea56b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5e7e2f12e0feec75296e57f51f82fdaa8bd1551f4b8cc6560442c0bf60f818c\",\"dweb:/ipfs/QmcW9wDMaQ8RbQibMarfp17a3bABzY5KraWe2YDwuUrUoz\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x82f757819bf2429a0d4db141b99a4bbe5039e4ef86dfb94e2e6d40577ed5b28b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37c30ed931e19fb71fdb806bb504cfdb9913b7127545001b64d4487783374422\",\"dweb:/ipfs/QmUBHpv4hm3ZmwJ4GH8BeVzK4mv41Q6vBbWXxn8HExPXza\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0xa1ad192cd45317c788618bef5cb1fb3ca4ce8b230f6433ac68cc1d850fb81618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b43447bb85a53679d269a403c693b9d88d6c74177dfb35eddca63abaf7cf110a\",\"dweb:/ipfs/QmXSDmpd4bNZj1PDgegr6C4w1jDaWHXCconC3rYiw9TSkQ\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0x20462ddb2665e9521372c76b001d0ce196e59dbbd989de9af5576cad0bd5628b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f417fd12aeec8fbfaceaa30e3a08a0724c0bc39de363e2acf6773c897abbaf6d\",\"dweb:/ipfs/QmU4Hko6sApdweVM92CsiuLKkCk8HfyBeutF89PCTz5Tye\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xecd08ad8132d88a5fcfd50f76a18583004fcdab4c33fb86343903ae420ca5a2b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02422dce2e5305624e5cec644add1baa44bfa98ea131bf6030069089a2f56ca4\",\"dweb:/ipfs/QmcsSUkX7AYXNZE18LYE6JEmv8zZcCZvKfbUm9cSzNQyNo\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x2fa0657dd7b8bc75475a47f64bc04a9adb42236b15d65e6781594ea69a46c3e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7496f42681aed94bf0142a077324e50b86046610c1724e7c12e96cf1c365914a\",\"dweb:/ipfs/QmZvhNdSAAbN4PKPdheAqwpXukUiXp3Q3TdQccDMg2NDTV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://032d1201d839435be2c85b72e33206b3ea980c569d6ebf7fa57d811ab580a82f\",\"dweb:/ipfs/QmeqQjAtMvdZT2tG7zm39itcRJkuwu8AEReK6WRnLJ18DD\"]},\"lib/openzeppelin-contracts/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xa4b9958797e0e9cde82a090525e90f80d5745ba1c67ee72b488bd3087498a17e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9344f7c2f80322c2e76d9d89bed03fd12f3e011e74fde7cf24ea21bdd2abe2d\",\"dweb:/ipfs/QmPMAjF5x2fHUAee2FKMZDBbFVrbZbPCr3a9KHLZaSn1zY\"]},\"lib/openzeppelin-contracts/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"lib/openzeppelin-contracts/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"lib/openzeppelin-contracts/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"lib/openzeppelin-contracts/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x17fc4574e07105b0180ef61f1b3cacd1820a3d37f29a4af1018d0a253c6399b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be46b3e1362dbcadbbb45ec92cdea849dceccea3e2795237f00c123aeae44746\",\"dweb:/ipfs/QmSpyB8mud6xKiZaQnVtEPrxtTHGtyBgjs1PCYk4f2gesd\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableMap.sol\":{\"keccak256\":\"0x5360739db087f427430f8566608e9267df704d96928337a3a3b3e5382925c57f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec939f4b4f68ca36961fd5ea7a417a6a390715173a6999254a2f0a34e9298503\",\"dweb:/ipfs/QmVEE8fRTjXE9jQ5pyKrPSyb9FPPtaWwsqjCdcxaPvAWwW\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x1fc283df727585919c3db301b948a3e827aee16917457ad7f916db9da2228e77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4f4b5e2cd0ebc3b74e41e4e94771a0417eedd9b11cec3ef9f90b2ac2989264b\",\"dweb:/ipfs/QmZmsEsvsXiwAyAe1YeoLSKezeFcvR1giUeEY6ex4zpsTS\"]},\"src/BridgingPayment.sol\":{\"keccak256\":\"0xd5c65ab9d02fcf2a40b6cd1256e6583c7c5662de33b5f1877872dbed0b0e7a68\",\"license\":\"GPL-3.0-or-later WITH Classpath-exception-2.0\",\"urls\":[\"bzz-raw://7bc3e3f89a6a2727e241b75c1c4013d42953a4ef6c0354a5eda6a31eef17c461\",\"dweb:/ipfs/QmWhdZ4aqCQLsZfDTjLuuLJcEVPkU4pYoWnQKfusP56uq7\"]},\"src/ERC20Manager.sol\":{\"keccak256\":\"0xc4af40fba3d22c10d043788620b48ae3535085a87c34d963d749eb19dab28365\",\"license\":\"GPL-3.0-or-later WITH Classpath-exception-2.0\",\"urls\":[\"bzz-raw://57e91ce8903ea722cfc286a436e358420d6f754c6cfe7afd168ec97d0cd9afa6\",\"dweb:/ipfs/QmeLpYQPDpQTtVN1aJ1fKACzH1KfCGXDeRsMBxeX4YgUg6\"]},\"src/erc20/managed/ERC20GearSupply.sol\":{\"keccak256\":\"0x6ad52d44ec0f4046c7f95dd09c8631eb5cbd143002afc4f40a80cfc30d7376fa\",\"license\":\"GPL-3.0-or-later WITH Classpath-exception-2.0\",\"urls\":[\"bzz-raw://26d6133c05182bcc243c5456f804996c69df2e7ac9823e5ee4903e75a281544d\",\"dweb:/ipfs/QmTBpyydKBroMgsDCXFaya8voCa2vMwnNnnMJY8UgnsNzi\"]},\"src/interfaces/IBridgingPayment.sol\":{\"keccak256\":\"0x2f684254e88b3c2a3ff05d46215638c8e49c466276f64eaf859abe0f92061f14\",\"license\":\"GPL-3.0-or-later WITH Classpath-exception-2.0\",\"urls\":[\"bzz-raw://c6e10baef4ee82e28de434475d482aba977537b5172e7efe5dcbfeeea971ecbc\",\"dweb:/ipfs/QmNWBU8jgsLopi74ifQtru2rdH8NPnyGwcRUan8XEF6yuw\"]},\"src/interfaces/IERC20Burnable.sol\":{\"keccak256\":\"0xc253b41ffd65d67ee910c1e31e160d73da8c1aada6df8726bc56f956c026c30c\",\"license\":\"GPL-3.0-or-later WITH Classpath-exception-2.0\",\"urls\":[\"bzz-raw://e7151050bd7cf3e932ab8ebc987e92aa3fd84174b2e45c45c93514a7ee502290\",\"dweb:/ipfs/QmWnXkkbGd6SRXVMSbm8X68sjvZbjzt2AyfJRTWf3oon8G\"]},\"src/interfaces/IERC20Manager.sol\":{\"keccak256\":\"0x24d974e7e5aff76652b3855ff17f860fe173ac76908cd845470f53262fa9644f\",\"license\":\"GPL-3.0-or-later WITH Classpath-exception-2.0\",\"urls\":[\"bzz-raw://dfb3c7de466c9f26c9ef7986a14e624646941bc3c8d85f614077e3e8f2273f73\",\"dweb:/ipfs/QmTTr2DBw9f3Z3wcwBghHxHbvaHYwF3E6B6qWQg3xcdTLq\"]},\"src/interfaces/IERC20Mintable.sol\":{\"keccak256\":\"0x7609574cac9fa09aae395cb9ad301adbfdfd6aabffb78d88058bae6feb7c3f30\",\"license\":\"GPL-3.0-or-later WITH Classpath-exception-2.0\",\"urls\":[\"bzz-raw://7a423d8d3a9b2b66697ebf071003e3dfa2b42c6943ec4f0a42cc1e7b16095cd6\",\"dweb:/ipfs/Qmb22mBG2GF74iRuQQ9oyKBGk92m67gNZWe7BGdqaBJLoU\"]},\"src/interfaces/IGovernance.sol\":{\"keccak256\":\"0x74b4cab0f6b4c4b9a01335f6fd47a480f6e1733f427265d25db8de32de0567ab\",\"license\":\"GPL-3.0-or-later WITH Classpath-exception-2.0\",\"urls\":[\"bzz-raw://c941332c2d844825874a67099f47703f7eda43902cbbccbce6e534b58f98a08d\",\"dweb:/ipfs/QmeZg1U2tTU5dXfKJGmgZozgB4hJxCaMmMzjFtCqdtMy8U\"]},\"src/interfaces/IMessageHandler.sol\":{\"keccak256\":\"0xdd5b8224c958a8275b4ea8478d3cf027facb032997a3cafa4c400cd8d231fdb9\",\"license\":\"GPL-3.0-or-later WITH Classpath-exception-2.0\",\"urls\":[\"bzz-raw://a5cf746eef9be910603ae0020c64cec73c687d3c657b3fbe916c6f99968b85e8\",\"dweb:/ipfs/QmTM3Pwf8PaH8PMRTtho78NQVbXbrm6pRsvbGN7TMDPNAq\"]},\"src/interfaces/IPausable.sol\":{\"keccak256\":\"0x6d3c910562c9049a3a8e59d148623d37b546b6557563c8c202305864703f4394\",\"license\":\"GPL-3.0-or-later WITH Classpath-exception-2.0\",\"urls\":[\"bzz-raw://6e907b1040394cf61f68f7cedc3ce7f0572fb0efa1803afee6e266b83c0f8298\",\"dweb:/ipfs/QmeWZWAJN3m9yA7fWWAyuEzwTxvVfW5yRPbZmZMixGUoZq\"]},\"src/libraries/CustomEnumerableMap.sol\":{\"keccak256\":\"0x5c4599d4895fad58491d98a5dcf9d7815091ab6947e357caf5ee10c4ddf95870\",\"license\":\"GPL-3.0-or-later WITH Classpath-exception-2.0\",\"urls\":[\"bzz-raw://40a9d62502c06c69e7585fae32dd251712203d329827a7df46e960d50980f040\",\"dweb:/ipfs/QmbqZNdLgpnutNNBDXhtmYRfBVenTbyKiuTGHsi8inxWwK\"]},\"src/libraries/LibString.sol\":{\"keccak256\":\"0xe431822473d6b70d142e1e2d263ac2f28b8c27b77a8dbf9e0c8eb3541f2684f9\",\"license\":\"GPL-3.0-or-later WITH Classpath-exception-2.0\",\"urls\":[\"bzz-raw://a5d01b668bfcec01604afe91f20e590e548add4e3aa434bd433709b05a494e50\",\"dweb:/ipfs/QmVyMtNXXXg9jcabvFy2s7mTF7nffP71qJB2TQPBhRZxqa\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.30+commit.73712a01"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"type":"error","name":"AccessControlBadConfirmation"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"type":"error","name":"AccessControlUnauthorizedAccount"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"type":"error","name":"AddressEmptyCode"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"type":"error","name":"ERC1967InvalidImplementation"},{"inputs":[],"type":"error","name":"ERC1967NonPayable"},{"inputs":[],"type":"error","name":"EnforcedPause"},{"inputs":[],"type":"error","name":"ExpectedPause"},{"inputs":[],"type":"error","name":"FailedCall"},{"inputs":[],"type":"error","name":"InvalidAmount"},{"inputs":[],"type":"error","name":"InvalidBridgingPayment"},{"inputs":[],"type":"error","name":"InvalidInitialization"},{"inputs":[],"type":"error","name":"InvalidPayload"},{"inputs":[],"type":"error","name":"InvalidSender"},{"inputs":[],"type":"error","name":"InvalidSource"},{"inputs":[],"type":"error","name":"InvalidTokenType"},{"inputs":[],"type":"error","name":"NotInitializing"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"type":"error","name":"SafeERC20FailedOperation"},{"inputs":[],"type":"error","name":"UUPSUnauthorizedCallContext"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"type":"error","name":"UUPSUnsupportedProxiableUUID"},{"inputs":[{"internalType":"bytes32","name":"from","type":"bytes32","indexed":true},{"internalType":"address","name":"to","type":"address","indexed":true},{"internalType":"address","name":"token","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"Bridged","anonymous":false},{"inputs":[{"internalType":"address","name":"bridgingPayment","type":"address","indexed":false}],"type":"event","name":"BridgingPaymentCreated","anonymous":false},{"inputs":[{"internalType":"address","name":"from","type":"address","indexed":true},{"internalType":"bytes32","name":"to","type":"bytes32","indexed":true},{"internalType":"address","name":"token","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"BridgingRequested","anonymous":false},{"inputs":[{"internalType":"address","name":"token","type":"address","indexed":false}],"type":"event","name":"EthereumTokenRegistered","anonymous":false},{"inputs":[{"internalType":"address","name":"token","type":"address","indexed":false},{"internalType":"string","name":"tokenName","type":"string","indexed":false},{"internalType":"string","name":"tokenSymbol","type":"string","indexed":false},{"internalType":"uint8","name":"tokenDecimals","type":"uint8","indexed":false}],"type":"event","name":"GearTokenRegistered","anonymous":false},{"inputs":[{"internalType":"uint64","name":"version","type":"uint64","indexed":false}],"type":"event","name":"Initialized","anonymous":false},{"inputs":[{"internalType":"address","name":"account","type":"address","indexed":false}],"type":"event","name":"Paused","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32","indexed":true},{"internalType":"bytes32","name":"previousAdminRole","type":"bytes32","indexed":true},{"internalType":"bytes32","name":"newAdminRole","type":"bytes32","indexed":true}],"type":"event","name":"RoleAdminChanged","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32","indexed":true},{"internalType":"address","name":"account","type":"address","indexed":true},{"internalType":"address","name":"sender","type":"address","indexed":true}],"type":"event","name":"RoleGranted","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32","indexed":true},{"internalType":"address","name":"account","type":"address","indexed":true},{"internalType":"address","name":"sender","type":"address","indexed":true}],"type":"event","name":"RoleRevoked","anonymous":false},{"inputs":[{"internalType":"address","name":"account","type":"address","indexed":false}],"type":"event","name":"Unpaused","anonymous":false},{"inputs":[{"internalType":"address","name":"implementation","type":"address","indexed":true}],"type":"event","name":"Upgraded","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"vftManager","type":"bytes32","indexed":false}],"type":"event","name":"VftManagerAdded","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"PAUSER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"bridgingPayments","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"uint256","name":"offset","type":"uint256"},{"internalType":"uint256","name":"limit","type":"uint256"}],"stateMutability":"view","type":"function","name":"bridgingPayments","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"uint256","name":"fee","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createBridgingPayment","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"stateMutability":"view","type":"function","name":"getTokenType","outputs":[{"internalType":"enum IERC20Manager.TokenType","name":"","type":"uint8"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"governanceAdmin","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"governancePauser","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"grantRole"},{"inputs":[{"internalType":"bytes32","name":"source","type":"bytes32"},{"internalType":"bytes","name":"payload","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"handleMessage"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"contract IGovernance","name":"governanceAdmin_","type":"address"},{"internalType":"contract IGovernance","name":"governancePauser_","type":"address"},{"internalType":"address","name":"messageQueue_","type":"address"},{"internalType":"bytes32","name":"vftManager","type":"bytes32"},{"internalType":"struct IERC20Manager.TokenInfo[]","name":"tokens_","type":"tuple[]","components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"enum IERC20Manager.TokenType","name":"tokenType","type":"uint8"}]}],"stateMutability":"nonpayable","type":"function","name":"initialize"},{"inputs":[{"internalType":"address","name":"bridgingPayment","type":"address"}],"stateMutability":"view","type":"function","name":"isBridgingPayment","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"bytes32","name":"vftManager","type":"bytes32"}],"stateMutability":"view","type":"function","name":"isVftManager","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"messageQueue","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"pause"},{"inputs":[],"stateMutability":"view","type":"function","name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"renounceRole"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes32","name":"to","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"requestBridging"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes32","name":"to","type":"bytes32"},{"internalType":"address","name":"bridgingPayment","type":"address"}],"stateMutability":"payable","type":"function","name":"requestBridgingPayingFee"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes32","name":"to","type":"bytes32"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"address","name":"bridgingPayment","type":"address"}],"stateMutability":"payable","type":"function","name":"requestBridgingPayingFeeWithPermit"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes32","name":"to","type":"bytes32"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"requestBridgingWithPermit"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"revokeRole"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"stateMutability":"view","type":"function","name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"offset","type":"uint256"},{"internalType":"uint256","name":"limit","type":"uint256"}],"stateMutability":"view","type":"function","name":"tokens","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"tokens","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"totalBridgingPayments","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"totalTokens","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"totalVftManagers","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"unpause"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"payable","type":"function","name":"upgradeToAndCall"},{"inputs":[],"stateMutability":"view","type":"function","name":"vftManagers","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]},{"inputs":[{"internalType":"uint256","name":"offset","type":"uint256"},{"internalType":"uint256","name":"limit","type":"uint256"}],"stateMutability":"view","type":"function","name":"vftManagers","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]}],"devdoc":{"kind":"dev","methods":{"bridgingPayments()":{"details":"Returns list of bridging payments.","returns":{"_0":"bridgingPayments List of bridging payments."}},"bridgingPayments(uint256,uint256)":{"details":"Returns list of bridging payments.","params":{"limit":"Maximum number of bridging payments to return.","offset":"Offset of the first bridging payment to return."},"returns":{"_0":"bridgingPayments List of bridging payments."}},"constructor":{"custom:oz-upgrades-unsafe-allow":"constructor"},"createBridgingPayment(uint256)":{"details":"Creates a new `BridgingPayment` contract (ERC20Manager is factory).      Emits `BridgingPaymentCreated` event.","params":{"fee":"Fee amount in wei."},"returns":{"_0":"bridgingPaymentAddress Address of the created `bridgingPayment` contract."}},"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"getTokenType(address)":{"details":"Returns token type.","params":{"token":"Token address."},"returns":{"_0":"tokenType Token type. Returns `TokenType.Unknown` if token is not registered."}},"governanceAdmin()":{"details":"Returns governance admin address.","returns":{"_0":"governanceAdmin Governance admin address."}},"governancePauser()":{"details":"Returns governance pauser address.","returns":{"_0":"governancePauser Governance pauser address."}},"grantRole(bytes32,address)":{"details":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."},"handleMessage(bytes32,bytes)":{"details":"Handles message originated from Vara Network.","params":{"payload":"Payload of the message (message from Vara Network).","source":"Source of the message (`ActorId` from Vara Network)."}},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"initialize(address,address,address,bytes32,(address,uint8)[])":{"details":"Initializes the ERC20Manager contract with the message queue and VFT manager addresses.      GovernanceAdmin contract is used to upgrade, pause/unpause the ERC20Manager contract.      GovernancePauser contract is used to pause/unpause the ERC20Manager contract.","params":{"governanceAdmin_":"The address of the GovernanceAdmin contract that will process messages.","governancePauser_":"The address of the GovernanceAdmin contract that will process pauser messages.","messageQueue_":"The address of the message queue contract.","tokens_":"The tokens that will be registered.","vftManager":"The address of the VFT manager contract (on Vara Network)."}},"isBridgingPayment(address)":{"details":"Returns whether the bridging payment is registered.","params":{"bridgingPayment":"Bridging payment address."},"returns":{"_0":"isBridgingPayment `true` if the bridging payment is registered, `false` otherwise."}},"isVftManager(bytes32)":{"details":"Returns whether the VFT manager is registered.","params":{"vftManager":"VFT manager address."},"returns":{"_0":"isVftManager `true` if the VFT manager is registered, `false` otherwise."}},"messageQueue()":{"details":"Returns message queue address.","returns":{"_0":"messageQueue Message queue address."}},"pause()":{"details":"Pauses the contract."},"paused()":{"details":"Returns true if the contract is paused, and false otherwise."},"proxiableUUID()":{"details":"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."},"requestBridging(address,uint256,bytes32)":{"details":"Requests bridging of tokens.      Emits `BridgingRequested` event.Reverts if token is not registered with `InvalidTokenType` error.","params":{"amount":"Amount of tokens to bridge.","to":"Destination address.","token":"Token address."}},"requestBridgingPayingFee(address,uint256,bytes32,address)":{"details":"Requests bridging of tokens and pays fee to one of the `bridgingPayment` contracts.","params":{"amount":"Amount of tokens to bridge.","bridgingPayment":"Bridging payment address.","to":"Destination address.","token":"Token address."}},"requestBridgingPayingFeeWithPermit(address,uint256,bytes32,uint256,uint8,bytes32,bytes32,address)":{"details":"Requests bridging of tokens and pays fee to one of the `bridgingPayment` contracts.      This function uses `permit` to approve spending of tokens to optimize gas costs.      (If token supports `permit` function).","params":{"amount":"Amount of tokens to bridge.","bridgingPayment":"Bridging payment address.","deadline":"Deadline for the transaction to be executed.","r":"ECDSA signature parameter.","s":"ECDSA signature parameter.","to":"Destination address.","token":"Token address.","v":"ECDSA signature parameter."}},"requestBridgingWithPermit(address,uint256,bytes32,uint256,uint8,bytes32,bytes32)":{"details":"Requests bridging of tokens.      This function uses `permit` to approve spending of tokens to optimize gas costs.      (If token supports `permit` function).","params":{"amount":"Amount of tokens to bridge.","deadline":"Deadline for the transaction to be executed.","r":"ECDSA signature parameter.","s":"ECDSA signature parameter.","to":"Destination address.","token":"Token address.","v":"ECDSA signature parameter."}},"revokeRole(bytes32,address)":{"details":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"tokens()":{"details":"Returns list of tokens.","returns":{"_0":"tokens List of tokens."}},"tokens(uint256,uint256)":{"details":"Returns list of tokens.","params":{"limit":"Maximum number of tokens to return.","offset":"Offset of the first token to return."},"returns":{"_0":"tokens List of tokens."}},"totalBridgingPayments()":{"details":"Returns total number of bridging payments.","returns":{"_0":"totalBridgingPayments Total number of bridging payments."}},"totalTokens()":{"details":"Returns total number of tokens.","returns":{"_0":"totalTokens Total number of tokens."}},"totalVftManagers()":{"details":"Returns total number of VFT managers.","returns":{"_0":"totalVftManagers Total number of VFT managers."}},"unpause()":{"details":"Unpauses the contract."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."},"vftManagers()":{"details":"Returns list of VFT managers.","returns":{"_0":"vftManagers List of VFT managers."}},"vftManagers(uint256,uint256)":{"details":"Returns list of VFT managers.","params":{"limit":"Maximum number of VFT managers to return.","offset":"Offset of the first VFT manager to return."},"returns":{"_0":"vftManagers List of VFT managers."}}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/","script/=script/","src/=src/","test/=test/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"none","appendCBOR":false},"compilationTarget":{"src/ERC20Manager.sol":"ERC20Manager"},"evmVersion":"prague","libraries":{},"viaIR":true},"sources":{"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol":{"keccak256":"0x85a70e2b1b65e9ba456add364d22b97eb9944083df1c39c0b4bd6a4b5aa386a4","urls":["bzz-raw://d32a33be6ca4d8e89b9e82e3f9cec7a6c4e040534152313ff55da85b8f193059","dweb:/ipfs/QmeR55L8t2A8xZ1nvT5y4yVWfFbbmpaGAtGBMz3GGNpuyP"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol":{"keccak256":"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05","urls":["bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08","dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol":{"keccak256":"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63","urls":["bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec","dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol":{"keccak256":"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397","urls":["bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9","dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol":{"keccak256":"0xa6bf6b7efe0e6625a9dcd30c5ddf52c4c24fe8372f37c7de9dbf5034746768d5","urls":["bzz-raw://8c353ee3705bbf6fadb84c0fb10ef1b736e8ca3ca1867814349d1487ed207beb","dweb:/ipfs/QmcugaPssrzGGE8q4YZKm2ZhnD3kCijjcgdWWg76nWt3FY"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol":{"keccak256":"0x6694b63ddb2c59bbe341c846171798350e8f72fa02189fcdeaca864e28b54e1f","urls":["bzz-raw://7d945d33e2189ac4e531e4ed228f59ca957b3898c4f9051f4b8c7ae44d72b23a","dweb:/ipfs/QmRcEwubTe3xyXxthijs5fVzEgUFSxeddjd5PGfhBnkunX"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol":{"keccak256":"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c","urls":["bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d","dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/access/Ownable.sol":{"keccak256":"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb","urls":["bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6","dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol":{"keccak256":"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d","urls":["bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100","dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol":{"keccak256":"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc","urls":["bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037","dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol":{"keccak256":"0xbf2aefe54b76d7f7bcd4f6da1080b7b1662611937d870b880db584d09cea56b5","urls":["bzz-raw://f5e7e2f12e0feec75296e57f51f82fdaa8bd1551f4b8cc6560442c0bf60f818c","dweb:/ipfs/QmcW9wDMaQ8RbQibMarfp17a3bABzY5KraWe2YDwuUrUoz"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol":{"keccak256":"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44","urls":["bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d","dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol":{"keccak256":"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee","urls":["bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae","dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol":{"keccak256":"0x82f757819bf2429a0d4db141b99a4bbe5039e4ef86dfb94e2e6d40577ed5b28b","urls":["bzz-raw://37c30ed931e19fb71fdb806bb504cfdb9913b7127545001b64d4487783374422","dweb:/ipfs/QmUBHpv4hm3ZmwJ4GH8BeVzK4mv41Q6vBbWXxn8HExPXza"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol":{"keccak256":"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e","urls":["bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23","dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol":{"keccak256":"0xa1ad192cd45317c788618bef5cb1fb3ca4ce8b230f6433ac68cc1d850fb81618","urls":["bzz-raw://b43447bb85a53679d269a403c693b9d88d6c74177dfb35eddca63abaf7cf110a","dweb:/ipfs/QmXSDmpd4bNZj1PDgegr6C4w1jDaWHXCconC3rYiw9TSkQ"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol":{"keccak256":"0x20462ddb2665e9521372c76b001d0ce196e59dbbd989de9af5576cad0bd5628b","urls":["bzz-raw://f417fd12aeec8fbfaceaa30e3a08a0724c0bc39de363e2acf6773c897abbaf6d","dweb:/ipfs/QmU4Hko6sApdweVM92CsiuLKkCk8HfyBeutF89PCTz5Tye"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol":{"keccak256":"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994","urls":["bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c","dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"keccak256":"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2","urls":["bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303","dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"keccak256":"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073","urls":["bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26","dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol":{"keccak256":"0xecd08ad8132d88a5fcfd50f76a18583004fcdab4c33fb86343903ae420ca5a2b","urls":["bzz-raw://02422dce2e5305624e5cec644add1baa44bfa98ea131bf6030069089a2f56ca4","dweb:/ipfs/QmcsSUkX7AYXNZE18LYE6JEmv8zZcCZvKfbUm9cSzNQyNo"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"keccak256":"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f","urls":["bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e","dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol":{"keccak256":"0x2fa0657dd7b8bc75475a47f64bc04a9adb42236b15d65e6781594ea69a46c3e4","urls":["bzz-raw://7496f42681aed94bf0142a077324e50b86046610c1724e7c12e96cf1c365914a","dweb:/ipfs/QmZvhNdSAAbN4PKPdheAqwpXukUiXp3Q3TdQccDMg2NDTV"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol":{"keccak256":"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5","urls":["bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508","dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Address.sol":{"keccak256":"0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0","urls":["bzz-raw://032d1201d839435be2c85b72e33206b3ea980c569d6ebf7fa57d811ab580a82f","dweb:/ipfs/QmeqQjAtMvdZT2tG7zm39itcRJkuwu8AEReK6WRnLJ18DD"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Arrays.sol":{"keccak256":"0xa4b9958797e0e9cde82a090525e90f80d5745ba1c67ee72b488bd3087498a17e","urls":["bzz-raw://c9344f7c2f80322c2e76d9d89bed03fd12f3e011e74fde7cf24ea21bdd2abe2d","dweb:/ipfs/QmPMAjF5x2fHUAee2FKMZDBbFVrbZbPCr3a9KHLZaSn1zY"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Comparators.sol":{"keccak256":"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58","urls":["bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd","dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Context.sol":{"keccak256":"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2","urls":["bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12","dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Errors.sol":{"keccak256":"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123","urls":["bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf","dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Nonces.sol":{"keccak256":"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f","urls":["bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e","dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Panic.sol":{"keccak256":"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a","urls":["bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a","dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol":{"keccak256":"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402","urls":["bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35","dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/SlotDerivation.sol":{"keccak256":"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26","urls":["bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2","dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol":{"keccak256":"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97","urls":["bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b","dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Strings.sol":{"keccak256":"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4","urls":["bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e","dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol":{"keccak256":"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84","urls":["bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9","dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol":{"keccak256":"0x17fc4574e07105b0180ef61f1b3cacd1820a3d37f29a4af1018d0a253c6399b5","urls":["bzz-raw://be46b3e1362dbcadbbb45ec92cdea849dceccea3e2795237f00c123aeae44746","dweb:/ipfs/QmSpyB8mud6xKiZaQnVtEPrxtTHGtyBgjs1PCYk4f2gesd"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol":{"keccak256":"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631","urls":["bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59","dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol":{"keccak256":"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c","urls":["bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617","dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"keccak256":"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6","urls":["bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3","dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol":{"keccak256":"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54","urls":["bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8","dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol":{"keccak256":"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3","urls":["bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03","dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableMap.sol":{"keccak256":"0x5360739db087f427430f8566608e9267df704d96928337a3a3b3e5382925c57f","urls":["bzz-raw://ec939f4b4f68ca36961fd5ea7a417a6a390715173a6999254a2f0a34e9298503","dweb:/ipfs/QmVEE8fRTjXE9jQ5pyKrPSyb9FPPtaWwsqjCdcxaPvAWwW"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol":{"keccak256":"0x1fc283df727585919c3db301b948a3e827aee16917457ad7f916db9da2228e77","urls":["bzz-raw://a4f4b5e2cd0ebc3b74e41e4e94771a0417eedd9b11cec3ef9f90b2ac2989264b","dweb:/ipfs/QmZmsEsvsXiwAyAe1YeoLSKezeFcvR1giUeEY6ex4zpsTS"],"license":"MIT"},"src/BridgingPayment.sol":{"keccak256":"0xd5c65ab9d02fcf2a40b6cd1256e6583c7c5662de33b5f1877872dbed0b0e7a68","urls":["bzz-raw://7bc3e3f89a6a2727e241b75c1c4013d42953a4ef6c0354a5eda6a31eef17c461","dweb:/ipfs/QmWhdZ4aqCQLsZfDTjLuuLJcEVPkU4pYoWnQKfusP56uq7"],"license":"GPL-3.0-or-later WITH Classpath-exception-2.0"},"src/ERC20Manager.sol":{"keccak256":"0xc4af40fba3d22c10d043788620b48ae3535085a87c34d963d749eb19dab28365","urls":["bzz-raw://57e91ce8903ea722cfc286a436e358420d6f754c6cfe7afd168ec97d0cd9afa6","dweb:/ipfs/QmeLpYQPDpQTtVN1aJ1fKACzH1KfCGXDeRsMBxeX4YgUg6"],"license":"GPL-3.0-or-later WITH Classpath-exception-2.0"},"src/erc20/managed/ERC20GearSupply.sol":{"keccak256":"0x6ad52d44ec0f4046c7f95dd09c8631eb5cbd143002afc4f40a80cfc30d7376fa","urls":["bzz-raw://26d6133c05182bcc243c5456f804996c69df2e7ac9823e5ee4903e75a281544d","dweb:/ipfs/QmTBpyydKBroMgsDCXFaya8voCa2vMwnNnnMJY8UgnsNzi"],"license":"GPL-3.0-or-later WITH Classpath-exception-2.0"},"src/interfaces/IBridgingPayment.sol":{"keccak256":"0x2f684254e88b3c2a3ff05d46215638c8e49c466276f64eaf859abe0f92061f14","urls":["bzz-raw://c6e10baef4ee82e28de434475d482aba977537b5172e7efe5dcbfeeea971ecbc","dweb:/ipfs/QmNWBU8jgsLopi74ifQtru2rdH8NPnyGwcRUan8XEF6yuw"],"license":"GPL-3.0-or-later WITH Classpath-exception-2.0"},"src/interfaces/IERC20Burnable.sol":{"keccak256":"0xc253b41ffd65d67ee910c1e31e160d73da8c1aada6df8726bc56f956c026c30c","urls":["bzz-raw://e7151050bd7cf3e932ab8ebc987e92aa3fd84174b2e45c45c93514a7ee502290","dweb:/ipfs/QmWnXkkbGd6SRXVMSbm8X68sjvZbjzt2AyfJRTWf3oon8G"],"license":"GPL-3.0-or-later WITH Classpath-exception-2.0"},"src/interfaces/IERC20Manager.sol":{"keccak256":"0x24d974e7e5aff76652b3855ff17f860fe173ac76908cd845470f53262fa9644f","urls":["bzz-raw://dfb3c7de466c9f26c9ef7986a14e624646941bc3c8d85f614077e3e8f2273f73","dweb:/ipfs/QmTTr2DBw9f3Z3wcwBghHxHbvaHYwF3E6B6qWQg3xcdTLq"],"license":"GPL-3.0-or-later WITH Classpath-exception-2.0"},"src/interfaces/IERC20Mintable.sol":{"keccak256":"0x7609574cac9fa09aae395cb9ad301adbfdfd6aabffb78d88058bae6feb7c3f30","urls":["bzz-raw://7a423d8d3a9b2b66697ebf071003e3dfa2b42c6943ec4f0a42cc1e7b16095cd6","dweb:/ipfs/Qmb22mBG2GF74iRuQQ9oyKBGk92m67gNZWe7BGdqaBJLoU"],"license":"GPL-3.0-or-later WITH Classpath-exception-2.0"},"src/interfaces/IGovernance.sol":{"keccak256":"0x74b4cab0f6b4c4b9a01335f6fd47a480f6e1733f427265d25db8de32de0567ab","urls":["bzz-raw://c941332c2d844825874a67099f47703f7eda43902cbbccbce6e534b58f98a08d","dweb:/ipfs/QmeZg1U2tTU5dXfKJGmgZozgB4hJxCaMmMzjFtCqdtMy8U"],"license":"GPL-3.0-or-later WITH Classpath-exception-2.0"},"src/interfaces/IMessageHandler.sol":{"keccak256":"0xdd5b8224c958a8275b4ea8478d3cf027facb032997a3cafa4c400cd8d231fdb9","urls":["bzz-raw://a5cf746eef9be910603ae0020c64cec73c687d3c657b3fbe916c6f99968b85e8","dweb:/ipfs/QmTM3Pwf8PaH8PMRTtho78NQVbXbrm6pRsvbGN7TMDPNAq"],"license":"GPL-3.0-or-later WITH Classpath-exception-2.0"},"src/interfaces/IPausable.sol":{"keccak256":"0x6d3c910562c9049a3a8e59d148623d37b546b6557563c8c202305864703f4394","urls":["bzz-raw://6e907b1040394cf61f68f7cedc3ce7f0572fb0efa1803afee6e266b83c0f8298","dweb:/ipfs/QmeWZWAJN3m9yA7fWWAyuEzwTxvVfW5yRPbZmZMixGUoZq"],"license":"GPL-3.0-or-later WITH Classpath-exception-2.0"},"src/libraries/CustomEnumerableMap.sol":{"keccak256":"0x5c4599d4895fad58491d98a5dcf9d7815091ab6947e357caf5ee10c4ddf95870","urls":["bzz-raw://40a9d62502c06c69e7585fae32dd251712203d329827a7df46e960d50980f040","dweb:/ipfs/QmbqZNdLgpnutNNBDXhtmYRfBVenTbyKiuTGHsi8inxWwK"],"license":"GPL-3.0-or-later WITH Classpath-exception-2.0"},"src/libraries/LibString.sol":{"keccak256":"0xe431822473d6b70d142e1e2d263ac2f28b8c27b77a8dbf9e0c8eb3541f2684f9","urls":["bzz-raw://a5d01b668bfcec01604afe91f20e590e548add4e3aa434bd433709b05a494e50","dweb:/ipfs/QmVyMtNXXXg9jcabvFy2s7mTF7nffP71qJB2TQPBhRZxqa"],"license":"GPL-3.0-or-later WITH Classpath-exception-2.0"}},"version":1},"storageLayout":{"storage":[{"astId":61834,"contract":"src/ERC20Manager.sol:ERC20Manager","label":"_governanceAdmin","offset":0,"slot":"0","type":"t_contract(IGovernance)65652"},{"astId":61837,"contract":"src/ERC20Manager.sol:ERC20Manager","label":"_governancePauser","offset":0,"slot":"1","type":"t_contract(IGovernance)65652"},{"astId":61839,"contract":"src/ERC20Manager.sol:ERC20Manager","label":"_messageQueue","offset":0,"slot":"2","type":"t_address"},{"astId":61842,"contract":"src/ERC20Manager.sol:ERC20Manager","label":"_vftManagers","offset":0,"slot":"3","type":"t_struct(Bytes32Set)55501_storage"},{"astId":61845,"contract":"src/ERC20Manager.sol:ERC20Manager","label":"_tokens","offset":0,"slot":"5","type":"t_struct(AddressToTokenTypeMap)66439_storage"},{"astId":61848,"contract":"src/ERC20Manager.sol:ERC20Manager","label":"_bridgingPayments","offset":0,"slot":"8","type":"t_struct(AddressSet)55671_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_bytes32)dyn_storage":{"encoding":"dynamic_array","label":"bytes32[]","numberOfBytes":"32","base":"t_bytes32"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_contract(IGovernance)65652":{"encoding":"inplace","label":"contract IGovernance","numberOfBytes":"20"},"t_mapping(t_bytes32,t_bytes32)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => bytes32)","numberOfBytes":"32","value":"t_bytes32"},"t_mapping(t_bytes32,t_uint256)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_struct(AddressSet)55671_storage":{"encoding":"inplace","label":"struct EnumerableSet.AddressSet","numberOfBytes":"64","members":[{"astId":55670,"contract":"src/ERC20Manager.sol:ERC20Manager","label":"_inner","offset":0,"slot":"0","type":"t_struct(Set)55185_storage"}]},"t_struct(AddressToTokenTypeMap)66439_storage":{"encoding":"inplace","label":"struct CustomEnumerableMap.AddressToTokenTypeMap","numberOfBytes":"96","members":[{"astId":66438,"contract":"src/ERC20Manager.sol:ERC20Manager","label":"_inner","offset":0,"slot":"0","type":"t_struct(Bytes32ToBytes32Map)52426_storage"}]},"t_struct(Bytes32Set)55501_storage":{"encoding":"inplace","label":"struct EnumerableSet.Bytes32Set","numberOfBytes":"64","members":[{"astId":55500,"contract":"src/ERC20Manager.sol:ERC20Manager","label":"_inner","offset":0,"slot":"0","type":"t_struct(Set)55185_storage"}]},"t_struct(Bytes32ToBytes32Map)52426_storage":{"encoding":"inplace","label":"struct EnumerableMap.Bytes32ToBytes32Map","numberOfBytes":"96","members":[{"astId":52421,"contract":"src/ERC20Manager.sol:ERC20Manager","label":"_keys","offset":0,"slot":"0","type":"t_struct(Bytes32Set)55501_storage"},{"astId":52425,"contract":"src/ERC20Manager.sol:ERC20Manager","label":"_values","offset":0,"slot":"2","type":"t_mapping(t_bytes32,t_bytes32)"}]},"t_struct(Set)55185_storage":{"encoding":"inplace","label":"struct EnumerableSet.Set","numberOfBytes":"64","members":[{"astId":55180,"contract":"src/ERC20Manager.sol:ERC20Manager","label":"_values","offset":0,"slot":"0","type":"t_array(t_bytes32)dyn_storage"},{"astId":55184,"contract":"src/ERC20Manager.sol:ERC20Manager","label":"_positions","offset":0,"slot":"1","type":"t_mapping(t_bytes32,t_uint256)"}]},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"irOptimized":"/// @use-src 20:\"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol\", 22:\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\", 23:\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\", 28:\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\", 30:\"lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol\", 32:\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\", 33:\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\", 40:\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\", 72:\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\", 95:\"src/ERC20Manager.sol\", 109:\"src/interfaces/IERC20Manager.sol\", 112:\"src/interfaces/IMessageHandler.sol\", 115:\"src/interfaces/IPausable.sol\"\nobject \"ERC20Manager_62964\" {\n    code {\n        {\n            /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n            let _1 := memoryguard(0xa0)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            /// @src 23:1163:1176  \"address(this)\"\n            mstore(128, /** @src 23:1171:1175  \"this\" */ address())\n            /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n            let _2 := sload(/** @src 22:3147:3213  \"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\" */ 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00)\n            /// @src 22:7894:7970  \"if ($._initializing) {...\"\n            if /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ and(shr(64, _2), 0xff)\n            /// @src 22:7894:7970  \"if ($._initializing) {...\"\n            {\n                /// @src 22:7936:7959  \"InvalidInitialization()\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 22:7936:7959  \"InvalidInitialization()\" */ shl(224, 0xf92ee8a9))\n                revert(/** @src -1:-1:-1 */ 0, /** @src 22:7936:7959  \"InvalidInitialization()\" */ 4)\n            }\n            /// @src 22:7979:8125  \"if ($._initialized != type(uint64).max) {...\"\n            if /** @src 22:7983:8017  \"$._initialized != type(uint64).max\" */ iszero(eq(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ and(_2, sub(shl(64, 1), 1)), sub(shl(64, 1), 1)))\n            /// @src 22:7979:8125  \"if ($._initialized != type(uint64).max) {...\"\n            {\n                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                sstore(/** @src 22:3147:3213  \"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\" */ 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ or(and(_2, not(sub(shl(64, 1), 1))), sub(shl(64, 1), 1)))\n                mstore(_1, sub(shl(64, 1), 1))\n                /// @src 22:8085:8114  \"Initialized(type(uint64).max)\"\n                log1(_1, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 32, /** @src 22:8085:8114  \"Initialized(type(uint64).max)\" */ 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2)\n            }\n            /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n            let _3 := mload(64)\n            let _4 := datasize(\"ERC20Manager_62964_deployed\")\n            codecopy(_3, dataoffset(\"ERC20Manager_62964_deployed\"), _4)\n            setimmutable(_3, \"40546\", mload(/** @src 23:1163:1176  \"address(this)\" */ 128))\n            /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n            return(_3, _4)\n        }\n    }\n    /// @use-src 20:\"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol\", 22:\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\", 23:\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\", 28:\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\", 30:\"lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol\", 32:\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\", 43:\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\", 56:\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\", 57:\"lib/openzeppelin-contracts/contracts/utils/Address.sol\", 66:\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\", 76:\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableMap.sol\", 77:\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\", 95:\"src/ERC20Manager.sol\", 121:\"src/libraries/CustomEnumerableMap.sol\", 122:\"src/libraries/LibString.sol\"\n    object \"ERC20Manager_62964_deployed\" {\n        code {\n            {\n                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _2 := 0\n                    switch shr(224, calldataload(0))\n                    case 0x0058f6b8 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        mstore(_1, and(sload(0), sub(shl(160, 1), 1)))\n                        return(_1, 32)\n                    }\n                    case 0x01ffc9a7 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value := calldataload(4)\n                        let _3 := and(value, shl(224, 0xffffffff))\n                        if iszero(eq(value, _3)) { revert(0, 0) }\n                        /// @src 20:3599:3686  \"interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId)\"\n                        let expr := /** @src 20:3599:3646  \"interfaceId == type(IAccessControl).interfaceId\" */ eq(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _3, /** @src 20:3614:3646  \"type(IAccessControl).interfaceId\" */ shl(224, 0x7965db0b))\n                        /// @src 20:3599:3686  \"interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId)\"\n                        if iszero(expr)\n                        {\n                            expr := /** @src 32:1101:1141  \"interfaceId == type(IERC165).interfaceId\" */ eq(_3, /** @src 32:1116:1141  \"type(IERC165).interfaceId\" */ shl(224, 0x01ffc9a7))\n                        }\n                        /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                        let memPos := mload(64)\n                        mstore(memPos, iszero(iszero(expr)))\n                        return(memPos, 32)\n                    }\n                    case 0x0c9d9b97 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        /// @src 95:12562:12612  \"return _bridgingPayments.contains(bridgingPayment)\"\n                        let var := /** @src 77:12473:12528  \"_contains(set._inner, bytes32(uint256(uint160(value))))\" */ fun_contains(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ and(abi_decode_t_address(), sub(shl(160, 1), 1)))\n                        let memPos_1 := mload(64)\n                        mstore(memPos_1, iszero(iszero(var)))\n                        return(memPos_1, 32)\n                    }\n                    case 0x109ec2e7 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let pos := mload(64)\n                        let memPtr := pos\n                        let length := sload(/** @src 95:11475:11492  \"_bridgingPayments\" */ 0x08)\n                        /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                        mstore(pos, length)\n                        pos := add(pos, 0x20)\n                        mstore(0, /** @src 95:11475:11492  \"_bridgingPayments\" */ 0x08)\n                        /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                        let srcPtr := 110349606679412691172957834289542550319383271247755660854362242977991410020067\n                        let i := 0\n                        for { } lt(i, length) { i := add(i, 1) }\n                        {\n                            mstore(pos, sload(srcPtr))\n                            pos := add(pos, 0x20)\n                            srcPtr := add(srcPtr, 1)\n                        }\n                        finalize_allocation(memPtr, sub(pos, memPtr))\n                        let memPos_2 := mload(64)\n                        return(memPos_2, sub(abi_encode_array_address_dyn(memPos_2, memPtr), memPos_2))\n                    }\n                    case 0x1e324b52 {\n                        if slt(add(calldatasize(), not(3)), 128) { revert(0, 0) }\n                        let value0 := abi_decode_t_address()\n                        let value_1 := calldataload(36)\n                        let value_2 := 0\n                        value_2 := calldataload(100)\n                        let _4 := and(value_2, sub(shl(160, 1), 1))\n                        if iszero(eq(value_2, _4)) { revert(0, 0) }\n                        /// @src 30:1944:2016  \"modifier whenNotPaused() {...\"\n                        fun_requireNotPaused()\n                        /// @src 95:15431:15537  \"if (!_bridgingPayments.contains(bridgingPayment)) {...\"\n                        if /** @src 95:15435:15479  \"!_bridgingPayments.contains(bridgingPayment)\" */ iszero(/** @src 77:12473:12528  \"_contains(set._inner, bytes32(uint256(uint160(value))))\" */ fun_contains(/** @src 77:12495:12527  \"bytes32(uint256(uint160(value)))\" */ _4))\n                        /// @src 95:15431:15537  \"if (!_bridgingPayments.contains(bridgingPayment)) {...\"\n                        {\n                            /// @src 95:15502:15526  \"InvalidBridgingPayment()\"\n                            mstore(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0, /** @src 95:15502:15526  \"InvalidBridgingPayment()\" */ shl(227, 0x1e37e195))\n                            revert(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0, 4)\n                        }\n                        /// @src 95:15547:15607  \"IBridgingPayment(bridgingPayment).payFee{value: msg.value}()\"\n                        if iszero(extcodesize(_4))\n                        {\n                            /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                            revert(0, 0)\n                        }\n                        /// @src 95:15547:15607  \"IBridgingPayment(bridgingPayment).payFee{value: msg.value}()\"\n                        let _5 := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ mload(64)\n                        /// @src 95:15547:15607  \"IBridgingPayment(bridgingPayment).payFee{value: msg.value}()\"\n                        mstore(_5, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ shl(225, 0x14b08129))\n                        /// @src 95:15547:15607  \"IBridgingPayment(bridgingPayment).payFee{value: msg.value}()\"\n                        let _6 := call(gas(), _4, /** @src 95:15595:15604  \"msg.value\" */ callvalue(), /** @src 95:15547:15607  \"IBridgingPayment(bridgingPayment).payFee{value: msg.value}()\" */ _5, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 4, /** @src 95:15547:15607  \"IBridgingPayment(bridgingPayment).payFee{value: msg.value}()\" */ _5, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0)\n                        /// @src 95:15547:15607  \"IBridgingPayment(bridgingPayment).payFee{value: msg.value}()\"\n                        if iszero(_6)\n                        {\n                            /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                            let pos_1 := mload(64)\n                            returndatacopy(pos_1, 0, returndatasize())\n                            revert(pos_1, returndatasize())\n                        }\n                        /// @src 95:15547:15607  \"IBridgingPayment(bridgingPayment).payFee{value: msg.value}()\"\n                        if _6\n                        {\n                            finalize_allocation(_5, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0)\n                            _2 := 0\n                        }\n                        /// @src 30:1944:2016  \"modifier whenNotPaused() {...\"\n                        fun_requireNotPaused()\n                        /// @src 95:14431:14495  \"if (amount == 0) {...\"\n                        if /** @src 95:14435:14446  \"amount == 0\" */ iszero(value_1)\n                        /// @src 95:14431:14495  \"if (amount == 0) {...\"\n                        {\n                            /// @src 95:14469:14484  \"InvalidAmount()\"\n                            mstore(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2, /** @src 95:14469:14484  \"InvalidAmount()\" */ shl(225, 0x162908e3))\n                            revert(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2, 4)\n                        }\n                        /// @src 95:14531:14552  \"_tokens.tryGet(token)\"\n                        let expr_component, expr_component_1 := fun_tryGet_23025(value0)\n                        /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                        let _7 := iszero(lt(expr_component_1, 3))\n                        if _7\n                        {\n                            mstore(_2, shl(224, 0x4e487b71))\n                            mstore(4, 0x21)\n                            revert(_2, 36)\n                        }\n                        /// @src 95:14563:14896  \"if (tokenType == TokenType.Unknown) {...\"\n                        switch /** @src 95:14567:14597  \"tokenType == TokenType.Unknown\" */ iszero(expr_component_1)\n                        case /** @src 95:14563:14896  \"if (tokenType == TokenType.Unknown) {...\" */ 0 {\n                            /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                            _7 := /** @src -1:-1:-1 */ _2\n                            /// @src 95:14655:14896  \"if (tokenType == TokenType.Ethereum) {...\"\n                            switch /** @src 95:14659:14690  \"tokenType == TokenType.Ethereum\" */ eq(expr_component_1, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 1)\n                            case /** @src 95:14655:14896  \"if (tokenType == TokenType.Ethereum) {...\" */ 0 {\n                                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                                _7 := /** @src -1:-1:-1 */ _2\n                                /// @src 95:14788:14896  \"if (tokenType == TokenType.Gear) {...\"\n                                if /** @src 95:14792:14819  \"tokenType == TokenType.Gear\" */ eq(expr_component_1, /** @src 95:14805:14819  \"TokenType.Gear\" */ 2)\n                                /// @src 95:14788:14896  \"if (tokenType == TokenType.Gear) {...\"\n                                {\n                                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                                    let _8 := and(/** @src 95:14835:14856  \"IERC20Burnable(token)\" */ value0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1))\n                                    /// @src 95:14835:14885  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    if iszero(extcodesize(_8))\n                                    {\n                                        /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                                        revert(_2, _2)\n                                    }\n                                    /// @src 95:14835:14885  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    let _9 := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ mload(64)\n                                    /// @src 95:14835:14885  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    mstore(_9, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ shl(228, 0x079cc679))\n                                    /// @src 95:14835:14885  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    let _10 := call(gas(), _8, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2, /** @src 95:14835:14885  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\" */ _9, sub(abi_encode_address_uint256(add(_9, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 4), /** @src 95:14866:14876  \"msg.sender\" */ caller(), /** @src 95:14835:14885  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\" */ value_1), _9), _9, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2)\n                                    /// @src 95:14835:14885  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    if iszero(_10)\n                                    {\n                                        /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                                        let pos_2 := mload(64)\n                                        returndatacopy(pos_2, _2, returndatasize())\n                                        revert(pos_2, returndatasize())\n                                    }\n                                    /// @src 95:14835:14885  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    if _10\n                                    {\n                                        finalize_allocation(_9, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2)\n                                        if _2 { revert(_2, _2) }\n                                    }\n                                }\n                            }\n                            default /// @src 95:14655:14896  \"if (tokenType == TokenType.Ethereum) {...\"\n                            {\n                                /// @src 56:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                                let expr_mpos := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ mload(64)\n                                /// @src 56:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                                mstore(add(expr_mpos, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 32), shl(224, 0x23b872dd))\n                                mstore(/** @src 56:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\" */ add(expr_mpos, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 36), /** @src 95:14737:14747  \"msg.sender\" */ caller())\n                                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                                mstore(add(/** @src 56:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\" */ expr_mpos, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 68), /** @src 95:14757:14761  \"this\" */ address())\n                                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                                mstore(add(/** @src 56:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\" */ expr_mpos, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 100), value_1)\n                                /// @src 56:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                                mstore(expr_mpos, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 100)\n                                /// @src 56:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                                finalize_allocation(expr_mpos, 132)\n                                fun_callOptionalReturn(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ and(/** @src 95:14706:14719  \"IERC20(token)\" */ value0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)), /** @src 56:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\" */ expr_mpos)\n                            }\n                        }\n                        default /// @src 95:14563:14896  \"if (tokenType == TokenType.Unknown) {...\"\n                        {\n                            /// @src 95:14620:14638  \"InvalidTokenType()\"\n                            mstore(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2, /** @src 95:14620:14638  \"InvalidTokenType()\" */ shl(224, 0xa1e9dd9d))\n                            revert(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2, 4)\n                        }\n                        /// @src 95:14911:14959  \"BridgingRequested(msg.sender, to, token, amount)\"\n                        let _11 := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ mload(64)\n                        mstore(_11, value_1)\n                        /// @src 95:14911:14959  \"BridgingRequested(msg.sender, to, token, amount)\"\n                        log4(_11, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 32, /** @src 95:14911:14959  \"BridgingRequested(msg.sender, to, token, amount)\" */ 0xf80de57fd7626baaff7d867494866703686569822c2326ae60b2515ede953c3a, /** @src 95:14929:14939  \"msg.sender\" */ caller(), /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ calldataload(68), and(/** @src 95:14911:14959  \"BridgingRequested(msg.sender, to, token, amount)\" */ value0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)))\n                        return(_2, _2)\n                    }\n                    case 0x240dfa95 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let length_1 := sload(/** @src 95:8747:8759  \"_vftManagers\" */ 0x03)\n                        /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                        let memPos_3 := mload(64)\n                        mstore(memPos_3, length_1)\n                        return(memPos_3, 32)\n                    }\n                    case 0x248a9ca3 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                        let ret := fun_getRoleAdmin(calldataload(4))\n                        let memPos_4 := mload(64)\n                        mstore(memPos_4, ret)\n                        return(memPos_4, 32)\n                    }\n                    case 0x2f2ff15d {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(_2, _2) }\n                        let value_3 := calldataload(4)\n                        let value1 := abi_decode_address()\n                        /// @src 20:3283:3287  \"role\"\n                        fun_checkRole(/** @src 20:5368:5386  \"getRoleAdmin(role)\" */ fun_getRoleAdmin(value_3))\n                        /// @src 20:5398:5423  \"_grantRole(role, account)\"\n                        pop(fun_grantRole_40016(value_3, value1))\n                        /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                        return(_2, _2)\n                    }\n                    case 0x302ac5d0 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(_2, _2) }\n                        let value_4 := calldataload(4)\n                        let offset := calldataload(36)\n                        if gt(offset, 0xffffffffffffffff) { revert(_2, _2) }\n                        if iszero(slt(add(offset, 35), calldatasize())) { revert(_2, _2) }\n                        let length_2 := calldataload(add(4, offset))\n                        if gt(length_2, 0xffffffffffffffff) { revert(_2, _2) }\n                        let arrayPos := add(offset, 36)\n                        if gt(add(add(offset, length_2), 36), calldatasize()) { revert(_2, _2) }\n                        /// @src 95:18713:18793  \"if (msg.sender != _messageQueue) {...\"\n                        if /** @src 95:18717:18744  \"msg.sender != _messageQueue\" */ iszero(eq(/** @src 95:18717:18727  \"msg.sender\" */ caller(), /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ and(sload(/** @src 95:18731:18744  \"_messageQueue\" */ 0x02), /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1))))\n                        /// @src 95:18713:18793  \"if (msg.sender != _messageQueue) {...\"\n                        {\n                            /// @src 95:18767:18782  \"InvalidSender()\"\n                            mstore(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2, /** @src 95:18767:18782  \"InvalidSender()\" */ shl(225, 0x6edaef2f))\n                            revert(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2, 4)\n                        }\n                        /// @src 95:18803:19200  \"if (_vftManagers.contains(source)) {...\"\n                        switch /** @src 77:8806:8834  \"_contains(set._inner, value)\" */ fun__contains(/** @src 95:18807:18836  \"_vftManagers.contains(source)\" */ value_4)\n                        case /** @src 95:18803:19200  \"if (_vftManagers.contains(source)) {...\" */ 0 {\n                            /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                            let cleaned := and(sload(_2), sub(shl(160, 1), 1))\n                            /// @src 95:18986:19015  \"_governanceAdmin.governance()\"\n                            let _12 := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ mload(64)\n                            /// @src 95:18986:19015  \"_governanceAdmin.governance()\"\n                            mstore(_12, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ shl(224, 0x5aa6e675))\n                            /// @src 95:18986:19015  \"_governanceAdmin.governance()\"\n                            let _13 := staticcall(gas(), cleaned, _12, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 4, /** @src 95:18986:19015  \"_governanceAdmin.governance()\" */ _12, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 32)\n                            /// @src 95:18986:19015  \"_governanceAdmin.governance()\"\n                            if iszero(_13)\n                            {\n                                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                                let pos_3 := mload(64)\n                                returndatacopy(pos_3, _2, returndatasize())\n                                revert(pos_3, returndatasize())\n                            }\n                            /// @src 95:18986:19015  \"_governanceAdmin.governance()\"\n                            let expr_1 := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2\n                            /// @src 95:18986:19015  \"_governanceAdmin.governance()\"\n                            if _13\n                            {\n                                let _14 := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 32\n                                /// @src 95:18986:19015  \"_governanceAdmin.governance()\"\n                                if gt(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 32, /** @src 95:18986:19015  \"_governanceAdmin.governance()\" */ returndatasize()) { _14 := returndatasize() }\n                                finalize_allocation(_12, _14)\n                                let value0_1 := /** @src -1:-1:-1 */ 0\n                                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                                if slt(sub(/** @src 95:18986:19015  \"_governanceAdmin.governance()\" */ add(_12, _14), _12), /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 32)\n                                {\n                                    revert(/** @src -1:-1:-1 */ 0, 0)\n                                }\n                                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                                value0_1 := mload(/** @src 95:18986:19015  \"_governanceAdmin.governance()\" */ _12)\n                                expr_1 := value0_1\n                            }\n                            /// @src 95:18972:19200  \"if (source == _governanceAdmin.governance()) {...\"\n                            switch /** @src 95:18976:19015  \"source == _governanceAdmin.governance()\" */ eq(value_4, expr_1)\n                            case /** @src 95:18972:19200  \"if (source == _governanceAdmin.governance()) {...\" */ 0 {\n                                /// @src 95:19174:19189  \"InvalidSource()\"\n                                mstore(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2, /** @src 95:19174:19189  \"InvalidSource()\" */ shl(224, 0x8154374b))\n                                revert(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2, 4)\n                            }\n                            default /// @src 95:18972:19200  \"if (source == _governanceAdmin.governance()) {...\"\n                            {\n                                /// @src 95:19031:19137  \"if (!_tryParseAndApplyGovernanceMessage(payload)) {...\"\n                                if /** @src 95:19035:19079  \"!_tryParseAndApplyGovernanceMessage(payload)\" */ iszero(/** @src 95:19036:19079  \"_tryParseAndApplyGovernanceMessage(payload)\" */ fun_tryParseAndApplyGovernanceMessage(arrayPos, length_2))\n                                /// @src 95:19031:19137  \"if (!_tryParseAndApplyGovernanceMessage(payload)) {...\"\n                                {\n                                    /// @src 95:19106:19122  \"InvalidPayload()\"\n                                    mstore(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2, /** @src 95:19106:19122  \"InvalidPayload()\" */ shl(224, 0x7c6953f9))\n                                    revert(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2, 4)\n                                }\n                            }\n                        }\n                        default /// @src 95:18803:19200  \"if (_vftManagers.contains(source)) {...\"\n                        {\n                            /// @src 95:18852:18956  \"if (!_tryParseAndApplyTransferMessage(payload)) {...\"\n                            if /** @src 95:18856:18898  \"!_tryParseAndApplyTransferMessage(payload)\" */ iszero(/** @src 95:18857:18898  \"_tryParseAndApplyTransferMessage(payload)\" */ fun_tryParseAndApplyTransferMessage(arrayPos, length_2))\n                            /// @src 95:18852:18956  \"if (!_tryParseAndApplyTransferMessage(payload)) {...\"\n                            {\n                                /// @src 95:18925:18941  \"InvalidPayload()\"\n                                mstore(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2, /** @src 95:19106:19122  \"InvalidPayload()\" */ shl(224, 0x7c6953f9))\n                                /// @src 95:18925:18941  \"InvalidPayload()\"\n                                revert(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2, 4)\n                            }\n                        }\n                        return(_2, _2)\n                    }\n                    case 0x36568abe {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(_2, _2) }\n                        let value1_1 := abi_decode_address()\n                        /// @src 20:6485:6587  \"if (callerConfirmation != _msgSender()) {...\"\n                        if /** @src 20:6489:6523  \"callerConfirmation != _msgSender()\" */ iszero(eq(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ and(/** @src 20:6489:6523  \"callerConfirmation != _msgSender()\" */ value1_1, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)), /** @src 28:966:976  \"msg.sender\" */ caller()))\n                        /// @src 20:6485:6587  \"if (callerConfirmation != _msgSender()) {...\"\n                        {\n                            /// @src 20:6546:6576  \"AccessControlBadConfirmation()\"\n                            mstore(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2, /** @src 20:6546:6576  \"AccessControlBadConfirmation()\" */ shl(225, 0x334bd919))\n                            revert(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2, 4)\n                        }\n                        /// @src 20:6597:6634  \"_revokeRole(role, callerConfirmation)\"\n                        pop(fun_revokeRole(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ calldataload(4), /** @src 20:6597:6634  \"_revokeRole(role, callerConfirmation)\" */ value1_1))\n                        /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                        return(_2, _2)\n                    }\n                    case 0x38ff319f {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                        /// @src 30:1944:2016  \"modifier whenNotPaused() {...\"\n                        fun_requireNotPaused()\n                        /// @src 95:18120:18171  \"new BridgingPayment(address(this), fee, msg.sender)\"\n                        let _15 := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ mload(64)\n                        /// @src 95:18120:18171  \"new BridgingPayment(address(this), fee, msg.sender)\"\n                        let _16 := datasize(\"BridgingPayment_61632\")\n                        let _17 := add(_15, _16)\n                        if or(gt(_17, 0xffffffffffffffff), lt(_17, _15))\n                        {\n                            /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                            mstore(_2, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(_2, 0x24)\n                        }\n                        /// @src 95:18120:18171  \"new BridgingPayment(address(this), fee, msg.sender)\"\n                        datacopy(_15, dataoffset(\"BridgingPayment_61632\"), _16)\n                        /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                        mstore(_17, /** @src 95:18148:18152  \"this\" */ address())\n                        /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                        mstore(add(_17, 32), calldataload(4))\n                        mstore(add(_17, 64), /** @src 95:18160:18170  \"msg.sender\" */ caller())\n                        /// @src 95:18120:18171  \"new BridgingPayment(address(this), fee, msg.sender)\"\n                        let expr_address := create(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2, /** @src 95:18120:18171  \"new BridgingPayment(address(this), fee, msg.sender)\" */ _15, add(sub(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _17, /** @src 95:18120:18171  \"new BridgingPayment(address(this), fee, msg.sender)\" */ _15), /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 96))\n                        /// @src 95:18120:18171  \"new BridgingPayment(address(this), fee, msg.sender)\"\n                        if iszero(expr_address)\n                        {\n                            /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                            let pos_4 := mload(64)\n                            returndatacopy(pos_4, _2, returndatasize())\n                            revert(pos_4, returndatasize())\n                        }\n                        let _18 := and(/** @src 95:18215:18239  \"address(bridgingPayment)\" */ expr_address, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1))\n                        /// @src 77:11511:11561  \"_add(set._inner, bytes32(uint256(uint160(value))))\"\n                        pop(fun__add(/** @src 77:11528:11560  \"bytes32(uint256(uint160(value)))\" */ _18))\n                        /// @src 95:18310:18356  \"BridgingPaymentCreated(bridgingPaymentAddress)\"\n                        let _19 := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ mload(64)\n                        mstore(_19, _18)\n                        /// @src 95:18310:18356  \"BridgingPaymentCreated(bridgingPaymentAddress)\"\n                        log1(_19, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 32, /** @src 95:18310:18356  \"BridgingPaymentCreated(bridgingPaymentAddress)\" */ 0x9d5f66d985a12f505753a5f6417ed3c4ec6e68963ee0119770dda415f0d14ad0)\n                        /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                        let memPos_5 := mload(64)\n                        mstore(memPos_5, _18)\n                        return(memPos_5, 32)\n                    }\n                    case 0x3b70c18a {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let cleaned_1 := and(sload(/** @src 95:8515:8528  \"_messageQueue\" */ 0x02), /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1))\n                        let memPos_6 := mload(64)\n                        mstore(memPos_6, cleaned_1)\n                        return(memPos_6, 32)\n                    }\n                    case 0x3f4ba83a {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        /// @src 20:3283:3287  \"role\"\n                        fun__checkRole()\n                        /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                        let _20 := sload(/** @src 30:1237:1303  \"assembly {...\" */ 92891662540554778686986514950364265630913525426840345632122912437671245656832)\n                        /// @src 30:2967:3029  \"if (!paused()) {...\"\n                        if /** @src 30:2971:2980  \"!paused()\" */ iszero(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ and(_20, 0xff))\n                        /// @src 30:2967:3029  \"if (!paused()) {...\"\n                        {\n                            /// @src 30:3003:3018  \"ExpectedPause()\"\n                            mstore(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2, /** @src 30:3003:3018  \"ExpectedPause()\" */ shl(224, 0x8dfc202b))\n                            revert(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2, 4)\n                        }\n                        sstore(/** @src 30:1237:1303  \"assembly {...\" */ 92891662540554778686986514950364265630913525426840345632122912437671245656832, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ and(_20, not(255)))\n                        /// @src 30:3627:3649  \"Unpaused(_msgSender())\"\n                        let _21 := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ mload(64)\n                        mstore(_21, /** @src 28:966:976  \"msg.sender\" */ caller())\n                        /// @src 30:3627:3649  \"Unpaused(_msgSender())\"\n                        log1(_21, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 32, /** @src 30:3627:3649  \"Unpaused(_msgSender())\" */ 0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa)\n                        /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                        return(_2, _2)\n                    }\n                    case 0x4e689539 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                        /// @src 95:9686:9726  \"return _vftManagers.contains(vftManager)\"\n                        let var_1 := /** @src 77:8806:8834  \"_contains(set._inner, value)\" */ fun__contains(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ calldataload(4))\n                        let memPos_7 := mload(64)\n                        mstore(memPos_7, iszero(iszero(var_1)))\n                        return(memPos_7, 32)\n                    }\n                    case 0x4f1ef286 {\n                        if slt(add(calldatasize(), not(3)), 64) { revert(_2, _2) }\n                        let value0_2 := abi_decode_t_address()\n                        let offset_1 := calldataload(36)\n                        if gt(offset_1, 0xffffffffffffffff) { revert(_2, _2) }\n                        if iszero(slt(add(offset_1, 35), calldatasize())) { revert(_2, _2) }\n                        let length_3 := calldataload(add(4, offset_1))\n                        let _22 := array_allocation_size_bytes(length_3)\n                        let memPtr_1 := mload(64)\n                        finalize_allocation(memPtr_1, _22)\n                        mstore(memPtr_1, length_3)\n                        let dst := add(memPtr_1, 32)\n                        if gt(add(add(offset_1, length_3), 36), calldatasize()) { revert(_2, _2) }\n                        calldatacopy(dst, add(offset_1, 36), length_3)\n                        mstore(add(add(memPtr_1, length_3), 32), _2)\n                        /// @src 23:4650:4673  \"address(this) == __self\"\n                        let _23 := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ and(/** @src 23:4667:4673  \"__self\" */ loadimmutable(\"40546\"), /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1))\n                        /// @src 23:4650:4770  \"address(this) == __self || // Must be called through delegatecall...\"\n                        let expr_2 := /** @src 23:4650:4673  \"address(this) == __self\" */ eq(/** @src 23:4658:4662  \"this\" */ address(), /** @src 23:4650:4673  \"address(this) == __self\" */ _23)\n                        /// @src 23:4650:4770  \"address(this) == __self || // Must be called through delegatecall...\"\n                        if iszero(expr_2)\n                        {\n                            expr_2 := /** @src 23:4728:4770  \"ERC1967Utils.getImplementation() != __self\" */ iszero(eq(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ and(sload(/** @src 43:811:877  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc), /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)), /** @src 23:4728:4770  \"ERC1967Utils.getImplementation() != __self\" */ _23))\n                        }\n                        /// @src 23:4633:4884  \"if (...\"\n                        if expr_2\n                        {\n                            /// @src 23:4844:4873  \"UUPSUnauthorizedCallContext()\"\n                            mstore(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2, /** @src 23:4844:4873  \"UUPSUnauthorizedCallContext()\" */ shl(225, 0x703e46dd))\n                            revert(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2, 4)\n                        }\n                        mstore(_2, _2)\n                        mstore(32, /** @src 20:2968:3039  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                        /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                        let dataSlot := keccak256(_2, 64)\n                        /// @src 20:3949:3980  \"$._roles[role].hasRole[account]\"\n                        let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ and(/** @src 28:966:976  \"msg.sender\" */ caller(), /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 20:3949:3963  \"$._roles[role]\" */ dataSlot)\n                        /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                        dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0x40)\n                        /// @src 20:4512:4620  \"if (!hasRole(role, account)) {...\"\n                        if /** @src 20:4516:4539  \"!hasRole(role, account)\" */ iszero(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ and(sload(/** @src 20:3949:3980  \"$._roles[role].hasRole[account]\" */ dataSlot_1), /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0xff))\n                        /// @src 20:4512:4620  \"if (!hasRole(role, account)) {...\"\n                        {\n                            /// @src 20:4562:4609  \"AccessControlUnauthorizedAccount(account, role)\"\n                            mstore(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2, /** @src 20:4562:4609  \"AccessControlUnauthorizedAccount(account, role)\" */ shl(224, 0xe2517d3f))\n                            /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                            mstore(4, /** @src 28:966:976  \"msg.sender\" */ caller())\n                            /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                            mstore(36, _2)\n                            /// @src 20:4562:4609  \"AccessControlUnauthorizedAccount(account, role)\"\n                            revert(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2, 68)\n                        }\n                        let _24 := and(/** @src 23:6131:6167  \"IERC1822Proxiable(newImplementation)\" */ value0_2, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1))\n                        /// @src 23:6131:6183  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                        let _25 := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ mload(64)\n                        /// @src 23:6131:6183  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                        mstore(_25, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ shl(224, 0x52d1902d))\n                        /// @src 23:6131:6183  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                        let trySuccessCondition := staticcall(gas(), _24, _25, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 4, /** @src 23:6131:6183  \"IERC1822Proxiable(newImplementation).proxiableUUID()\" */ _25, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 32)\n                        /// @src 23:6131:6183  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                        let expr_3 := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2\n                        /// @src 23:6131:6183  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                        if trySuccessCondition\n                        {\n                            let _26 := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 32\n                            /// @src 23:6131:6183  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                            if gt(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 32, /** @src 23:6131:6183  \"IERC1822Proxiable(newImplementation).proxiableUUID()\" */ returndatasize()) { _26 := returndatasize() }\n                            finalize_allocation(_25, _26)\n                            let value0_3 := /** @src -1:-1:-1 */ 0\n                            /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                            if slt(sub(/** @src 23:6131:6183  \"IERC1822Proxiable(newImplementation).proxiableUUID()\" */ add(_25, _26), _25), /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 32)\n                            {\n                                revert(/** @src -1:-1:-1 */ 0, 0)\n                            }\n                            /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                            value0_3 := mload(/** @src 23:6131:6183  \"IERC1822Proxiable(newImplementation).proxiableUUID()\" */ _25)\n                            expr_3 := value0_3\n                        }\n                        /// @src 23:6127:6564  \"try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {...\"\n                        switch iszero(trySuccessCondition)\n                        case 0 {\n                            /// @src 23:6221:6341  \"if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {...\"\n                            if /** @src 23:6225:6265  \"slot != ERC1967Utils.IMPLEMENTATION_SLOT\" */ iszero(eq(expr_3, /** @src 43:811:877  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc))\n                            /// @src 23:6221:6341  \"if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {...\"\n                            {\n                                /// @src 23:6292:6326  \"UUPSUnsupportedProxiableUUID(slot)\"\n                                mstore(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2, /** @src 23:6292:6326  \"UUPSUnsupportedProxiableUUID(slot)\" */ shl(226, 0x2a875269))\n                                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                                mstore(4, expr_3)\n                                /// @src 23:6292:6326  \"UUPSUnsupportedProxiableUUID(slot)\"\n                                revert(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2, 36)\n                            }\n                            /// @src 43:1744:1863  \"if (newImplementation.code.length == 0) {...\"\n                            if /** @src 43:1748:1782  \"newImplementation.code.length == 0\" */ iszero(/** @src 43:1748:1777  \"newImplementation.code.length\" */ extcodesize(value0_2))\n                            /// @src 43:1744:1863  \"if (newImplementation.code.length == 0) {...\"\n                            {\n                                /// @src 43:1805:1852  \"ERC1967InvalidImplementation(newImplementation)\"\n                                mstore(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2, /** @src 43:1805:1852  \"ERC1967InvalidImplementation(newImplementation)\" */ shl(224, 0x4c9c8ce3))\n                                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                                mstore(4, _24)\n                                /// @src 43:1805:1852  \"ERC1967InvalidImplementation(newImplementation)\"\n                                revert(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2, 36)\n                            }\n                            sstore(/** @src 43:811:877  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ or(and(sload(/** @src 43:811:877  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc), /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ shl(160, 0xffffffffffffffffffffffff)), _24))\n                            /// @src 43:2407:2443  \"IERC1967.Upgraded(newImplementation)\"\n                            log2(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2, _2, /** @src 43:2407:2443  \"IERC1967.Upgraded(newImplementation)\" */ 0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b, _24)\n                            /// @src 43:2454:2602  \"if (data.length > 0) {...\"\n                            switch /** @src 43:2458:2473  \"data.length > 0\" */ iszero(iszero(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ mload(/** @src 43:2458:2469  \"data.length\" */ memPtr_1)))\n                            case /** @src 43:2454:2602  \"if (data.length > 0) {...\" */ 0 {\n                                /// @src 43:6159:6229  \"if (msg.value > 0) {...\"\n                                if /** @src 43:6163:6176  \"msg.value > 0\" */ iszero(iszero(/** @src 43:6163:6172  \"msg.value\" */ callvalue()))\n                                /// @src 43:6159:6229  \"if (msg.value > 0) {...\"\n                                {\n                                    /// @src 43:6199:6218  \"ERC1967NonPayable()\"\n                                    mstore(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2, /** @src 43:6199:6218  \"ERC1967NonPayable()\" */ shl(224, 0xb398979f))\n                                    revert(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2, 4)\n                                }\n                            }\n                            default /// @src 43:2454:2602  \"if (data.length > 0) {...\"\n                            {\n                                /// @src 57:4065:4090  \"target.delegatecall(data)\"\n                                let expr_component_2 := delegatecall(gas(), value0_2, dst, mload(memPtr_1), /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2, _2)\n                                /// @src 57:4065:4090  \"target.delegatecall(data)\"\n                                let data := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2\n                                switch returndatasize()\n                                case 0 { data := 96 }\n                                default {\n                                    let _27 := returndatasize()\n                                    let _28 := array_allocation_size_bytes(_27)\n                                    let memPtr_2 := mload(64)\n                                    finalize_allocation(memPtr_2, _28)\n                                    mstore(memPtr_2, _27)\n                                    data := memPtr_2\n                                    returndatacopy(add(memPtr_2, 32), _2, returndatasize())\n                                }\n                                /// @src 57:4107:4162  \"verifyCallResultFromTarget(target, success, returndata)\"\n                                pop(fun_verifyCallResultFromTarget(value0_2, expr_component_2, /** @src 57:4065:4090  \"target.delegatecall(data)\" */ data))\n                            }\n                        }\n                        default /// @src 23:6127:6564  \"try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {...\"\n                        {\n                            /// @src 23:6493:6553  \"ERC1967Utils.ERC1967InvalidImplementation(newImplementation)\"\n                            mstore(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2, /** @src 43:1805:1852  \"ERC1967InvalidImplementation(newImplementation)\" */ shl(224, 0x4c9c8ce3))\n                            /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                            mstore(4, _24)\n                            /// @src 23:6493:6553  \"ERC1967Utils.ERC1967InvalidImplementation(newImplementation)\"\n                            revert(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2, 36)\n                        }\n                        return(_2, _2)\n                    }\n                    case 0x52d1902d {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        /// @src 23:5069:5214  \"if (address(this) != __self) {...\"\n                        if /** @src 23:5073:5096  \"address(this) != __self\" */ iszero(eq(/** @src 23:5081:5085  \"this\" */ address(), /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ and(/** @src 23:5090:5096  \"__self\" */ loadimmutable(\"40546\"), /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1))))\n                        /// @src 23:5069:5214  \"if (address(this) != __self) {...\"\n                        {\n                            /// @src 23:5174:5203  \"UUPSUnauthorizedCallContext()\"\n                            mstore(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2, /** @src 23:4844:4873  \"UUPSUnauthorizedCallContext()\" */ shl(225, 0x703e46dd))\n                            /// @src 23:5174:5203  \"UUPSUnauthorizedCallContext()\"\n                            revert(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2, 4)\n                        }\n                        let memPos_8 := mload(64)\n                        mstore(memPos_8, /** @src 43:811:877  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc)\n                        /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                        return(memPos_8, 32)\n                    }\n                    case 0x5c975abb {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let value_5 := and(sload(/** @src 30:1237:1303  \"assembly {...\" */ 92891662540554778686986514950364265630913525426840345632122912437671245656832), /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0xff)\n                        let memPos_9 := mload(64)\n                        mstore(memPos_9, iszero(iszero(value_5)))\n                        return(memPos_9, 32)\n                    }\n                    case 0x6a762d5c {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 224) { revert(_2, _2) }\n                        let value0_4 := abi_decode_t_address()\n                        let value_6 := calldataload(36)\n                        let value4 := abi_decode_uint8()\n                        /// @src 30:1944:2016  \"modifier whenNotPaused() {...\"\n                        fun_requireNotPaused()\n                        /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                        let _29 := and(/** @src 95:16408:16427  \"IERC20Permit(token)\" */ value0_4, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1))\n                        /// @src 95:16408:16488  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\"\n                        if iszero(extcodesize(_29))\n                        {\n                            /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                            revert(_2, _2)\n                        }\n                        /// @src 95:16408:16488  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\"\n                        let _30 := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ mload(64)\n                        /// @src 95:16408:16488  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\"\n                        mstore(_30, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ shl(224, 0xd505accf))\n                        mstore(/** @src 95:16408:16488  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\" */ add(_30, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 4), /** @src 95:16435:16445  \"msg.sender\" */ caller())\n                        /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                        mstore(add(/** @src 95:16408:16488  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\" */ _30, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 36), /** @src 95:16455:16459  \"this\" */ address())\n                        /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                        mstore(add(/** @src 95:16408:16488  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\" */ _30, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 68), value_6)\n                        mstore(add(/** @src 95:16408:16488  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\" */ _30, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 100), calldataload(100))\n                        mstore(add(/** @src 95:16408:16488  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\" */ _30, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 132), and(value4, 0xff))\n                        mstore(add(/** @src 95:16408:16488  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\" */ _30, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 164), calldataload(164))\n                        mstore(add(/** @src 95:16408:16488  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\" */ _30, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 196), calldataload(196))\n                        /// @src 95:16408:16488  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\"\n                        if call(gas(), _29, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2, /** @src 95:16408:16488  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\" */ _30, 228, _30, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2)\n                        /// @src 95:16408:16488  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\"\n                        {\n                            finalize_allocation(_30, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2)\n                            if _2 { revert(_2, _2) }\n                        }\n                        /// @src 30:1944:2016  \"modifier whenNotPaused() {...\"\n                        fun_requireNotPaused()\n                        /// @src 95:14431:14495  \"if (amount == 0) {...\"\n                        if /** @src 95:14435:14446  \"amount == 0\" */ iszero(value_6)\n                        /// @src 95:14431:14495  \"if (amount == 0) {...\"\n                        {\n                            /// @src 95:14469:14484  \"InvalidAmount()\"\n                            mstore(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2, /** @src 95:14469:14484  \"InvalidAmount()\" */ shl(225, 0x162908e3))\n                            revert(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2, 4)\n                        }\n                        /// @src 95:14531:14552  \"_tokens.tryGet(token)\"\n                        let expr_component_3, expr_component_4 := fun_tryGet_23025(value0_4)\n                        /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                        let _31 := iszero(lt(expr_component_4, 3))\n                        if _31\n                        {\n                            mstore(_2, shl(224, 0x4e487b71))\n                            mstore(4, 0x21)\n                            revert(_2, 36)\n                        }\n                        /// @src 95:14563:14896  \"if (tokenType == TokenType.Unknown) {...\"\n                        switch /** @src 95:14567:14597  \"tokenType == TokenType.Unknown\" */ iszero(expr_component_4)\n                        case /** @src 95:14563:14896  \"if (tokenType == TokenType.Unknown) {...\" */ 0 {\n                            /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                            _31 := /** @src -1:-1:-1 */ _2\n                            /// @src 95:14655:14896  \"if (tokenType == TokenType.Ethereum) {...\"\n                            switch /** @src 95:14659:14690  \"tokenType == TokenType.Ethereum\" */ eq(expr_component_4, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 1)\n                            case /** @src 95:14655:14896  \"if (tokenType == TokenType.Ethereum) {...\" */ 0 {\n                                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                                _31 := /** @src -1:-1:-1 */ _2\n                                /// @src 95:14788:14896  \"if (tokenType == TokenType.Gear) {...\"\n                                if /** @src 95:14792:14819  \"tokenType == TokenType.Gear\" */ eq(expr_component_4, /** @src 95:14805:14819  \"TokenType.Gear\" */ 2)\n                                /// @src 95:14788:14896  \"if (tokenType == TokenType.Gear) {...\"\n                                {\n                                    /// @src 95:14835:14885  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    if iszero(extcodesize(_29))\n                                    {\n                                        /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                                        revert(_2, _2)\n                                    }\n                                    /// @src 95:14835:14885  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    let _32 := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ mload(64)\n                                    /// @src 95:14835:14885  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    mstore(_32, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ shl(228, 0x079cc679))\n                                    /// @src 95:14835:14885  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    let _33 := call(gas(), _29, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2, /** @src 95:14835:14885  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\" */ _32, sub(abi_encode_address_uint256(add(_32, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 4), /** @src 95:16435:16445  \"msg.sender\" */ caller(), /** @src 95:14835:14885  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\" */ value_6), _32), _32, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2)\n                                    /// @src 95:14835:14885  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    if iszero(_33)\n                                    {\n                                        /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                                        let pos_5 := mload(64)\n                                        returndatacopy(pos_5, _2, returndatasize())\n                                        revert(pos_5, returndatasize())\n                                    }\n                                    /// @src 95:14835:14885  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    if _33\n                                    {\n                                        finalize_allocation(_32, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2)\n                                        if _2 { revert(_2, _2) }\n                                    }\n                                }\n                            }\n                            default /// @src 95:14655:14896  \"if (tokenType == TokenType.Ethereum) {...\"\n                            {\n                                /// @src 56:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                                let expr_mpos_1 := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ mload(64)\n                                /// @src 56:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                                mstore(add(expr_mpos_1, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 32), shl(224, 0x23b872dd))\n                                mstore(/** @src 56:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\" */ add(expr_mpos_1, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 36), /** @src 95:16435:16445  \"msg.sender\" */ caller())\n                                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                                mstore(add(/** @src 56:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\" */ expr_mpos_1, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 68), /** @src 95:16455:16459  \"this\" */ address())\n                                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                                mstore(add(/** @src 56:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\" */ expr_mpos_1, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 100), value_6)\n                                /// @src 56:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                                mstore(expr_mpos_1, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 100)\n                                /// @src 56:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                                finalize_allocation(expr_mpos_1, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 132)\n                                /// @src 56:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                                fun_callOptionalReturn(_29, expr_mpos_1)\n                            }\n                        }\n                        default /// @src 95:14563:14896  \"if (tokenType == TokenType.Unknown) {...\"\n                        {\n                            /// @src 95:14620:14638  \"InvalidTokenType()\"\n                            mstore(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2, /** @src 95:14620:14638  \"InvalidTokenType()\" */ shl(224, 0xa1e9dd9d))\n                            revert(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2, 4)\n                        }\n                        /// @src 95:14911:14959  \"BridgingRequested(msg.sender, to, token, amount)\"\n                        let _34 := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ mload(64)\n                        mstore(_34, value_6)\n                        /// @src 95:14911:14959  \"BridgingRequested(msg.sender, to, token, amount)\"\n                        log4(_34, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 32, /** @src 95:14911:14959  \"BridgingRequested(msg.sender, to, token, amount)\" */ 0xf80de57fd7626baaff7d867494866703686569822c2326ae60b2515ede953c3a, /** @src 95:16435:16445  \"msg.sender\" */ caller(), /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ calldataload(68), /** @src 95:14911:14959  \"BridgingRequested(msg.sender, to, token, amount)\" */ _29)\n                        /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                        return(_2, _2)\n                    }\n                    case 0x763b754a {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 160) { revert(_2, _2) }\n                        let value0_5 := abi_decode_t_address()\n                        let value1_2 := abi_decode_address()\n                        let value_7 := /** @src -1:-1:-1 */ _2\n                        /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                        value_7 := calldataload(68)\n                        let _35 := and(value_7, sub(shl(160, 1), 1))\n                        if iszero(eq(value_7, _35)) { revert(_2, _2) }\n                        let offset_2 := calldataload(132)\n                        if gt(offset_2, 0xffffffffffffffff) { revert(_2, _2) }\n                        if iszero(slt(add(offset_2, 35), calldatasize())) { revert(_2, _2) }\n                        let length_4 := calldataload(add(4, offset_2))\n                        let _36 := array_allocation_size_array_struct_TokenInfo_dyn(length_4)\n                        let memPtr_3 := mload(64)\n                        finalize_allocation(memPtr_3, _36)\n                        let dst_1 := memPtr_3\n                        mstore(memPtr_3, length_4)\n                        dst_1 := add(memPtr_3, 32)\n                        let srcEnd := add(add(offset_2, shl(6, length_4)), 36)\n                        if gt(srcEnd, calldatasize()) { revert(_2, _2) }\n                        let src := add(offset_2, 36)\n                        for { } lt(src, srcEnd) { src := add(src, 64) }\n                        {\n                            if slt(sub(calldatasize(), src), 64) { revert(_2, _2) }\n                            let memPtr_4 := mload(64)\n                            let newFreePtr := add(memPtr_4, 64)\n                            if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr_4))\n                            {\n                                mstore(/** @src -1:-1:-1 */ _2, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(/** @src -1:-1:-1 */ _2, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 36)\n                            }\n                            mstore(64, newFreePtr)\n                            let value_8 := /** @src -1:-1:-1 */ _2\n                            /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                            value_8 := calldataload(src)\n                            if iszero(eq(value_8, and(value_8, sub(shl(160, 1), 1)))) { revert(_2, _2) }\n                            mstore(memPtr_4, value_8)\n                            let value_9 := calldataload(add(src, 32))\n                            if iszero(lt(value_9, 3)) { revert(_2, _2) }\n                            mstore(add(memPtr_4, 32), value_9)\n                            mstore(dst_1, memPtr_4)\n                            dst_1 := add(dst_1, 32)\n                        }\n                        let _37 := sload(/** @src 22:3147:3213  \"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\" */ 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00)\n                        /// @src 22:4301:4317  \"!$._initializing\"\n                        let _38 := iszero(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ and(shr(64, _37), 0xff))\n                        let value_10 := and(_37, 0xffffffffffffffff)\n                        /// @src 22:4724:4758  \"initialized == 0 && isTopLevelCall\"\n                        let expr_4 := /** @src 22:4724:4740  \"initialized == 0\" */ iszero(value_10)\n                        /// @src 22:4724:4758  \"initialized == 0 && isTopLevelCall\"\n                        if expr_4 { expr_4 := _38 }\n                        /// @src 22:4788:4838  \"initialized == 1 && address(this).code.length == 0\"\n                        let expr_5 := /** @src 22:4788:4804  \"initialized == 1\" */ eq(value_10, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 1)\n                        /// @src 22:4788:4838  \"initialized == 1 && address(this).code.length == 0\"\n                        if expr_5\n                        {\n                            expr_5 := /** @src 22:4808:4838  \"address(this).code.length == 0\" */ iszero(/** @src 22:4808:4833  \"address(this).code.length\" */ extcodesize(/** @src 22:4816:4820  \"this\" */ address()))\n                        }\n                        /// @src 22:4853:4883  \"!initialSetup && !construction\"\n                        let expr_6 := /** @src 22:4853:4866  \"!initialSetup\" */ iszero(expr_4)\n                        /// @src 22:4853:4883  \"!initialSetup && !construction\"\n                        if expr_6\n                        {\n                            expr_6 := /** @src 22:4870:4883  \"!construction\" */ iszero(expr_5)\n                        }\n                        /// @src 22:4849:4940  \"if (!initialSetup && !construction) {...\"\n                        if expr_6\n                        {\n                            /// @src 22:4906:4929  \"InvalidInitialization()\"\n                            mstore(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2, /** @src 22:4906:4929  \"InvalidInitialization()\" */ shl(224, 0xf92ee8a9))\n                            revert(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2, 4)\n                        }\n                        sstore(/** @src 22:3147:3213  \"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\" */ 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ or(and(_37, not(0xffffffffffffffff)), 1))\n                        /// @src 22:4977:5044  \"if (isTopLevelCall) {...\"\n                        if _38\n                        {\n                            /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                            sstore(/** @src 22:3147:3213  \"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\" */ 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ or(and(_37, not(0xffffffffffffffffff)), 0x010000000000000001))\n                        }\n                        /// @src 22:6891:6967  \"modifier onlyInitializing() {...\"\n                        fun_checkInitializing()\n                        fun_checkInitializing()\n                        fun_checkInitializing()\n                        /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                        let _39 := and(/** @src 95:7042:7067  \"address(governanceAdmin_)\" */ value0_5, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1))\n                        /// @src 95:7011:7068  \"_grantRole(DEFAULT_ADMIN_ROLE, address(governanceAdmin_))\"\n                        pop(fun__grantRole(_39))\n                        /// @src 95:7079:7129  \"_grantRole(PAUSER_ROLE, address(governanceAdmin_))\"\n                        pop(fun_grantRole(_39))\n                        /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                        let _40 := and(/** @src 95:7163:7189  \"address(governancePauser_)\" */ value1_2, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1))\n                        /// @src 95:7139:7190  \"_grantRole(PAUSER_ROLE, address(governancePauser_))\"\n                        pop(fun_grantRole(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _40))\n                        sstore(_2, or(and(sload(_2), shl(160, 0xffffffffffffffffffffffff)), _39))\n                        sstore(1, or(and(sload(1), shl(160, 0xffffffffffffffffffffffff)), _40))\n                        sstore(/** @src 95:7293:7322  \"_messageQueue = messageQueue_\" */ 0x02, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ or(and(sload(/** @src 95:7293:7322  \"_messageQueue = messageQueue_\" */ 0x02), /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ shl(160, 0xffffffffffffffffffffffff)), _35))\n                        /// @src 77:7898:7921  \"_add(set._inner, value)\"\n                        pop(fun_add_23044(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ calldataload(100)))\n                        /// @src 95:7376:7389  \"uint256 i = 0\"\n                        let var_i := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2\n                        /// @src 95:7371:7686  \"for (uint256 i = 0; i < tokens_.length; i++) {...\"\n                        for { }\n                        /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 1\n                        /// @src 95:7376:7389  \"uint256 i = 0\"\n                        {\n                            /// @src 95:7411:7414  \"i++\"\n                            var_i := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ add(/** @src 95:7411:7414  \"i++\" */ var_i, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 1)\n                        }\n                        /// @src 95:7411:7414  \"i++\"\n                        {\n                            /// @src 95:7391:7409  \"i < tokens_.length\"\n                            if iszero(lt(var_i, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ mload(/** @src 95:7395:7409  \"tokens_.length\" */ memPtr_3)))\n                            /// @src 95:7391:7409  \"i < tokens_.length\"\n                            { break }\n                            /// @src 95:7459:7469  \"tokens_[i]\"\n                            let _mpos := mload(memory_array_index_access_struct_TokenInfo_dyn(memPtr_3, var_i))\n                            /// @src 95:7488:7507  \"tokenInfo.tokenType\"\n                            let _41 := add(_mpos, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 32)\n                            let _42 := mload(/** @src 95:7488:7507  \"tokenInfo.tokenType\" */ _41)\n                            /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                            let _43 := iszero(lt(_42, 3))\n                            if _43\n                            {\n                                mstore(_2, shl(224, 0x4e487b71))\n                                mstore(4, 0x21)\n                                revert(_2, 36)\n                            }\n                            _43 := /** @src -1:-1:-1 */ _2\n                            /// @src 95:7484:7676  \"if (tokenInfo.tokenType == TokenType.Unknown) {...\"\n                            switch /** @src 95:7488:7528  \"tokenInfo.tokenType == TokenType.Unknown\" */ iszero(_42)\n                            case /** @src 95:7484:7676  \"if (tokenInfo.tokenType == TokenType.Unknown) {...\" */ 0 {\n                                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                                let cleaned_2 := and(mload(/** @src 95:7624:7639  \"tokenInfo.token\" */ _mpos), /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1))\n                                let _44 := mload(/** @src 95:7641:7660  \"tokenInfo.tokenType\" */ _41)\n                                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                                if iszero(lt(_44, 3))\n                                {\n                                    mstore(_2, shl(224, 0x4e487b71))\n                                    mstore(4, 0x21)\n                                    revert(_2, 36)\n                                }\n                                /// @src 95:7612:7661  \"_tokens.set(tokenInfo.token, tokenInfo.tokenType)\"\n                                pop(fun_set(cleaned_2, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _44))\n                            }\n                            default /// @src 95:7484:7676  \"if (tokenInfo.tokenType == TokenType.Unknown) {...\"\n                            {\n                                /// @src 95:7555:7573  \"InvalidTokenType()\"\n                                mstore(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2, /** @src 95:14620:14638  \"InvalidTokenType()\" */ shl(224, 0xa1e9dd9d))\n                                /// @src 95:7555:7573  \"InvalidTokenType()\"\n                                revert(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2, 4)\n                            }\n                        }\n                        /// @src 22:5064:5165  \"if (isTopLevelCall) {...\"\n                        if _38\n                        {\n                            /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                            sstore(/** @src 22:3147:3213  \"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\" */ 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ and(sload(/** @src 22:3147:3213  \"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\" */ 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00), /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ not(0xff0000000000000000)))\n                            /// @src 22:5140:5154  \"Initialized(1)\"\n                            let _45 := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ mload(64)\n                            mstore(_45, 1)\n                            /// @src 22:5140:5154  \"Initialized(1)\"\n                            log1(_45, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 32, /** @src 22:5140:5154  \"Initialized(1)\" */ 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2)\n                        }\n                        /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                        return(_2, _2)\n                    }\n                    case 0x7e1c0c09 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let length_5 := sload(/** @src 95:9922:9929  \"_tokens\" */ 0x05)\n                        /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                        let memPos_10 := mload(64)\n                        mstore(memPos_10, length_5)\n                        return(memPos_10, 32)\n                    }\n                    case 0x8456cb59 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        /// @src 20:3283:3287  \"role\"\n                        fun__checkRole()\n                        /// @src 30:1944:2016  \"modifier whenNotPaused() {...\"\n                        fun_requireNotPaused()\n                        /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                        sstore(/** @src 30:1237:1303  \"assembly {...\" */ 92891662540554778686986514950364265630913525426840345632122912437671245656832, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ or(and(sload(/** @src 30:1237:1303  \"assembly {...\" */ 92891662540554778686986514950364265630913525426840345632122912437671245656832), /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ not(255)), /** @src 95:5528:5532  \"0x01\" */ 0x01))\n                        /// @src 30:3319:3339  \"Paused(_msgSender())\"\n                        let _46 := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ mload(64)\n                        mstore(_46, /** @src 28:966:976  \"msg.sender\" */ caller())\n                        /// @src 30:3319:3339  \"Paused(_msgSender())\"\n                        log1(_46, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 32, /** @src 30:3319:3339  \"Paused(_msgSender())\" */ 0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258)\n                        /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                        return(_2, _2)\n                    }\n                    case 0x87be40b1 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let pos_6 := mload(64)\n                        let memPtr_5 := pos_6\n                        let length_6 := sload(/** @src 95:8969:8981  \"_vftManagers\" */ 0x03)\n                        /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                        mstore(pos_6, length_6)\n                        pos_6 := add(pos_6, 0x20)\n                        mstore(_2, /** @src 95:8969:8981  \"_vftManagers\" */ 0x03)\n                        /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                        let srcPtr_1 := 87903029871075914254377627908054574944891091886930582284385770809450030037083\n                        let i_1 := _2\n                        for { } lt(i_1, length_6) { i_1 := add(i_1, 1) }\n                        {\n                            mstore(pos_6, sload(srcPtr_1))\n                            pos_6 := add(pos_6, 0x20)\n                            srcPtr_1 := add(srcPtr_1, 1)\n                        }\n                        finalize_allocation(memPtr_5, sub(pos_6, memPtr_5))\n                        let memPos_11 := mload(64)\n                        return(memPos_11, sub(abi_encode_array_bytes32_dyn(memPos_11, memPtr_5), memPos_11))\n                    }\n                    case 0x87e7a3a3 {\n                        if callvalue() { revert(_2, _2) }\n                        let param, param_1 := abi_decode_uint256t_uint256(calldatasize())\n                        let ret_1 := /** @src 95:12058:12093  \"paginate(bytes32Set, offset, limit)\" */ fun_paginate_23048(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ param, param_1)\n                        let memPos_12 := mload(64)\n                        return(memPos_12, sub(abi_encode_array_address_dyn(memPos_12, ret_1), memPos_12))\n                    }\n                    case 0x8b4864d6 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_2, param_3 := abi_decode_uint256t_uint256(calldatasize())\n                        let ret_2 := /** @src 95:10471:10516  \"paginate(_tokens._inner._keys, offset, limit)\" */ fun_paginate(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ param_2, param_3)\n                        let memPos_13 := mload(64)\n                        return(memPos_13, sub(abi_encode_array_address_dyn(memPos_13, ret_2), memPos_13))\n                    }\n                    case 0x8b841f6c {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let length_7 := sload(/** @src 95:11228:11245  \"_bridgingPayments\" */ 0x08)\n                        /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                        let memPos_14 := mload(64)\n                        mstore(memPos_14, length_7)\n                        return(memPos_14, 32)\n                    }\n                    case 0x91d14854 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(_2, _2) }\n                        let value1_3 := abi_decode_address()\n                        mstore(_2, calldataload(4))\n                        mstore(32, /** @src 20:2968:3039  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                        /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                        let dataSlot_2 := keccak256(_2, 64)\n                        /// @src 20:3949:3980  \"$._roles[role].hasRole[account]\"\n                        let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                        /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ and(value1_3, sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 20:3949:3963  \"$._roles[role]\" */ dataSlot_2)\n                        /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                        dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0x40)\n                        let value_11 := and(sload(/** @src 20:3949:3980  \"$._roles[role].hasRole[account]\" */ dataSlot_3), /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0xff)\n                        let memPos_15 := mload(64)\n                        mstore(memPos_15, iszero(iszero(value_11)))\n                        return(memPos_15, 32)\n                    }\n                    case 0x93272baf {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                        /// @src 95:10943:10964  \"_tokens.tryGet(token)\"\n                        let expr_component_5, expr_component_6 := fun_tryGet_23025(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ abi_decode_t_address())\n                        let memPos_16 := mload(64)\n                        if iszero(lt(expr_component_6, 3))\n                        {\n                            mstore(_2, shl(224, 0x4e487b71))\n                            mstore(4, 0x21)\n                            revert(_2, 0x24)\n                        }\n                        mstore(memPos_16, expr_component_6)\n                        return(memPos_16, 32)\n                    }\n                    case 0x9d63848a {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let pos_7 := mload(64)\n                        let memPtr_6 := pos_7\n                        let length_8 := sload(/** @src 95:10117:10124  \"_tokens\" */ 0x05)\n                        /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                        mstore(pos_7, length_8)\n                        pos_7 := add(pos_7, 0x20)\n                        mstore(_2, /** @src 95:10117:10124  \"_tokens\" */ 0x05)\n                        /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                        let srcPtr_2 := 1546678032441257452667456735582814959992782782816731922691272282333561699760\n                        let i_2 := _2\n                        for { } lt(i_2, length_8) { i_2 := add(i_2, 1) }\n                        {\n                            mstore(pos_7, sload(srcPtr_2))\n                            pos_7 := add(pos_7, 0x20)\n                            srcPtr_2 := add(srcPtr_2, 1)\n                        }\n                        finalize_allocation(memPtr_6, sub(pos_7, memPtr_6))\n                        let memPos_17 := mload(64)\n                        return(memPos_17, sub(abi_encode_array_address_dyn(memPos_17, memPtr_6), memPos_17))\n                    }\n                    case 0xa217fddf {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let memPos_18 := mload(64)\n                        mstore(memPos_18, _2)\n                        return(memPos_18, 32)\n                    }\n                    case 0xad3cb1cc {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let size := /** @src -1:-1:-1 */ _2\n                        /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                        let _47 := _2\n                        _47 := /** @src -1:-1:-1 */ _2\n                        /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                        size := 64\n                        let memPtr_7 := mload(64)\n                        finalize_allocation(memPtr_7, 64)\n                        mstore(memPtr_7, 5)\n                        mstore(add(memPtr_7, 32), \"5.0.0\")\n                        let memPos_19 := mload(64)\n                        mstore(memPos_19, 32)\n                        return(memPos_19, sub(abi_encode_string(memPtr_7, add(memPos_19, 32)), memPos_19))\n                    }\n                    case 0xc1c60921 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_4, param_5 := abi_decode_uint256t_uint256(calldatasize())\n                        let ret_3 := /** @src 95:9346:9383  \"paginate(_vftManagers, offset, limit)\" */ fun_paginate_23056(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ param_4, param_5)\n                        let memPos_20 := mload(64)\n                        return(memPos_20, sub(abi_encode_array_bytes32_dyn(memPos_20, ret_3), memPos_20))\n                    }\n                    case 0xc305870c {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(_2, _2) }\n                        let value0_6 := abi_decode_t_address()\n                        let value_12 := calldataload(36)\n                        /// @src 30:1944:2016  \"modifier whenNotPaused() {...\"\n                        fun_requireNotPaused()\n                        /// @src 95:14431:14495  \"if (amount == 0) {...\"\n                        if /** @src 95:14435:14446  \"amount == 0\" */ iszero(value_12)\n                        /// @src 95:14431:14495  \"if (amount == 0) {...\"\n                        {\n                            /// @src 95:14469:14484  \"InvalidAmount()\"\n                            mstore(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2, /** @src 95:14469:14484  \"InvalidAmount()\" */ shl(225, 0x162908e3))\n                            revert(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2, 4)\n                        }\n                        /// @src 95:14531:14552  \"_tokens.tryGet(token)\"\n                        let expr_component_7, expr_component_8 := fun_tryGet_23025(value0_6)\n                        /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                        let _48 := iszero(lt(expr_component_8, 3))\n                        if _48\n                        {\n                            mstore(_2, shl(224, 0x4e487b71))\n                            mstore(4, 0x21)\n                            revert(_2, 36)\n                        }\n                        /// @src 95:14563:14896  \"if (tokenType == TokenType.Unknown) {...\"\n                        switch /** @src 95:14567:14597  \"tokenType == TokenType.Unknown\" */ iszero(expr_component_8)\n                        case /** @src 95:14563:14896  \"if (tokenType == TokenType.Unknown) {...\" */ 0 {\n                            /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                            _48 := /** @src -1:-1:-1 */ _2\n                            /// @src 95:14655:14896  \"if (tokenType == TokenType.Ethereum) {...\"\n                            switch /** @src 95:14659:14690  \"tokenType == TokenType.Ethereum\" */ eq(expr_component_8, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 1)\n                            case /** @src 95:14655:14896  \"if (tokenType == TokenType.Ethereum) {...\" */ 0 {\n                                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                                _48 := /** @src -1:-1:-1 */ _2\n                                /// @src 95:14788:14896  \"if (tokenType == TokenType.Gear) {...\"\n                                if /** @src 95:14792:14819  \"tokenType == TokenType.Gear\" */ eq(expr_component_8, /** @src 95:14805:14819  \"TokenType.Gear\" */ 2)\n                                /// @src 95:14788:14896  \"if (tokenType == TokenType.Gear) {...\"\n                                {\n                                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                                    let _49 := and(/** @src 95:14835:14856  \"IERC20Burnable(token)\" */ value0_6, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1))\n                                    /// @src 95:14835:14885  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    if iszero(extcodesize(_49))\n                                    {\n                                        /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                                        revert(_2, _2)\n                                    }\n                                    /// @src 95:14835:14885  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    let _50 := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ mload(64)\n                                    /// @src 95:14835:14885  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    mstore(_50, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ shl(228, 0x079cc679))\n                                    /// @src 95:14835:14885  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    let _51 := call(gas(), _49, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2, /** @src 95:14835:14885  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\" */ _50, sub(abi_encode_address_uint256(add(_50, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 4), /** @src 95:14866:14876  \"msg.sender\" */ caller(), /** @src 95:14835:14885  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\" */ value_12), _50), _50, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2)\n                                    /// @src 95:14835:14885  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    if iszero(_51)\n                                    {\n                                        /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                                        let pos_8 := mload(64)\n                                        returndatacopy(pos_8, _2, returndatasize())\n                                        revert(pos_8, returndatasize())\n                                    }\n                                    /// @src 95:14835:14885  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    if _51\n                                    {\n                                        finalize_allocation(_50, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2)\n                                        if _2 { revert(_2, _2) }\n                                    }\n                                }\n                            }\n                            default /// @src 95:14655:14896  \"if (tokenType == TokenType.Ethereum) {...\"\n                            {\n                                /// @src 56:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                                let expr_mpos_2 := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ mload(64)\n                                /// @src 56:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                                mstore(add(expr_mpos_2, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 32), shl(224, 0x23b872dd))\n                                mstore(/** @src 56:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\" */ add(expr_mpos_2, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 36), /** @src 95:14737:14747  \"msg.sender\" */ caller())\n                                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                                mstore(add(/** @src 56:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\" */ expr_mpos_2, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 68), /** @src 95:14757:14761  \"this\" */ address())\n                                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                                mstore(add(/** @src 56:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\" */ expr_mpos_2, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 100), value_12)\n                                /// @src 56:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                                mstore(expr_mpos_2, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 100)\n                                /// @src 56:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                                finalize_allocation(expr_mpos_2, 132)\n                                fun_callOptionalReturn(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ and(/** @src 95:14706:14719  \"IERC20(token)\" */ value0_6, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)), /** @src 56:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\" */ expr_mpos_2)\n                            }\n                        }\n                        default /// @src 95:14563:14896  \"if (tokenType == TokenType.Unknown) {...\"\n                        {\n                            /// @src 95:14620:14638  \"InvalidTokenType()\"\n                            mstore(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2, /** @src 95:14620:14638  \"InvalidTokenType()\" */ shl(224, 0xa1e9dd9d))\n                            revert(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2, 4)\n                        }\n                        /// @src 95:14911:14959  \"BridgingRequested(msg.sender, to, token, amount)\"\n                        let _52 := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ mload(64)\n                        mstore(_52, value_12)\n                        /// @src 95:14911:14959  \"BridgingRequested(msg.sender, to, token, amount)\"\n                        log4(_52, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 32, /** @src 95:14911:14959  \"BridgingRequested(msg.sender, to, token, amount)\" */ 0xf80de57fd7626baaff7d867494866703686569822c2326ae60b2515ede953c3a, /** @src 95:14929:14939  \"msg.sender\" */ caller(), /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ calldataload(68), and(/** @src 95:14911:14959  \"BridgingRequested(msg.sender, to, token, amount)\" */ value0_6, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)))\n                        return(_2, _2)\n                    }\n                    case 0xc81eb797 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let cleaned_3 := and(sload(/** @src 95:8293:8310  \"_governancePauser\" */ 0x01), /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1))\n                        let memPos_21 := mload(64)\n                        mstore(memPos_21, cleaned_3)\n                        return(memPos_21, 32)\n                    }\n                    case 0xd547741f {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(_2, _2) }\n                        let value_13 := calldataload(4)\n                        let value1_4 := abi_decode_address()\n                        /// @src 20:3283:3287  \"role\"\n                        fun_checkRole(/** @src 20:5785:5803  \"getRoleAdmin(role)\" */ fun_getRoleAdmin(value_13))\n                        /// @src 20:5815:5841  \"_revokeRole(role, account)\"\n                        pop(fun_revokeRole(value_13, value1_4))\n                        /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                        return(_2, _2)\n                    }\n                    case 0xe63ab1e9 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let memPos_22 := mload(64)\n                        mstore(memPos_22, /** @src 95:5528:5532  \"0x01\" */ 0x01)\n                        /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                        return(memPos_22, 32)\n                    }\n                    case 0xf6cdd9cc {\n                        if slt(add(calldatasize(), not(3)), 256) { revert(_2, _2) }\n                        let value0_7 := abi_decode_t_address()\n                        let value_14 := calldataload(36)\n                        let value4_1 := abi_decode_uint8()\n                        let value_15 := /** @src -1:-1:-1 */ _2\n                        /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                        value_15 := calldataload(228)\n                        let _53 := and(value_15, sub(shl(160, 1), 1))\n                        if iszero(eq(value_15, _53)) { revert(_2, _2) }\n                        /// @src 30:1944:2016  \"modifier whenNotPaused() {...\"\n                        fun_requireNotPaused()\n                        /// @src 95:17457:17563  \"if (!_bridgingPayments.contains(bridgingPayment)) {...\"\n                        if /** @src 95:17461:17505  \"!_bridgingPayments.contains(bridgingPayment)\" */ iszero(/** @src 77:12473:12528  \"_contains(set._inner, bytes32(uint256(uint160(value))))\" */ fun_contains(/** @src 77:12495:12527  \"bytes32(uint256(uint160(value)))\" */ _53))\n                        /// @src 95:17457:17563  \"if (!_bridgingPayments.contains(bridgingPayment)) {...\"\n                        {\n                            /// @src 95:17528:17552  \"InvalidBridgingPayment()\"\n                            mstore(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2, /** @src 95:15502:15526  \"InvalidBridgingPayment()\" */ shl(227, 0x1e37e195))\n                            /// @src 95:17528:17552  \"InvalidBridgingPayment()\"\n                            revert(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2, 4)\n                        }\n                        /// @src 95:17573:17633  \"IBridgingPayment(bridgingPayment).payFee{value: msg.value}()\"\n                        if iszero(extcodesize(_53))\n                        {\n                            /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                            revert(_2, _2)\n                        }\n                        /// @src 95:17573:17633  \"IBridgingPayment(bridgingPayment).payFee{value: msg.value}()\"\n                        let _54 := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ mload(64)\n                        /// @src 95:17573:17633  \"IBridgingPayment(bridgingPayment).payFee{value: msg.value}()\"\n                        mstore(_54, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ shl(225, 0x14b08129))\n                        /// @src 95:17573:17633  \"IBridgingPayment(bridgingPayment).payFee{value: msg.value}()\"\n                        let _55 := call(gas(), _53, /** @src 95:17621:17630  \"msg.value\" */ callvalue(), /** @src 95:17573:17633  \"IBridgingPayment(bridgingPayment).payFee{value: msg.value}()\" */ _54, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 4, /** @src 95:17573:17633  \"IBridgingPayment(bridgingPayment).payFee{value: msg.value}()\" */ _54, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2)\n                        /// @src 95:17573:17633  \"IBridgingPayment(bridgingPayment).payFee{value: msg.value}()\"\n                        if iszero(_55)\n                        {\n                            /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                            let pos_9 := mload(64)\n                            returndatacopy(pos_9, _2, returndatasize())\n                            revert(pos_9, returndatasize())\n                        }\n                        /// @src 95:17573:17633  \"IBridgingPayment(bridgingPayment).payFee{value: msg.value}()\"\n                        if _55\n                        {\n                            finalize_allocation(_54, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2)\n                            if _2 { revert(_2, _2) }\n                        }\n                        /// @src 30:1944:2016  \"modifier whenNotPaused() {...\"\n                        fun_requireNotPaused()\n                        /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                        let _56 := and(/** @src 95:16408:16427  \"IERC20Permit(token)\" */ value0_7, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1))\n                        /// @src 95:16408:16488  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\"\n                        if iszero(extcodesize(_56))\n                        {\n                            /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                            revert(_2, _2)\n                        }\n                        /// @src 95:16408:16488  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\"\n                        let _57 := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ mload(64)\n                        /// @src 95:16408:16488  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\"\n                        mstore(_57, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ shl(224, 0xd505accf))\n                        mstore(/** @src 95:16408:16488  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\" */ add(_57, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 4), /** @src 95:16435:16445  \"msg.sender\" */ caller())\n                        /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                        mstore(add(/** @src 95:16408:16488  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\" */ _57, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 36), /** @src 95:16455:16459  \"this\" */ address())\n                        /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                        mstore(add(/** @src 95:16408:16488  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\" */ _57, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 68), value_14)\n                        mstore(add(/** @src 95:16408:16488  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\" */ _57, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 100), calldataload(100))\n                        mstore(add(/** @src 95:16408:16488  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\" */ _57, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 132), and(value4_1, 0xff))\n                        mstore(add(/** @src 95:16408:16488  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\" */ _57, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 164), calldataload(164))\n                        mstore(add(/** @src 95:16408:16488  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\" */ _57, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 196), calldataload(196))\n                        /// @src 95:16408:16488  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\"\n                        if call(gas(), _56, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2, /** @src 95:16408:16488  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\" */ _57, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 228, /** @src 95:16408:16488  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\" */ _57, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2)\n                        /// @src 95:16408:16488  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\"\n                        {\n                            finalize_allocation(_57, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2)\n                            if _2 { revert(_2, _2) }\n                        }\n                        /// @src 30:1944:2016  \"modifier whenNotPaused() {...\"\n                        fun_requireNotPaused()\n                        /// @src 95:14431:14495  \"if (amount == 0) {...\"\n                        if /** @src 95:14435:14446  \"amount == 0\" */ iszero(value_14)\n                        /// @src 95:14431:14495  \"if (amount == 0) {...\"\n                        {\n                            /// @src 95:14469:14484  \"InvalidAmount()\"\n                            mstore(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2, /** @src 95:14469:14484  \"InvalidAmount()\" */ shl(225, 0x162908e3))\n                            revert(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2, 4)\n                        }\n                        /// @src 95:14531:14552  \"_tokens.tryGet(token)\"\n                        let expr_component_9, expr_component_10 := fun_tryGet_23025(value0_7)\n                        /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                        let _58 := iszero(lt(expr_component_10, 3))\n                        if _58\n                        {\n                            mstore(_2, shl(224, 0x4e487b71))\n                            mstore(4, 0x21)\n                            revert(_2, 36)\n                        }\n                        /// @src 95:14563:14896  \"if (tokenType == TokenType.Unknown) {...\"\n                        switch /** @src 95:14567:14597  \"tokenType == TokenType.Unknown\" */ iszero(expr_component_10)\n                        case /** @src 95:14563:14896  \"if (tokenType == TokenType.Unknown) {...\" */ 0 {\n                            /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                            _58 := /** @src -1:-1:-1 */ _2\n                            /// @src 95:14655:14896  \"if (tokenType == TokenType.Ethereum) {...\"\n                            switch /** @src 95:14659:14690  \"tokenType == TokenType.Ethereum\" */ eq(expr_component_10, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 1)\n                            case /** @src 95:14655:14896  \"if (tokenType == TokenType.Ethereum) {...\" */ 0 {\n                                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                                _58 := /** @src -1:-1:-1 */ _2\n                                /// @src 95:14788:14896  \"if (tokenType == TokenType.Gear) {...\"\n                                if /** @src 95:14792:14819  \"tokenType == TokenType.Gear\" */ eq(expr_component_10, /** @src 95:14805:14819  \"TokenType.Gear\" */ 2)\n                                /// @src 95:14788:14896  \"if (tokenType == TokenType.Gear) {...\"\n                                {\n                                    /// @src 95:14835:14885  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    if iszero(extcodesize(_56))\n                                    {\n                                        /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                                        revert(_2, _2)\n                                    }\n                                    /// @src 95:14835:14885  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    let _59 := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ mload(64)\n                                    /// @src 95:14835:14885  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    mstore(_59, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ shl(228, 0x079cc679))\n                                    /// @src 95:14835:14885  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    let _60 := call(gas(), _56, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2, /** @src 95:14835:14885  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\" */ _59, sub(abi_encode_address_uint256(add(_59, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 4), /** @src 95:16435:16445  \"msg.sender\" */ caller(), /** @src 95:14835:14885  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\" */ value_14), _59), _59, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2)\n                                    /// @src 95:14835:14885  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    if iszero(_60)\n                                    {\n                                        /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                                        let pos_10 := mload(64)\n                                        returndatacopy(pos_10, _2, returndatasize())\n                                        revert(pos_10, returndatasize())\n                                    }\n                                    /// @src 95:14835:14885  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    if _60\n                                    {\n                                        finalize_allocation(_59, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2)\n                                        if _2 { revert(_2, _2) }\n                                    }\n                                }\n                            }\n                            default /// @src 95:14655:14896  \"if (tokenType == TokenType.Ethereum) {...\"\n                            {\n                                /// @src 56:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                                let expr_mpos_3 := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ mload(64)\n                                /// @src 56:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                                mstore(add(expr_mpos_3, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 32), shl(224, 0x23b872dd))\n                                mstore(/** @src 56:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\" */ add(expr_mpos_3, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 36), /** @src 95:16435:16445  \"msg.sender\" */ caller())\n                                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                                mstore(add(/** @src 56:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\" */ expr_mpos_3, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 68), /** @src 95:16455:16459  \"this\" */ address())\n                                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                                mstore(add(/** @src 56:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\" */ expr_mpos_3, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 100), value_14)\n                                /// @src 56:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                                mstore(expr_mpos_3, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 100)\n                                /// @src 56:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                                finalize_allocation(expr_mpos_3, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 132)\n                                /// @src 56:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                                fun_callOptionalReturn(_56, expr_mpos_3)\n                            }\n                        }\n                        default /// @src 95:14563:14896  \"if (tokenType == TokenType.Unknown) {...\"\n                        {\n                            /// @src 95:14620:14638  \"InvalidTokenType()\"\n                            mstore(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2, /** @src 95:14620:14638  \"InvalidTokenType()\" */ shl(224, 0xa1e9dd9d))\n                            revert(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2, 4)\n                        }\n                        /// @src 95:14911:14959  \"BridgingRequested(msg.sender, to, token, amount)\"\n                        let _61 := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ mload(64)\n                        mstore(_61, value_14)\n                        /// @src 95:14911:14959  \"BridgingRequested(msg.sender, to, token, amount)\"\n                        log4(_61, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 32, /** @src 95:14911:14959  \"BridgingRequested(msg.sender, to, token, amount)\" */ 0xf80de57fd7626baaff7d867494866703686569822c2326ae60b2515ede953c3a, /** @src 95:16435:16445  \"msg.sender\" */ caller(), /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ calldataload(68), /** @src 95:14911:14959  \"BridgingRequested(msg.sender, to, token, amount)\" */ _56)\n                        /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                        return(_2, _2)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_decode_t_address() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_encode_array_address_dyn(headStart, value0) -> tail\n            {\n                let tail_1 := add(headStart, 32)\n                mstore(headStart, 32)\n                let pos := tail_1\n                let length := mload(value0)\n                mstore(tail_1, length)\n                pos := add(headStart, 64)\n                let srcPtr := add(value0, 32)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n                    pos := add(pos, 32)\n                    srcPtr := add(srcPtr, 32)\n                }\n                tail := pos\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function array_allocation_size_bytes(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                size := add(and(add(length, 31), not(31)), 0x20)\n            }\n            function abi_decode_uint8() -> value\n            {\n                value := calldataload(132)\n                if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n            }\n            function array_allocation_size_array_struct_TokenInfo_dyn(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                size := add(shl(5, length), 0x20)\n            }\n            function abi_encode_array_bytes32_dyn(headStart, value0) -> tail\n            {\n                let tail_1 := add(headStart, 32)\n                mstore(headStart, 32)\n                let pos := tail_1\n                let length := mload(value0)\n                mstore(tail_1, length)\n                pos := add(headStart, 64)\n                let srcPtr := add(value0, 32)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, mload(srcPtr))\n                    pos := add(pos, 32)\n                    srcPtr := add(srcPtr, 32)\n                }\n                tail := pos\n            }\n            function abi_decode_uint256t_uint256(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                value0 := calldataload(4)\n                value1 := calldataload(36)\n            }\n            function abi_encode_string(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                mcopy(add(pos, 0x20), add(value, 0x20), length)\n                mstore(add(add(pos, length), 0x20), /** @src -1:-1:-1 */ 0)\n                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            /// @ast-id 39872 @src 20:4807:4998  \"function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {...\"\n            function fun_getRoleAdmin(var_role) -> var\n            {\n                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ var_role)\n                mstore(0x20, /** @src 20:2968:3039  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                /// @src 20:4960:4991  \"return $._roles[role].adminRole\"\n                var := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ sload(/** @src 20:4967:4991  \"$._roles[role].adminRole\" */ add(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0x40), /** @src 20:4967:4991  \"$._roles[role].adminRole\" */ 1))\n            }\n            /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n            function memory_array_index_access_struct_TokenInfo_dyn(baseRef, index) -> addr\n            {\n                if iszero(lt(index, mload(baseRef)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                addr := add(add(baseRef, shl(5, index)), 32)\n            }\n            function abi_encode_address_uint256(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                mstore(add(headStart, 32), value1)\n            }\n            /// @ast-id 41861 @src 30:2709:2837  \"function _requireNotPaused() internal view virtual {...\"\n            function fun_requireNotPaused()\n            {\n                /// @src 30:2770:2831  \"if (paused()) {...\"\n                if /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ and(sload(/** @src 30:1237:1303  \"assembly {...\" */ 92891662540554778686986514950364265630913525426840345632122912437671245656832), /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0xff)\n                /// @src 30:2770:2831  \"if (paused()) {...\"\n                {\n                    /// @src 30:2805:2820  \"EnforcedPause()\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 30:2805:2820  \"EnforcedPause()\" */ shl(224, 0xd93c0665))\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 30:2805:2820  \"EnforcedPause()\" */ 4)\n                }\n            }\n            /// @ast-id 39830 @src 20:4196:4299  \"function _checkRole(bytes32 role) internal view virtual {...\"\n            function fun__checkRole()\n            {\n                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 95:5528:5532  \"0x01\" */ 0x01)\n                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                mstore(0x20, /** @src 20:2968:3039  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0x40)\n                /// @src 20:3949:3980  \"$._roles[role].hasRole[account]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ and(/** @src 28:966:976  \"msg.sender\" */ caller(), /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 20:3949:3963  \"$._roles[role]\" */ dataSlot)\n                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0x40)\n                /// @src 20:4512:4620  \"if (!hasRole(role, account)) {...\"\n                if /** @src 20:4516:4539  \"!hasRole(role, account)\" */ iszero(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ and(sload(/** @src 20:3949:3980  \"$._roles[role].hasRole[account]\" */ dataSlot_1), /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0xff))\n                /// @src 20:4512:4620  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 20:4562:4609  \"AccessControlUnauthorizedAccount(account, role)\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 20:4562:4609  \"AccessControlUnauthorizedAccount(account, role)\" */ shl(224, 0xe2517d3f))\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    mstore(/** @src 20:4562:4609  \"AccessControlUnauthorizedAccount(account, role)\" */ 4, /** @src 28:966:976  \"msg.sender\" */ caller())\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    mstore(36, /** @src 95:5528:5532  \"0x01\" */ 0x01)\n                    /// @src 20:4562:4609  \"AccessControlUnauthorizedAccount(account, role)\"\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 68)\n                }\n            }\n            /// @ast-id 39830 @src 20:4196:4299  \"function _checkRole(bytes32 role) internal view virtual {...\"\n            function fun_checkRole(var_role)\n            {\n                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ var_role)\n                mstore(0x20, /** @src 20:2968:3039  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0x40)\n                /// @src 20:3949:3980  \"$._roles[role].hasRole[account]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ and(/** @src 28:966:976  \"msg.sender\" */ caller(), /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 20:3949:3963  \"$._roles[role]\" */ dataSlot)\n                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0x40)\n                /// @src 20:4512:4620  \"if (!hasRole(role, account)) {...\"\n                if /** @src 20:4516:4539  \"!hasRole(role, account)\" */ iszero(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ and(sload(/** @src 20:3949:3980  \"$._roles[role].hasRole[account]\" */ dataSlot_1), /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0xff))\n                /// @src 20:4512:4620  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 20:4562:4609  \"AccessControlUnauthorizedAccount(account, role)\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 20:4562:4609  \"AccessControlUnauthorizedAccount(account, role)\" */ shl(224, 0xe2517d3f))\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    mstore(/** @src 20:4562:4609  \"AccessControlUnauthorizedAccount(account, role)\" */ 4, /** @src 28:966:976  \"msg.sender\" */ caller())\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    mstore(36, var_role)\n                    /// @src 20:4562:4609  \"AccessControlUnauthorizedAccount(account, role)\"\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 68)\n                }\n            }\n            /// @ast-id 40016 @src 20:7318:7705  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n            function fun__grantRole(var_account) -> var\n            {\n                /// @src 20:7395:7399  \"bool\"\n                var := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0\n                mstore(0, 0)\n                mstore(0x20, /** @src 20:2968:3039  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                let dataSlot := keccak256(0, 0x40)\n                /// @src 20:3949:3980  \"$._roles[role].hasRole[account]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ and(/** @src 20:7485:7507  \"hasRole(role, account)\" */ var_account, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 20:3949:3963  \"$._roles[role]\" */ dataSlot)\n                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0x40)\n                /// @src 20:7480:7699  \"if (!hasRole(role, account)) {...\"\n                switch /** @src 20:7484:7507  \"!hasRole(role, account)\" */ iszero(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ and(sload(/** @src 20:3949:3980  \"$._roles[role].hasRole[account]\" */ dataSlot_1), /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0xff))\n                case /** @src 20:7480:7699  \"if (!hasRole(role, account)) {...\" */ 0 {\n                    /// @src 20:7676:7688  \"return false\"\n                    var := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0\n                    /// @src 20:7676:7688  \"return false\"\n                    leave\n                }\n                default /// @src 20:7480:7699  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    mstore(0, 0)\n                    mstore(0x20, /** @src 20:2968:3039  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    let dataSlot_2 := keccak256(0, 0x40)\n                    /// @src 20:7523:7554  \"$._roles[role].hasRole[account]\"\n                    let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ and(/** @src 20:7523:7554  \"$._roles[role].hasRole[account]\" */ var_account, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)))\n                    mstore(0x20, /** @src 20:7523:7537  \"$._roles[role]\" */ dataSlot_2)\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0x40)\n                    sstore(/** @src 20:7523:7554  \"$._roles[role].hasRole[account]\" */ dataSlot_3, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ or(and(sload(/** @src 20:7523:7554  \"$._roles[role].hasRole[account]\" */ dataSlot_3), /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ not(255)), /** @src 20:7557:7561  \"true\" */ 0x01))\n                    /// @src 20:7580:7620  \"RoleGranted(role, account, _msgSender())\"\n                    log4(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0, 0, /** @src 20:7580:7620  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0, and(/** @src 20:7580:7620  \"RoleGranted(role, account, _msgSender())\" */ var_account, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)), /** @src 28:966:976  \"msg.sender\" */ caller())\n                    /// @src 20:7634:7645  \"return true\"\n                    var := /** @src 20:7557:7561  \"true\" */ 0x01\n                    /// @src 20:7634:7645  \"return true\"\n                    leave\n                }\n            }\n            /// @ast-id 40016 @src 20:7318:7705  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n            function fun_grantRole(var_account) -> var\n            {\n                /// @src 20:7395:7399  \"bool\"\n                var := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0\n                mstore(0, /** @src 22:4803:4804  \"1\" */ 0x01)\n                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                mstore(0x20, /** @src 20:2968:3039  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                let dataSlot := keccak256(0, 0x40)\n                /// @src 20:3949:3980  \"$._roles[role].hasRole[account]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ and(/** @src 20:7485:7507  \"hasRole(role, account)\" */ var_account, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 20:3949:3963  \"$._roles[role]\" */ dataSlot)\n                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0x40)\n                /// @src 20:7480:7699  \"if (!hasRole(role, account)) {...\"\n                switch /** @src 20:7484:7507  \"!hasRole(role, account)\" */ iszero(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ and(sload(/** @src 20:3949:3980  \"$._roles[role].hasRole[account]\" */ dataSlot_1), /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0xff))\n                case /** @src 20:7480:7699  \"if (!hasRole(role, account)) {...\" */ 0 {\n                    /// @src 20:7676:7688  \"return false\"\n                    var := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0\n                    /// @src 20:7676:7688  \"return false\"\n                    leave\n                }\n                default /// @src 20:7480:7699  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    mstore(0, /** @src 22:4803:4804  \"1\" */ 0x01)\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    mstore(0x20, /** @src 20:2968:3039  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    let dataSlot_2 := keccak256(0, 0x40)\n                    /// @src 20:7523:7554  \"$._roles[role].hasRole[account]\"\n                    let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ and(/** @src 20:7523:7554  \"$._roles[role].hasRole[account]\" */ var_account, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)))\n                    mstore(0x20, /** @src 20:7523:7537  \"$._roles[role]\" */ dataSlot_2)\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0x40)\n                    sstore(/** @src 20:7523:7554  \"$._roles[role].hasRole[account]\" */ dataSlot_3, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ or(and(sload(/** @src 20:7523:7554  \"$._roles[role].hasRole[account]\" */ dataSlot_3), /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ not(255)), /** @src 22:4803:4804  \"1\" */ 0x01))\n                    /// @src 20:7580:7620  \"RoleGranted(role, account, _msgSender())\"\n                    log4(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0, 0, /** @src 20:7580:7620  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, /** @src 22:4803:4804  \"1\" */ 0x01, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ and(/** @src 20:7580:7620  \"RoleGranted(role, account, _msgSender())\" */ var_account, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)), /** @src 28:966:976  \"msg.sender\" */ caller())\n                    /// @src 20:7634:7645  \"return true\"\n                    var := /** @src 22:4803:4804  \"1\" */ 0x01\n                    /// @src 20:7634:7645  \"return true\"\n                    leave\n                }\n            }\n            /// @ast-id 40016 @src 20:7318:7705  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n            function fun_grantRole_40016(var_role, var_account) -> var_\n            {\n                /// @src 20:7395:7399  \"bool\"\n                var_ := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0\n                mstore(0, var_role)\n                mstore(0x20, /** @src 20:2968:3039  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                let dataSlot := keccak256(0, 0x40)\n                /// @src 20:3949:3980  \"$._roles[role].hasRole[account]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ and(/** @src 20:7485:7507  \"hasRole(role, account)\" */ var_account, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 20:3949:3963  \"$._roles[role]\" */ dataSlot)\n                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0x40)\n                /// @src 20:7480:7699  \"if (!hasRole(role, account)) {...\"\n                switch /** @src 20:7484:7507  \"!hasRole(role, account)\" */ iszero(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ and(sload(/** @src 20:3949:3980  \"$._roles[role].hasRole[account]\" */ dataSlot_1), /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0xff))\n                case /** @src 20:7480:7699  \"if (!hasRole(role, account)) {...\" */ 0 {\n                    /// @src 20:7676:7688  \"return false\"\n                    var_ := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0\n                    /// @src 20:7676:7688  \"return false\"\n                    leave\n                }\n                default /// @src 20:7480:7699  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    mstore(0, var_role)\n                    mstore(0x20, /** @src 20:2968:3039  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    let dataSlot_2 := keccak256(0, 0x40)\n                    /// @src 20:7523:7554  \"$._roles[role].hasRole[account]\"\n                    let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ and(/** @src 20:7523:7554  \"$._roles[role].hasRole[account]\" */ var_account, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)))\n                    mstore(0x20, /** @src 20:7523:7537  \"$._roles[role]\" */ dataSlot_2)\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0x40)\n                    sstore(/** @src 20:7523:7554  \"$._roles[role].hasRole[account]\" */ dataSlot_3, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ or(and(sload(/** @src 20:7523:7554  \"$._roles[role].hasRole[account]\" */ dataSlot_3), /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ not(255)), /** @src 20:7557:7561  \"true\" */ 0x01))\n                    /// @src 20:7580:7620  \"RoleGranted(role, account, _msgSender())\"\n                    log4(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0, 0, /** @src 20:7580:7620  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, var_role, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ and(/** @src 20:7580:7620  \"RoleGranted(role, account, _msgSender())\" */ var_account, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)), /** @src 28:966:976  \"msg.sender\" */ caller())\n                    /// @src 20:7634:7645  \"return true\"\n                    var_ := /** @src 20:7557:7561  \"true\" */ 0x01\n                    /// @src 20:7634:7645  \"return true\"\n                    leave\n                }\n            }\n            /// @src 95:3769:3771  \"32\"\n            function checked_add_uint256(x, y) -> sum\n            {\n                sum := add(x, y)\n                if gt(x, sum)\n                {\n                    mstore(0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ shl(224, 0x4e487b71))\n                    /// @src 95:3769:3771  \"32\"\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            /// @src 95:4884:4961  \"DISCRIMINANT_SIZE + TOKEN_NAME_SIZE + TOKEN_SYMBOL_SIZE + TOKEN_DECIMALS_SIZE\"\n            function abi_encode_address_string_string_uint8(headStart, value0, value1, value2, value3) -> tail\n            {\n                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                /// @src 95:4884:4961  \"DISCRIMINANT_SIZE + TOKEN_NAME_SIZE + TOKEN_SYMBOL_SIZE + TOKEN_DECIMALS_SIZE\"\n                mstore(add(headStart, 32), 128)\n                let tail_1 := abi_encode_string(value1, add(headStart, 128))\n                mstore(add(headStart, 64), sub(tail_1, headStart))\n                tail := abi_encode_string(value2, tail_1)\n                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                mstore(/** @src 95:4884:4961  \"DISCRIMINANT_SIZE + TOKEN_NAME_SIZE + TOKEN_SYMBOL_SIZE + TOKEN_DECIMALS_SIZE\" */ add(headStart, 96), /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ and(value3, 0xff))\n            }\n            /// @ast-id 62963 @src 95:22151:25942  \"function _tryParseAndApplyGovernanceMessage(bytes calldata payload) private returns (bool) {...\"\n            function fun_tryParseAndApplyGovernanceMessage(var_payload_offset, var_payload_62741_length) -> var\n            {\n                /// @src 95:22236:22240  \"bool\"\n                var := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0\n                /// @src 95:22252:22316  \"if (!(payload.length > 0)) {...\"\n                if /** @src 95:22258:22276  \"payload.length > 0\" */ iszero(var_payload_62741_length)\n                /// @src 95:22252:22316  \"if (!(payload.length > 0)) {...\"\n                {\n                    /// @src 95:22293:22305  \"return false\"\n                    var := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0\n                    /// @src 95:22293:22305  \"return false\"\n                    leave\n                }\n                /// @src 95:22356:22606  \"assembly (\\\"memory-safe\\\") {...\"\n                let var_discriminant := shr(248, calldataload(var_payload_offset))\n                /// @src 95:22616:22736  \"if (!(discriminant >= ADD_VFT_MANAGER && discriminant <= uint256(TokenType.Gear))) {...\"\n                if /** @src 95:22657:22696  \"discriminant <= uint256(TokenType.Gear)\" */ gt(var_discriminant, /** @src 95:22681:22695  \"TokenType.Gear\" */ 2)\n                /// @src 95:22616:22736  \"if (!(discriminant >= ADD_VFT_MANAGER && discriminant <= uint256(TokenType.Gear))) {...\"\n                {\n                    /// @src 95:22713:22725  \"return false\"\n                    var := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0\n                    /// @src 95:22713:22725  \"return false\"\n                    leave\n                }\n                /// @src 95:22746:23270  \"if (discriminant == ADD_VFT_MANAGER) {...\"\n                if /** @src 95:22750:22781  \"discriminant == ADD_VFT_MANAGER\" */ iszero(var_discriminant)\n                /// @src 95:22746:23270  \"if (discriminant == ADD_VFT_MANAGER) {...\"\n                {\n                    /// @src 95:22797:22897  \"if (!(payload.length == ADD_VFT_MANAGER_MESSAGE_SIZE)) {...\"\n                    if /** @src 95:22801:22850  \"!(payload.length == ADD_VFT_MANAGER_MESSAGE_SIZE)\" */ iszero(/** @src 95:22803:22849  \"payload.length == ADD_VFT_MANAGER_MESSAGE_SIZE\" */ eq(var_payload_62741_length, /** @src 95:3769:3771  \"32\" */ 33))\n                    /// @src 95:22797:22897  \"if (!(payload.length == ADD_VFT_MANAGER_MESSAGE_SIZE)) {...\"\n                    {\n                        /// @src 95:22870:22882  \"return false\"\n                        var := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0\n                        /// @src 95:22870:22882  \"return false\"\n                        leave\n                    }\n                    /// @src 95:23031:23144  \"assembly (\\\"memory-safe\\\") {...\"\n                    let var_vftManager := calldataload(add(var_payload_offset, /** @src 95:22622:22653  \"discriminant >= ADD_VFT_MANAGER\" */ 1))\n                    /// @src 77:7898:7921  \"_add(set._inner, value)\"\n                    pop(fun_add_23044(/** @src 95:23158:23186  \"_vftManagers.add(vftManager)\" */ var_vftManager))\n                    /// @src 95:23206:23233  \"VftManagerAdded(vftManager)\"\n                    let _1 := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ mload(64)\n                    mstore(_1, var_vftManager)\n                    /// @src 95:23206:23233  \"VftManagerAdded(vftManager)\"\n                    log1(_1, /** @src 95:3769:3771  \"32\" */ 0x20, /** @src 95:23206:23233  \"VftManagerAdded(vftManager)\" */ 0xc6b4ec1bc7a17331ef296e0810039347563e90c3fa496b4de270f6c5ff345abe)\n                    /// @src 95:23248:23259  \"return true\"\n                    var := /** @src 95:22622:22653  \"discriminant >= ADD_VFT_MANAGER\" */ 1\n                    /// @src 95:23248:23259  \"return true\"\n                    leave\n                }\n                /// @src 95:23280:23992  \"if (discriminant == uint256(TokenType.Ethereum)) {...\"\n                if /** @src 95:23284:23327  \"discriminant == uint256(TokenType.Ethereum)\" */ eq(var_discriminant, /** @src 95:22622:22653  \"discriminant >= ADD_VFT_MANAGER\" */ 1)\n                /// @src 95:23280:23992  \"if (discriminant == uint256(TokenType.Ethereum)) {...\"\n                {\n                    /// @src 95:23343:23451  \"if (!(payload.length == REGISTER_ETHEREUM_TOKEN_MESSAGE_SIZE)) {...\"\n                    if /** @src 95:23347:23404  \"!(payload.length == REGISTER_ETHEREUM_TOKEN_MESSAGE_SIZE)\" */ iszero(/** @src 95:23349:23403  \"payload.length == REGISTER_ETHEREUM_TOKEN_MESSAGE_SIZE\" */ eq(var_payload_62741_length, /** @src 95:3769:3771  \"32\" */ 21))\n                    /// @src 95:23343:23451  \"if (!(payload.length == REGISTER_ETHEREUM_TOKEN_MESSAGE_SIZE)) {...\"\n                    {\n                        /// @src 95:23424:23436  \"return false\"\n                        var := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0\n                        /// @src 95:23424:23436  \"return false\"\n                        leave\n                    }\n                    /// @src 95:23580:23853  \"assembly (\\\"memory-safe\\\") {...\"\n                    let var_token := shr(96, calldataload(add(var_payload_offset, /** @src 95:22622:22653  \"discriminant >= ADD_VFT_MANAGER\" */ 1)))\n                    /// @src 95:23867:23905  \"_tokens.set(token, TokenType.Ethereum)\"\n                    pop(fun_set_23163(var_token))\n                    /// @src 95:23925:23955  \"EthereumTokenRegistered(token)\"\n                    let _2 := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ mload(64)\n                    mstore(_2, var_token)\n                    /// @src 95:23925:23955  \"EthereumTokenRegistered(token)\"\n                    log1(_2, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 32, /** @src 95:23925:23955  \"EthereumTokenRegistered(token)\" */ 0xdf6d7b91d41cb55ced11681822028e1605f72d50168b3898feb40ee04259d182)\n                    /// @src 95:23970:23981  \"return true\"\n                    var := /** @src 95:22622:22653  \"discriminant >= ADD_VFT_MANAGER\" */ 1\n                    /// @src 95:23970:23981  \"return true\"\n                    leave\n                }\n                /// @src 95:24088:24184  \"if (!(payload.length == REGISTER_GEAR_TOKEN_MESSAGE_SIZE)) {...\"\n                if /** @src 95:24092:24145  \"!(payload.length == REGISTER_GEAR_TOKEN_MESSAGE_SIZE)\" */ iszero(/** @src 95:24094:24144  \"payload.length == REGISTER_GEAR_TOKEN_MESSAGE_SIZE\" */ eq(var_payload_62741_length, /** @src 95:3769:3771  \"32\" */ 66))\n                /// @src 95:24088:24184  \"if (!(payload.length == REGISTER_GEAR_TOKEN_MESSAGE_SIZE)) {...\"\n                {\n                    /// @src 95:24161:24173  \"return false\"\n                    var := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0\n                    /// @src 95:24161:24173  \"return false\"\n                    leave\n                }\n                /// @src 95:24659:25138  \"assembly (\\\"memory-safe\\\") {...\"\n                let var_tokenName := calldataload(add(var_payload_offset, /** @src 95:22622:22653  \"discriminant >= ADD_VFT_MANAGER\" */ 1))\n                /// @src 95:24659:25138  \"assembly (\\\"memory-safe\\\") {...\"\n                let var_tokenSymbol := calldataload(add(var_payload_offset, /** @src 95:3769:3771  \"32\" */ 33))\n                /// @src 95:24659:25138  \"assembly (\\\"memory-safe\\\") {...\"\n                let var_tokenDecimals := shr(/** @src 95:22356:22606  \"assembly (\\\"memory-safe\\\") {...\" */ 248, /** @src 95:24659:25138  \"assembly (\\\"memory-safe\\\") {...\" */ calldataload(add(var_payload_offset, /** @src 95:3769:3771  \"32\" */ 65)))\n                /// @src 95:25178:25190  \"tokenName[0]\"\n                let _3 := byte(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0, /** @src 95:25178:25190  \"tokenName[0]\" */ var_tokenName)\n                /// @src 95:25207:25252  \"tokenNameLength >= 1 && tokenNameLength <= 31\"\n                let expr := /** @src 95:25207:25227  \"tokenNameLength >= 1\" */ iszero(lt(_3, /** @src 95:22622:22653  \"discriminant >= ADD_VFT_MANAGER\" */ 1))\n                /// @src 95:25207:25252  \"tokenNameLength >= 1 && tokenNameLength <= 31\"\n                if expr\n                {\n                    expr := /** @src 95:25231:25252  \"tokenNameLength <= 31\" */ iszero(gt(_3, /** @src 95:25250:25252  \"31\" */ 0x1f))\n                }\n                /// @src 95:25201:25292  \"if (!(tokenNameLength >= 1 && tokenNameLength <= 31)) {...\"\n                if /** @src 95:25205:25253  \"!(tokenNameLength >= 1 && tokenNameLength <= 31)\" */ iszero(expr)\n                /// @src 95:25201:25292  \"if (!(tokenNameLength >= 1 && tokenNameLength <= 31)) {...\"\n                {\n                    /// @src 95:25269:25281  \"return false\"\n                    var := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0\n                    /// @src 95:25269:25281  \"return false\"\n                    leave\n                }\n                /// @src 95:25334:25348  \"tokenSymbol[0]\"\n                let _4 := byte(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0, /** @src 95:25334:25348  \"tokenSymbol[0]\" */ var_tokenSymbol)\n                /// @src 95:25365:25414  \"tokenSymbolLength >= 1 && tokenSymbolLength <= 31\"\n                let expr_1 := /** @src 95:25365:25387  \"tokenSymbolLength >= 1\" */ iszero(lt(_4, /** @src 95:22622:22653  \"discriminant >= ADD_VFT_MANAGER\" */ 1))\n                /// @src 95:25365:25414  \"tokenSymbolLength >= 1 && tokenSymbolLength <= 31\"\n                if expr_1\n                {\n                    expr_1 := /** @src 95:25391:25414  \"tokenSymbolLength <= 31\" */ iszero(gt(_4, /** @src 95:25412:25414  \"31\" */ 0x1f))\n                }\n                /// @src 95:25359:25454  \"if (!(tokenSymbolLength >= 1 && tokenSymbolLength <= 31)) {...\"\n                if /** @src 95:25363:25415  \"!(tokenSymbolLength >= 1 && tokenSymbolLength <= 31)\" */ iszero(expr_1)\n                /// @src 95:25359:25454  \"if (!(tokenSymbolLength >= 1 && tokenSymbolLength <= 31)) {...\"\n                {\n                    /// @src 95:25431:25443  \"return false\"\n                    var := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0\n                    /// @src 95:25431:25443  \"return false\"\n                    leave\n                }\n                /// @src 95:25493:25523  \"LibString.unpackOne(tokenName)\"\n                let expr_62914_mpos := fun_unpackOne(var_tokenName)\n                /// @src 95:25564:25596  \"LibString.unpackOne(tokenSymbol)\"\n                let expr_62921_mpos := fun_unpackOne(var_tokenSymbol)\n                /// @src 95:25636:25715  \"new ERC20GearSupply(address(this), tokenNameStr, tokenSymbolStr, tokenDecimals)\"\n                let _5 := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ mload(64)\n                /// @src 95:25636:25715  \"new ERC20GearSupply(address(this), tokenNameStr, tokenSymbolStr, tokenDecimals)\"\n                let _6 := datasize(\"ERC20GearSupply_65079\")\n                let _7 := add(_5, _6)\n                if or(gt(_7, 0xffffffffffffffff), lt(_7, _5))\n                {\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, /** @src 95:3769:3771  \"32\" */ 65)\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    revert(0, 0x24)\n                }\n                /// @src 95:25636:25715  \"new ERC20GearSupply(address(this), tokenNameStr, tokenSymbolStr, tokenDecimals)\"\n                datacopy(_5, dataoffset(\"ERC20GearSupply_65079\"), _6)\n                let expr_address := create(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0, /** @src 95:25636:25715  \"new ERC20GearSupply(address(this), tokenNameStr, tokenSymbolStr, tokenDecimals)\" */ _5, sub(abi_encode_address_string_string_uint8(_7, /** @src 95:25664:25668  \"this\" */ address(), /** @src 95:25636:25715  \"new ERC20GearSupply(address(this), tokenNameStr, tokenSymbolStr, tokenDecimals)\" */ expr_62914_mpos, expr_62921_mpos, var_tokenDecimals), _5))\n                if iszero(expr_address)\n                {\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    let pos := mload(64)\n                    returndatacopy(pos, 0, returndatasize())\n                    revert(pos, returndatasize())\n                }\n                let _8 := and(/** @src 95:25748:25767  \"address(gearSupply)\" */ expr_address, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1))\n                /// @src 95:25778:25819  \"_tokens.set(tokenAddress, TokenType.Gear)\"\n                pop(fun_set_23164(_8))\n                /// @src 95:25835:25913  \"GearTokenRegistered(tokenAddress, tokenNameStr, tokenSymbolStr, tokenDecimals)\"\n                let _9 := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ mload(64)\n                /// @src 95:25835:25913  \"GearTokenRegistered(tokenAddress, tokenNameStr, tokenSymbolStr, tokenDecimals)\"\n                log1(_9, sub(abi_encode_address_string_string_uint8(_9, _8, expr_62914_mpos, expr_62921_mpos, var_tokenDecimals), _9), 0xacef1c6c805d7395b4aeee279bc679beea84f01a1f1b08be7aef2af535bba81f)\n                /// @src 95:25924:25935  \"return true\"\n                var := /** @src 95:22622:22653  \"discriminant >= ADD_VFT_MANAGER\" */ 1\n            }\n            /// @ast-id 62738 @src 95:19668:21067  \"function _tryParseAndApplyTransferMessage(bytes calldata payload) private returns (bool) {...\"\n            function fun_tryParseAndApplyTransferMessage(var_payload_62655_offset, var_payload_length) -> var\n            {\n                /// @src 95:19751:19755  \"bool\"\n                let var_1 := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0\n                /// @src 95:19751:19755  \"bool\"\n                var := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0\n                /// @src 95:19767:19852  \"if (!(payload.length == TRANSFER_MESSAGE_SIZE)) {...\"\n                if /** @src 95:19771:19813  \"!(payload.length == TRANSFER_MESSAGE_SIZE)\" */ iszero(/** @src 95:19773:19812  \"payload.length == TRANSFER_MESSAGE_SIZE\" */ eq(var_payload_length, /** @src 95:3769:3771  \"32\" */ 104))\n                /// @src 95:19767:19852  \"if (!(payload.length == TRANSFER_MESSAGE_SIZE)) {...\"\n                {\n                    /// @src 95:19829:19841  \"return false\"\n                    var := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0\n                    /// @src 95:19829:19841  \"return false\"\n                    leave\n                }\n                /// @src 95:20034:20609  \"assembly (\\\"memory-safe\\\") {...\"\n                let var_receiver := shr(96, calldataload(add(var_payload_62655_offset, /** @src 95:3769:3771  \"32\" */ 0x20)))\n                /// @src 95:20034:20609  \"assembly (\\\"memory-safe\\\") {...\"\n                let var_token := shr(96, calldataload(add(var_payload_62655_offset, /** @src 95:3769:3771  \"32\" */ 52)))\n                /// @src 95:20034:20609  \"assembly (\\\"memory-safe\\\") {...\"\n                let var_amount := calldataload(add(var_payload_62655_offset, /** @src 95:3769:3771  \"32\" */ 72))\n                /// @src 95:20645:20666  \"_tokens.tryGet(token)\"\n                let expr_component, expr_component_1 := fun_tryGet_23025(var_token)\n                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                let _1 := iszero(lt(expr_component_1, 3))\n                if _1\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x21)\n                    revert(0, 0x24)\n                }\n                /// @src 95:20677:20983  \"if (tokenType == TokenType.Unknown) {...\"\n                switch /** @src 95:20681:20711  \"tokenType == TokenType.Unknown\" */ iszero(expr_component_1)\n                case /** @src 95:20677:20983  \"if (tokenType == TokenType.Unknown) {...\" */ 0 {\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    _1 := 0\n                    /// @src 95:20769:20983  \"if (tokenType == TokenType.Ethereum) {...\"\n                    switch /** @src 95:20773:20804  \"tokenType == TokenType.Ethereum\" */ eq(expr_component_1, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 1)\n                    case /** @src 95:20769:20983  \"if (tokenType == TokenType.Ethereum) {...\" */ 0 {\n                        /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                        _1 := 0\n                        /// @src 95:20881:20983  \"if (tokenType == TokenType.Gear) {...\"\n                        if /** @src 95:20885:20912  \"tokenType == TokenType.Gear\" */ eq(expr_component_1, /** @src 95:20898:20912  \"TokenType.Gear\" */ 2)\n                        /// @src 95:20881:20983  \"if (tokenType == TokenType.Gear) {...\"\n                        {\n                            /// @src 95:20928:20972  \"IERC20Mintable(token).mint(receiver, amount)\"\n                            if iszero(extcodesize(var_token))\n                            {\n                                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                                revert(0, 0)\n                            }\n                            /// @src 95:20928:20972  \"IERC20Mintable(token).mint(receiver, amount)\"\n                            let _2 := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ mload(64)\n                            /// @src 95:20928:20972  \"IERC20Mintable(token).mint(receiver, amount)\"\n                            mstore(_2, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ shl(224, 0x40c10f19))\n                            /// @src 95:20928:20972  \"IERC20Mintable(token).mint(receiver, amount)\"\n                            let _3 := call(gas(), var_token, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0, /** @src 95:20928:20972  \"IERC20Mintable(token).mint(receiver, amount)\" */ _2, sub(abi_encode_address_uint256(add(_2, 4), var_receiver, var_amount), _2), _2, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0)\n                            /// @src 95:20928:20972  \"IERC20Mintable(token).mint(receiver, amount)\"\n                            if iszero(_3)\n                            {\n                                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                                let pos := mload(64)\n                                returndatacopy(pos, 0, returndatasize())\n                                revert(pos, returndatasize())\n                            }\n                            /// @src 95:20928:20972  \"IERC20Mintable(token).mint(receiver, amount)\"\n                            if _3\n                            {\n                                finalize_allocation(_2, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0)\n                                var_1 := 0\n                            }\n                        }\n                    }\n                    default /// @src 95:20769:20983  \"if (tokenType == TokenType.Ethereum) {...\"\n                    {\n                        /// @src 56:1328:1371  \"abi.encodeCall(token.transfer, (to, value))\"\n                        let expr_mpos := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ mload(64)\n                        /// @src 56:1328:1371  \"abi.encodeCall(token.transfer, (to, value))\"\n                        mstore(add(expr_mpos, /** @src 95:3769:3771  \"32\" */ 0x20), /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ shl(224, 0xa9059cbb))\n                        /// @src 56:1328:1371  \"abi.encodeCall(token.transfer, (to, value))\"\n                        let _4 := sub(abi_encode_address_uint256(add(expr_mpos, 36), var_receiver, var_amount), expr_mpos)\n                        mstore(expr_mpos, add(_4, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ not(31)))\n                        /// @src 56:1328:1371  \"abi.encodeCall(token.transfer, (to, value))\"\n                        finalize_allocation(expr_mpos, _4)\n                        fun_callOptionalReturn(var_token, expr_mpos)\n                    }\n                }\n                default /// @src 95:20677:20983  \"if (tokenType == TokenType.Unknown) {...\"\n                {\n                    /// @src 95:20734:20752  \"InvalidTokenType()\"\n                    mstore(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ var_1, /** @src 95:14620:14638  \"InvalidTokenType()\" */ shl(224, 0xa1e9dd9d))\n                    /// @src 95:20734:20752  \"InvalidTokenType()\"\n                    revert(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ var_1, /** @src 95:20734:20752  \"InvalidTokenType()\" */ 4)\n                }\n                /// @src 95:20998:21038  \"Bridged(sender, receiver, token, amount)\"\n                let _5 := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ mload(64)\n                mstore(_5, var_amount)\n                /// @src 95:20998:21038  \"Bridged(sender, receiver, token, amount)\"\n                log4(_5, /** @src 95:3769:3771  \"32\" */ 0x20, /** @src 95:20998:21038  \"Bridged(sender, receiver, token, amount)\" */ 0xabdd326df16eff74bb67e4a6b3d6372ceba76796f256a7b7f8577108cf5db287, /** @src 95:20034:20609  \"assembly (\\\"memory-safe\\\") {...\" */ calldataload(var_payload_62655_offset), /** @src 95:20998:21038  \"Bridged(sender, receiver, token, amount)\" */ var_receiver, var_token)\n                /// @src 95:21049:21060  \"return true\"\n                var := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 1\n            }\n            /// @ast-id 40062 @src 20:7942:8330  \"function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n            function fun_revokeRole(var_role, var_account) -> var\n            {\n                /// @src 20:8020:8024  \"bool\"\n                var := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0\n                mstore(0, var_role)\n                mstore(0x20, /** @src 20:2968:3039  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                let dataSlot := keccak256(0, 0x40)\n                /// @src 20:3949:3980  \"$._roles[role].hasRole[account]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ and(/** @src 20:8109:8131  \"hasRole(role, account)\" */ var_account, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 20:3949:3963  \"$._roles[role]\" */ dataSlot)\n                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0x40)\n                /// @src 20:8105:8324  \"if (hasRole(role, account)) {...\"\n                switch /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ and(sload(/** @src 20:3949:3980  \"$._roles[role].hasRole[account]\" */ dataSlot_1), /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0xff)\n                case /** @src 20:8105:8324  \"if (hasRole(role, account)) {...\" */ 0 {\n                    /// @src 20:8301:8313  \"return false\"\n                    var := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0\n                    /// @src 20:8301:8313  \"return false\"\n                    leave\n                }\n                default /// @src 20:8105:8324  \"if (hasRole(role, account)) {...\"\n                {\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    mstore(0, var_role)\n                    mstore(0x20, /** @src 20:2968:3039  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    let dataSlot_2 := keccak256(0, 0x40)\n                    /// @src 20:8147:8178  \"$._roles[role].hasRole[account]\"\n                    let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ and(/** @src 20:8147:8178  \"$._roles[role].hasRole[account]\" */ var_account, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)))\n                    mstore(0x20, /** @src 20:8147:8161  \"$._roles[role]\" */ dataSlot_2)\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0x40)\n                    sstore(/** @src 20:8147:8178  \"$._roles[role].hasRole[account]\" */ dataSlot_3, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ and(sload(/** @src 20:8147:8178  \"$._roles[role].hasRole[account]\" */ dataSlot_3), /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ not(255)))\n                    /// @src 20:8205:8245  \"RoleRevoked(role, account, _msgSender())\"\n                    log4(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0, 0, /** @src 20:8205:8245  \"RoleRevoked(role, account, _msgSender())\" */ 0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b, var_role, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ and(/** @src 20:8205:8245  \"RoleRevoked(role, account, _msgSender())\" */ var_account, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)), /** @src 28:966:976  \"msg.sender\" */ caller())\n                    /// @src 20:8259:8270  \"return true\"\n                    var := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 1\n                    /// @src 20:8259:8270  \"return true\"\n                    leave\n                }\n            }\n            /// @ast-id 66477 @src 121:771:1017  \"function set(AddressToTokenTypeMap storage map, address key, IERC20Manager.TokenType value)...\"\n            function fun_set(var_key, var_value) -> var\n            {\n                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                let _1 := and(/** @src 121:970:982  \"uint160(key)\" */ var_key, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1))\n                if iszero(lt(var_value, 3))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x21)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _1)\n                mstore(0x20, /** @src 76:3096:3107  \"map._values\" */ 7)\n                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                sstore(keccak256(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0x40), var_value)\n                /// @src 121:917:1010  \"return EnumerableMap.set(map._inner, bytes32(uint256(uint160(key))), bytes32(uint256(value)))\"\n                var := /** @src 77:7898:7921  \"_add(set._inner, value)\" */ fun_add(/** @src 95:7612:7619  \"_tokens\" */ 0x05, /** @src 76:3137:3155  \"map._keys.add(key)\" */ _1)\n            }\n            /// @ast-id 66477 @src 121:771:1017  \"function set(AddressToTokenTypeMap storage map, address key, IERC20Manager.TokenType value)...\"\n            function fun_set_23163(var_key) -> var\n            {\n                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                let _1 := and(/** @src 121:970:982  \"uint160(key)\" */ var_key, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1))\n                let cleaned := /** @src -1:-1:-1 */ 0\n                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                cleaned := /** @src -1:-1:-1 */ 0\n                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _1)\n                mstore(0x20, /** @src 76:3096:3107  \"map._values\" */ 7)\n                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                sstore(keccak256(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0x40), /** @src 95:23308:23326  \"TokenType.Ethereum\" */ 1)\n                /// @src 121:917:1010  \"return EnumerableMap.set(map._inner, bytes32(uint256(uint160(key))), bytes32(uint256(value)))\"\n                var := /** @src 77:7898:7921  \"_add(set._inner, value)\" */ fun_add(/** @src 95:23867:23874  \"_tokens\" */ 0x05, /** @src 76:3137:3155  \"map._keys.add(key)\" */ _1)\n            }\n            /// @ast-id 66477 @src 121:771:1017  \"function set(AddressToTokenTypeMap storage map, address key, IERC20Manager.TokenType value)...\"\n            function fun_set_23164(var_key) -> var\n            {\n                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                let _1 := and(/** @src 121:970:982  \"uint160(key)\" */ var_key, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1))\n                let cleaned := /** @src -1:-1:-1 */ 0\n                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                cleaned := /** @src -1:-1:-1 */ 0\n                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _1)\n                mstore(0x20, /** @src 76:3096:3107  \"map._values\" */ 7)\n                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                sstore(keccak256(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0x40), /** @src 95:25804:25818  \"TokenType.Gear\" */ 2)\n                /// @src 121:917:1010  \"return EnumerableMap.set(map._inner, bytes32(uint256(uint160(key))), bytes32(uint256(value)))\"\n                var := /** @src 77:7898:7921  \"_add(set._inner, value)\" */ fun_add(/** @src 95:25778:25785  \"_tokens\" */ 0x05, /** @src 76:3137:3155  \"map._keys.add(key)\" */ _1)\n            }\n            /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n            function allocate_and_zero_memory_array_array_bytes32_dyn(length) -> memPtr\n            {\n                let _1 := array_allocation_size_array_struct_TokenInfo_dyn(length)\n                let memPtr_1 := mload(64)\n                finalize_allocation(memPtr_1, _1)\n                mstore(memPtr_1, length)\n                memPtr := memPtr_1\n                calldatacopy(add(memPtr_1, 32), calldatasize(), add(array_allocation_size_array_struct_TokenInfo_dyn(length), not(31)))\n            }\n            /// @ast-id 62301 @src 95:12876:13498  \"function paginate(EnumerableSet.Bytes32Set storage bytes32Set, uint256 offset, uint256 limit)...\"\n            function fun_paginate_23048(var_offset, var_limit) -> var_mpos\n            {\n                /// @src 95:13016:13032  \"bytes32[] memory\"\n                var_mpos := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 96\n                let length := sload(/** @src 95:11933:12023  \"assembly (\\\"memory-safe\\\") {...\" */ 8)\n                /// @src 95:13095:13165  \"if (offset >= length) {...\"\n                if /** @src 95:13099:13115  \"offset >= length\" */ iszero(lt(var_offset, length))\n                /// @src 95:13095:13165  \"if (offset >= length) {...\"\n                {\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    let size := /** @src -1:-1:-1 */ 0\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    let length_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    length_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    size := 0x20\n                    let memPtr := mload(64)\n                    finalize_allocation(memPtr, 0x20)\n                    mstore(memPtr, /** @src -1:-1:-1 */ 0)\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    let size_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    let length_2 := /** @src -1:-1:-1 */ 0\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    length_2 := /** @src -1:-1:-1 */ 0\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    size_1 := 0x20\n                    calldatacopy(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ calldatasize(), /** @src -1:-1:-1 */ 0)\n                    /// @src 95:13131:13154  \"return new bytes32[](0)\"\n                    var_mpos := memPtr\n                    leave\n                }\n                /// @src 95:13175:13203  \"uint256 end = offset + limit\"\n                let var_end := /** @src 95:13189:13203  \"offset + limit\" */ checked_add_uint256(var_offset, var_limit)\n                /// @src 95:13213:13268  \"if (end > length) {...\"\n                if /** @src 95:13217:13229  \"end > length\" */ gt(var_end, length)\n                /// @src 95:13213:13268  \"if (end > length) {...\"\n                {\n                    /// @src 95:13245:13257  \"end = length\"\n                    var_end := length\n                }\n                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                let diff := sub(var_end, var_offset)\n                if gt(diff, var_end)\n                {\n                    /// @src 95:3769:3771  \"32\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ shl(224, 0x4e487b71))\n                    /// @src 95:3769:3771  \"32\"\n                    mstore(4, 0x11)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 95:3769:3771  \"32\" */ 0x24)\n                }\n                /// @src 95:13341:13360  \"new bytes32[](size)\"\n                let expr_mpos := allocate_and_zero_memory_array_array_bytes32_dyn(diff)\n                /// @src 95:13376:13389  \"uint256 i = 0\"\n                let var_i := /** @src -1:-1:-1 */ 0\n                /// @src 95:13371:13468  \"for (uint256 i = 0; i < size; i++) {...\"\n                for { }\n                /** @src 95:13391:13399  \"i < size\" */ lt(var_i, diff)\n                /// @src 95:13376:13389  \"uint256 i = 0\"\n                {\n                    /// @src 95:13401:13404  \"i++\"\n                    var_i := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ add(/** @src 95:13401:13404  \"i++\" */ var_i, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 1)\n                }\n                /// @src 95:13401:13404  \"i++\"\n                {\n                    /// @src 77:5853:5871  \"set._values[index]\"\n                    let _1, _2 := storage_array_index_access_bytes32_dyn__ptr(/** @src 95:11933:12023  \"assembly (\\\"memory-safe\\\") {...\" */ 8, /** @src 95:13446:13456  \"offset + i\" */ checked_add_uint256(var_offset, var_i))\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    mstore(/** @src 95:13420:13457  \"result[i] = bytes32Set.at(offset + i)\" */ memory_array_index_access_struct_TokenInfo_dyn(expr_mpos, var_i), /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ shr(shl(3, _2), sload(/** @src 77:5853:5871  \"set._values[index]\" */ _1)))\n                }\n                /// @src 95:13478:13491  \"return result\"\n                var_mpos := expr_mpos\n            }\n            /// @ast-id 62301 @src 95:12876:13498  \"function paginate(EnumerableSet.Bytes32Set storage bytes32Set, uint256 offset, uint256 limit)...\"\n            function fun_paginate(var_offset, var_limit) -> var__mpos\n            {\n                /// @src 95:13016:13032  \"bytes32[] memory\"\n                var__mpos := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 96\n                let length := sload(/** @src 95:10480:10487  \"_tokens\" */ 0x05)\n                /// @src 95:13095:13165  \"if (offset >= length) {...\"\n                if /** @src 95:13099:13115  \"offset >= length\" */ iszero(lt(var_offset, length))\n                /// @src 95:13095:13165  \"if (offset >= length) {...\"\n                {\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    let size := /** @src -1:-1:-1 */ 0\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    let length_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    length_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    size := 0x20\n                    let memPtr := mload(64)\n                    finalize_allocation(memPtr, 0x20)\n                    mstore(memPtr, /** @src -1:-1:-1 */ 0)\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    let size_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    let length_2 := /** @src -1:-1:-1 */ 0\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    length_2 := /** @src -1:-1:-1 */ 0\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    size_1 := 0x20\n                    calldatacopy(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ calldatasize(), /** @src -1:-1:-1 */ 0)\n                    /// @src 95:13131:13154  \"return new bytes32[](0)\"\n                    var__mpos := memPtr\n                    leave\n                }\n                /// @src 95:13175:13203  \"uint256 end = offset + limit\"\n                let var_end := /** @src 95:13189:13203  \"offset + limit\" */ checked_add_uint256(var_offset, var_limit)\n                /// @src 95:13213:13268  \"if (end > length) {...\"\n                if /** @src 95:13217:13229  \"end > length\" */ gt(var_end, length)\n                /// @src 95:13213:13268  \"if (end > length) {...\"\n                {\n                    /// @src 95:13245:13257  \"end = length\"\n                    var_end := length\n                }\n                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                let diff := sub(var_end, var_offset)\n                if gt(diff, var_end)\n                {\n                    /// @src 95:3769:3771  \"32\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ shl(224, 0x4e487b71))\n                    /// @src 95:3769:3771  \"32\"\n                    mstore(4, 0x11)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 95:3769:3771  \"32\" */ 0x24)\n                }\n                /// @src 95:13341:13360  \"new bytes32[](size)\"\n                let expr_mpos := allocate_and_zero_memory_array_array_bytes32_dyn(diff)\n                /// @src 95:13376:13389  \"uint256 i = 0\"\n                let var_i := /** @src -1:-1:-1 */ 0\n                /// @src 95:13371:13468  \"for (uint256 i = 0; i < size; i++) {...\"\n                for { }\n                /** @src 95:13391:13399  \"i < size\" */ lt(var_i, diff)\n                /// @src 95:13376:13389  \"uint256 i = 0\"\n                {\n                    /// @src 95:13401:13404  \"i++\"\n                    var_i := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ add(/** @src 95:13401:13404  \"i++\" */ var_i, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 1)\n                }\n                /// @src 95:13401:13404  \"i++\"\n                {\n                    /// @src 77:5853:5871  \"set._values[index]\"\n                    let _1, _2 := storage_array_index_access_bytes32_dyn__ptr(/** @src 95:10480:10487  \"_tokens\" */ 0x05, /** @src 95:13446:13456  \"offset + i\" */ checked_add_uint256(var_offset, var_i))\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    mstore(/** @src 95:13420:13457  \"result[i] = bytes32Set.at(offset + i)\" */ memory_array_index_access_struct_TokenInfo_dyn(expr_mpos, var_i), /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ shr(shl(3, _2), sload(/** @src 77:5853:5871  \"set._values[index]\" */ _1)))\n                }\n                /// @src 95:13478:13491  \"return result\"\n                var__mpos := expr_mpos\n            }\n            /// @ast-id 62301 @src 95:12876:13498  \"function paginate(EnumerableSet.Bytes32Set storage bytes32Set, uint256 offset, uint256 limit)...\"\n            function fun_paginate_23056(var_offset, var_limit) -> var_mpos\n            {\n                /// @src 95:13016:13032  \"bytes32[] memory\"\n                var_mpos := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 96\n                let length := sload(/** @src 95:9355:9367  \"_vftManagers\" */ 0x03)\n                /// @src 95:13095:13165  \"if (offset >= length) {...\"\n                if /** @src 95:13099:13115  \"offset >= length\" */ iszero(lt(var_offset, length))\n                /// @src 95:13095:13165  \"if (offset >= length) {...\"\n                {\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    let size := /** @src -1:-1:-1 */ 0\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    let length_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    length_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    size := 0x20\n                    let memPtr := mload(64)\n                    finalize_allocation(memPtr, 0x20)\n                    mstore(memPtr, /** @src -1:-1:-1 */ 0)\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    let size_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    let length_2 := /** @src -1:-1:-1 */ 0\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    length_2 := /** @src -1:-1:-1 */ 0\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    size_1 := 0x20\n                    calldatacopy(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ calldatasize(), /** @src -1:-1:-1 */ 0)\n                    /// @src 95:13131:13154  \"return new bytes32[](0)\"\n                    var_mpos := memPtr\n                    leave\n                }\n                /// @src 95:13175:13203  \"uint256 end = offset + limit\"\n                let var_end := /** @src 95:13189:13203  \"offset + limit\" */ checked_add_uint256(var_offset, var_limit)\n                /// @src 95:13213:13268  \"if (end > length) {...\"\n                if /** @src 95:13217:13229  \"end > length\" */ gt(var_end, length)\n                /// @src 95:13213:13268  \"if (end > length) {...\"\n                {\n                    /// @src 95:13245:13257  \"end = length\"\n                    var_end := length\n                }\n                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                let diff := sub(var_end, var_offset)\n                if gt(diff, var_end)\n                {\n                    /// @src 95:3769:3771  \"32\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ shl(224, 0x4e487b71))\n                    /// @src 95:3769:3771  \"32\"\n                    mstore(4, 0x11)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 95:3769:3771  \"32\" */ 0x24)\n                }\n                /// @src 95:13341:13360  \"new bytes32[](size)\"\n                let expr_mpos := allocate_and_zero_memory_array_array_bytes32_dyn(diff)\n                /// @src 95:13376:13389  \"uint256 i = 0\"\n                let var_i := /** @src -1:-1:-1 */ 0\n                /// @src 95:13371:13468  \"for (uint256 i = 0; i < size; i++) {...\"\n                for { }\n                /** @src 95:13391:13399  \"i < size\" */ lt(var_i, diff)\n                /// @src 95:13376:13389  \"uint256 i = 0\"\n                {\n                    /// @src 95:13401:13404  \"i++\"\n                    var_i := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ add(/** @src 95:13401:13404  \"i++\" */ var_i, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 1)\n                }\n                /// @src 95:13401:13404  \"i++\"\n                {\n                    /// @src 77:5853:5871  \"set._values[index]\"\n                    let _1, _2 := storage_array_index_access_bytes32_dyn__ptr(/** @src 95:9355:9367  \"_vftManagers\" */ 0x03, /** @src 95:13446:13456  \"offset + i\" */ checked_add_uint256(var_offset, var_i))\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    mstore(/** @src 95:13420:13457  \"result[i] = bytes32Set.at(offset + i)\" */ memory_array_index_access_struct_TokenInfo_dyn(expr_mpos, var_i), /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ shr(shl(/** @src 95:9355:9367  \"_vftManagers\" */ 0x03, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ _2), sload(/** @src 77:5853:5871  \"set._values[index]\" */ _1)))\n                }\n                /// @src 95:13478:13491  \"return result\"\n                var_mpos := expr_mpos\n            }\n            /// @ast-id 66654 @src 121:3068:3403  \"function tryGet(AddressToTokenTypeMap storage map, address key)...\"\n            function fun_tryGet_23025(var_key) -> var_exists, var_value\n            {\n                /// @src 121:3267:3331  \"EnumerableMap.tryGet(map._inner, bytes32(uint256(uint160(key))))\"\n                let expr_component, expr_component_1 := fun_tryGet(/** @src 95:14531:14538  \"_tokens\" */ 0x05, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ and(/** @src 121:3316:3328  \"uint160(key)\" */ var_key, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)))\n                if iszero(lt(expr_component_1, 3))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x21)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0x24)\n                }\n                /// @src 121:3341:3396  \"return (success, IERC20Manager.TokenType(uint256(val)))\"\n                var_exists := expr_component\n                var_value := expr_component_1\n            }\n            /// @ast-id 55373 @src 77:5101:5230  \"function _contains(Set storage set, bytes32 value) private view returns (bool) {...\"\n            function fun_contains(var_value) -> var\n            {\n                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ var_value)\n                mstore(0x20, /** @src 77:5197:5211  \"set._positions\" */ 9)\n                /// @src 77:5190:5223  \"return set._positions[value] != 0\"\n                var := /** @src 77:5197:5223  \"set._positions[value] != 0\" */ iszero(iszero(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0x40))))\n            }\n            /// @ast-id 55373 @src 77:5101:5230  \"function _contains(Set storage set, bytes32 value) private view returns (bool) {...\"\n            function fun__contains(var_value) -> var\n            {\n                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ var_value)\n                mstore(0x20, /** @src 77:5197:5211  \"set._positions\" */ 4)\n                /// @src 77:5190:5223  \"return set._positions[value] != 0\"\n                var := /** @src 77:5197:5223  \"set._positions[value] != 0\" */ iszero(iszero(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0x40))))\n            }\n            /// @ast-id 55373 @src 77:5101:5230  \"function _contains(Set storage set, bytes32 value) private view returns (bool) {...\"\n            function fun_contains_55373(var_set_55358_slot, var_value) -> var\n            {\n                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ var_value)\n                mstore(0x20, /** @src 77:5197:5211  \"set._positions\" */ add(var_set_55358_slot, 1))\n                /// @src 77:5190:5223  \"return set._positions[value] != 0\"\n                var := /** @src 77:5197:5223  \"set._positions[value] != 0\" */ iszero(iszero(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0x40))))\n            }\n            /// @ast-id 66744 @src 122:1294:1816  \"function unpackOne(bytes32 packed) internal pure returns (string memory result) {...\"\n            function fun_unpackOne(var_packed) -> var_result_mpos\n            {\n                /// @src 122:1384:1810  \"assembly (\\\"memory-safe\\\") {...\"\n                var_result_mpos := mload(0x40)\n                mstore(0x40, add(var_result_mpos, 0x40))\n                mstore(var_result_mpos, 0)\n                mstore(add(var_result_mpos, 0x1f), var_packed)\n                mstore(add(add(var_result_mpos, mload(var_result_mpos)), 0x20), 0)\n            }\n            /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n            function storage_array_index_access_bytes32_dyn__ptr(array, index) -> slot, offset\n            {\n                if iszero(lt(index, sload(array)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ array)\n                slot := add(keccak256(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0x20), index)\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @ast-id 55227 @src 77:2497:2903  \"function _add(Set storage set, bytes32 value) private returns (bool) {...\"\n            function fun__add(var_value) -> var\n            {\n                /// @src 77:2560:2564  \"bool\"\n                var := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0\n                /// @src 77:2581:2602  \"_contains(set, value)\"\n                let var_1 := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0\n                mstore(0, var_value)\n                mstore(0x20, /** @src 77:5197:5211  \"set._positions\" */ 9)\n                /// @src 77:5197:5223  \"set._positions[value] != 0\"\n                let _1 := iszero(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ sload(keccak256(0, 0x40)))\n                /// @src 77:5190:5223  \"return set._positions[value] != 0\"\n                var_1 := /** @src 77:5197:5223  \"set._positions[value] != 0\" */ iszero(_1)\n                /// @src 77:2576:2897  \"if (!_contains(set, value)) {...\"\n                switch /** @src 77:2580:2602  \"!_contains(set, value)\" */ _1\n                case /** @src 77:2576:2897  \"if (!_contains(set, value)) {...\" */ 0 {\n                    /// @src 77:2874:2886  \"return false\"\n                    var := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0\n                    /// @src 77:2874:2886  \"return false\"\n                    leave\n                }\n                default /// @src 77:2576:2897  \"if (!_contains(set, value)) {...\"\n                {\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    let oldLen := sload(/** @src 95:18249:18266  \"_bridgingPayments\" */ 0x08)\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    if iszero(lt(oldLen, 18446744073709551616))\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(0, 0x24)\n                    }\n                    sstore(/** @src 95:18249:18266  \"_bridgingPayments\" */ 0x08, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ add(oldLen, /** @src 77:5197:5211  \"set._positions\" */ 1))\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    let slot, offset := storage_array_index_access_bytes32_dyn__ptr(/** @src 95:18249:18266  \"_bridgingPayments\" */ 0x08, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ oldLen)\n                    let _2 := sload(slot)\n                    let shiftBits := shl(3, offset)\n                    sstore(slot, or(and(_2, not(shl(shiftBits, not(0)))), shl(shiftBits, var_value)))\n                    /// @src 77:2800:2818  \"set._values.length\"\n                    let expr := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ sload(/** @src 95:18249:18266  \"_bridgingPayments\" */ 0x08)\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    mstore(0, var_value)\n                    mstore(0x20, /** @src 77:5197:5211  \"set._positions\" */ 9)\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    sstore(keccak256(0, 0x40), expr)\n                    /// @src 77:2832:2843  \"return true\"\n                    var := /** @src 77:5197:5211  \"set._positions\" */ 1\n                    /// @src 77:2832:2843  \"return true\"\n                    leave\n                }\n            }\n            /// @ast-id 55227 @src 77:2497:2903  \"function _add(Set storage set, bytes32 value) private returns (bool) {...\"\n            function fun_add_23044(var_value) -> var\n            {\n                /// @src 77:2560:2564  \"bool\"\n                var := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0\n                /// @src 77:2581:2602  \"_contains(set, value)\"\n                let var_1 := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0\n                mstore(0, var_value)\n                mstore(0x20, /** @src 77:5197:5211  \"set._positions\" */ 4)\n                /// @src 77:5197:5223  \"set._positions[value] != 0\"\n                let _1 := iszero(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ sload(keccak256(0, 0x40)))\n                /// @src 77:5190:5223  \"return set._positions[value] != 0\"\n                var_1 := /** @src 77:5197:5223  \"set._positions[value] != 0\" */ iszero(_1)\n                /// @src 77:2576:2897  \"if (!_contains(set, value)) {...\"\n                switch /** @src 77:2580:2602  \"!_contains(set, value)\" */ _1\n                case /** @src 77:2576:2897  \"if (!_contains(set, value)) {...\" */ 0 {\n                    /// @src 77:2874:2886  \"return false\"\n                    var := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0\n                    /// @src 77:2874:2886  \"return false\"\n                    leave\n                }\n                default /// @src 77:2576:2897  \"if (!_contains(set, value)) {...\"\n                {\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    let oldLen := sload(3)\n                    if iszero(lt(oldLen, 18446744073709551616))\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(/** @src 77:5197:5211  \"set._positions\" */ 4, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0x41)\n                        revert(0, 0x24)\n                    }\n                    sstore(3, add(oldLen, /** @src 77:5197:5211  \"set._positions\" */ 1))\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    let slot, offset := storage_array_index_access_bytes32_dyn__ptr(3, oldLen)\n                    let _2 := sload(slot)\n                    let shiftBits := shl(3, offset)\n                    sstore(slot, or(and(_2, not(shl(shiftBits, not(0)))), shl(shiftBits, var_value)))\n                    /// @src 77:2800:2818  \"set._values.length\"\n                    let expr := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ sload(3)\n                    mstore(0, var_value)\n                    mstore(0x20, /** @src 77:5197:5211  \"set._positions\" */ 4)\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    sstore(keccak256(0, 0x40), expr)\n                    /// @src 77:2832:2843  \"return true\"\n                    var := /** @src 77:5197:5211  \"set._positions\" */ 1\n                    /// @src 77:2832:2843  \"return true\"\n                    leave\n                }\n            }\n            /// @ast-id 55227 @src 77:2497:2903  \"function _add(Set storage set, bytes32 value) private returns (bool) {...\"\n            function fun_add(var_set_slot, var_value) -> var\n            {\n                /// @src 77:2560:2564  \"bool\"\n                var := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0\n                /// @src 77:2576:2897  \"if (!_contains(set, value)) {...\"\n                switch /** @src 77:2580:2602  \"!_contains(set, value)\" */ iszero(/** @src 77:2581:2602  \"_contains(set, value)\" */ fun_contains_55373(var_set_slot, var_value))\n                case /** @src 77:2576:2897  \"if (!_contains(set, value)) {...\" */ 0 {\n                    /// @src 77:2874:2886  \"return false\"\n                    var := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0\n                    /// @src 77:2874:2886  \"return false\"\n                    leave\n                }\n                default /// @src 77:2576:2897  \"if (!_contains(set, value)) {...\"\n                {\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    let oldLen := sload(var_set_slot)\n                    if iszero(lt(oldLen, 18446744073709551616))\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(0, 0x24)\n                    }\n                    sstore(var_set_slot, add(oldLen, 1))\n                    let slot, offset := storage_array_index_access_bytes32_dyn__ptr(var_set_slot, oldLen)\n                    let _1 := sload(slot)\n                    let shiftBits := shl(3, offset)\n                    sstore(slot, or(and(_1, not(shl(shiftBits, not(0)))), shl(shiftBits, var_value)))\n                    /// @src 77:2800:2818  \"set._values.length\"\n                    let expr := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ sload(/** @src 77:2800:2818  \"set._values.length\" */ var_set_slot)\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    mstore(0, var_value)\n                    mstore(0x20, /** @src 77:2776:2790  \"set._positions\" */ add(var_set_slot, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 1))\n                    sstore(keccak256(0, 0x40), expr)\n                    /// @src 77:2832:2843  \"return true\"\n                    var := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 1\n                    /// @src 77:2832:2843  \"return true\"\n                    leave\n                }\n            }\n            /// @ast-id 40434 @src 22:7082:7223  \"function _checkInitializing() internal view virtual {...\"\n            function fun_checkInitializing()\n            {\n                /// @src 22:7144:7217  \"if (!_isInitializing()) {...\"\n                if /** @src 22:7148:7166  \"!_isInitializing()\" */ iszero(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ and(shr(64, sload(/** @src 22:3147:3213  \"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\" */ 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00)), /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0xff))\n                /// @src 22:7144:7217  \"if (!_isInitializing()) {...\"\n                {\n                    /// @src 22:7189:7206  \"NotInitializing()\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 22:7189:7206  \"NotInitializing()\" */ shl(227, 0x1afcd79f))\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 22:7189:7206  \"NotInitializing()\" */ 4)\n                }\n            }\n            /// @ast-id 52627 @src 76:5170:5475  \"function tryGet(Bytes32ToBytes32Map storage map, bytes32 key) internal view returns (bool exists, bytes32 value) {...\"\n            function fun_tryGet(var_map_slot, var_key) -> var_exists, var_value\n            {\n                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ var_key)\n                mstore(0x20, /** @src 76:5307:5318  \"map._values\" */ add(var_map_slot, 2))\n                /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                let _1 := sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 0x40))\n                /// @src 76:5333:5469  \"if (val == bytes32(0)) {...\"\n                switch /** @src 76:5337:5354  \"val == bytes32(0)\" */ iszero(_1)\n                case /** @src 76:5333:5469  \"if (val == bytes32(0)) {...\" */ 0 {\n                    /// @src 76:5440:5458  \"return (true, val)\"\n                    var_exists := /** @src 76:5448:5452  \"true\" */ 0x01\n                    /// @src 76:5440:5458  \"return (true, val)\"\n                    var_value := _1\n                    leave\n                }\n                default /// @src 76:5333:5469  \"if (val == bytes32(0)) {...\"\n                {\n                    /// @src 76:5370:5409  \"return (contains(map, key), bytes32(0))\"\n                    var_exists := /** @src 77:8806:8834  \"_contains(set._inner, value)\" */ fun_contains_55373(var_map_slot, var_key)\n                    /// @src 76:5370:5409  \"return (contains(map, key), bytes32(0))\"\n                    var_value := /** @src -1:-1:-1 */ 0\n                    /// @src 76:5370:5409  \"return (contains(map, key), bytes32(0))\"\n                    leave\n                }\n            }\n            /// @ast-id 44806 @src 56:8370:9090  \"function _callOptionalReturn(IERC20 token, bytes memory data) private {...\"\n            function fun_callOptionalReturn(var_token_address, var_data_mpos)\n            {\n                /// @src 56:8507:8928  \"assembly (\\\"memory-safe\\\") {...\"\n                if iszero(call(gas(), var_token_address, /** @src -1:-1:-1 */ 0, /** @src 56:8507:8928  \"assembly (\\\"memory-safe\\\") {...\" */ add(var_data_mpos, 0x20), mload(var_data_mpos), /** @src -1:-1:-1 */ 0, /** @src 56:8507:8928  \"assembly (\\\"memory-safe\\\") {...\" */ 0x20))\n                {\n                    let usr$ptr := mload(0x40)\n                    returndatacopy(usr$ptr, /** @src -1:-1:-1 */ 0, /** @src 56:8507:8928  \"assembly (\\\"memory-safe\\\") {...\" */ returndatasize())\n                    revert(usr$ptr, returndatasize())\n                }\n                let var_returnSize := returndatasize()\n                let var_returnValue := mload(/** @src -1:-1:-1 */ 0)\n                /// @src 56:8942:9010  \"returnSize == 0 ? address(token).code.length == 0 : returnValue != 1\"\n                let expr := /** @src -1:-1:-1 */ 0\n                /// @src 56:8942:9010  \"returnSize == 0 ? address(token).code.length == 0 : returnValue != 1\"\n                switch /** @src 56:8942:8957  \"returnSize == 0\" */ iszero(var_returnSize)\n                case /** @src 56:8942:9010  \"returnSize == 0 ? address(token).code.length == 0 : returnValue != 1\" */ 0 {\n                    expr := /** @src 56:8994:9010  \"returnValue != 1\" */ iszero(eq(var_returnValue, /** @src 56:9009:9010  \"1\" */ 0x01))\n                }\n                default /// @src 56:8942:9010  \"returnSize == 0 ? address(token).code.length == 0 : returnValue != 1\"\n                {\n                    expr := /** @src 56:8960:8991  \"address(token).code.length == 0\" */ iszero(/** @src 56:8960:8986  \"address(token).code.length\" */ extcodesize(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ and(/** @src 56:8960:8974  \"address(token)\" */ var_token_address, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1))))\n                }\n                /// @src 56:8938:9084  \"if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {...\"\n                if expr\n                {\n                    /// @src 56:9033:9073  \"SafeERC20FailedOperation(address(token))\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 56:9033:9073  \"SafeERC20FailedOperation(address(token))\" */ shl(224, 0x5274afe7))\n                    /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                    mstore(/** @src 56:9033:9073  \"SafeERC20FailedOperation(address(token))\" */ 4, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ and(/** @src 56:9058:9072  \"address(token)\" */ var_token_address, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)))\n                    /// @src 56:9033:9073  \"SafeERC20FailedOperation(address(token))\"\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 36)\n                }\n            }\n            /// @ast-id 45065 @src 57:4437:5019  \"function verifyCallResultFromTarget(...\"\n            function fun_verifyCallResultFromTarget(var_target, var_success, var_returndata_mpos) -> var_45035_mpos\n            {\n                /// @src 57:4581:4593  \"bytes memory\"\n                var_45035_mpos := /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 96\n                /// @src 57:4605:5013  \"if (!success) {...\"\n                switch /** @src 57:4609:4617  \"!success\" */ iszero(var_success)\n                case /** @src 57:4605:5013  \"if (!success) {...\" */ 0 {\n                    /// @src 57:4857:4906  \"returndata.length == 0 && target.code.length == 0\"\n                    let expr := /** @src 57:4857:4879  \"returndata.length == 0\" */ iszero(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ mload(/** @src 57:4857:4874  \"returndata.length\" */ var_returndata_mpos))\n                    /// @src 57:4857:4906  \"returndata.length == 0 && target.code.length == 0\"\n                    if expr\n                    {\n                        expr := /** @src 57:4883:4906  \"target.code.length == 0\" */ iszero(/** @src 57:4883:4901  \"target.code.length\" */ extcodesize(var_target))\n                    }\n                    /// @src 57:4853:4972  \"if (returndata.length == 0 && target.code.length == 0) {...\"\n                    if expr\n                    {\n                        /// @src 57:4933:4957  \"AddressEmptyCode(target)\"\n                        mstore(/** @src 57:4878:4879  \"0\" */ 0x00, /** @src 57:4933:4957  \"AddressEmptyCode(target)\" */ shl(224, 0x9996b315))\n                        /// @src 95:1537:25944  \"contract ERC20Manager is...\"\n                        mstore(/** @src 57:4933:4957  \"AddressEmptyCode(target)\" */ 4, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ and(var_target, sub(shl(160, 1), 1)))\n                        /// @src 57:4933:4957  \"AddressEmptyCode(target)\"\n                        revert(/** @src 57:4878:4879  \"0\" */ 0x00, /** @src 95:1537:25944  \"contract ERC20Manager is...\" */ 36)\n                    }\n                    /// @src 57:4985:5002  \"return returndata\"\n                    var_45035_mpos := var_returndata_mpos\n                    leave\n                }\n                default /// @src 57:4605:5013  \"if (!success) {...\"\n                {\n                    /// @src 57:5686:5987  \"if (returndata.length > 0) {...\"\n                    switch /** @src 57:5690:5711  \"returndata.length > 0\" */ iszero(iszero(/** @src 95:1537:25944  \"contract ERC20Manager is...\" */ mload(/** @src 57:5690:5707  \"returndata.length\" */ var_returndata_mpos)))\n                    case /** @src 57:5686:5987  \"if (returndata.length > 0) {...\" */ 0 {\n                        /// @src 57:5957:5976  \"Errors.FailedCall()\"\n                        mstore(/** @src 57:5710:5711  \"0\" */ 0x00, /** @src 57:5957:5976  \"Errors.FailedCall()\" */ shl(224, 0xd6bda275))\n                        revert(/** @src 57:5710:5711  \"0\" */ 0x00, /** @src 57:5957:5976  \"Errors.FailedCall()\" */ 4)\n                    }\n                    default /// @src 57:5686:5987  \"if (returndata.length > 0) {...\"\n                    {\n                        /// @src 57:5815:5920  \"assembly (\\\"memory-safe\\\") {...\"\n                        revert(add(var_returndata_mpos, 0x20), mload(var_returndata_mpos))\n                    }\n                }\n            }\n        }\n        /// @use-src 34:\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\", 60:\"lib/openzeppelin-contracts/contracts/utils/Context.sol\", 94:\"src/BridgingPayment.sol\", 107:\"src/interfaces/IBridgingPayment.sol\"\n        object \"BridgingPayment_61632\" {\n            code {\n                {\n                    /// @src 94:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\"\n                    let _1 := memoryguard(0xa0)\n                    if callvalue() { revert(0, 0) }\n                    let programSize := datasize(\"BridgingPayment_61632\")\n                    let argSize := sub(codesize(), programSize)\n                    let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n                    if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 94:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 94:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ 0x24)\n                    }\n                    mstore(64, newFreePtr)\n                    codecopy(_1, programSize, argSize)\n                    if slt(sub(add(_1, argSize), _1), 96)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 94:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\"\n                    let value0 := abi_decode_address_fromMemory(_1)\n                    let value := mload(add(_1, 32))\n                    let _2 := and(abi_decode_address_fromMemory(add(_1, 64)), sub(shl(160, 1), 1))\n                    /// @src 34:1269:1364  \"if (initialOwner == address(0)) {...\"\n                    if /** @src 34:1273:1299  \"initialOwner == address(0)\" */ iszero(/** @src 94:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ _2)\n                    /// @src 34:1269:1364  \"if (initialOwner == address(0)) {...\"\n                    {\n                        /// @src 34:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 34:1322:1353  \"OwnableInvalidOwner(address(0))\" */ shl(224, 0x1e4fbdf7))\n                        /// @src 94:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\"\n                        mstore(/** @src 34:1322:1353  \"OwnableInvalidOwner(address(0))\" */ 4, /** @src -1:-1:-1 */ 0)\n                        /// @src 34:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 94:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ 36)\n                    }\n                    let _3 := sload(/** @src -1:-1:-1 */ 0)\n                    /// @src 94:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\"\n                    sstore(/** @src -1:-1:-1 */ 0, /** @src 94:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ or(and(_3, not(sub(shl(160, 1), 1))), _2))\n                    /// @src 34:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                    let _4 := /** @src 94:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ mload(64)\n                    /// @src 34:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                    log3(/** @src -1:-1:-1 */ 0, 0, /** @src 34:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 94:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ and(_3, sub(shl(160, 1), 1)), /** @src 34:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ _2)\n                    /// @src 94:1186:1215  \"ERC20_MANAGER = _erc20Manager\"\n                    mstore(128, value0)\n                    /// @src 94:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\"\n                    sstore(1, value)\n                    let _5 := datasize(\"BridgingPayment_61632_deployed\")\n                    codecopy(_4, dataoffset(\"BridgingPayment_61632_deployed\"), _5)\n                    setimmutable(_4, \"61526\", mload(/** @src 94:1186:1215  \"ERC20_MANAGER = _erc20Manager\" */ 128))\n                    /// @src 94:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\"\n                    return(_4, _5)\n                }\n                function abi_decode_address_fromMemory(offset) -> value\n                {\n                    value := mload(offset)\n                    if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                }\n            }\n            /// @use-src 34:\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\", 60:\"lib/openzeppelin-contracts/contracts/utils/Context.sol\", 94:\"src/BridgingPayment.sol\"\n            object \"BridgingPayment_61632_deployed\" {\n                code {\n                    {\n                        /// @src 94:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\"\n                        mstore(64, memoryguard(0x80))\n                        if iszero(lt(calldatasize(), 4))\n                        {\n                            switch shr(224, calldataload(0))\n                            case 0x29610252 {\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                /// @src 94:1721:1804  \"if (msg.sender != ERC20_MANAGER) {...\"\n                                if /** @src 94:1725:1752  \"msg.sender != ERC20_MANAGER\" */ iszero(eq(/** @src 94:1725:1735  \"msg.sender\" */ caller(), /** @src 94:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ and(/** @src 94:1739:1752  \"ERC20_MANAGER\" */ loadimmutable(\"61526\"), /** @src 94:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ sub(shl(160, 1), 1))))\n                                /// @src 94:1721:1804  \"if (msg.sender != ERC20_MANAGER) {...\"\n                                {\n                                    /// @src 94:1775:1793  \"OnlyErc20Manager()\"\n                                    mstore(/** @src 94:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ 0, /** @src 94:1775:1793  \"OnlyErc20Manager()\" */ shl(225, 0x064917ff))\n                                    revert(/** @src 94:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ 0, 4)\n                                }\n                                /// @src 94:2112:2186  \"if (msg.value != fee) {...\"\n                                if /** @src 94:2116:2132  \"msg.value != fee\" */ iszero(eq(/** @src 94:2116:2125  \"msg.value\" */ callvalue(), /** @src 94:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ sload(/** @src 94:2129:2132  \"fee\" */ 0x01)))\n                                /// @src 94:2112:2186  \"if (msg.value != fee) {...\"\n                                {\n                                    /// @src 94:2155:2175  \"IncorrectFeeAmount()\"\n                                    mstore(/** @src 94:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ 0, /** @src 94:2155:2175  \"IncorrectFeeAmount()\" */ shl(224, 0x1fbbed95))\n                                    revert(/** @src 94:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ 0, 4)\n                                }\n                                /// @src 94:2214:2248  \"owner().call{value: msg.value}(\\\"\\\")\"\n                                let expr_component := call(gas(), /** @src 94:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ and(sload(0), sub(shl(160, 1), 1)), /** @src 94:2116:2125  \"msg.value\" */ callvalue(), /** @src 94:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ 0, 0, 0, 0)\n                                /// @src 94:2214:2248  \"owner().call{value: msg.value}(\\\"\\\")\"\n                                let data := /** @src 94:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ 0\n                                switch returndatasize()\n                                case 0 { data := 96 }\n                                default {\n                                    let _1 := returndatasize()\n                                    if gt(_1, 0xffffffffffffffff)\n                                    {\n                                        mstore(0, shl(224, 0x4e487b71))\n                                        mstore(4, 0x41)\n                                        revert(0, 0x24)\n                                    }\n                                    let memPtr := mload(64)\n                                    let newFreePtr := add(memPtr, and(add(and(add(_1, 31), not(31)), 63), not(31)))\n                                    if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                                    {\n                                        mstore(0, shl(224, 0x4e487b71))\n                                        mstore(4, 0x41)\n                                        revert(0, 0x24)\n                                    }\n                                    mstore(64, newFreePtr)\n                                    mstore(memPtr, _1)\n                                    data := memPtr\n                                    returndatacopy(add(memPtr, 0x20), 0, returndatasize())\n                                }\n                                /// @src 94:2258:2318  \"if (!success) {...\"\n                                if /** @src 94:2262:2270  \"!success\" */ iszero(expr_component)\n                                /// @src 94:2258:2318  \"if (!success) {...\"\n                                {\n                                    /// @src 94:2293:2307  \"PayFeeFailed()\"\n                                    mstore(/** @src 94:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ 0, /** @src 94:2293:2307  \"PayFeeFailed()\" */ shl(225, 0x53048b49))\n                                    revert(/** @src 94:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ 0, 4)\n                                }\n                                /// @src 94:2333:2342  \"FeePaid()\"\n                                log1(/** @src 94:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ 0, 0, /** @src 94:2333:2342  \"FeePaid()\" */ 0xaaeea0b595e409578c26dd16fa1bdb3a29a4d874694ecef3ca96376940f5fbfb)\n                                /// @src 94:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\"\n                                return(0, 0)\n                            }\n                            case 0x69fe0e2d {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                /// @src 34:1500:1562  \"modifier onlyOwner() {...\"\n                                fun_checkOwner()\n                                /// @src 94:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\"\n                                sstore(1, calldataload(4))\n                                return(0, 0)\n                            }\n                            case 0x715018a6 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                /// @src 34:1500:1562  \"modifier onlyOwner() {...\"\n                                fun_checkOwner()\n                                /// @src 94:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\"\n                                let _2 := sload(0)\n                                sstore(0, and(_2, shl(160, 0xffffffffffffffffffffffff)))\n                                /// @src 34:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                                log3(/** @src 94:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ 0, 0, /** @src 34:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 94:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ and(_2, sub(shl(160, 1), 1)), 0)\n                                return(0, 0)\n                            }\n                            case 0x86ea825c {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let memPos := mload(64)\n                                mstore(memPos, and(/** @src 94:1390:1403  \"ERC20_MANAGER\" */ loadimmutable(\"61526\"), /** @src 94:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ sub(shl(160, 1), 1)))\n                                return(memPos, 32)\n                            }\n                            case 0x8da5cb5b {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let value := and(sload(0), sub(shl(160, 1), 1))\n                                let memPos_1 := mload(64)\n                                mstore(memPos_1, value)\n                                return(memPos_1, 32)\n                            }\n                            case 0xddca3f43 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let _3 := sload(/** @src 94:681:699  \"uint256 public fee\" */ 1)\n                                /// @src 94:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\"\n                                let memPos_2 := mload(64)\n                                mstore(memPos_2, _3)\n                                return(memPos_2, 32)\n                            }\n                            case 0xf2fde38b {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                let value_1 := calldataload(4)\n                                let _4 := and(value_1, sub(shl(160, 1), 1))\n                                if iszero(eq(value_1, _4)) { revert(0, 0) }\n                                /// @src 34:1500:1562  \"modifier onlyOwner() {...\"\n                                fun_checkOwner()\n                                /// @src 34:2623:2714  \"if (newOwner == address(0)) {...\"\n                                if /** @src 34:2627:2649  \"newOwner == address(0)\" */ iszero(/** @src 94:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ _4)\n                                /// @src 34:2623:2714  \"if (newOwner == address(0)) {...\"\n                                {\n                                    /// @src 34:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                                    mstore(/** @src 94:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ 0, /** @src 34:2672:2703  \"OwnableInvalidOwner(address(0))\" */ shl(224, 0x1e4fbdf7))\n                                    /// @src 94:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\"\n                                    mstore(4, 0)\n                                    /// @src 34:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                                    revert(/** @src 94:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ 0, 36)\n                                }\n                                let _5 := sload(0)\n                                sstore(0, or(and(_5, shl(160, 0xffffffffffffffffffffffff)), _4))\n                                /// @src 34:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                                log3(/** @src 94:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ 0, 0, /** @src 34:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 94:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ and(_5, sub(shl(160, 1), 1)), /** @src 34:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ _4)\n                                /// @src 94:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\"\n                                return(0, 0)\n                            }\n                        }\n                        revert(0, 0)\n                    }\n                    /// @ast-id 42475 @src 34:1796:1958  \"function _checkOwner() internal view virtual {...\"\n                    function fun_checkOwner()\n                    {\n                        /// @src 94:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\"\n                        let value := and(sload(/** @src 34:1710:1716  \"_owner\" */ 0x00), /** @src 94:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ sub(shl(160, 1), 1))\n                        /// @src 34:1851:1952  \"if (owner() != _msgSender()) {...\"\n                        if /** @src 34:1855:1878  \"owner() != _msgSender()\" */ iszero(eq(/** @src 94:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ value, /** @src 60:735:745  \"msg.sender\" */ caller()))\n                        /// @src 34:1851:1952  \"if (owner() != _msgSender()) {...\"\n                        {\n                            /// @src 34:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                            mstore(/** @src 34:1710:1716  \"_owner\" */ 0x00, /** @src 34:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\" */ shl(224, 0x118cdaa7))\n                            /// @src 94:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\"\n                            mstore(/** @src 34:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\" */ 4, /** @src 60:735:745  \"msg.sender\" */ caller())\n                            /// @src 34:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                            revert(/** @src 34:1710:1716  \"_owner\" */ 0x00, /** @src 94:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ 36)\n                        }\n                    }\n                }\n                data \".metadata\" hex\"\"\n            }\n        }\n        /// @use-src 34:\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\", 39:\"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\", 41:\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\", 50:\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\", 51:\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\", 52:\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol\", 53:\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\", 54:\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\", 55:\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\", 60:\"lib/openzeppelin-contracts/contracts/utils/Context.sol\", 62:\"lib/openzeppelin-contracts/contracts/utils/Nonces.sol\", 64:\"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\", 66:\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\", 69:\"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\", 106:\"src/erc20/managed/ERC20GearSupply.sol\"\n        object \"ERC20GearSupply_65079\" {\n            code {\n                {\n                    /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    let _1 := memoryguard(0x0160)\n                    mstore(64, _1)\n                    if callvalue() { revert(0, 0) }\n                    let programSize := datasize(\"ERC20GearSupply_65079\")\n                    let argSize := sub(codesize(), programSize)\n                    finalize_allocation(_1, argSize)\n                    codecopy(_1, programSize, argSize)\n                    let _2 := add(_1, argSize)\n                    if slt(sub(_2, _1), 128)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    let value := mload(_1)\n                    let _3 := and(value, sub(shl(160, 1), 1))\n                    if iszero(eq(value, _3))\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    let offset := mload(add(_1, 32))\n                    if gt(offset, sub(shl(64, 1), 1))\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    let value1 := abi_decode_string_fromMemory(add(_1, offset), _2)\n                    let offset_1 := mload(add(_1, 64))\n                    if gt(offset_1, sub(shl(64, 1), 1))\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    let value2 := abi_decode_string_fromMemory(add(_1, offset_1), _2)\n                    let value_1 := mload(add(_1, 96))\n                    let _4 := and(value_1, 0xff)\n                    if iszero(eq(value_1, _4))\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    let size := /** @src -1:-1:-1 */ 0\n                    /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    let _5 := /** @src -1:-1:-1 */ 0\n                    /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    _5 := /** @src -1:-1:-1 */ 0\n                    /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    size := 64\n                    let memPtr := mload(size)\n                    finalize_allocation(memPtr, size)\n                    mstore(memPtr, 1)\n                    let _6 := add(memPtr, 32)\n                    mstore(_6, \"1\")\n                    let newLen := mload(value1)\n                    if gt(newLen, sub(shl(64, 1), 1))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x24)\n                    }\n                    let _7 := sload(/** @src 50:1648:1661  \"_name = name_\" */ 0x03)\n                    /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    let length := /** @src -1:-1:-1 */ 0\n                    /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    length := shr(1, _7)\n                    let outOfPlaceEncoding := and(_7, 1)\n                    if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                    if eq(outOfPlaceEncoding, lt(length, 32))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x22)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x24)\n                    }\n                    if gt(length, 31)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 50:1648:1661  \"_name = name_\" */ 0x03)\n                        /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 32)\n                        let deleteStart := add(data, shr(5, add(newLen, 31)))\n                        if lt(newLen, 32) { deleteStart := data }\n                        let _8 := add(data, shr(5, add(length, 31)))\n                        let start := deleteStart\n                        for { } lt(start, _8) { start := add(start, 1) }\n                        {\n                            sstore(start, /** @src -1:-1:-1 */ 0)\n                        }\n                    }\n                    /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    let srcOffset := /** @src -1:-1:-1 */ 0\n                    /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    srcOffset := 32\n                    switch gt(newLen, 31)\n                    case 1 {\n                        let loopEnd := and(newLen, not(31))\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 50:1648:1661  \"_name = name_\" */ 0x03)\n                        /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ srcOffset)\n                        let i := /** @src -1:-1:-1 */ 0\n                        /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        for { } lt(i, loopEnd) { i := add(i, 32) }\n                        {\n                            sstore(dstPtr, mload(add(value1, srcOffset)))\n                            dstPtr := add(dstPtr, 1)\n                            srcOffset := add(srcOffset, 32)\n                        }\n                        if lt(loopEnd, newLen)\n                        {\n                            let lastValue := mload(add(value1, srcOffset))\n                            sstore(dstPtr, and(lastValue, not(shr(and(shl(/** @src 50:1648:1661  \"_name = name_\" */ 0x03, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ newLen), 248), not(0)))))\n                        }\n                        sstore(/** @src 50:1648:1661  \"_name = name_\" */ 0x03, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ add(shl(1, newLen), 1))\n                    }\n                    default {\n                        let value_2 := /** @src -1:-1:-1 */ 0\n                        /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        if newLen\n                        {\n                            value_2 := mload(add(value1, srcOffset))\n                        }\n                        sstore(/** @src 50:1648:1661  \"_name = name_\" */ 0x03, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ or(and(value_2, not(shr(shl(/** @src 50:1648:1661  \"_name = name_\" */ 0x03, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ newLen), not(0)))), shl(1, newLen)))\n                    }\n                    let newLen_1 := mload(value2)\n                    if gt(newLen_1, sub(shl(64, 1), 1))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ shl(224, 0x4e487b71))\n                        mstore(/** @src 50:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x24)\n                    }\n                    let _9 := sload(/** @src 50:1671:1688  \"_symbol = symbol_\" */ 0x04)\n                    /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    let length_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    length_1 := shr(1, _9)\n                    let outOfPlaceEncoding_1 := and(_9, 1)\n                    if iszero(outOfPlaceEncoding_1)\n                    {\n                        length_1 := and(length_1, 0x7f)\n                    }\n                    if eq(outOfPlaceEncoding_1, lt(length_1, 32))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ shl(224, 0x4e487b71))\n                        mstore(/** @src 50:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x22)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x24)\n                    }\n                    if gt(length_1, 31)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 50:1671:1688  \"_symbol = symbol_\" */ 0x04)\n                        /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        let data_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 32)\n                        let deleteStart_1 := add(data_1, shr(5, add(newLen_1, 31)))\n                        if lt(newLen_1, 32) { deleteStart_1 := data_1 }\n                        let _10 := add(data_1, shr(5, add(length_1, 31)))\n                        let start_1 := deleteStart_1\n                        for { } lt(start_1, _10) { start_1 := add(start_1, 1) }\n                        {\n                            sstore(start_1, /** @src -1:-1:-1 */ 0)\n                        }\n                    }\n                    /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    let srcOffset_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    srcOffset_1 := 32\n                    switch gt(newLen_1, 31)\n                    case 1 {\n                        let loopEnd_1 := and(newLen_1, not(31))\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 50:1671:1688  \"_symbol = symbol_\" */ 0x04)\n                        /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        let dstPtr_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ srcOffset_1)\n                        let i_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, 32) }\n                        {\n                            sstore(dstPtr_1, mload(add(value2, srcOffset_1)))\n                            dstPtr_1 := add(dstPtr_1, 1)\n                            srcOffset_1 := add(srcOffset_1, 32)\n                        }\n                        if lt(loopEnd_1, newLen_1)\n                        {\n                            let lastValue_1 := mload(add(value2, srcOffset_1))\n                            sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(/** @src 50:1648:1661  \"_name = name_\" */ 0x03, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ newLen_1), 248), not(0)))))\n                        }\n                        sstore(/** @src 50:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ add(shl(1, newLen_1), 1))\n                    }\n                    default {\n                        let value_3 := /** @src -1:-1:-1 */ 0\n                        /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        if newLen_1\n                        {\n                            value_3 := mload(add(value2, srcOffset_1))\n                        }\n                        sstore(/** @src 50:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ or(and(value_3, not(shr(shl(/** @src 50:1648:1661  \"_name = name_\" */ 0x03, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ newLen_1), not(0)))), shl(1, newLen_1)))\n                    }\n                    /// @src 34:1269:1364  \"if (initialOwner == address(0)) {...\"\n                    if /** @src 34:1273:1299  \"initialOwner == address(0)\" */ iszero(/** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _3)\n                    /// @src 34:1269:1364  \"if (initialOwner == address(0)) {...\"\n                    {\n                        /// @src 34:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 34:1322:1353  \"OwnableInvalidOwner(address(0))\" */ shl(224, 0x1e4fbdf7))\n                        /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        mstore(/** @src 50:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src -1:-1:-1 */ 0)\n                        /// @src 34:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 36)\n                    }\n                    let _11 := sload(/** @src 34:3004:3010  \"_owner\" */ 0x05)\n                    /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    sstore(/** @src 34:3004:3010  \"_owner\" */ 0x05, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ or(and(_11, not(sub(shl(160, 1), 1))), _3))\n                    /// @src 34:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                    log3(/** @src -1:-1:-1 */ 0, 0, /** @src 34:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ and(_11, sub(shl(160, 1), 1)), /** @src 34:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ _3)\n                    /// @src 69:3493:3546  \"_name = name.toShortStringWithFallback(_nameFallback)\"\n                    mstore(288, /** @src 69:3501:3546  \"name.toShortStringWithFallback(_nameFallback)\" */ fun_toShortStringWithFallback(value1))\n                    /// @src 69:3556:3618  \"_version = version.toShortStringWithFallback(_versionFallback)\"\n                    mstore(320, /** @src 69:3567:3618  \"version.toShortStringWithFallback(_versionFallback)\" */ fun_toShortStringWithFallback_7441(memPtr))\n                    /// @src 69:3642:3664  \"keccak256(bytes(name))\"\n                    let _12 := keccak256(/** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ add(/** @src 69:3642:3664  \"keccak256(bytes(name))\" */ value1, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 32), mload(/** @src 69:3642:3664  \"keccak256(bytes(name))\" */ value1))\n                    /// @src 69:3628:3664  \"_hashedName = keccak256(bytes(name))\"\n                    mstore(224, /** @src 69:3642:3664  \"keccak256(bytes(name))\" */ _12)\n                    /// @src 69:3691:3716  \"keccak256(bytes(version))\"\n                    let _13 := keccak256(/** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _6, mload(/** @src 69:3691:3716  \"keccak256(bytes(version))\" */ memPtr))\n                    /// @src 69:3674:3716  \"_hashedVersion = keccak256(bytes(version))\"\n                    mstore(256, /** @src 69:3691:3716  \"keccak256(bytes(version))\" */ _13)\n                    /// @src 69:3727:3757  \"_cachedChainId = block.chainid\"\n                    mstore(160, /** @src 69:3744:3757  \"block.chainid\" */ chainid())\n                    /// @src 69:4304:4384  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                    let expr_mpos := /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ mload(size)\n                    /// @src 69:4304:4384  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                    let _14 := add(expr_mpos, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 32)\n                    /// @src 69:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\"\n                    mstore(_14, 0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f)\n                    mstore(add(/** @src 69:4304:4384  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ size), /** @src 69:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ _12)\n                    mstore(add(/** @src 69:4304:4384  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 96), /** @src 69:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ _13)\n                    mstore(add(/** @src 69:4304:4384  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 128), /** @src 69:3744:3757  \"block.chainid\" */ chainid())\n                    /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    mstore(/** @src 69:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 69:4304:4384  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 69:3727:3757  \"_cachedChainId = block.chainid\" */ 160), /** @src 69:4378:4382  \"this\" */ address())\n                    /// @src 69:4304:4384  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                    mstore(expr_mpos, /** @src 69:3727:3757  \"_cachedChainId = block.chainid\" */ 160)\n                    /// @src 69:4304:4384  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                    finalize_allocation(expr_mpos, 192)\n                    /// @src 69:3767:3815  \"_cachedDomainSeparator = _buildDomainSeparator()\"\n                    mstore(/** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 128, /** @src 69:4294:4385  \"keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)))\" */ keccak256(/** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _14, mload(/** @src 69:4294:4385  \"keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)))\" */ expr_mpos)))\n                    /// @src 69:3825:3852  \"_cachedThis = address(this)\"\n                    mstore(/** @src 69:4304:4384  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ 192, /** @src 69:4378:4382  \"this\" */ address())\n                    /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    sstore(/** @src 106:1117:1142  \"_decimals = tokenDecimals\" */ 0x09, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ or(and(sload(/** @src 106:1117:1142  \"_decimals = tokenDecimals\" */ 0x09), /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ not(255)), _4))\n                    let _15 := mload(size)\n                    let _16 := datasize(\"ERC20GearSupply_65079_deployed\")\n                    codecopy(_15, dataoffset(\"ERC20GearSupply_65079_deployed\"), _16)\n                    setimmutable(_15, \"48532\", mload(128))\n                    setimmutable(_15, \"48534\", mload(/** @src 69:3727:3757  \"_cachedChainId = block.chainid\" */ 160))\n                    /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    setimmutable(_15, \"48536\", mload(/** @src 69:4304:4384  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ 192))\n                    /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    setimmutable(_15, \"48538\", mload(/** @src 69:3628:3664  \"_hashedName = keccak256(bytes(name))\" */ 224))\n                    /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    setimmutable(_15, \"48540\", mload(/** @src 69:3674:3716  \"_hashedVersion = keccak256(bytes(version))\" */ 256))\n                    /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    setimmutable(_15, \"48543\", mload(/** @src 69:3493:3546  \"_name = name.toShortStringWithFallback(_nameFallback)\" */ 288))\n                    /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    setimmutable(_15, \"48546\", mload(/** @src 69:3556:3618  \"_version = version.toShortStringWithFallback(_versionFallback)\" */ 320))\n                    /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    return(_15, _16)\n                }\n                function finalize_allocation(memPtr, size)\n                {\n                    let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                    if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x24)\n                    }\n                    mstore(64, newFreePtr)\n                }\n                function abi_decode_string_fromMemory(offset, end) -> array\n                {\n                    if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                    let length := mload(offset)\n                    let size := /** @src -1:-1:-1 */ 0\n                    /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    if gt(length, sub(shl(64, 1), 1))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x24)\n                    }\n                    size := add(and(add(length, 0x1f), not(31)), 0x20)\n                    let memPtr := mload(64)\n                    finalize_allocation(memPtr, size)\n                    mstore(memPtr, length)\n                    if gt(add(add(offset, length), 0x20), end)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    mcopy(add(memPtr, 0x20), add(offset, 0x20), length)\n                    mstore(add(add(memPtr, length), 0x20), /** @src -1:-1:-1 */ 0)\n                    /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    array := memPtr\n                }\n                /// @ast-id 46448 @src 64:2887:3227  \"function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {...\"\n                function fun_toShortStringWithFallback(var_value_mpos) -> var_\n                {\n                    /// @src 64:2983:2994  \"ShortString\"\n                    var_ := /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0\n                    /// @src 64:3010:3029  \"bytes(value).length\"\n                    let expr := /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ mload(/** @src 64:3010:3022  \"bytes(value)\" */ var_value_mpos)\n                    /// @src 64:3006:3221  \"if (bytes(value).length < 32) {...\"\n                    switch /** @src 64:3010:3034  \"bytes(value).length < 32\" */ lt(expr, /** @src 64:3032:3034  \"32\" */ 0x20)\n                    case /** @src 64:3006:3221  \"if (bytes(value).length < 32) {...\" */ 0 {\n                        /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        if gt(expr, sub(shl(64, 1), 1))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        let _1 := sload(/** @src 69:3532:3545  \"_nameFallback\" */ 0x06)\n                        /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        let length := 0\n                        length := shr(1, _1)\n                        let outOfPlaceEncoding := and(_1, 1)\n                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                        if eq(outOfPlaceEncoding, lt(length, /** @src 64:3032:3034  \"32\" */ 0x20))\n                        /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x22)\n                            revert(0, 0x24)\n                        }\n                        if gt(length, 31)\n                        {\n                            mstore(0, /** @src 69:3532:3545  \"_nameFallback\" */ 0x06)\n                            /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            let data := keccak256(0, /** @src 64:3032:3034  \"32\" */ 0x20)\n                            /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            let _2 := add(data, shr(5, add(length, 31)))\n                            let start := add(data, shr(5, add(expr, 31)))\n                            for { } lt(start, _2) { start := add(start, 1) }\n                            { sstore(start, 0) }\n                        }\n                        let srcOffset := 0\n                        srcOffset := /** @src 64:3032:3034  \"32\" */ 0x20\n                        /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        switch gt(expr, 31)\n                        case 1 {\n                            let loopEnd := and(expr, not(31))\n                            mstore(0, /** @src 69:3532:3545  \"_nameFallback\" */ 0x06)\n                            /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            let dstPtr := keccak256(0, /** @src 64:3032:3034  \"32\" */ srcOffset)\n                            /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            let i := 0\n                            for { }\n                            lt(i, loopEnd)\n                            {\n                                i := add(i, /** @src 64:3032:3034  \"32\" */ 0x20)\n                            }\n                            /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            {\n                                sstore(dstPtr, mload(add(var_value_mpos, srcOffset)))\n                                dstPtr := add(dstPtr, 1)\n                                srcOffset := add(srcOffset, /** @src 64:3032:3034  \"32\" */ 0x20)\n                            }\n                            /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            if lt(loopEnd, expr)\n                            {\n                                let lastValue := mload(add(var_value_mpos, srcOffset))\n                                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, expr), 248), not(0)))))\n                            }\n                            sstore(/** @src 69:3532:3545  \"_nameFallback\" */ 0x06, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ add(shl(1, expr), 1))\n                        }\n                        default {\n                            let value := 0\n                            if expr\n                            {\n                                value := mload(add(var_value_mpos, srcOffset))\n                            }\n                            sstore(/** @src 69:3532:3545  \"_nameFallback\" */ 0x06, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ or(and(value, not(shr(shl(3, expr), not(0)))), shl(1, expr)))\n                        }\n                        /// @src 64:3168:3210  \"return ShortString.wrap(FALLBACK_SENTINEL)\"\n                        var_ := /** @src 64:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff\n                        /// @src 64:3168:3210  \"return ShortString.wrap(FALLBACK_SENTINEL)\"\n                        leave\n                    }\n                    default /// @src 64:3006:3221  \"if (bytes(value).length < 32) {...\"\n                    {\n                        /// @src 64:1836:1908  \"if (bstr.length > 31) {...\"\n                        if /** @src 64:1840:1856  \"bstr.length > 31\" */ gt(/** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ mload(/** @src 64:1840:1851  \"bstr.length\" */ var_value_mpos), /** @src 64:1854:1856  \"31\" */ 0x1f)\n                        /// @src 64:1836:1908  \"if (bstr.length > 31) {...\"\n                        {\n                            /// @src 64:1879:1897  \"StringTooLong(str)\"\n                            let _3 := /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ mload(64)\n                            /// @src 64:1879:1897  \"StringTooLong(str)\"\n                            mstore(_3, shl(224, 0x305a27a9))\n                            /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            mstore(/** @src 64:1879:1897  \"StringTooLong(str)\" */ add(_3, 4), /** @src 64:3032:3034  \"32\" */ 0x20)\n                            /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            let length_1 := mload(var_value_mpos)\n                            mstore(add(/** @src 64:1879:1897  \"StringTooLong(str)\" */ _3, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 36), length_1)\n                            mcopy(add(/** @src 64:1879:1897  \"StringTooLong(str)\" */ _3, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 68), add(var_value_mpos, /** @src 64:3032:3034  \"32\" */ 0x20), /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ length_1)\n                            mstore(add(add(/** @src 64:1879:1897  \"StringTooLong(str)\" */ _3, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ length_1), 68), 0)\n                            /// @src 64:1879:1897  \"StringTooLong(str)\"\n                            revert(_3, add(sub(/** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ add(/** @src 64:1879:1897  \"StringTooLong(str)\" */ _3, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ and(add(length_1, /** @src 64:1854:1856  \"31\" */ 0x1f), /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ not(31))), /** @src 64:1879:1897  \"StringTooLong(str)\" */ _3), /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 68))\n                        }\n                        /// @src 64:1957:1970  \"bytes32(bstr)\"\n                        let value_1 := /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0\n                        let length_2 := mload(var_value_mpos)\n                        value_1 := /** @src 69:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ mload(/** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ add(var_value_mpos, /** @src 64:3032:3034  \"32\" */ 0x20))\n                        /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        if lt(length_2, /** @src 64:3032:3034  \"32\" */ 0x20)\n                        /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        {\n                            value_1 := and(value_1, shl(shl(3, sub(/** @src 64:3032:3034  \"32\" */ 0x20, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ length_2)), not(0)))\n                        }\n                        /// @src 64:3050:3077  \"return toShortString(value)\"\n                        var_ := /** @src 64:1949:1985  \"uint256(bytes32(bstr)) | bstr.length\" */ or(value_1, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ length_2)\n                        /// @src 64:3050:3077  \"return toShortString(value)\"\n                        leave\n                    }\n                }\n                /// @ast-id 46448 @src 64:2887:3227  \"function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {...\"\n                function fun_toShortStringWithFallback_7441(var_value_mpos) -> var\n                {\n                    /// @src 64:2983:2994  \"ShortString\"\n                    var := /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0\n                    /// @src 64:3010:3029  \"bytes(value).length\"\n                    let expr := /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ mload(/** @src 64:3010:3022  \"bytes(value)\" */ var_value_mpos)\n                    /// @src 64:3006:3221  \"if (bytes(value).length < 32) {...\"\n                    switch /** @src 64:3010:3034  \"bytes(value).length < 32\" */ lt(expr, /** @src 64:3032:3034  \"32\" */ 0x20)\n                    case /** @src 64:3006:3221  \"if (bytes(value).length < 32) {...\" */ 0 {\n                        /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        if gt(expr, sub(shl(64, 1), 1))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        let _1 := sload(/** @src 69:3601:3617  \"_versionFallback\" */ 0x07)\n                        /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        let length := 0\n                        length := shr(1, _1)\n                        let outOfPlaceEncoding := and(_1, 1)\n                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                        if eq(outOfPlaceEncoding, lt(length, /** @src 64:3032:3034  \"32\" */ 0x20))\n                        /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x22)\n                            revert(0, 0x24)\n                        }\n                        if gt(length, 31)\n                        {\n                            mstore(0, /** @src 69:3601:3617  \"_versionFallback\" */ 0x07)\n                            /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            let data := keccak256(0, /** @src 64:3032:3034  \"32\" */ 0x20)\n                            /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            let _2 := add(data, shr(5, add(length, 31)))\n                            let start := add(data, shr(5, add(expr, 31)))\n                            for { } lt(start, _2) { start := add(start, 1) }\n                            { sstore(start, 0) }\n                        }\n                        let srcOffset := 0\n                        srcOffset := /** @src 64:3032:3034  \"32\" */ 0x20\n                        /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        switch gt(expr, 31)\n                        case 1 {\n                            let loopEnd := and(expr, not(31))\n                            mstore(0, /** @src 69:3601:3617  \"_versionFallback\" */ 0x07)\n                            /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            let dstPtr := keccak256(0, /** @src 64:3032:3034  \"32\" */ srcOffset)\n                            /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            let i := 0\n                            for { }\n                            lt(i, loopEnd)\n                            {\n                                i := add(i, /** @src 64:3032:3034  \"32\" */ 0x20)\n                            }\n                            /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            {\n                                sstore(dstPtr, mload(add(var_value_mpos, srcOffset)))\n                                dstPtr := add(dstPtr, 1)\n                                srcOffset := add(srcOffset, /** @src 64:3032:3034  \"32\" */ 0x20)\n                            }\n                            /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            if lt(loopEnd, expr)\n                            {\n                                let lastValue := mload(add(var_value_mpos, srcOffset))\n                                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, expr), 248), not(0)))))\n                            }\n                            sstore(/** @src 69:3601:3617  \"_versionFallback\" */ 0x07, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ add(shl(1, expr), 1))\n                        }\n                        default {\n                            let value := 0\n                            if expr\n                            {\n                                value := mload(add(var_value_mpos, srcOffset))\n                            }\n                            sstore(/** @src 69:3601:3617  \"_versionFallback\" */ 0x07, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ or(and(value, not(shr(shl(3, expr), not(0)))), shl(1, expr)))\n                        }\n                        /// @src 64:3168:3210  \"return ShortString.wrap(FALLBACK_SENTINEL)\"\n                        var := /** @src 64:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff\n                        /// @src 64:3168:3210  \"return ShortString.wrap(FALLBACK_SENTINEL)\"\n                        leave\n                    }\n                    default /// @src 64:3006:3221  \"if (bytes(value).length < 32) {...\"\n                    {\n                        /// @src 64:1836:1908  \"if (bstr.length > 31) {...\"\n                        if /** @src 64:1840:1856  \"bstr.length > 31\" */ gt(/** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ mload(/** @src 64:1840:1851  \"bstr.length\" */ var_value_mpos), /** @src 64:1854:1856  \"31\" */ 0x1f)\n                        /// @src 64:1836:1908  \"if (bstr.length > 31) {...\"\n                        {\n                            /// @src 64:1879:1897  \"StringTooLong(str)\"\n                            let _3 := /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ mload(64)\n                            /// @src 64:1879:1897  \"StringTooLong(str)\"\n                            mstore(_3, shl(224, 0x305a27a9))\n                            /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            mstore(/** @src 64:1879:1897  \"StringTooLong(str)\" */ add(_3, 4), /** @src 64:3032:3034  \"32\" */ 0x20)\n                            /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            let length_1 := mload(var_value_mpos)\n                            mstore(add(/** @src 64:1879:1897  \"StringTooLong(str)\" */ _3, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 36), length_1)\n                            mcopy(add(/** @src 64:1879:1897  \"StringTooLong(str)\" */ _3, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 68), add(var_value_mpos, /** @src 64:3032:3034  \"32\" */ 0x20), /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ length_1)\n                            mstore(add(add(/** @src 64:1879:1897  \"StringTooLong(str)\" */ _3, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ length_1), 68), 0)\n                            /// @src 64:1879:1897  \"StringTooLong(str)\"\n                            revert(_3, add(sub(/** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ add(/** @src 64:1879:1897  \"StringTooLong(str)\" */ _3, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ and(add(length_1, /** @src 64:1854:1856  \"31\" */ 0x1f), /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ not(31))), /** @src 64:1879:1897  \"StringTooLong(str)\" */ _3), /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 68))\n                        }\n                        /// @src 64:1957:1970  \"bytes32(bstr)\"\n                        let value_1 := /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0\n                        let length_2 := mload(var_value_mpos)\n                        value_1 := /** @src 69:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ mload(/** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ add(var_value_mpos, /** @src 64:3032:3034  \"32\" */ 0x20))\n                        /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        if lt(length_2, /** @src 64:3032:3034  \"32\" */ 0x20)\n                        /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        {\n                            value_1 := and(value_1, shl(shl(3, sub(/** @src 64:3032:3034  \"32\" */ 0x20, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ length_2)), not(0)))\n                        }\n                        /// @src 64:3050:3077  \"return toShortString(value)\"\n                        var := /** @src 64:1949:1985  \"uint256(bytes32(bstr)) | bstr.length\" */ or(value_1, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ length_2)\n                        /// @src 64:3050:3077  \"return toShortString(value)\"\n                        leave\n                    }\n                }\n            }\n            /// @use-src 34:\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\", 50:\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\", 52:\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol\", 53:\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\", 60:\"lib/openzeppelin-contracts/contracts/utils/Context.sol\", 62:\"lib/openzeppelin-contracts/contracts/utils/Nonces.sol\", 64:\"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\", 68:\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\", 69:\"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\", 71:\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\", 106:\"src/erc20/managed/ERC20GearSupply.sol\"\n            object \"ERC20GearSupply_65079_deployed\" {\n                code {\n                    {\n                        /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        let _1 := memoryguard(0x80)\n                        mstore(64, _1)\n                        if iszero(lt(calldatasize(), 4))\n                        {\n                            switch shr(224, calldataload(0))\n                            case 0x06fdde03 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let ret := 0\n                                let slotValue := sload(/** @src 50:1837:1842  \"_name\" */ 0x03)\n                                /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                let length := extract_byte_array_length(slotValue)\n                                mstore(_1, length)\n                                switch and(slotValue, 1)\n                                case 0 {\n                                    mstore(add(_1, 0x20), and(slotValue, not(255)))\n                                    ret := add(add(_1, shl(5, iszero(iszero(length)))), 0x20)\n                                }\n                                case 1 {\n                                    mstore(0, /** @src 50:1837:1842  \"_name\" */ 0x03)\n                                    /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                    let dataPos := keccak256(0, 0x20)\n                                    let i := 0\n                                    for { } lt(i, length) { i := add(i, 0x20) }\n                                    {\n                                        mstore(add(add(_1, i), 0x20), sload(dataPos))\n                                        dataPos := add(dataPos, 1)\n                                    }\n                                    ret := add(add(_1, i), 0x20)\n                                }\n                                finalize_allocation(_1, sub(ret, _1))\n                                let memPos := mload(64)\n                                mstore(memPos, 0x20)\n                                return(memPos, sub(abi_encode_string(_1, add(memPos, 0x20)), memPos))\n                            }\n                            case 0x095ea7b3 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                let value0 := abi_decode_t_address()\n                                /// @src 50:8746:8750  \"true\"\n                                fun_approve(/** @src 60:735:745  \"msg.sender\" */ caller(), /** @src 50:8746:8750  \"true\" */ value0, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ calldataload(36))\n                                let memPos_1 := mload(64)\n                                mstore(memPos_1, 1)\n                                return(memPos_1, 32)\n                            }\n                            case 0x18160ddd {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let _2 := sload(/** @src 50:2881:2893  \"_totalSupply\" */ 0x02)\n                                /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                let memPos_2 := mload(64)\n                                mstore(memPos_2, _2)\n                                return(memPos_2, 32)\n                            }\n                            case 0x23b872dd {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 96) { revert(0, 0) }\n                                let value0_1 := abi_decode_t_address()\n                                let value1 := abi_decode_address()\n                                let value := calldataload(68)\n                                /// @src 50:4854:4859  \"value\"\n                                fun_spendAllowance(value0_1, /** @src 60:735:745  \"msg.sender\" */ caller(), /** @src 50:4854:4859  \"value\" */ value)\n                                /// @src 50:4890:4895  \"value\"\n                                fun_transfer(value0_1, value1, value)\n                                /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                let memPos_3 := mload(64)\n                                mstore(memPos_3, 1)\n                                return(memPos_3, 32)\n                            }\n                            case 0x313ce567 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let value_1 := and(sload(/** @src 106:1333:1342  \"_decimals\" */ 0x09), /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0xff)\n                                let memPos_4 := mload(64)\n                                mstore(memPos_4, value_1)\n                                return(memPos_4, 32)\n                            }\n                            case 0x3644e515 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let ret_1 := /** @src 53:2699:2719  \"_domainSeparatorV4()\" */ fun_domainSeparatorV4()\n                                /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                let memPos_5 := mload(64)\n                                mstore(memPos_5, ret_1)\n                                return(memPos_5, 32)\n                            }\n                            case 0x40c10f19 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                let value0_2 := abi_decode_t_address()\n                                let value_2 := calldataload(36)\n                                /// @src 34:1500:1562  \"modifier onlyOwner() {...\"\n                                fun_checkOwner()\n                                /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                let _3 := and(/** @src 50:7432:7453  \"account == address(0)\" */ value0_2, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ sub(shl(160, 1), 1))\n                                /// @src 50:7432:7453  \"account == address(0)\"\n                                let _4 := iszero(/** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _3)\n                                /// @src 50:7428:7519  \"if (account == address(0)) {...\"\n                                if /** @src 50:7432:7453  \"account == address(0)\" */ _4\n                                /// @src 50:7428:7519  \"if (account == address(0)) {...\"\n                                {\n                                    /// @src 50:7476:7508  \"ERC20InvalidReceiver(address(0))\"\n                                    mstore(/** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0, /** @src 50:7476:7508  \"ERC20InvalidReceiver(address(0))\" */ shl(224, 0xec442f05))\n                                    /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                    mstore(4, 0)\n                                    /// @src 50:7476:7508  \"ERC20InvalidReceiver(address(0))\"\n                                    revert(/** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0, 36)\n                                }\n                                let _5 := sload(/** @src 50:6137:6158  \"_totalSupply += value\" */ 0x02)\n                                /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                let sum := add(_5, value_2)\n                                if gt(_5, sum)\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x11)\n                                    revert(0, 36)\n                                }\n                                sstore(/** @src 50:6137:6158  \"_totalSupply += value\" */ 0x02, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ sum)\n                                /// @src 50:6547:6972  \"if (to == address(0)) {...\"\n                                _4 := /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0\n                                mstore(0, _3)\n                                mstore(0x20, 0)\n                                let dataSlot := keccak256(0, 64)\n                                sstore(dataSlot, add(sload(/** @src 50:6925:6947  \"_balances[to] += value\" */ dataSlot), /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ value_2))\n                                /// @src 50:6987:7012  \"Transfer(from, to, value)\"\n                                let _6 := /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ mload(64)\n                                mstore(_6, value_2)\n                                /// @src 50:6987:7012  \"Transfer(from, to, value)\"\n                                log3(_6, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 32, /** @src 50:6987:7012  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0, /** @src 50:6987:7012  \"Transfer(from, to, value)\" */ _3)\n                                /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                return(0, 0)\n                            }\n                            case 0x42966c68 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                /// @src 52:692:697  \"value\"\n                                fun_burn(/** @src 60:735:745  \"msg.sender\" */ caller(), /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ calldataload(4))\n                                return(0, 0)\n                            }\n                            case 0x70a08231 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                mstore(0, and(abi_decode_t_address(), sub(shl(160, 1), 1)))\n                                mstore(32, 0)\n                                let _7 := sload(keccak256(0, 64))\n                                let memPos_6 := mload(64)\n                                mstore(memPos_6, _7)\n                                return(memPos_6, 32)\n                            }\n                            case 0x715018a6 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                /// @src 34:1500:1562  \"modifier onlyOwner() {...\"\n                                fun_checkOwner()\n                                /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                let _8 := sload(/** @src 34:3004:3010  \"_owner\" */ 0x05)\n                                /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                sstore(/** @src 34:3004:3010  \"_owner\" */ 0x05, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ and(_8, shl(160, 0xffffffffffffffffffffffff)))\n                                /// @src 34:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                                log3(/** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0, 0, /** @src 34:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ and(_8, sub(shl(160, 1), 1)), 0)\n                                return(0, 0)\n                            }\n                            case 0x79cc6790 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                let value0_3 := abi_decode_t_address()\n                                let value_3 := calldataload(36)\n                                /// @src 52:1135:1140  \"value\"\n                                fun_spendAllowance(value0_3, /** @src 60:735:745  \"msg.sender\" */ caller(), /** @src 52:1135:1140  \"value\" */ value_3)\n                                /// @src 52:1166:1171  \"value\"\n                                fun_burn(value0_3, value_3)\n                                /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                return(0, 0)\n                            }\n                            case 0x7ecebe00 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                mstore(0, and(abi_decode_t_address(), sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 62:624:631  \"_nonces\" */ 0x08)\n                                /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                let _9 := sload(keccak256(0, 64))\n                                let memPos_7 := mload(64)\n                                mstore(memPos_7, _9)\n                                return(memPos_7, 32)\n                            }\n                            case 0x84b0196e {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                /// @src 69:6176:6224  \"return _name.toStringWithFallback(_nameFallback)\"\n                                let var_mpos := /** @src 69:6183:6224  \"_name.toStringWithFallback(_nameFallback)\" */ fun_toStringWithFallback(/** @src 69:6183:6188  \"_name\" */ loadimmutable(\"48543\"))\n                                /// @src 69:6631:6685  \"return _version.toStringWithFallback(_versionFallback)\"\n                                let var_mpos_1 := /** @src 69:6638:6685  \"_version.toStringWithFallback(_versionFallback)\" */ fun_toStringWithFallback_6298(/** @src 69:6638:6646  \"_version\" */ loadimmutable(\"48546\"))\n                                /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                let size := 0\n                                let length_1 := 0\n                                length_1 := 0\n                                size := 0x20\n                                let memPtr := mload(64)\n                                finalize_allocation(memPtr, size)\n                                mstore(memPtr, 0)\n                                let size_1 := 0\n                                let length_2 := 0\n                                length_2 := 0\n                                size_1 := size\n                                calldatacopy(0, calldatasize(), 0)\n                                let memPos_8 := mload(64)\n                                mstore(memPos_8, shl(248, 15))\n                                mstore(add(memPos_8, size), 224)\n                                let tail := abi_encode_string(var_mpos, add(memPos_8, 224))\n                                mstore(add(memPos_8, 64), sub(tail, memPos_8))\n                                let tail_1 := abi_encode_string(var_mpos_1, tail)\n                                mstore(add(memPos_8, 96), /** @src 69:5674:5687  \"block.chainid\" */ chainid())\n                                /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                mstore(add(memPos_8, 128), /** @src 69:5709:5713  \"this\" */ address())\n                                /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                mstore(add(memPos_8, 160), 0)\n                                mstore(add(memPos_8, 192), sub(tail_1, memPos_8))\n                                let pos := tail_1\n                                let length_3 := mload(memPtr)\n                                mstore(tail_1, length_3)\n                                pos := add(tail_1, size)\n                                let srcPtr := add(memPtr, size)\n                                let i_1 := 0\n                                for { } lt(i_1, length_3) { i_1 := add(i_1, 1) }\n                                {\n                                    mstore(pos, mload(srcPtr))\n                                    pos := add(pos, size)\n                                    srcPtr := add(srcPtr, size)\n                                }\n                                return(memPos_8, sub(pos, memPos_8))\n                            }\n                            case 0x8da5cb5b {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let value_4 := and(sload(/** @src 34:1710:1716  \"_owner\" */ 0x05), /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ sub(shl(160, 1), 1))\n                                let memPos_9 := mload(64)\n                                mstore(memPos_9, value_4)\n                                return(memPos_9, 32)\n                            }\n                            case 0x95d89b41 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let memPtr_1 := mload(64)\n                                let ret_2 := 0\n                                let slotValue_1 := sload(4)\n                                let length_4 := extract_byte_array_length(slotValue_1)\n                                mstore(memPtr_1, length_4)\n                                switch and(slotValue_1, 1)\n                                case 0 {\n                                    mstore(add(memPtr_1, 0x20), and(slotValue_1, not(255)))\n                                    ret_2 := add(add(memPtr_1, shl(5, iszero(iszero(length_4)))), 0x20)\n                                }\n                                case 1 {\n                                    mstore(0, 4)\n                                    let dataPos_1 := keccak256(0, 0x20)\n                                    let i_2 := 0\n                                    for { } lt(i_2, length_4) { i_2 := add(i_2, 0x20) }\n                                    {\n                                        mstore(add(add(memPtr_1, i_2), 0x20), sload(dataPos_1))\n                                        dataPos_1 := add(dataPos_1, 1)\n                                    }\n                                    ret_2 := add(add(memPtr_1, i_2), 0x20)\n                                }\n                                finalize_allocation(memPtr_1, sub(ret_2, memPtr_1))\n                                let memPos_10 := mload(64)\n                                mstore(memPos_10, 0x20)\n                                return(memPos_10, sub(abi_encode_string(memPtr_1, add(memPos_10, 0x20)), memPos_10))\n                            }\n                            case 0xa9059cbb {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                let value0_4 := abi_decode_t_address()\n                                /// @src 50:3388:3393  \"value\"\n                                fun_transfer(/** @src 60:735:745  \"msg.sender\" */ caller(), /** @src 50:3388:3393  \"value\" */ value0_4, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ calldataload(36))\n                                let memPos_11 := mload(64)\n                                mstore(memPos_11, 1)\n                                return(memPos_11, 32)\n                            }\n                            case 0xd505accf {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 224) { revert(0, 0) }\n                                let value0_5 := abi_decode_t_address()\n                                let value1_1 := abi_decode_address()\n                                let value_5 := calldataload(68)\n                                let value_6 := calldataload(100)\n                                let value_7 := calldataload(132)\n                                if iszero(eq(value_7, and(value_7, 0xff))) { revert(0, 0) }\n                                /// @src 53:1867:1964  \"if (block.timestamp > deadline) {...\"\n                                if /** @src 53:1871:1897  \"block.timestamp > deadline\" */ gt(/** @src 53:1871:1886  \"block.timestamp\" */ timestamp(), /** @src 53:1871:1897  \"block.timestamp > deadline\" */ value_6)\n                                /// @src 53:1867:1964  \"if (block.timestamp > deadline) {...\"\n                                {\n                                    /// @src 53:1920:1953  \"ERC2612ExpiredSignature(deadline)\"\n                                    mstore(/** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0, /** @src 53:1920:1953  \"ERC2612ExpiredSignature(deadline)\" */ shl(225, 0x313c8981))\n                                    /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                    mstore(4, value_6)\n                                    /// @src 53:1920:1953  \"ERC2612ExpiredSignature(deadline)\"\n                                    revert(/** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0, 36)\n                                }\n                                let _10 := and(value0_5, sub(shl(160, 1), 1))\n                                mstore(0, _10)\n                                mstore(32, /** @src 62:1121:1128  \"_nonces\" */ 0x08)\n                                /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                let dataSlot_1 := keccak256(0, 64)\n                                let _11 := sload(/** @src 62:1121:1137  \"_nonces[owner]++\" */ dataSlot_1)\n                                /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                sstore(dataSlot_1, add(/** @src 62:1121:1137  \"_nonces[owner]++\" */ _11, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 1))\n                                /// @src 53:2005:2083  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\"\n                                let expr_mpos := /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ mload(64)\n                                /// @src 53:2005:2083  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\"\n                                let _12 := add(expr_mpos, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 32)\n                                mstore(_12, /** @src 53:1024:1119  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9)\n                                /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                mstore(/** @src 53:1024:1119  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ add(/** @src 53:2005:2083  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\" */ expr_mpos, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 64), _10)\n                                mstore(/** @src 53:1024:1119  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ add(/** @src 53:2005:2083  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\" */ expr_mpos, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 96), and(value1_1, sub(shl(160, 1), 1)))\n                                mstore(/** @src 53:1024:1119  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ add(/** @src 53:2005:2083  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\" */ expr_mpos, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 128), value_5)\n                                mstore(/** @src 53:1024:1119  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ add(/** @src 53:2005:2083  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\" */ expr_mpos, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 160), _11)\n                                mstore(/** @src 53:1024:1119  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ add(/** @src 53:2005:2083  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\" */ expr_mpos, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 192), value_6)\n                                /// @src 53:2005:2083  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\"\n                                mstore(expr_mpos, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 192)\n                                /// @src 53:2005:2083  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\"\n                                finalize_allocation(expr_mpos, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 224)\n                                /// @src 53:1995:2084  \"keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline))\"\n                                let _13 := keccak256(/** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _12, mload(/** @src 53:1995:2084  \"keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline))\" */ expr_mpos))\n                                /// @src 69:5153:5173  \"_domainSeparatorV4()\"\n                                let _14 := fun_domainSeparatorV4()\n                                /// @src 71:3993:4242  \"assembly (\\\"memory-safe\\\") {...\"\n                                let usr$ptr := mload(/** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 64)\n                                /// @src 71:3993:4242  \"assembly (\\\"memory-safe\\\") {...\"\n                                mstore(usr$ptr, \"\\x19\\x01\")\n                                mstore(add(usr$ptr, 0x02), _14)\n                                mstore(add(usr$ptr, 0x22), _13)\n                                /// @src 68:7051:7076  \"tryRecover(hash, v, r, s)\"\n                                let expr_component, expr_component_1, expr_component_2 := fun_tryRecover(/** @src 71:3993:4242  \"assembly (\\\"memory-safe\\\") {...\" */ keccak256(usr$ptr, 0x42), /** @src 68:7051:7076  \"tryRecover(hash, v, r, s)\" */ value_7, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ calldataload(164), calldataload(196))\n                                /// @src 68:7105:7113  \"errorArg\"\n                                fun_throwError(expr_component_1, expr_component_2)\n                                /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                let _15 := and(/** @src 53:2208:2223  \"signer != owner\" */ expr_component, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ sub(shl(160, 1), 1))\n                                /// @src 53:2204:2292  \"if (signer != owner) {...\"\n                                if /** @src 53:2208:2223  \"signer != owner\" */ iszero(eq(/** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _15, _10))\n                                /// @src 53:2204:2292  \"if (signer != owner) {...\"\n                                {\n                                    /// @src 53:2246:2281  \"ERC2612InvalidSigner(signer, owner)\"\n                                    mstore(/** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0, /** @src 53:2246:2281  \"ERC2612InvalidSigner(signer, owner)\" */ shl(225, 0x25c00723))\n                                    /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                    mstore(4, _15)\n                                    mstore(36, _10)\n                                    /// @src 53:2246:2281  \"ERC2612InvalidSigner(signer, owner)\"\n                                    revert(/** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0, 68)\n                                }\n                                /// @src 50:8746:8750  \"true\"\n                                fun_approve(value0_5, value1_1, value_5)\n                                /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                return(0, 0)\n                            }\n                            case 0xdd62ed3e {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                let value0_6 := abi_decode_t_address()\n                                let value1_2 := abi_decode_address()\n                                mstore(0, and(value0_6, sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 50:3561:3572  \"_allowances\" */ 0x01)\n                                /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                let dataSlot_2 := keccak256(0, 64)\n                                /// @src 50:3561:3588  \"_allowances[owner][spender]\"\n                                let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                                /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ and(value1_2, sub(shl(160, 1), 1)))\n                                mstore(0x20, /** @src 50:3561:3579  \"_allowances[owner]\" */ dataSlot_2)\n                                /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x40)\n                                let _16 := sload(/** @src 50:3561:3588  \"_allowances[owner][spender]\" */ dataSlot_3)\n                                /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                let memPos_12 := mload(64)\n                                mstore(memPos_12, _16)\n                                return(memPos_12, 32)\n                            }\n                            case 0xf2fde38b {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                let value0_7 := abi_decode_t_address()\n                                /// @src 34:1500:1562  \"modifier onlyOwner() {...\"\n                                fun_checkOwner()\n                                /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                let _17 := and(/** @src 34:2627:2649  \"newOwner == address(0)\" */ value0_7, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ sub(shl(160, 1), 1))\n                                /// @src 34:2623:2714  \"if (newOwner == address(0)) {...\"\n                                if /** @src 34:2627:2649  \"newOwner == address(0)\" */ iszero(/** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _17)\n                                /// @src 34:2623:2714  \"if (newOwner == address(0)) {...\"\n                                {\n                                    /// @src 34:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                                    mstore(/** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0, /** @src 34:2672:2703  \"OwnableInvalidOwner(address(0))\" */ shl(224, 0x1e4fbdf7))\n                                    /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                    mstore(4, 0)\n                                    /// @src 34:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                                    revert(/** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0, 36)\n                                }\n                                let _18 := sload(/** @src 34:3004:3010  \"_owner\" */ 0x05)\n                                /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                sstore(/** @src 34:3004:3010  \"_owner\" */ 0x05, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ or(and(_18, shl(160, 0xffffffffffffffffffffffff)), _17))\n                                /// @src 34:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                                log3(/** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0, 0, /** @src 34:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ and(_18, sub(shl(160, 1), 1)), /** @src 34:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ _17)\n                                /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                return(0, 0)\n                            }\n                        }\n                        revert(0, 0)\n                    }\n                    function abi_encode_string(value, pos) -> end\n                    {\n                        let length := mload(value)\n                        mstore(pos, length)\n                        mcopy(add(pos, 0x20), add(value, 0x20), length)\n                        mstore(add(add(pos, length), 0x20), /** @src -1:-1:-1 */ 0)\n                        /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n                    }\n                    function abi_decode_t_address() -> value\n                    {\n                        value := calldataload(4)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                    }\n                    function abi_decode_address() -> value\n                    {\n                        value := calldataload(36)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                    }\n                    function extract_byte_array_length(data) -> length\n                    {\n                        length := shr(1, data)\n                        let outOfPlaceEncoding := and(data, 1)\n                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                        if eq(outOfPlaceEncoding, lt(length, 32))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x22)\n                            revert(0, 0x24)\n                        }\n                    }\n                    function abi_encode_string_storage(value, pos) -> ret\n                    {\n                        let slotValue := sload(value)\n                        let length := extract_byte_array_length(slotValue)\n                        mstore(pos, length)\n                        switch and(slotValue, 1)\n                        case 0 {\n                            mstore(add(pos, 0x20), and(slotValue, not(255)))\n                            ret := add(add(pos, shl(5, iszero(iszero(length)))), 0x20)\n                        }\n                        case 1 {\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ value)\n                            let dataPos := keccak256(/** @src -1:-1:-1 */ 0, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x20)\n                            let i := /** @src -1:-1:-1 */ 0\n                            /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            for { } lt(i, length) { i := add(i, 0x20) }\n                            {\n                                mstore(add(add(pos, i), 0x20), sload(dataPos))\n                                dataPos := add(dataPos, 1)\n                            }\n                            ret := add(add(pos, i), 0x20)\n                        }\n                    }\n                    function finalize_allocation(memPtr, size)\n                    {\n                        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(/** @src -1:-1:-1 */ 0, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                    }\n                    /// @ast-id 44043 @src 50:10319:10795  \"function _spendAllowance(address owner, address spender, uint256 value) internal virtual {...\"\n                    function fun_spendAllowance(var_owner, var_spender, var_value)\n                    {\n                        /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        let _1 := and(var_owner, sub(shl(160, 1), 1))\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _1)\n                        mstore(0x20, /** @src 50:3561:3572  \"_allowances\" */ 0x01)\n                        /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x40)\n                        /// @src 50:3561:3588  \"_allowances[owner][spender]\"\n                        let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ and(/** @src 50:10445:10470  \"allowance(owner, spender)\" */ var_spender, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 50:3561:3579  \"_allowances[owner]\" */ dataSlot)\n                        /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x40)\n                        let _2 := sload(/** @src 50:3561:3588  \"_allowances[owner][spender]\" */ dataSlot_1)\n                        /// @src 50:10480:10789  \"if (currentAllowance < type(uint256).max) {...\"\n                        if /** @src 50:10484:10520  \"currentAllowance < type(uint256).max\" */ lt(_2, /** @src 50:10503:10520  \"type(uint256).max\" */ not(0))\n                        /// @src 50:10480:10789  \"if (currentAllowance < type(uint256).max) {...\"\n                        {\n                            /// @src 50:10536:10666  \"if (currentAllowance < value) {...\"\n                            if /** @src 50:10540:10564  \"currentAllowance < value\" */ lt(_2, var_value)\n                            /// @src 50:10536:10666  \"if (currentAllowance < value) {...\"\n                            {\n                                /// @src 50:10591:10651  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 50:10591:10651  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\" */ shl(225, 0x7dc7a0d9))\n                                /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                mstore(/** @src 50:10591:10651  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\" */ 4, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ and(var_spender, sub(shl(160, 1), 1)))\n                                mstore(36, _2)\n                                mstore(68, var_value)\n                                /// @src 50:10591:10651  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                                revert(/** @src -1:-1:-1 */ 0, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 100)\n                            }\n                            /// @src 50:9713:9802  \"if (owner == address(0)) {...\"\n                            if /** @src 50:9717:9736  \"owner == address(0)\" */ iszero(/** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _1)\n                            /// @src 50:9713:9802  \"if (owner == address(0)) {...\"\n                            {\n                                /// @src 50:9759:9791  \"ERC20InvalidApprover(address(0))\"\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 50:9759:9791  \"ERC20InvalidApprover(address(0))\" */ shl(224, 0xe602df05))\n                                /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                mstore(/** @src 50:9759:9791  \"ERC20InvalidApprover(address(0))\" */ 4, /** @src -1:-1:-1 */ 0)\n                                /// @src 50:9759:9791  \"ERC20InvalidApprover(address(0))\"\n                                revert(/** @src -1:-1:-1 */ 0, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 36)\n                            }\n                            /// @src 50:9811:9901  \"if (spender == address(0)) {...\"\n                            if /** @src 50:9815:9836  \"spender == address(0)\" */ iszero(/** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ and(/** @src 50:9815:9836  \"spender == address(0)\" */ var_spender, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ sub(shl(160, 1), 1)))\n                            /// @src 50:9811:9901  \"if (spender == address(0)) {...\"\n                            {\n                                /// @src 50:9859:9890  \"ERC20InvalidSpender(address(0))\"\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 50:9859:9890  \"ERC20InvalidSpender(address(0))\" */ shl(225, 0x4a1406b1))\n                                /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                mstore(/** @src 50:9859:9890  \"ERC20InvalidSpender(address(0))\" */ 4, /** @src -1:-1:-1 */ 0)\n                                /// @src 50:9859:9890  \"ERC20InvalidSpender(address(0))\"\n                                revert(/** @src -1:-1:-1 */ 0, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 36)\n                            }\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _1)\n                            mstore(0x20, /** @src 50:3561:3572  \"_allowances\" */ 0x01)\n                            /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            let dataSlot_2 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x40)\n                            /// @src 50:9910:9937  \"_allowances[owner][spender]\"\n                            let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                            /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ and(/** @src 50:9910:9937  \"_allowances[owner][spender]\" */ var_spender, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ sub(shl(160, 1), 1)))\n                            mstore(0x20, /** @src 50:9910:9928  \"_allowances[owner]\" */ dataSlot_2)\n                            /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x40)\n                            sstore(/** @src 50:9910:9937  \"_allowances[owner][spender]\" */ dataSlot_3, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ sub(/** @src 50:10732:10756  \"currentAllowance - value\" */ _2, var_value))\n                        }\n                    }\n                    /// @ast-id 43774 @src 50:5297:5597  \"function _transfer(address from, address to, uint256 value) internal {...\"\n                    function fun_transfer(var_from, var_to, var_value)\n                    {\n                        /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        let _1 := and(/** @src 50:5380:5398  \"from == address(0)\" */ var_from, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ sub(shl(160, 1), 1))\n                        /// @src 50:5380:5398  \"from == address(0)\"\n                        let _2 := iszero(/** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _1)\n                        /// @src 50:5376:5462  \"if (from == address(0)) {...\"\n                        if /** @src 50:5380:5398  \"from == address(0)\" */ _2\n                        /// @src 50:5376:5462  \"if (from == address(0)) {...\"\n                        {\n                            /// @src 50:5421:5451  \"ERC20InvalidSender(address(0))\"\n                            mstore(/** @src 50:5396:5397  \"0\" */ 0x00, /** @src 50:5421:5451  \"ERC20InvalidSender(address(0))\" */ shl(225, 0x4b637e8f))\n                            /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            mstore(/** @src 50:5421:5451  \"ERC20InvalidSender(address(0))\" */ 4, /** @src 50:5396:5397  \"0\" */ 0x00)\n                            /// @src 50:5421:5451  \"ERC20InvalidSender(address(0))\"\n                            revert(/** @src 50:5396:5397  \"0\" */ 0x00, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 36)\n                        }\n                        let _3 := and(/** @src 50:5475:5491  \"to == address(0)\" */ var_to, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ sub(shl(160, 1), 1))\n                        /// @src 50:5475:5491  \"to == address(0)\"\n                        let _4 := iszero(/** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _3)\n                        /// @src 50:5471:5557  \"if (to == address(0)) {...\"\n                        if /** @src 50:5475:5491  \"to == address(0)\" */ _4\n                        /// @src 50:5471:5557  \"if (to == address(0)) {...\"\n                        {\n                            /// @src 50:5514:5546  \"ERC20InvalidReceiver(address(0))\"\n                            mstore(/** @src 50:5396:5397  \"0\" */ 0x00, /** @src 50:7476:7508  \"ERC20InvalidReceiver(address(0))\" */ shl(224, 0xec442f05))\n                            /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            mstore(/** @src 50:5514:5546  \"ERC20InvalidReceiver(address(0))\" */ 4, /** @src 50:5396:5397  \"0\" */ 0x00)\n                            /// @src 50:5514:5546  \"ERC20InvalidReceiver(address(0))\"\n                            revert(/** @src 50:5396:5397  \"0\" */ 0x00, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 36)\n                        }\n                        /// @src 50:5997:6537  \"if (from == address(0)) {...\"\n                        _2 := /** @src 50:5396:5397  \"0\" */ 0x00\n                        /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        mstore(/** @src 50:5396:5397  \"0\" */ 0x00, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _1)\n                        mstore(0x20, /** @src 50:5396:5397  \"0\" */ 0x00)\n                        /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        let _5 := sload(keccak256(/** @src 50:5396:5397  \"0\" */ 0x00, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x40))\n                        /// @src 50:6240:6355  \"if (fromBalance < value) {...\"\n                        if /** @src 50:6244:6263  \"fromBalance < value\" */ lt(_5, var_value)\n                        /// @src 50:6240:6355  \"if (fromBalance < value) {...\"\n                        {\n                            /// @src 50:6290:6340  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                            mstore(/** @src 50:5396:5397  \"0\" */ 0x00, /** @src 50:6290:6340  \"ERC20InsufficientBalance(from, fromBalance, value)\" */ shl(226, 0x391434e3))\n                            /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            mstore(/** @src 50:6290:6340  \"ERC20InsufficientBalance(from, fromBalance, value)\" */ 4, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _1)\n                            mstore(36, _5)\n                            mstore(68, var_value)\n                            /// @src 50:6290:6340  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                            revert(/** @src 50:5396:5397  \"0\" */ 0x00, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 100)\n                        }\n                        mstore(/** @src 50:5396:5397  \"0\" */ 0x00, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _1)\n                        mstore(0x20, /** @src 50:5396:5397  \"0\" */ 0x00)\n                        /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        sstore(keccak256(/** @src 50:5396:5397  \"0\" */ 0x00, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x40), sub(/** @src 50:6493:6512  \"fromBalance - value\" */ _5, var_value))\n                        /// @src 50:6547:6972  \"if (to == address(0)) {...\"\n                        _4 := /** @src 50:5396:5397  \"0\" */ 0x00\n                        /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        mstore(/** @src 50:5396:5397  \"0\" */ 0x00, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _3)\n                        mstore(0x20, /** @src 50:5396:5397  \"0\" */ 0x00)\n                        /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        let dataSlot := keccak256(/** @src 50:5396:5397  \"0\" */ 0x00, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x40)\n                        sstore(dataSlot, add(sload(/** @src 50:6925:6947  \"_balances[to] += value\" */ dataSlot), /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ var_value))\n                        /// @src 50:6987:7012  \"Transfer(from, to, value)\"\n                        let _6 := /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ mload(64)\n                        mstore(_6, var_value)\n                        /// @src 50:6987:7012  \"Transfer(from, to, value)\"\n                        log3(_6, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 32, /** @src 50:6987:7012  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _1, _3)\n                    }\n                    /// @ast-id 48634 @src 69:3945:4207  \"function _domainSeparatorV4() internal view returns (bytes32) {...\"\n                    function fun_domainSeparatorV4() -> var\n                    {\n                        /// @src 69:3998:4005  \"bytes32\"\n                        var := /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0\n                        /// @src 69:4021:4084  \"address(this) == _cachedThis && block.chainid == _cachedChainId\"\n                        let expr := /** @src 69:4021:4049  \"address(this) == _cachedThis\" */ eq(/** @src 69:4029:4033  \"this\" */ address(), /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ and(/** @src 69:4038:4049  \"_cachedThis\" */ loadimmutable(\"48536\"), /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ sub(shl(160, 1), 1)))\n                        /// @src 69:4021:4084  \"address(this) == _cachedThis && block.chainid == _cachedChainId\"\n                        if expr\n                        {\n                            expr := /** @src 69:4053:4084  \"block.chainid == _cachedChainId\" */ eq(/** @src 69:4053:4066  \"block.chainid\" */ chainid(), /** @src 69:4070:4084  \"_cachedChainId\" */ loadimmutable(\"48534\"))\n                        }\n                        /// @src 69:4017:4201  \"if (address(this) == _cachedThis && block.chainid == _cachedChainId) {...\"\n                        switch expr\n                        case 0 {\n                            /// @src 69:4304:4384  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                            let expr_mpos := /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ mload(64)\n                            /// @src 69:4304:4384  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                            let _1 := add(expr_mpos, 0x20)\n                            /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            mstore(_1, /** @src 69:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f)\n                            /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            mstore(/** @src 69:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 69:4304:4384  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 64), /** @src 69:4326:4337  \"_hashedName\" */ loadimmutable(\"48538\"))\n                            /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            mstore(/** @src 69:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 69:4304:4384  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 69:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 96), /** @src 69:4339:4353  \"_hashedVersion\" */ loadimmutable(\"48540\"))\n                            /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            mstore(/** @src 69:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 69:4304:4384  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 69:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 128), /** @src 69:4355:4368  \"block.chainid\" */ chainid())\n                            /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            mstore(/** @src 69:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 69:4304:4384  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 69:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 160), /** @src 69:4029:4033  \"this\" */ address())\n                            /// @src 69:4304:4384  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                            mstore(expr_mpos, /** @src 69:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 160)\n                            /// @src 69:4304:4384  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                            finalize_allocation(expr_mpos, 192)\n                            /// @src 69:4160:4190  \"return _buildDomainSeparator()\"\n                            var := /** @src 69:4294:4385  \"keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)))\" */ keccak256(/** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _1, mload(/** @src 69:4294:4385  \"keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)))\" */ expr_mpos))\n                            /// @src 69:4160:4190  \"return _buildDomainSeparator()\"\n                            leave\n                        }\n                        default /// @src 69:4017:4201  \"if (address(this) == _cachedThis && block.chainid == _cachedChainId) {...\"\n                        {\n                            /// @src 69:4100:4129  \"return _cachedDomainSeparator\"\n                            var := /** @src 69:4107:4129  \"_cachedDomainSeparator\" */ loadimmutable(\"48532\")\n                            /// @src 69:4100:4129  \"return _cachedDomainSeparator\"\n                            leave\n                        }\n                    }\n                    /// @ast-id 42475 @src 34:1796:1958  \"function _checkOwner() internal view virtual {...\"\n                    function fun_checkOwner()\n                    {\n                        /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        let value := and(sload(/** @src 34:1710:1716  \"_owner\" */ 0x05), /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ sub(shl(160, 1), 1))\n                        /// @src 34:1851:1952  \"if (owner() != _msgSender()) {...\"\n                        if /** @src 34:1855:1878  \"owner() != _msgSender()\" */ iszero(eq(/** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ value, /** @src 60:735:745  \"msg.sender\" */ caller()))\n                        /// @src 34:1851:1952  \"if (owner() != _msgSender()) {...\"\n                        {\n                            /// @src 34:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 34:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\" */ shl(224, 0x118cdaa7))\n                            /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            mstore(/** @src 34:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\" */ 4, /** @src 60:735:745  \"msg.sender\" */ caller())\n                            /// @src 34:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                            revert(/** @src -1:-1:-1 */ 0, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 36)\n                        }\n                    }\n                    /// @ast-id 43917 @src 50:7888:8094  \"function _burn(address account, uint256 value) internal {...\"\n                    function fun_burn(var_account, var_value)\n                    {\n                        /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        let _1 := and(/** @src 50:7958:7979  \"account == address(0)\" */ var_account, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ sub(shl(160, 1), 1))\n                        /// @src 50:7958:7979  \"account == address(0)\"\n                        let _2 := iszero(/** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _1)\n                        /// @src 50:7954:8043  \"if (account == address(0)) {...\"\n                        if /** @src 50:7958:7979  \"account == address(0)\" */ _2\n                        /// @src 50:7954:8043  \"if (account == address(0)) {...\"\n                        {\n                            /// @src 50:8002:8032  \"ERC20InvalidSender(address(0))\"\n                            mstore(/** @src 50:7977:7978  \"0\" */ 0x00, /** @src 50:5421:5451  \"ERC20InvalidSender(address(0))\" */ shl(225, 0x4b637e8f))\n                            /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            mstore(/** @src 50:8002:8032  \"ERC20InvalidSender(address(0))\" */ 4, /** @src 50:7977:7978  \"0\" */ 0x00)\n                            /// @src 50:8002:8032  \"ERC20InvalidSender(address(0))\"\n                            revert(/** @src 50:7977:7978  \"0\" */ 0x00, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 36)\n                        }\n                        /// @src 50:5997:6537  \"if (from == address(0)) {...\"\n                        _2 := /** @src 50:7977:7978  \"0\" */ 0x00\n                        /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        mstore(/** @src 50:7977:7978  \"0\" */ 0x00, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _1)\n                        mstore(0x20, /** @src 50:7977:7978  \"0\" */ 0x00)\n                        /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        let _3 := sload(keccak256(/** @src 50:7977:7978  \"0\" */ 0x00, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x40))\n                        /// @src 50:6240:6355  \"if (fromBalance < value) {...\"\n                        if /** @src 50:6244:6263  \"fromBalance < value\" */ lt(_3, var_value)\n                        /// @src 50:6240:6355  \"if (fromBalance < value) {...\"\n                        {\n                            /// @src 50:6290:6340  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                            mstore(/** @src 50:7977:7978  \"0\" */ 0x00, /** @src 50:6290:6340  \"ERC20InsufficientBalance(from, fromBalance, value)\" */ shl(226, 0x391434e3))\n                            /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            mstore(/** @src 50:6290:6340  \"ERC20InsufficientBalance(from, fromBalance, value)\" */ 4, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _1)\n                            mstore(36, _3)\n                            mstore(68, var_value)\n                            /// @src 50:6290:6340  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                            revert(/** @src 50:7977:7978  \"0\" */ 0x00, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 100)\n                        }\n                        mstore(/** @src 50:7977:7978  \"0\" */ 0x00, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _1)\n                        mstore(0x20, /** @src 50:7977:7978  \"0\" */ 0x00)\n                        /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        sstore(keccak256(/** @src 50:7977:7978  \"0\" */ 0x00, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x40), sub(/** @src 50:6493:6512  \"fromBalance - value\" */ _3, var_value))\n                        /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        sstore(/** @src 50:6714:6735  \"_totalSupply -= value\" */ 0x02, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ sub(sload(/** @src 50:6714:6735  \"_totalSupply -= value\" */ 0x02), /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ var_value))\n                        /// @src 50:6987:7012  \"Transfer(from, to, value)\"\n                        let _4 := /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ mload(64)\n                        mstore(_4, var_value)\n                        /// @src 50:6987:7012  \"Transfer(from, to, value)\"\n                        log3(_4, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 32, /** @src 50:6987:7012  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _1, /** @src 50:7977:7978  \"0\" */ 0x00)\n                    }\n                    /// @ast-id 43995 @src 50:9605:10037  \"function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {...\"\n                    function fun_approve(var_owner, var_spender, var_value)\n                    {\n                        /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        let _1 := and(/** @src 50:9717:9736  \"owner == address(0)\" */ var_owner, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ sub(shl(160, 1), 1))\n                        /// @src 50:9713:9802  \"if (owner == address(0)) {...\"\n                        if /** @src 50:9717:9736  \"owner == address(0)\" */ iszero(/** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _1)\n                        /// @src 50:9713:9802  \"if (owner == address(0)) {...\"\n                        {\n                            /// @src 50:9759:9791  \"ERC20InvalidApprover(address(0))\"\n                            mstore(/** @src 50:9734:9735  \"0\" */ 0x00, /** @src 50:9759:9791  \"ERC20InvalidApprover(address(0))\" */ shl(224, 0xe602df05))\n                            /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            mstore(/** @src 50:9759:9791  \"ERC20InvalidApprover(address(0))\" */ 4, /** @src 50:9734:9735  \"0\" */ 0x00)\n                            /// @src 50:9759:9791  \"ERC20InvalidApprover(address(0))\"\n                            revert(/** @src 50:9734:9735  \"0\" */ 0x00, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 36)\n                        }\n                        let _2 := and(/** @src 50:9815:9836  \"spender == address(0)\" */ var_spender, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ sub(shl(160, 1), 1))\n                        /// @src 50:9811:9901  \"if (spender == address(0)) {...\"\n                        if /** @src 50:9815:9836  \"spender == address(0)\" */ iszero(/** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _2)\n                        /// @src 50:9811:9901  \"if (spender == address(0)) {...\"\n                        {\n                            /// @src 50:9859:9890  \"ERC20InvalidSpender(address(0))\"\n                            mstore(/** @src 50:9734:9735  \"0\" */ 0x00, /** @src 50:9859:9890  \"ERC20InvalidSpender(address(0))\" */ shl(225, 0x4a1406b1))\n                            /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            mstore(/** @src 50:9859:9890  \"ERC20InvalidSpender(address(0))\" */ 4, /** @src 50:9734:9735  \"0\" */ 0x00)\n                            /// @src 50:9859:9890  \"ERC20InvalidSpender(address(0))\"\n                            revert(/** @src 50:9734:9735  \"0\" */ 0x00, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 36)\n                        }\n                        mstore(/** @src 50:9734:9735  \"0\" */ 0x00, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _1)\n                        mstore(0x20, /** @src 50:8746:8750  \"true\" */ 0x01)\n                        /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        let dataSlot := keccak256(/** @src 50:9734:9735  \"0\" */ 0x00, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x40)\n                        /// @src 50:9910:9937  \"_allowances[owner][spender]\"\n                        let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _2)\n                        mstore(0x20, /** @src 50:9910:9928  \"_allowances[owner]\" */ dataSlot)\n                        /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x40)\n                        sstore(/** @src 50:9910:9937  \"_allowances[owner][spender]\" */ dataSlot_1, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ var_value)\n                        /// @src 50:9989:10020  \"Approval(owner, spender, value)\"\n                        let _3 := /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ mload(0x40)\n                        mstore(_3, var_value)\n                        /// @src 50:9989:10020  \"Approval(owner, spender, value)\"\n                        log3(_3, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x20, /** @src 50:9989:10020  \"Approval(owner, spender, value)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, _1, _2)\n                    }\n                    /// @ast-id 46475 @src 64:3368:3635  \"function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {...\"\n                    function fun_toStringWithFallback(var_value) -> var_mpos\n                    {\n                        /// @src 64:3462:3475  \"string memory\"\n                        var_mpos := /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 96\n                        /// @src 64:3487:3629  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\"\n                        switch /** @src 64:3491:3537  \"ShortString.unwrap(value) != FALLBACK_SENTINEL\" */ iszero(eq(var_value, /** @src 64:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff))\n                        case /** @src 64:3487:3629  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\" */ 0 {\n                            /// @src 64:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            let memPtr := /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ mload(64)\n                            /// @src 64:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            finalize_allocation(memPtr, sub(abi_encode_string_storage(/** @src 69:6210:6223  \"_nameFallback\" */ 0x06, /** @src 64:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ memPtr), memPtr))\n                            /// @src 64:3606:3618  \"return store\"\n                            var_mpos := memPtr\n                            leave\n                        }\n                        default /// @src 64:3487:3629  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\"\n                        {\n                            /// @src 64:2625:2665  \"uint256(ShortString.unwrap(sstr)) & 0xFF\"\n                            let expr := and(var_value, /** @src 64:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff)\n                            /// @src 64:2675:2744  \"if (result > 31) {...\"\n                            if /** @src 64:2679:2690  \"result > 31\" */ gt(expr, /** @src 64:2688:2690  \"31\" */ 0x1f)\n                            /// @src 64:2675:2744  \"if (result > 31) {...\"\n                            {\n                                /// @src 64:2713:2733  \"InvalidShortString()\"\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 64:2713:2733  \"InvalidShortString()\" */ shl(226, 0x2cd44ac3))\n                                revert(/** @src -1:-1:-1 */ 0, /** @src 64:2713:2733  \"InvalidShortString()\" */ 4)\n                            }\n                            /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            let size := /** @src -1:-1:-1 */ 0\n                            /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            let _1 := /** @src -1:-1:-1 */ 0\n                            /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            _1 := /** @src -1:-1:-1 */ 0\n                            /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            size := 64\n                            let memPtr_1 := mload(64)\n                            finalize_allocation(memPtr_1, 64)\n                            mstore(memPtr_1, /** @src 64:2311:2313  \"32\" */ 0x20)\n                            /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            let dataStart := add(memPtr_1, /** @src 64:2311:2313  \"32\" */ 0x20)\n                            /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            calldatacopy(dataStart, calldatasize(), add(64, not(31)))\n                            /// @src 64:2324:2430  \"assembly (\\\"memory-safe\\\") {...\"\n                            mstore(memPtr_1, expr)\n                            mstore(dataStart, var_value)\n                            /// @src 64:3553:3575  \"return toString(value)\"\n                            var_mpos := memPtr_1\n                            leave\n                        }\n                    }\n                    /// @ast-id 46475 @src 64:3368:3635  \"function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {...\"\n                    function fun_toStringWithFallback_6298(var_value) -> var__mpos\n                    {\n                        /// @src 64:3462:3475  \"string memory\"\n                        var__mpos := /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 96\n                        /// @src 64:3487:3629  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\"\n                        switch /** @src 64:3491:3537  \"ShortString.unwrap(value) != FALLBACK_SENTINEL\" */ iszero(eq(var_value, /** @src 64:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff))\n                        case /** @src 64:3487:3629  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\" */ 0 {\n                            /// @src 64:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            let memPtr := /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ mload(64)\n                            /// @src 64:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            finalize_allocation(memPtr, sub(abi_encode_string_storage(/** @src 69:6668:6684  \"_versionFallback\" */ 0x07, /** @src 64:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ memPtr), memPtr))\n                            /// @src 64:3606:3618  \"return store\"\n                            var__mpos := memPtr\n                            leave\n                        }\n                        default /// @src 64:3487:3629  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\"\n                        {\n                            /// @src 64:2625:2665  \"uint256(ShortString.unwrap(sstr)) & 0xFF\"\n                            let expr := and(var_value, /** @src 64:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff)\n                            /// @src 64:2675:2744  \"if (result > 31) {...\"\n                            if /** @src 64:2679:2690  \"result > 31\" */ gt(expr, /** @src 64:2688:2690  \"31\" */ 0x1f)\n                            /// @src 64:2675:2744  \"if (result > 31) {...\"\n                            {\n                                /// @src 64:2713:2733  \"InvalidShortString()\"\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 64:2713:2733  \"InvalidShortString()\" */ shl(226, 0x2cd44ac3))\n                                revert(/** @src -1:-1:-1 */ 0, /** @src 64:2713:2733  \"InvalidShortString()\" */ 4)\n                            }\n                            /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            let size := /** @src -1:-1:-1 */ 0\n                            /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            let _1 := /** @src -1:-1:-1 */ 0\n                            /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            _1 := /** @src -1:-1:-1 */ 0\n                            /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            size := 64\n                            let memPtr_1 := mload(64)\n                            finalize_allocation(memPtr_1, 64)\n                            mstore(memPtr_1, /** @src 64:2311:2313  \"32\" */ 0x20)\n                            /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            let dataStart := add(memPtr_1, /** @src 64:2311:2313  \"32\" */ 0x20)\n                            /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            calldatacopy(dataStart, calldatasize(), add(64, not(31)))\n                            /// @src 64:2324:2430  \"assembly (\\\"memory-safe\\\") {...\"\n                            mstore(memPtr_1, expr)\n                            mstore(dataStart, var_value)\n                            /// @src 64:3553:3575  \"return toString(value)\"\n                            var__mpos := memPtr_1\n                            leave\n                        }\n                    }\n                    /// @ast-id 48425 @src 68:5203:6754  \"function tryRecover(...\"\n                    function fun_tryRecover(var_hash, var_v, var_r, var_s) -> var_recovered, var_err, var_errArg\n                    {\n                        /// @src 68:6266:6430  \"if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {...\"\n                        if /** @src 68:6270:6349  \"uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0\" */ gt(var_s, /** @src 68:6283:6349  \"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0\" */ 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0)\n                        /// @src 68:6266:6430  \"if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {...\"\n                        {\n                            /// @src 68:6365:6419  \"return (address(0), RecoverError.InvalidSignatureS, s)\"\n                            var_recovered := /** @src 68:6381:6382  \"0\" */ 0x00\n                            /// @src 68:6365:6419  \"return (address(0), RecoverError.InvalidSignatureS, s)\"\n                            var_err := /** @src 68:6385:6415  \"RecoverError.InvalidSignatureS\" */ 3\n                            /// @src 68:6365:6419  \"return (address(0), RecoverError.InvalidSignatureS, s)\"\n                            var_errArg := var_s\n                            leave\n                        }\n                        /// @src 68:6541:6565  \"ecrecover(hash, v, r, s)\"\n                        let _1 := /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ mload(64)\n                        mstore(_1, var_hash)\n                        mstore(add(_1, 32), and(var_v, 0xff))\n                        mstore(add(_1, 64), var_r)\n                        mstore(add(_1, 96), var_s)\n                        /// @src 68:6541:6565  \"ecrecover(hash, v, r, s)\"\n                        mstore(/** @src -1:-1:-1 */ 0, 0)\n                        /// @src 68:6541:6565  \"ecrecover(hash, v, r, s)\"\n                        if iszero(staticcall(gas(), 1, _1, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 128, /** @src -1:-1:-1 */ 0, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 32))\n                        /// @src 68:6541:6565  \"ecrecover(hash, v, r, s)\"\n                        {\n                            /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            let pos := mload(64)\n                            returndatacopy(pos, /** @src -1:-1:-1 */ 0, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 68:6541:6565  \"ecrecover(hash, v, r, s)\"\n                        let _2 := mload(/** @src -1:-1:-1 */ 0)\n                        /// @src 68:6575:6688  \"if (signer == address(0)) {...\"\n                        if /** @src 68:6579:6599  \"signer == address(0)\" */ iszero(/** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ and(/** @src 68:6579:6599  \"signer == address(0)\" */ _2, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ sub(shl(160, 1), 1)))\n                        /// @src 68:6575:6688  \"if (signer == address(0)) {...\"\n                        {\n                            /// @src 68:6615:6677  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                            var_recovered := /** @src -1:-1:-1 */ 0\n                            /// @src 68:6615:6677  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                            var_err := /** @src 68:6541:6565  \"ecrecover(hash, v, r, s)\" */ 1\n                            /// @src 68:6615:6677  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                            var_errArg := /** @src -1:-1:-1 */ 0\n                            /// @src 68:6615:6677  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                            leave\n                        }\n                        /// @src 68:6698:6747  \"return (signer, RecoverError.NoError, bytes32(0))\"\n                        var_recovered := _2\n                        var_err := /** @src -1:-1:-1 */ 0\n                        /// @src 68:6698:6747  \"return (signer, RecoverError.NoError, bytes32(0))\"\n                        var_errArg := /** @src -1:-1:-1 */ 0\n                    }\n                    /// @ast-id 48510 @src 68:7280:7812  \"function _throwError(RecoverError error, bytes32 errorArg) private pure {...\"\n                    function fun_throwError(var_error, var_errorArg)\n                    {\n                        /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        let _1 := iszero(lt(var_error, 4))\n                        if _1\n                        {\n                            mstore(/** @src 68:7375:7395  \"RecoverError.NoError\" */ 0, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x21)\n                            revert(/** @src 68:7375:7395  \"RecoverError.NoError\" */ 0, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x24)\n                        }\n                        /// @src 68:7362:7806  \"if (error == RecoverError.NoError) {...\"\n                        switch /** @src 68:7366:7395  \"error == RecoverError.NoError\" */ iszero(var_error)\n                        case /** @src 68:7362:7806  \"if (error == RecoverError.NoError) {...\" */ 0 {\n                            /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            _1 := /** @src 68:7375:7395  \"RecoverError.NoError\" */ 0\n                            /// @src 68:7458:7806  \"if (error == RecoverError.InvalidSignature) {...\"\n                            switch /** @src 68:7462:7500  \"error == RecoverError.InvalidSignature\" */ eq(var_error, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 1)\n                            case /** @src 68:7458:7806  \"if (error == RecoverError.InvalidSignature) {...\" */ 0 {\n                                /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                _1 := /** @src 68:7375:7395  \"RecoverError.NoError\" */ 0\n                                /// @src 68:7563:7806  \"if (error == RecoverError.InvalidSignatureLength) {...\"\n                                switch /** @src 68:7567:7611  \"error == RecoverError.InvalidSignatureLength\" */ eq(var_error, /** @src 68:7576:7611  \"RecoverError.InvalidSignatureLength\" */ 2)\n                                case /** @src 68:7563:7806  \"if (error == RecoverError.InvalidSignatureLength) {...\" */ 0 {\n                                    /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                    _1 := /** @src 68:7375:7395  \"RecoverError.NoError\" */ 0\n                                    /// @src 68:7697:7806  \"if (error == RecoverError.InvalidSignatureS) {...\"\n                                    if /** @src 68:7701:7740  \"error == RecoverError.InvalidSignatureS\" */ eq(var_error, /** @src 68:7710:7740  \"RecoverError.InvalidSignatureS\" */ 3)\n                                    /// @src 68:7697:7806  \"if (error == RecoverError.InvalidSignatureS) {...\"\n                                    {\n                                        /// @src 68:7763:7795  \"ECDSAInvalidSignatureS(errorArg)\"\n                                        mstore(/** @src 68:7375:7395  \"RecoverError.NoError\" */ 0, /** @src 68:7763:7795  \"ECDSAInvalidSignatureS(errorArg)\" */ shl(226, 0x35e2f383))\n                                        /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                        mstore(4, var_errorArg)\n                                        /// @src 68:7763:7795  \"ECDSAInvalidSignatureS(errorArg)\"\n                                        revert(/** @src 68:7375:7395  \"RecoverError.NoError\" */ 0, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 36)\n                                    }\n                                }\n                                default /// @src 68:7563:7806  \"if (error == RecoverError.InvalidSignatureLength) {...\"\n                                {\n                                    /// @src 68:7634:7680  \"ECDSAInvalidSignatureLength(uint256(errorArg))\"\n                                    mstore(/** @src 68:7375:7395  \"RecoverError.NoError\" */ 0, /** @src 68:7634:7680  \"ECDSAInvalidSignatureLength(uint256(errorArg))\" */ shl(224, 0xfce698f7))\n                                    /// @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                    mstore(4, var_errorArg)\n                                    /// @src 68:7634:7680  \"ECDSAInvalidSignatureLength(uint256(errorArg))\"\n                                    revert(/** @src 68:7375:7395  \"RecoverError.NoError\" */ 0, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 36)\n                                }\n                            }\n                            default /// @src 68:7458:7806  \"if (error == RecoverError.InvalidSignature) {...\"\n                            {\n                                /// @src 68:7523:7546  \"ECDSAInvalidSignature()\"\n                                mstore(/** @src 68:7375:7395  \"RecoverError.NoError\" */ 0, /** @src 68:7523:7546  \"ECDSAInvalidSignature()\" */ shl(224, 0xf645eedf))\n                                revert(/** @src 68:7375:7395  \"RecoverError.NoError\" */ 0, /** @src 106:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 4)\n                            }\n                        }\n                        default /// @src 68:7362:7806  \"if (error == RecoverError.NoError) {...\"\n                        {\n                            /// @src 68:7411:7418  \"return;\"\n                            leave\n                        }\n                    }\n                }\n                data \".metadata\" hex\"\"\n            }\n        }\n        data \".metadata\" hex\"\"\n    }\n}\n","ast":{"absolutePath":"src/ERC20Manager.sol","id":62965,"exportedSymbols":{"AccessControlUpgradeable":[40063],"BridgingPayment":[61632],"CustomEnumerableMap":[66721],"ERC20GearSupply":[65079],"ERC20Manager":[62964],"EnumerableSet":[56696],"IBridgingPayment":[65117],"IERC20":[44122],"IERC20Burnable":[65135],"IERC20Manager":[65410],"IERC20Mintable":[65546],"IERC20Permit":[44384],"IGovernance":[65652],"IMessageHandler":[65774],"IPausable":[66077],"Initializable":[40526],"LibString":[66745],"PausableUpgradeable":[41923],"SafeERC20":[44848],"UUPSUpgradeable":[40708]},"nodeType":"SourceUnit","src":"74:25871:95","nodes":[{"id":61634,"nodeType":"PragmaDirective","src":"74:24:95","nodes":[],"literals":["solidity","^","0.8",".30"]},{"id":61636,"nodeType":"ImportDirective","src":"100:96:95","nodes":[],"absolutePath":"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","nameLocation":"-1:-1:-1","scope":62965,"sourceUnit":40527,"symbolAliases":[{"foreign":{"id":61635,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40526,"src":"108:13:95","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":61638,"nodeType":"ImportDirective","src":"197:113:95","nodes":[],"absolutePath":"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","nameLocation":"-1:-1:-1","scope":62965,"sourceUnit":40064,"symbolAliases":[{"foreign":{"id":61637,"name":"AccessControlUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40063,"src":"205:24:95","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":61640,"nodeType":"ImportDirective","src":"311:102:95","nodes":[],"absolutePath":"lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol","nameLocation":"-1:-1:-1","scope":62965,"sourceUnit":41924,"symbolAliases":[{"foreign":{"id":61639,"name":"PausableUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41923,"src":"319:19:95","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":61642,"nodeType":"ImportDirective","src":"414:100:95","nodes":[],"absolutePath":"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","nameLocation":"-1:-1:-1","scope":62965,"sourceUnit":40709,"symbolAliases":[{"foreign":{"id":61641,"name":"UUPSUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40708,"src":"422:15:95","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":61644,"nodeType":"ImportDirective","src":"515:70:95","nodes":[],"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","nameLocation":"-1:-1:-1","scope":62965,"sourceUnit":44123,"symbolAliases":[{"foreign":{"id":61643,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44122,"src":"523:6:95","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":61646,"nodeType":"ImportDirective","src":"586:93:95","nodes":[],"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","nameLocation":"-1:-1:-1","scope":62965,"sourceUnit":44385,"symbolAliases":[{"foreign":{"id":61645,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44384,"src":"594:12:95","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":61648,"nodeType":"ImportDirective","src":"680:82:95","nodes":[],"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","nameLocation":"-1:-1:-1","scope":62965,"sourceUnit":44849,"symbolAliases":[{"foreign":{"id":61647,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44848,"src":"688:9:95","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":61650,"nodeType":"ImportDirective","src":"763:86:95","nodes":[],"absolutePath":"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol","file":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","nameLocation":"-1:-1:-1","scope":62965,"sourceUnit":56697,"symbolAliases":[{"foreign":{"id":61649,"name":"EnumerableSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56696,"src":"771:13:95","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":61652,"nodeType":"ImportDirective","src":"850:68:95","nodes":[],"absolutePath":"src/erc20/managed/ERC20GearSupply.sol","file":"./erc20/managed/ERC20GearSupply.sol","nameLocation":"-1:-1:-1","scope":62965,"sourceUnit":65080,"symbolAliases":[{"foreign":{"id":61651,"name":"ERC20GearSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65079,"src":"858:15:95","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":61654,"nodeType":"ImportDirective","src":"919:72:95","nodes":[],"absolutePath":"src/libraries/CustomEnumerableMap.sol","file":"./libraries/CustomEnumerableMap.sol","nameLocation":"-1:-1:-1","scope":62965,"sourceUnit":66722,"symbolAliases":[{"foreign":{"id":61653,"name":"CustomEnumerableMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":66721,"src":"927:19:95","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":61656,"nodeType":"ImportDirective","src":"992:52:95","nodes":[],"absolutePath":"src/libraries/LibString.sol","file":"./libraries/LibString.sol","nameLocation":"-1:-1:-1","scope":62965,"sourceUnit":66746,"symbolAliases":[{"foreign":{"id":61655,"name":"LibString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":66745,"src":"1000:9:95","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":61658,"nodeType":"ImportDirective","src":"1045:54:95","nodes":[],"absolutePath":"src/BridgingPayment.sol","file":"./BridgingPayment.sol","nameLocation":"-1:-1:-1","scope":62965,"sourceUnit":61633,"symbolAliases":[{"foreign":{"id":61657,"name":"BridgingPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61632,"src":"1053:15:95","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":61660,"nodeType":"ImportDirective","src":"1100:67:95","nodes":[],"absolutePath":"src/interfaces/IBridgingPayment.sol","file":"./interfaces/IBridgingPayment.sol","nameLocation":"-1:-1:-1","scope":62965,"sourceUnit":65118,"symbolAliases":[{"foreign":{"id":61659,"name":"IBridgingPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65117,"src":"1108:16:95","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":61662,"nodeType":"ImportDirective","src":"1168:63:95","nodes":[],"absolutePath":"src/interfaces/IERC20Burnable.sol","file":"./interfaces/IERC20Burnable.sol","nameLocation":"-1:-1:-1","scope":62965,"sourceUnit":65136,"symbolAliases":[{"foreign":{"id":61661,"name":"IERC20Burnable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65135,"src":"1176:14:95","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":61664,"nodeType":"ImportDirective","src":"1232:61:95","nodes":[],"absolutePath":"src/interfaces/IERC20Manager.sol","file":"./interfaces/IERC20Manager.sol","nameLocation":"-1:-1:-1","scope":62965,"sourceUnit":65535,"symbolAliases":[{"foreign":{"id":61663,"name":"IERC20Manager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65410,"src":"1240:13:95","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":61666,"nodeType":"ImportDirective","src":"1294:63:95","nodes":[],"absolutePath":"src/interfaces/IERC20Mintable.sol","file":"./interfaces/IERC20Mintable.sol","nameLocation":"-1:-1:-1","scope":62965,"sourceUnit":65547,"symbolAliases":[{"foreign":{"id":61665,"name":"IERC20Mintable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65546,"src":"1302:14:95","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":61668,"nodeType":"ImportDirective","src":"1358:57:95","nodes":[],"absolutePath":"src/interfaces/IGovernance.sol","file":"./interfaces/IGovernance.sol","nameLocation":"-1:-1:-1","scope":62965,"sourceUnit":65763,"symbolAliases":[{"foreign":{"id":61667,"name":"IGovernance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65652,"src":"1366:11:95","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":61670,"nodeType":"ImportDirective","src":"1416:65:95","nodes":[],"absolutePath":"src/interfaces/IMessageHandler.sol","file":"./interfaces/IMessageHandler.sol","nameLocation":"-1:-1:-1","scope":62965,"sourceUnit":65775,"symbolAliases":[{"foreign":{"id":61669,"name":"IMessageHandler","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65774,"src":"1424:15:95","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":61672,"nodeType":"ImportDirective","src":"1482:53:95","nodes":[],"absolutePath":"src/interfaces/IPausable.sol","file":"./interfaces/IPausable.sol","nameLocation":"-1:-1:-1","scope":62965,"sourceUnit":66078,"symbolAliases":[{"foreign":{"id":61671,"name":"IPausable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":66077,"src":"1490:9:95","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":62964,"nodeType":"ContractDefinition","src":"1537:24407:95","nodes":[{"id":61690,"nodeType":"UsingForDirective","src":"1717:27:95","nodes":[],"global":false,"libraryName":{"id":61687,"name":"SafeERC20","nameLocations":["1723:9:95"],"nodeType":"IdentifierPath","referencedDeclaration":44848,"src":"1723:9:95"},"typeName":{"id":61689,"nodeType":"UserDefinedTypeName","pathNode":{"id":61688,"name":"IERC20","nameLocations":["1737:6:95"],"nodeType":"IdentifierPath","referencedDeclaration":44122,"src":"1737:6:95"},"referencedDeclaration":44122,"src":"1737:6:95","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$44122","typeString":"contract IERC20"}}},{"id":61694,"nodeType":"UsingForDirective","src":"1750:49:95","nodes":[],"global":false,"libraryName":{"id":61691,"name":"EnumerableSet","nameLocations":["1756:13:95"],"nodeType":"IdentifierPath","referencedDeclaration":56696,"src":"1756:13:95"},"typeName":{"id":61693,"nodeType":"UserDefinedTypeName","pathNode":{"id":61692,"name":"EnumerableSet.Bytes32Set","nameLocations":["1774:13:95","1788:10:95"],"nodeType":"IdentifierPath","referencedDeclaration":55501,"src":"1774:24:95"},"referencedDeclaration":55501,"src":"1774:24:95","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$55501_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}}},{"id":61698,"nodeType":"UsingForDirective","src":"1804:49:95","nodes":[],"global":false,"libraryName":{"id":61695,"name":"EnumerableSet","nameLocations":["1810:13:95"],"nodeType":"IdentifierPath","referencedDeclaration":56696,"src":"1810:13:95"},"typeName":{"id":61697,"nodeType":"UserDefinedTypeName","pathNode":{"id":61696,"name":"EnumerableSet.AddressSet","nameLocations":["1828:13:95","1842:10:95"],"nodeType":"IdentifierPath","referencedDeclaration":55671,"src":"1828:24:95"},"referencedDeclaration":55671,"src":"1828:24:95","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$55671_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},{"id":61702,"nodeType":"UsingForDirective","src":"1859:72:95","nodes":[],"global":false,"libraryName":{"id":61699,"name":"CustomEnumerableMap","nameLocations":["1865:19:95"],"nodeType":"IdentifierPath","referencedDeclaration":66721,"src":"1865:19:95"},"typeName":{"id":61701,"nodeType":"UserDefinedTypeName","pathNode":{"id":61700,"name":"CustomEnumerableMap.AddressToTokenTypeMap","nameLocations":["1889:19:95","1909:21:95"],"nodeType":"IdentifierPath","referencedDeclaration":66439,"src":"1889:41:95"},"referencedDeclaration":66439,"src":"1889:41:95","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToTokenTypeMap_$66439_storage_ptr","typeString":"struct CustomEnumerableMap.AddressToTokenTypeMap"}}},{"id":61706,"nodeType":"VariableDeclaration","src":"1988:42:95","nodes":[],"constant":true,"documentation":{"id":61703,"nodeType":"StructuredDocumentation","src":"1937:46:95","text":" @dev `bytes32 sender` size."},"mutability":"constant","name":"SENDER_SIZE","nameLocation":"2014:11:95","scope":62964,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":61704,"name":"uint256","nodeType":"ElementaryTypeName","src":"1988:7:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3332","id":61705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2028:2:95","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"visibility":"internal"},{"id":61710,"nodeType":"VariableDeclaration","src":"2089:44:95","nodes":[],"constant":true,"documentation":{"id":61707,"nodeType":"StructuredDocumentation","src":"2036:48:95","text":" @dev `address receiver` size."},"mutability":"constant","name":"RECEIVER_SIZE","nameLocation":"2115:13:95","scope":62964,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":61708,"name":"uint256","nodeType":"ElementaryTypeName","src":"2089:7:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3230","id":61709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2131:2:95","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"internal"},{"id":61714,"nodeType":"VariableDeclaration","src":"2189:41:95","nodes":[],"constant":true,"documentation":{"id":61711,"nodeType":"StructuredDocumentation","src":"2139:45:95","text":" @dev `address token` size."},"mutability":"constant","name":"TOKEN_SIZE","nameLocation":"2215:10:95","scope":62964,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":61712,"name":"uint256","nodeType":"ElementaryTypeName","src":"2189:7:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3230","id":61713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2228:2:95","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"internal"},{"id":61718,"nodeType":"VariableDeclaration","src":"2287:42:95","nodes":[],"constant":true,"documentation":{"id":61715,"nodeType":"StructuredDocumentation","src":"2236:46:95","text":" @dev `uint256 amount` size."},"mutability":"constant","name":"AMOUNT_SIZE","nameLocation":"2313:11:95","scope":62964,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":61716,"name":"uint256","nodeType":"ElementaryTypeName","src":"2287:7:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3332","id":61717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2327:2:95","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"visibility":"internal"},{"id":61728,"nodeType":"VariableDeclaration","src":"2390:104:95","nodes":[],"constant":true,"documentation":{"id":61719,"nodeType":"StructuredDocumentation","src":"2336:49:95","text":" @dev Size of transfer message."},"mutability":"constant","name":"TRANSFER_MESSAGE_SIZE","nameLocation":"2416:21:95","scope":62964,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":61720,"name":"uint256","nodeType":"ElementaryTypeName","src":"2390:7:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":61727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":61725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":61723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":61721,"name":"SENDER_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61706,"src":"2440:11:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":61722,"name":"RECEIVER_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61710,"src":"2454:13:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2440:27:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":61724,"name":"TOKEN_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61714,"src":"2470:10:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2440:40:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":61726,"name":"AMOUNT_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61718,"src":"2483:11:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2440:54:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"id":61732,"nodeType":"VariableDeclaration","src":"2559:49:95","nodes":[],"constant":true,"documentation":{"id":61729,"nodeType":"StructuredDocumentation","src":"2501:53:95","text":" @dev `address receiver` bit shift."},"mutability":"constant","name":"RECEIVER_BIT_SHIFT","nameLocation":"2585:18:95","scope":62964,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":61730,"name":"uint256","nodeType":"ElementaryTypeName","src":"2559:7:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3936","id":61731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2606:2:95","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"visibility":"internal"},{"id":61736,"nodeType":"VariableDeclaration","src":"2669:46:95","nodes":[],"constant":true,"documentation":{"id":61733,"nodeType":"StructuredDocumentation","src":"2614:50:95","text":" @dev `address token` bit shift."},"mutability":"constant","name":"TOKEN_BIT_SHIFT","nameLocation":"2695:15:95","scope":62964,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":61734,"name":"uint256","nodeType":"ElementaryTypeName","src":"2669:7:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3936","id":61735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2713:2:95","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"visibility":"internal"},{"id":61740,"nodeType":"VariableDeclaration","src":"2772:38:95","nodes":[],"constant":true,"documentation":{"id":61737,"nodeType":"StructuredDocumentation","src":"2722:45:95","text":" @dev `SENDER_SIZE` offset."},"mutability":"constant","name":"OFFSET1","nameLocation":"2798:7:95","scope":62964,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":61738,"name":"uint256","nodeType":"ElementaryTypeName","src":"2772:7:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3332","id":61739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2808:2:95","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"visibility":"internal"},{"id":61744,"nodeType":"VariableDeclaration","src":"2882:38:95","nodes":[],"constant":true,"documentation":{"id":61741,"nodeType":"StructuredDocumentation","src":"2816:61:95","text":" @dev `SENDER_SIZE + RECEIVER_SIZE` offset."},"mutability":"constant","name":"OFFSET2","nameLocation":"2908:7:95","scope":62964,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":61742,"name":"uint256","nodeType":"ElementaryTypeName","src":"2882:7:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3532","id":61743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2918:2:95","typeDescriptions":{"typeIdentifier":"t_rational_52_by_1","typeString":"int_const 52"},"value":"52"},"visibility":"internal"},{"id":61748,"nodeType":"VariableDeclaration","src":"3005:38:95","nodes":[],"constant":true,"documentation":{"id":61745,"nodeType":"StructuredDocumentation","src":"2926:74:95","text":" @dev `SENDER_SIZE + RECEIVER_SIZE + TOKEN_SIZE` offset."},"mutability":"constant","name":"OFFSET3","nameLocation":"3031:7:95","scope":62964,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":61746,"name":"uint256","nodeType":"ElementaryTypeName","src":"3005:7:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3732","id":61747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3041:2:95","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},"visibility":"internal"},{"id":61752,"nodeType":"VariableDeclaration","src":"3189:47:95","nodes":[],"constant":true,"documentation":{"id":61749,"nodeType":"StructuredDocumentation","src":"3134:50:95","text":" @dev `uint8 discriminant` size."},"mutability":"constant","name":"DISCRIMINANT_SIZE","nameLocation":"3215:17:95","scope":62964,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":61750,"name":"uint256","nodeType":"ElementaryTypeName","src":"3189:7:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":61751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3235:1:95","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"id":61756,"nodeType":"VariableDeclaration","src":"3303:54:95","nodes":[],"constant":true,"documentation":{"id":61753,"nodeType":"StructuredDocumentation","src":"3243:55:95","text":" @dev `uint8 discriminant` bit shift."},"mutability":"constant","name":"DISCRIMINANT_BIT_SHIFT","nameLocation":"3329:22:95","scope":62964,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":61754,"name":"uint256","nodeType":"ElementaryTypeName","src":"3303:7:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323438","id":61755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3354:3:95","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},"visibility":"internal"},{"id":61760,"nodeType":"VariableDeclaration","src":"3420:37:95","nodes":[],"constant":true,"documentation":{"id":61757,"nodeType":"StructuredDocumentation","src":"3364:51:95","text":" @dev `DISCRIMINANT_SIZE` offset."},"mutability":"constant","name":"OFFSET4","nameLocation":"3446:7:95","scope":62964,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":61758,"name":"uint256","nodeType":"ElementaryTypeName","src":"3420:7:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":61759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3456:1:95","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"id":61764,"nodeType":"VariableDeclaration","src":"3614:48:95","nodes":[],"constant":true,"documentation":{"id":61761,"nodeType":"StructuredDocumentation","src":"3548:61:95","text":" @dev Add VFT manager message discriminant."},"mutability":"constant","name":"ADD_VFT_MANAGER","nameLocation":"3640:15:95","scope":62964,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":61762,"name":"uint256","nodeType":"ElementaryTypeName","src":"3614:7:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":61763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3658:4:95","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"id":61768,"nodeType":"VariableDeclaration","src":"3724:47:95","nodes":[],"constant":true,"documentation":{"id":61765,"nodeType":"StructuredDocumentation","src":"3669:50:95","text":" @dev `bytes32 vftManager` size."},"mutability":"constant","name":"VFT_MANAGER_SIZE","nameLocation":"3750:16:95","scope":62964,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":61766,"name":"uint256","nodeType":"ElementaryTypeName","src":"3724:7:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3332","id":61767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3769:2:95","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"visibility":"internal"},{"id":61774,"nodeType":"VariableDeclaration","src":"3839:93:95","nodes":[],"constant":true,"documentation":{"id":61769,"nodeType":"StructuredDocumentation","src":"3778:56:95","text":" @dev Size of add VFT manager message."},"mutability":"constant","name":"ADD_VFT_MANAGER_MESSAGE_SIZE","nameLocation":"3865:28:95","scope":62964,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":61770,"name":"uint256","nodeType":"ElementaryTypeName","src":"3839:7:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":61773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":61771,"name":"DISCRIMINANT_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61752,"src":"3896:17:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":61772,"name":"VFT_MANAGER_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61768,"src":"3916:16:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3896:36:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"id":61778,"nodeType":"VariableDeclaration","src":"4077:46:95","nodes":[],"constant":true,"documentation":{"id":61775,"nodeType":"StructuredDocumentation","src":"4023:49:95","text":" @dev `bytes32 tokenName` size."},"mutability":"constant","name":"TOKEN_NAME_SIZE","nameLocation":"4103:15:95","scope":62964,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":61776,"name":"uint256","nodeType":"ElementaryTypeName","src":"4077:7:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3332","id":61777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4121:2:95","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"visibility":"internal"},{"id":61782,"nodeType":"VariableDeclaration","src":"4185:48:95","nodes":[],"constant":true,"documentation":{"id":61779,"nodeType":"StructuredDocumentation","src":"4129:51:95","text":" @dev `bytes32 tokenSymbol` size."},"mutability":"constant","name":"TOKEN_SYMBOL_SIZE","nameLocation":"4211:17:95","scope":62964,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":61780,"name":"uint256","nodeType":"ElementaryTypeName","src":"4185:7:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3332","id":61781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4231:2:95","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"visibility":"internal"},{"id":61786,"nodeType":"VariableDeclaration","src":"4295:49:95","nodes":[],"constant":true,"documentation":{"id":61783,"nodeType":"StructuredDocumentation","src":"4239:51:95","text":" @dev `uint8 tokenDecimals` size."},"mutability":"constant","name":"TOKEN_DECIMALS_SIZE","nameLocation":"4321:19:95","scope":62964,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":61784,"name":"uint256","nodeType":"ElementaryTypeName","src":"4295:7:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":61785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4343:1:95","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"id":61790,"nodeType":"VariableDeclaration","src":"4412:56:95","nodes":[],"constant":true,"documentation":{"id":61787,"nodeType":"StructuredDocumentation","src":"4351:56:95","text":" @dev `uint8 tokenDecimals` bit shift."},"mutability":"constant","name":"TOKEN_DECIMALS_BIT_SHIFT","nameLocation":"4438:24:95","scope":62964,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":61788,"name":"uint256","nodeType":"ElementaryTypeName","src":"4412:7:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323438","id":61789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4465:3:95","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},"visibility":"internal"},{"id":61794,"nodeType":"VariableDeclaration","src":"4549:38:95","nodes":[],"constant":true,"documentation":{"id":61791,"nodeType":"StructuredDocumentation","src":"4475:69:95","text":" @dev `DISCRIMINANT_SIZE + TOKEN_NAME_SIZE` offset."},"mutability":"constant","name":"OFFSET5","nameLocation":"4575:7:95","scope":62964,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":61792,"name":"uint256","nodeType":"ElementaryTypeName","src":"4549:7:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3333","id":61793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4585:2:95","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"33"},"visibility":"internal"},{"id":61798,"nodeType":"VariableDeclaration","src":"4687:38:95","nodes":[],"constant":true,"documentation":{"id":61795,"nodeType":"StructuredDocumentation","src":"4593:89:95","text":" @dev `DISCRIMINANT_SIZE + TOKEN_NAME_SIZE + TOKEN_SYMBOL_SIZE` offset."},"mutability":"constant","name":"OFFSET6","nameLocation":"4713:7:95","scope":62964,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":61796,"name":"uint256","nodeType":"ElementaryTypeName","src":"4687:7:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3635","id":61797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4723:2:95","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"visibility":"internal"},{"id":61808,"nodeType":"VariableDeclaration","src":"4815:146:95","nodes":[],"constant":true,"documentation":{"id":61799,"nodeType":"StructuredDocumentation","src":"4732:78:95","text":" @dev Size of register token message (for `TokenType.Gear`)."},"mutability":"constant","name":"REGISTER_GEAR_TOKEN_MESSAGE_SIZE","nameLocation":"4841:32:95","scope":62964,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":61800,"name":"uint256","nodeType":"ElementaryTypeName","src":"4815:7:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":61807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":61805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":61803,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":61801,"name":"DISCRIMINANT_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61752,"src":"4884:17:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":61802,"name":"TOKEN_NAME_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61778,"src":"4904:15:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4884:35:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":61804,"name":"TOKEN_SYMBOL_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61782,"src":"4922:17:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4884:55:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":61806,"name":"TOKEN_DECIMALS_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61786,"src":"4942:19:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4884:77:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"id":61812,"nodeType":"VariableDeclaration","src":"5102:50:95","nodes":[],"constant":true,"documentation":{"id":61809,"nodeType":"StructuredDocumentation","src":"5052:45:95","text":" @dev `address token` size."},"mutability":"constant","name":"ETHEREUM_TOKEN_SIZE","nameLocation":"5128:19:95","scope":62964,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":61810,"name":"uint256","nodeType":"ElementaryTypeName","src":"5102:7:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3230","id":61811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5150:2:95","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"internal"},{"id":61818,"nodeType":"VariableDeclaration","src":"5246:104:95","nodes":[],"constant":true,"documentation":{"id":61813,"nodeType":"StructuredDocumentation","src":"5159:82:95","text":" @dev Size of register token message (for `TokenType.Ethereum`)."},"mutability":"constant","name":"REGISTER_ETHEREUM_TOKEN_MESSAGE_SIZE","nameLocation":"5272:36:95","scope":62964,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":61814,"name":"uint256","nodeType":"ElementaryTypeName","src":"5246:7:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":61817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":61815,"name":"DISCRIMINANT_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61752,"src":"5311:17:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":61816,"name":"ETHEREUM_TOKEN_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61812,"src":"5331:19:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:39:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"id":61822,"nodeType":"VariableDeclaration","src":"5412:55:95","nodes":[],"constant":true,"documentation":{"id":61819,"nodeType":"StructuredDocumentation","src":"5357:50:95","text":" @dev `address token` bit shift."},"mutability":"constant","name":"ETHEREUM_TOKEN_BIT_SHIFT","nameLocation":"5438:24:95","scope":62964,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":61820,"name":"uint256","nodeType":"ElementaryTypeName","src":"5412:7:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3936","id":61821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5465:2:95","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"visibility":"internal"},{"id":61831,"nodeType":"VariableDeclaration","src":"5474:60:95","nodes":[],"constant":true,"functionSelector":"e63ab1e9","mutability":"constant","name":"PAUSER_ROLE","nameLocation":"5498:11:95","scope":62964,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":61823,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5474:7:95","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"arguments":[{"hexValue":"30783031","id":61828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5528:4:95","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":61827,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5520:7:95","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":61826,"name":"uint256","nodeType":"ElementaryTypeName","src":"5520:7:95","typeDescriptions":{}}},"id":61829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5520:13:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":61825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5512:7:95","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":61824,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5512:7:95","typeDescriptions":{}}},"id":61830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5512:22:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"id":61834,"nodeType":"VariableDeclaration","src":"5541:36:95","nodes":[],"constant":false,"mutability":"mutable","name":"_governanceAdmin","nameLocation":"5561:16:95","scope":62964,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$65652","typeString":"contract IGovernance"},"typeName":{"id":61833,"nodeType":"UserDefinedTypeName","pathNode":{"id":61832,"name":"IGovernance","nameLocations":["5541:11:95"],"nodeType":"IdentifierPath","referencedDeclaration":65652,"src":"5541:11:95"},"referencedDeclaration":65652,"src":"5541:11:95","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$65652","typeString":"contract IGovernance"}},"visibility":"private"},{"id":61837,"nodeType":"VariableDeclaration","src":"5583:37:95","nodes":[],"constant":false,"mutability":"mutable","name":"_governancePauser","nameLocation":"5603:17:95","scope":62964,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$65652","typeString":"contract IGovernance"},"typeName":{"id":61836,"nodeType":"UserDefinedTypeName","pathNode":{"id":61835,"name":"IGovernance","nameLocations":["5583:11:95"],"nodeType":"IdentifierPath","referencedDeclaration":65652,"src":"5583:11:95"},"referencedDeclaration":65652,"src":"5583:11:95","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$65652","typeString":"contract IGovernance"}},"visibility":"private"},{"id":61839,"nodeType":"VariableDeclaration","src":"5626:29:95","nodes":[],"constant":false,"mutability":"mutable","name":"_messageQueue","nameLocation":"5642:13:95","scope":62964,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61838,"name":"address","nodeType":"ElementaryTypeName","src":"5626:7:95","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"id":61842,"nodeType":"VariableDeclaration","src":"5661:45:95","nodes":[],"constant":false,"mutability":"mutable","name":"_vftManagers","nameLocation":"5694:12:95","scope":62964,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$55501_storage","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":61841,"nodeType":"UserDefinedTypeName","pathNode":{"id":61840,"name":"EnumerableSet.Bytes32Set","nameLocations":["5661:13:95","5675:10:95"],"nodeType":"IdentifierPath","referencedDeclaration":55501,"src":"5661:24:95"},"referencedDeclaration":55501,"src":"5661:24:95","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$55501_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"private"},{"id":61845,"nodeType":"VariableDeclaration","src":"5712:57:95","nodes":[],"constant":false,"mutability":"mutable","name":"_tokens","nameLocation":"5762:7:95","scope":62964,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToTokenTypeMap_$66439_storage","typeString":"struct CustomEnumerableMap.AddressToTokenTypeMap"},"typeName":{"id":61844,"nodeType":"UserDefinedTypeName","pathNode":{"id":61843,"name":"CustomEnumerableMap.AddressToTokenTypeMap","nameLocations":["5712:19:95","5732:21:95"],"nodeType":"IdentifierPath","referencedDeclaration":66439,"src":"5712:41:95"},"referencedDeclaration":66439,"src":"5712:41:95","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToTokenTypeMap_$66439_storage_ptr","typeString":"struct CustomEnumerableMap.AddressToTokenTypeMap"}},"visibility":"private"},{"id":61848,"nodeType":"VariableDeclaration","src":"5775:50:95","nodes":[],"constant":false,"mutability":"mutable","name":"_bridgingPayments","nameLocation":"5808:17:95","scope":62964,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$55671_storage","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":61847,"nodeType":"UserDefinedTypeName","pathNode":{"id":61846,"name":"EnumerableSet.AddressSet","nameLocations":["5775:13:95","5789:10:95"],"nodeType":"IdentifierPath","referencedDeclaration":55671,"src":"5775:24:95"},"referencedDeclaration":55671,"src":"5775:24:95","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$55671_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"private"},{"id":61856,"nodeType":"FunctionDefinition","src":"5900:53:95","nodes":[],"body":{"id":61855,"nodeType":"Block","src":"5914:39:95","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":61852,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40480,"src":"5924:20:95","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":61853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5924:22:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":61854,"nodeType":"ExpressionStatement","src":"5924:22:95"}]},"documentation":{"id":61849,"nodeType":"StructuredDocumentation","src":"5832:63:95","text":" @custom:oz-upgrades-unsafe-allow constructor"},"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","parameters":{"id":61850,"nodeType":"ParameterList","parameters":[],"src":"5911:2:95"},"returnParameters":{"id":61851,"nodeType":"ParameterList","parameters":[],"src":"5914:0:95"},"scope":62964,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":61968,"nodeType":"FunctionDefinition","src":"6690:1002:95","nodes":[],"body":{"id":61967,"nodeType":"Block","src":"6907:785:95","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":61876,"name":"__AccessControl_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39764,"src":"6917:20:95","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":61877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6917:22:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":61878,"nodeType":"ExpressionStatement","src":"6917:22:95"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":61879,"name":"__Pausable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41827,"src":"6949:15:95","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":61880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6949:17:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":61881,"nodeType":"ExpressionStatement","src":"6949:17:95"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":61882,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40580,"src":"6976:22:95","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":61883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6976:24:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":61884,"nodeType":"ExpressionStatement","src":"6976:24:95"},{"expression":{"arguments":[{"id":61886,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39729,"src":"7022:18:95","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":61889,"name":"governanceAdmin_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61860,"src":"7050:16:95","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$65652","typeString":"contract IGovernance"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IGovernance_$65652","typeString":"contract IGovernance"}],"id":61888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7042:7:95","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61887,"name":"address","nodeType":"ElementaryTypeName","src":"7042:7:95","typeDescriptions":{}}},"id":61890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7042:25:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":61885,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40016,"src":"7011:10:95","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":61891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7011:57:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":61892,"nodeType":"ExpressionStatement","src":"7011:57:95"},{"expression":{"arguments":[{"id":61894,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61831,"src":"7090:11:95","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":61897,"name":"governanceAdmin_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61860,"src":"7111:16:95","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$65652","typeString":"contract IGovernance"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IGovernance_$65652","typeString":"contract IGovernance"}],"id":61896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7103:7:95","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61895,"name":"address","nodeType":"ElementaryTypeName","src":"7103:7:95","typeDescriptions":{}}},"id":61898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7103:25:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":61893,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40016,"src":"7079:10:95","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":61899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7079:50:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":61900,"nodeType":"ExpressionStatement","src":"7079:50:95"},{"expression":{"arguments":[{"id":61902,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61831,"src":"7150:11:95","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":61905,"name":"governancePauser_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61863,"src":"7171:17:95","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$65652","typeString":"contract IGovernance"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IGovernance_$65652","typeString":"contract IGovernance"}],"id":61904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7163:7:95","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61903,"name":"address","nodeType":"ElementaryTypeName","src":"7163:7:95","typeDescriptions":{}}},"id":61906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7163:26:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":61901,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40016,"src":"7139:10:95","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":61907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7139:51:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":61908,"nodeType":"ExpressionStatement","src":"7139:51:95"},{"expression":{"id":61911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":61909,"name":"_governanceAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61834,"src":"7201:16:95","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$65652","typeString":"contract IGovernance"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":61910,"name":"governanceAdmin_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61860,"src":"7220:16:95","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$65652","typeString":"contract IGovernance"}},"src":"7201:35:95","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$65652","typeString":"contract IGovernance"}},"id":61912,"nodeType":"ExpressionStatement","src":"7201:35:95"},{"expression":{"id":61915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":61913,"name":"_governancePauser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61837,"src":"7246:17:95","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$65652","typeString":"contract IGovernance"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":61914,"name":"governancePauser_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61863,"src":"7266:17:95","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$65652","typeString":"contract IGovernance"}},"src":"7246:37:95","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$65652","typeString":"contract IGovernance"}},"id":61916,"nodeType":"ExpressionStatement","src":"7246:37:95"},{"expression":{"id":61919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":61917,"name":"_messageQueue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61839,"src":"7293:13:95","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":61918,"name":"messageQueue_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61865,"src":"7309:13:95","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7293:29:95","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":61920,"nodeType":"ExpressionStatement","src":"7293:29:95"},{"expression":{"arguments":[{"id":61924,"name":"vftManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61867,"src":"7349:10:95","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":61921,"name":"_vftManagers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61842,"src":"7332:12:95","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$55501_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":61923,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7345:3:95","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":55519,"src":"7332:16:95","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Set_$55501_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$55501_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"}},"id":61925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7332:28:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":61926,"nodeType":"ExpressionStatement","src":"7332:28:95"},{"body":{"id":61965,"nodeType":"Block","src":"7416:270:95","statements":[{"assignments":[61940],"declarations":[{"constant":false,"id":61940,"mutability":"mutable","name":"tokenInfo","nameLocation":"7447:9:95","nodeType":"VariableDeclaration","scope":61965,"src":"7430:26:95","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$65226_memory_ptr","typeString":"struct IERC20Manager.TokenInfo"},"typeName":{"id":61939,"nodeType":"UserDefinedTypeName","pathNode":{"id":61938,"name":"TokenInfo","nameLocations":["7430:9:95"],"nodeType":"IdentifierPath","referencedDeclaration":65226,"src":"7430:9:95"},"referencedDeclaration":65226,"src":"7430:9:95","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$65226_storage_ptr","typeString":"struct IERC20Manager.TokenInfo"}},"visibility":"internal"}],"id":61944,"initialValue":{"baseExpression":{"id":61941,"name":"tokens_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61871,"src":"7459:7:95","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenInfo_$65226_memory_ptr_$dyn_memory_ptr","typeString":"struct IERC20Manager.TokenInfo memory[] memory"}},"id":61943,"indexExpression":{"id":61942,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61928,"src":"7467:1:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7459:10:95","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$65226_memory_ptr","typeString":"struct IERC20Manager.TokenInfo memory"}},"nodeType":"VariableDeclarationStatement","src":"7430:39:95"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_TokenType_$65219","typeString":"enum IERC20Manager.TokenType"},"id":61949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":61945,"name":"tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61940,"src":"7488:9:95","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$65226_memory_ptr","typeString":"struct IERC20Manager.TokenInfo memory"}},"id":61946,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7498:9:95","memberName":"tokenType","nodeType":"MemberAccess","referencedDeclaration":65225,"src":"7488:19:95","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$65219","typeString":"enum IERC20Manager.TokenType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":61947,"name":"TokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65219,"src":"7511:9:95","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TokenType_$65219_$","typeString":"type(enum IERC20Manager.TokenType)"}},"id":61948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7521:7:95","memberName":"Unknown","nodeType":"MemberAccess","referencedDeclaration":65216,"src":"7511:17:95","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$65219","typeString":"enum IERC20Manager.TokenType"}},"src":"7488:40:95","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":61963,"nodeType":"Block","src":"7594:82:95","statements":[{"expression":{"arguments":[{"expression":{"id":61957,"name":"tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61940,"src":"7624:9:95","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$65226_memory_ptr","typeString":"struct IERC20Manager.TokenInfo memory"}},"id":61958,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7634:5:95","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":65222,"src":"7624:15:95","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":61959,"name":"tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61940,"src":"7641:9:95","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$65226_memory_ptr","typeString":"struct IERC20Manager.TokenInfo memory"}},"id":61960,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7651:9:95","memberName":"tokenType","nodeType":"MemberAccess","referencedDeclaration":65225,"src":"7641:19:95","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$65219","typeString":"enum IERC20Manager.TokenType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_TokenType_$65219","typeString":"enum IERC20Manager.TokenType"}],"expression":{"id":61954,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61845,"src":"7612:7:95","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToTokenTypeMap_$66439_storage","typeString":"struct CustomEnumerableMap.AddressToTokenTypeMap storage ref"}},"id":61956,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7620:3:95","memberName":"set","nodeType":"MemberAccess","referencedDeclaration":66477,"src":"7612:11:95","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressToTokenTypeMap_$66439_storage_ptr_$_t_address_$_t_enum$_TokenType_$65219_$returns$_t_bool_$attached_to$_t_struct$_AddressToTokenTypeMap_$66439_storage_ptr_$","typeString":"function (struct CustomEnumerableMap.AddressToTokenTypeMap storage pointer,address,enum IERC20Manager.TokenType) returns (bool)"}},"id":61961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7612:49:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":61962,"nodeType":"ExpressionStatement","src":"7612:49:95"}]},"id":61964,"nodeType":"IfStatement","src":"7484:192:95","trueBody":{"id":61953,"nodeType":"Block","src":"7530:58:95","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":61950,"name":"InvalidTokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65163,"src":"7555:16:95","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":61951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7555:18:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":61952,"nodeType":"RevertStatement","src":"7548:25:95"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":61934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":61931,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61928,"src":"7391:1:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":61932,"name":"tokens_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61871,"src":"7395:7:95","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenInfo_$65226_memory_ptr_$dyn_memory_ptr","typeString":"struct IERC20Manager.TokenInfo memory[] memory"}},"id":61933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7403:6:95","memberName":"length","nodeType":"MemberAccess","src":"7395:14:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7391:18:95","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":61966,"initializationExpression":{"assignments":[61928],"declarations":[{"constant":false,"id":61928,"mutability":"mutable","name":"i","nameLocation":"7384:1:95","nodeType":"VariableDeclaration","scope":61966,"src":"7376:9:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":61927,"name":"uint256","nodeType":"ElementaryTypeName","src":"7376:7:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":61930,"initialValue":{"hexValue":"30","id":61929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7388:1:95","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7376:13:95"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":61936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7411:3:95","subExpression":{"id":61935,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61928,"src":"7411:1:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":61937,"nodeType":"ExpressionStatement","src":"7411:3:95"},"nodeType":"ForStatement","src":"7371:315:95"}]},"documentation":{"id":61857,"nodeType":"StructuredDocumentation","src":"5959:726:95","text":" @dev Initializes the ERC20Manager contract with the message queue and VFT manager addresses.\n      GovernanceAdmin contract is used to upgrade, pause/unpause the ERC20Manager contract.\n      GovernancePauser contract is used to pause/unpause the ERC20Manager contract.\n @param governanceAdmin_ The address of the GovernanceAdmin contract that will process messages.\n @param governancePauser_ The address of the GovernanceAdmin contract that will process pauser messages.\n @param messageQueue_ The address of the message queue contract.\n @param vftManager The address of the VFT manager contract (on Vara Network).\n @param tokens_ The tokens that will be registered."},"functionSelector":"763b754a","implemented":true,"kind":"function","modifiers":[{"id":61874,"kind":"modifierInvocation","modifierName":{"id":61873,"name":"initializer","nameLocations":["6895:11:95"],"nodeType":"IdentifierPath","referencedDeclaration":40366,"src":"6895:11:95"},"nodeType":"ModifierInvocation","src":"6895:11:95"}],"name":"initialize","nameLocation":"6699:10:95","parameters":{"id":61872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61860,"mutability":"mutable","name":"governanceAdmin_","nameLocation":"6731:16:95","nodeType":"VariableDeclaration","scope":61968,"src":"6719:28:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$65652","typeString":"contract IGovernance"},"typeName":{"id":61859,"nodeType":"UserDefinedTypeName","pathNode":{"id":61858,"name":"IGovernance","nameLocations":["6719:11:95"],"nodeType":"IdentifierPath","referencedDeclaration":65652,"src":"6719:11:95"},"referencedDeclaration":65652,"src":"6719:11:95","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$65652","typeString":"contract IGovernance"}},"visibility":"internal"},{"constant":false,"id":61863,"mutability":"mutable","name":"governancePauser_","nameLocation":"6769:17:95","nodeType":"VariableDeclaration","scope":61968,"src":"6757:29:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$65652","typeString":"contract IGovernance"},"typeName":{"id":61862,"nodeType":"UserDefinedTypeName","pathNode":{"id":61861,"name":"IGovernance","nameLocations":["6757:11:95"],"nodeType":"IdentifierPath","referencedDeclaration":65652,"src":"6757:11:95"},"referencedDeclaration":65652,"src":"6757:11:95","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$65652","typeString":"contract IGovernance"}},"visibility":"internal"},{"constant":false,"id":61865,"mutability":"mutable","name":"messageQueue_","nameLocation":"6804:13:95","nodeType":"VariableDeclaration","scope":61968,"src":"6796:21:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61864,"name":"address","nodeType":"ElementaryTypeName","src":"6796:7:95","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":61867,"mutability":"mutable","name":"vftManager","nameLocation":"6835:10:95","nodeType":"VariableDeclaration","scope":61968,"src":"6827:18:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":61866,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6827:7:95","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":61871,"mutability":"mutable","name":"tokens_","nameLocation":"6874:7:95","nodeType":"VariableDeclaration","scope":61968,"src":"6855:26:95","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenInfo_$65226_memory_ptr_$dyn_memory_ptr","typeString":"struct IERC20Manager.TokenInfo[]"},"typeName":{"baseType":{"id":61869,"nodeType":"UserDefinedTypeName","pathNode":{"id":61868,"name":"TokenInfo","nameLocations":["6855:9:95"],"nodeType":"IdentifierPath","referencedDeclaration":65226,"src":"6855:9:95"},"referencedDeclaration":65226,"src":"6855:9:95","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$65226_storage_ptr","typeString":"struct IERC20Manager.TokenInfo"}},"id":61870,"nodeType":"ArrayTypeName","src":"6855:11:95","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenInfo_$65226_storage_$dyn_storage_ptr","typeString":"struct IERC20Manager.TokenInfo[]"}},"visibility":"internal"}],"src":"6709:178:95"},"returnParameters":{"id":61875,"nodeType":"ParameterList","parameters":[],"src":"6907:0:95"},"scope":62964,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":61980,"nodeType":"FunctionDefinition","src":"7972:108:95","nodes":[],"body":{"id":61979,"nodeType":"Block","src":"8031:49:95","nodes":[],"statements":[{"expression":{"arguments":[{"id":61976,"name":"_governanceAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61834,"src":"8056:16:95","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$65652","typeString":"contract IGovernance"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IGovernance_$65652","typeString":"contract IGovernance"}],"id":61975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8048:7:95","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61974,"name":"address","nodeType":"ElementaryTypeName","src":"8048:7:95","typeDescriptions":{}}},"id":61977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8048:25:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":61973,"id":61978,"nodeType":"Return","src":"8041:32:95"}]},"baseFunctions":[65232],"documentation":{"id":61969,"nodeType":"StructuredDocumentation","src":"7853:114:95","text":" @dev Returns governance admin address.\n @return governanceAdmin Governance admin address."},"functionSelector":"0058f6b8","implemented":true,"kind":"function","modifiers":[],"name":"governanceAdmin","nameLocation":"7981:15:95","parameters":{"id":61970,"nodeType":"ParameterList","parameters":[],"src":"7996:2:95"},"returnParameters":{"id":61973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61972,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":61980,"src":"8022:7:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61971,"name":"address","nodeType":"ElementaryTypeName","src":"8022:7:95","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8021:9:95"},"scope":62964,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":61992,"nodeType":"FunctionDefinition","src":"8208:110:95","nodes":[],"body":{"id":61991,"nodeType":"Block","src":"8268:50:95","nodes":[],"statements":[{"expression":{"arguments":[{"id":61988,"name":"_governancePauser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61837,"src":"8293:17:95","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$65652","typeString":"contract IGovernance"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IGovernance_$65652","typeString":"contract IGovernance"}],"id":61987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8285:7:95","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61986,"name":"address","nodeType":"ElementaryTypeName","src":"8285:7:95","typeDescriptions":{}}},"id":61989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8285:26:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":61985,"id":61990,"nodeType":"Return","src":"8278:33:95"}]},"baseFunctions":[65238],"documentation":{"id":61981,"nodeType":"StructuredDocumentation","src":"8086:117:95","text":" @dev Returns governance pauser address.\n @return governancePauser Governance pauser address."},"functionSelector":"c81eb797","implemented":true,"kind":"function","modifiers":[],"name":"governancePauser","nameLocation":"8217:16:95","parameters":{"id":61982,"nodeType":"ParameterList","parameters":[],"src":"8233:2:95"},"returnParameters":{"id":61985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61984,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":61992,"src":"8259:7:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61983,"name":"address","nodeType":"ElementaryTypeName","src":"8259:7:95","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8258:9:95"},"scope":62964,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":62004,"nodeType":"FunctionDefinition","src":"8434:102:95","nodes":[],"body":{"id":62003,"nodeType":"Block","src":"8490:46:95","nodes":[],"statements":[{"expression":{"arguments":[{"id":62000,"name":"_messageQueue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61839,"src":"8515:13:95","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":61999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8507:7:95","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61998,"name":"address","nodeType":"ElementaryTypeName","src":"8507:7:95","typeDescriptions":{}}},"id":62001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8507:22:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":61997,"id":62002,"nodeType":"Return","src":"8500:29:95"}]},"baseFunctions":[65244],"documentation":{"id":61993,"nodeType":"StructuredDocumentation","src":"8324:105:95","text":" @dev Returns message queue address.\n @return messageQueue Message queue address."},"functionSelector":"3b70c18a","implemented":true,"kind":"function","modifiers":[],"name":"messageQueue","nameLocation":"8443:12:95","parameters":{"id":61994,"nodeType":"ParameterList","parameters":[],"src":"8455:2:95"},"returnParameters":{"id":61997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61996,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":62004,"src":"8481:7:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61995,"name":"address","nodeType":"ElementaryTypeName","src":"8481:7:95","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8480:9:95"},"scope":62964,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":62015,"nodeType":"FunctionDefinition","src":"8670:105:95","nodes":[],"body":{"id":62014,"nodeType":"Block","src":"8730:45:95","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":62010,"name":"_vftManagers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61842,"src":"8747:12:95","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$55501_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":62011,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8760:6:95","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":55583,"src":"8747:19:95","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$55501_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Bytes32Set_$55501_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer) view returns (uint256)"}},"id":62012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8747:21:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":62009,"id":62013,"nodeType":"Return","src":"8740:28:95"}]},"baseFunctions":[65250],"documentation":{"id":62005,"nodeType":"StructuredDocumentation","src":"8542:123:95","text":" @dev Returns total number of VFT managers.\n @return totalVftManagers Total number of VFT managers."},"functionSelector":"240dfa95","implemented":true,"kind":"function","modifiers":[],"name":"totalVftManagers","nameLocation":"8679:16:95","parameters":{"id":62006,"nodeType":"ParameterList","parameters":[],"src":"8695:2:95"},"returnParameters":{"id":62009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62008,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":62015,"src":"8721:7:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":62007,"name":"uint256","nodeType":"ElementaryTypeName","src":"8721:7:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8720:9:95"},"scope":62964,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":62027,"nodeType":"FunctionDefinition","src":"8888:109:95","nodes":[],"body":{"id":62026,"nodeType":"Block","src":"8952:45:95","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":62022,"name":"_vftManagers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61842,"src":"8969:12:95","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$55501_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":62023,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8982:6:95","memberName":"values","nodeType":"MemberAccess","referencedDeclaration":55631,"src":"8969:19:95","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$55501_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$attached_to$_t_struct$_Bytes32Set_$55501_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer) view returns (bytes32[] memory)"}},"id":62024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8969:21:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":62021,"id":62025,"nodeType":"Return","src":"8962:28:95"}]},"baseFunctions":[65257],"documentation":{"id":62016,"nodeType":"StructuredDocumentation","src":"8781:102:95","text":" @dev Returns list of VFT managers.\n @return vftManagers List of VFT managers."},"functionSelector":"87be40b1","implemented":true,"kind":"function","modifiers":[],"name":"vftManagers","nameLocation":"8897:11:95","parameters":{"id":62017,"nodeType":"ParameterList","parameters":[],"src":"8908:2:95"},"returnParameters":{"id":62021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62020,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":62027,"src":"8934:16:95","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":62018,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8934:7:95","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":62019,"nodeType":"ArrayTypeName","src":"8934:9:95","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"8933:18:95"},"scope":62964,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":62045,"nodeType":"FunctionDefinition","src":"9236:154:95","nodes":[],"body":{"id":62044,"nodeType":"Block","src":"9329:61:95","nodes":[],"statements":[{"expression":{"arguments":[{"id":62039,"name":"_vftManagers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61842,"src":"9355:12:95","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$55501_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},{"id":62040,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62030,"src":"9369:6:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":62041,"name":"limit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62032,"src":"9377:5:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32Set_$55501_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":62038,"name":"paginate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62301,"src":"9346:8:95","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$55501_storage_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,uint256,uint256) view returns (bytes32[] memory)"}},"id":62042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9346:37:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":62037,"id":62043,"nodeType":"Return","src":"9339:44:95"}]},"baseFunctions":[65268],"documentation":{"id":62028,"nodeType":"StructuredDocumentation","src":"9003:228:95","text":" @dev Returns list of VFT managers.\n @param offset Offset of the first VFT manager to return.\n @param limit Maximum number of VFT managers to return.\n @return vftManagers List of VFT managers."},"functionSelector":"c1c60921","implemented":true,"kind":"function","modifiers":[],"name":"vftManagers","nameLocation":"9245:11:95","parameters":{"id":62033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62030,"mutability":"mutable","name":"offset","nameLocation":"9265:6:95","nodeType":"VariableDeclaration","scope":62045,"src":"9257:14:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":62029,"name":"uint256","nodeType":"ElementaryTypeName","src":"9257:7:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":62032,"mutability":"mutable","name":"limit","nameLocation":"9281:5:95","nodeType":"VariableDeclaration","scope":62045,"src":"9273:13:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":62031,"name":"uint256","nodeType":"ElementaryTypeName","src":"9273:7:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9256:31:95"},"returnParameters":{"id":62037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62036,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":62045,"src":"9311:16:95","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":62034,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9311:7:95","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":62035,"nodeType":"ArrayTypeName","src":"9311:9:95","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"9310:18:95"},"scope":62964,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":62059,"nodeType":"FunctionDefinition","src":"9605:128:95","nodes":[],"body":{"id":62058,"nodeType":"Block","src":"9676:57:95","nodes":[],"statements":[{"expression":{"arguments":[{"id":62055,"name":"vftManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62048,"src":"9715:10:95","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":62053,"name":"_vftManagers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61842,"src":"9693:12:95","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$55501_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":62054,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9706:8:95","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":55568,"src":"9693:21:95","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$55501_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$55501_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) view returns (bool)"}},"id":62056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9693:33:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":62052,"id":62057,"nodeType":"Return","src":"9686:40:95"}]},"baseFunctions":[65276],"documentation":{"id":62046,"nodeType":"StructuredDocumentation","src":"9396:204:95","text":" @dev Returns whether the VFT manager is registered.\n @param vftManager VFT manager address.\n @return isVftManager `true` if the VFT manager is registered, `false` otherwise."},"functionSelector":"4e689539","implemented":true,"kind":"function","modifiers":[],"name":"isVftManager","nameLocation":"9614:12:95","parameters":{"id":62049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62048,"mutability":"mutable","name":"vftManager","nameLocation":"9635:10:95","nodeType":"VariableDeclaration","scope":62059,"src":"9627:18:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":62047,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9627:7:95","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9626:20:95"},"returnParameters":{"id":62052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62051,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":62059,"src":"9670:4:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":62050,"name":"bool","nodeType":"ElementaryTypeName","src":"9670:4:95","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9669:6:95"},"scope":62964,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":62070,"nodeType":"FunctionDefinition","src":"9850:95:95","nodes":[],"body":{"id":62069,"nodeType":"Block","src":"9905:40:95","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":62065,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61845,"src":"9922:7:95","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToTokenTypeMap_$66439_storage","typeString":"struct CustomEnumerableMap.AddressToTokenTypeMap storage ref"}},"id":62066,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9930:6:95","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":66564,"src":"9922:14:95","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressToTokenTypeMap_$66439_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressToTokenTypeMap_$66439_storage_ptr_$","typeString":"function (struct CustomEnumerableMap.AddressToTokenTypeMap storage pointer) view returns (uint256)"}},"id":62067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9922:16:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":62064,"id":62068,"nodeType":"Return","src":"9915:23:95"}]},"baseFunctions":[65282],"documentation":{"id":62060,"nodeType":"StructuredDocumentation","src":"9739:106:95","text":" @dev Returns total number of tokens.\n @return totalTokens Total number of tokens."},"functionSelector":"7e1c0c09","implemented":true,"kind":"function","modifiers":[],"name":"totalTokens","nameLocation":"9859:11:95","parameters":{"id":62061,"nodeType":"ParameterList","parameters":[],"src":"9870:2:95"},"returnParameters":{"id":62064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62063,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":62070,"src":"9896:7:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":62062,"name":"uint256","nodeType":"ElementaryTypeName","src":"9896:7:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9895:9:95"},"scope":62964,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":62082,"nodeType":"FunctionDefinition","src":"10041:97:95","nodes":[],"body":{"id":62081,"nodeType":"Block","src":"10100:38:95","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":62077,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61845,"src":"10117:7:95","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToTokenTypeMap_$66439_storage","typeString":"struct CustomEnumerableMap.AddressToTokenTypeMap storage ref"}},"id":62078,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10125:4:95","memberName":"keys","nodeType":"MemberAccess","referencedDeclaration":66720,"src":"10117:12:95","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressToTokenTypeMap_$66439_storage_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$attached_to$_t_struct$_AddressToTokenTypeMap_$66439_storage_ptr_$","typeString":"function (struct CustomEnumerableMap.AddressToTokenTypeMap storage pointer) view returns (address[] memory)"}},"id":62079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10117:14:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":62076,"id":62080,"nodeType":"Return","src":"10110:21:95"}]},"baseFunctions":[65289],"documentation":{"id":62071,"nodeType":"StructuredDocumentation","src":"9951:85:95","text":" @dev Returns list of tokens.\n @return tokens List of tokens."},"functionSelector":"9d63848a","implemented":true,"kind":"function","modifiers":[],"name":"tokens","nameLocation":"10050:6:95","parameters":{"id":62072,"nodeType":"ParameterList","parameters":[],"src":"10056:2:95"},"returnParameters":{"id":62076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62075,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":62082,"src":"10082:16:95","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":62073,"name":"address","nodeType":"ElementaryTypeName","src":"10082:7:95","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":62074,"nodeType":"ArrayTypeName","src":"10082:9:95","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10081:18:95"},"scope":62964,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":62116,"nodeType":"FunctionDefinition","src":"10348:306:95","nodes":[],"body":{"id":62115,"nodeType":"Block","src":"10436:218:95","nodes":[],"statements":[{"assignments":[62097],"declarations":[{"constant":false,"id":62097,"mutability":"mutable","name":"store","nameLocation":"10463:5:95","nodeType":"VariableDeclaration","scope":62115,"src":"10446:22:95","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":62095,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10446:7:95","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":62096,"nodeType":"ArrayTypeName","src":"10446:9:95","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":62105,"initialValue":{"arguments":[{"expression":{"expression":{"id":62099,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61845,"src":"10480:7:95","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToTokenTypeMap_$66439_storage","typeString":"struct CustomEnumerableMap.AddressToTokenTypeMap storage ref"}},"id":62100,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10488:6:95","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":66438,"src":"10480:14:95","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$52426_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},"id":62101,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10495:5:95","memberName":"_keys","nodeType":"MemberAccess","referencedDeclaration":52421,"src":"10480:20:95","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$55501_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},{"id":62102,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62085,"src":"10502:6:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":62103,"name":"limit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62087,"src":"10510:5:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32Set_$55501_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":62098,"name":"paginate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62301,"src":"10471:8:95","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$55501_storage_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,uint256,uint256) view returns (bytes32[] memory)"}},"id":62104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10471:45:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10446:70:95"},{"assignments":[62110],"declarations":[{"constant":false,"id":62110,"mutability":"mutable","name":"result","nameLocation":"10543:6:95","nodeType":"VariableDeclaration","scope":62115,"src":"10526:23:95","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":62108,"name":"address","nodeType":"ElementaryTypeName","src":"10526:7:95","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":62109,"nodeType":"ArrayTypeName","src":"10526:9:95","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":62111,"nodeType":"VariableDeclarationStatement","src":"10526:23:95"},{"AST":{"nativeSrc":"10585:39:95","nodeType":"YulBlock","src":"10585:39:95","statements":[{"nativeSrc":"10599:15:95","nodeType":"YulAssignment","src":"10599:15:95","value":{"name":"store","nativeSrc":"10609:5:95","nodeType":"YulIdentifier","src":"10609:5:95"},"variableNames":[{"name":"result","nativeSrc":"10599:6:95","nodeType":"YulIdentifier","src":"10599:6:95"}]}]},"evmVersion":"prague","externalReferences":[{"declaration":62110,"isOffset":false,"isSlot":false,"src":"10599:6:95","valueSize":1},{"declaration":62097,"isOffset":false,"isSlot":false,"src":"10609:5:95","valueSize":1}],"flags":["memory-safe"],"id":62112,"nodeType":"InlineAssembly","src":"10560:64:95"},{"expression":{"id":62113,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62110,"src":"10641:6:95","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":62092,"id":62114,"nodeType":"Return","src":"10634:13:95"}]},"baseFunctions":[65300],"documentation":{"id":62083,"nodeType":"StructuredDocumentation","src":"10144:199:95","text":" @dev Returns list of tokens.\n @param offset Offset of the first token to return.\n @param limit Maximum number of tokens to return.\n @return tokens List of tokens."},"functionSelector":"8b4864d6","implemented":true,"kind":"function","modifiers":[],"name":"tokens","nameLocation":"10357:6:95","parameters":{"id":62088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62085,"mutability":"mutable","name":"offset","nameLocation":"10372:6:95","nodeType":"VariableDeclaration","scope":62116,"src":"10364:14:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":62084,"name":"uint256","nodeType":"ElementaryTypeName","src":"10364:7:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":62087,"mutability":"mutable","name":"limit","nameLocation":"10388:5:95","nodeType":"VariableDeclaration","scope":62116,"src":"10380:13:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":62086,"name":"uint256","nodeType":"ElementaryTypeName","src":"10380:7:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10363:31:95"},"returnParameters":{"id":62092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62091,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":62116,"src":"10418:16:95","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":62089,"name":"address","nodeType":"ElementaryTypeName","src":"10418:7:95","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":62090,"nodeType":"ArrayTypeName","src":"10418:9:95","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10417:18:95"},"scope":62964,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":62136,"nodeType":"FunctionDefinition","src":"10836:161:95","nodes":[],"body":{"id":62135,"nodeType":"Block","src":"10907:90:95","nodes":[],"statements":[{"assignments":[null,62127],"declarations":[null,{"constant":false,"id":62127,"mutability":"mutable","name":"tokenType","nameLocation":"10930:9:95","nodeType":"VariableDeclaration","scope":62135,"src":"10920:19:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$65219","typeString":"enum IERC20Manager.TokenType"},"typeName":{"id":62126,"nodeType":"UserDefinedTypeName","pathNode":{"id":62125,"name":"TokenType","nameLocations":["10920:9:95"],"nodeType":"IdentifierPath","referencedDeclaration":65219,"src":"10920:9:95"},"referencedDeclaration":65219,"src":"10920:9:95","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$65219","typeString":"enum IERC20Manager.TokenType"}},"visibility":"internal"}],"id":62132,"initialValue":{"arguments":[{"id":62130,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62119,"src":"10958:5:95","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":62128,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61845,"src":"10943:7:95","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToTokenTypeMap_$66439_storage","typeString":"struct CustomEnumerableMap.AddressToTokenTypeMap storage ref"}},"id":62129,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10951:6:95","memberName":"tryGet","nodeType":"MemberAccess","referencedDeclaration":66654,"src":"10943:14:95","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressToTokenTypeMap_$66439_storage_ptr_$_t_address_$returns$_t_bool_$_t_enum$_TokenType_$65219_$attached_to$_t_struct$_AddressToTokenTypeMap_$66439_storage_ptr_$","typeString":"function (struct CustomEnumerableMap.AddressToTokenTypeMap storage pointer,address) view returns (bool,enum IERC20Manager.TokenType)"}},"id":62131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10943:21:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_enum$_TokenType_$65219_$","typeString":"tuple(bool,enum IERC20Manager.TokenType)"}},"nodeType":"VariableDeclarationStatement","src":"10917:47:95"},{"expression":{"id":62133,"name":"tokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62127,"src":"10981:9:95","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$65219","typeString":"enum IERC20Manager.TokenType"}},"functionReturnParameters":62124,"id":62134,"nodeType":"Return","src":"10974:16:95"}]},"baseFunctions":[65309],"documentation":{"id":62117,"nodeType":"StructuredDocumentation","src":"10660:171:95","text":" @dev Returns token type.\n @param token Token address.\n @return tokenType Token type. Returns `TokenType.Unknown` if token is not registered."},"functionSelector":"93272baf","implemented":true,"kind":"function","modifiers":[],"name":"getTokenType","nameLocation":"10845:12:95","parameters":{"id":62120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62119,"mutability":"mutable","name":"token","nameLocation":"10866:5:95","nodeType":"VariableDeclaration","scope":62136,"src":"10858:13:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":62118,"name":"address","nodeType":"ElementaryTypeName","src":"10858:7:95","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10857:15:95"},"returnParameters":{"id":62124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62123,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":62136,"src":"10896:9:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$65219","typeString":"enum IERC20Manager.TokenType"},"typeName":{"id":62122,"nodeType":"UserDefinedTypeName","pathNode":{"id":62121,"name":"TokenType","nameLocations":["10896:9:95"],"nodeType":"IdentifierPath","referencedDeclaration":65219,"src":"10896:9:95"},"referencedDeclaration":65219,"src":"10896:9:95","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$65219","typeString":"enum IERC20Manager.TokenType"}},"visibility":"internal"}],"src":"10895:11:95"},"scope":62964,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":62147,"nodeType":"FunctionDefinition","src":"11146:115:95","nodes":[],"body":{"id":62146,"nodeType":"Block","src":"11211:50:95","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":62142,"name":"_bridgingPayments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61848,"src":"11228:17:95","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$55671_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":62143,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11246:6:95","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":55780,"src":"11228:24:95","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$55671_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressSet_$55671_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"}},"id":62144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11228:26:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":62141,"id":62145,"nodeType":"Return","src":"11221:33:95"}]},"baseFunctions":[65315],"documentation":{"id":62137,"nodeType":"StructuredDocumentation","src":"11003:138:95","text":" @dev Returns total number of bridging payments.\n @return totalBridgingPayments Total number of bridging payments."},"functionSelector":"8b841f6c","implemented":true,"kind":"function","modifiers":[],"name":"totalBridgingPayments","nameLocation":"11155:21:95","parameters":{"id":62138,"nodeType":"ParameterList","parameters":[],"src":"11176:2:95"},"returnParameters":{"id":62141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62140,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":62147,"src":"11202:7:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":62139,"name":"uint256","nodeType":"ElementaryTypeName","src":"11202:7:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11201:9:95"},"scope":62964,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":62159,"nodeType":"FunctionDefinition","src":"11389:119:95","nodes":[],"body":{"id":62158,"nodeType":"Block","src":"11458:50:95","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":62154,"name":"_bridgingPayments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61848,"src":"11475:17:95","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$55671_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":62155,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11493:6:95","memberName":"values","nodeType":"MemberAccess","referencedDeclaration":55837,"src":"11475:24:95","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$55671_storage_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$attached_to$_t_struct$_AddressSet_$55671_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (address[] memory)"}},"id":62156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11475:26:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":62153,"id":62157,"nodeType":"Return","src":"11468:33:95"}]},"baseFunctions":[65322],"documentation":{"id":62148,"nodeType":"StructuredDocumentation","src":"11267:117:95","text":" @dev Returns list of bridging payments.\n @return bridgingPayments List of bridging payments."},"functionSelector":"109ec2e7","implemented":true,"kind":"function","modifiers":[],"name":"bridgingPayments","nameLocation":"11398:16:95","parameters":{"id":62149,"nodeType":"ParameterList","parameters":[],"src":"11414:2:95"},"returnParameters":{"id":62153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62152,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":62159,"src":"11440:16:95","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":62150,"name":"address","nodeType":"ElementaryTypeName","src":"11440:7:95","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":62151,"nodeType":"ArrayTypeName","src":"11440:9:95","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"11439:18:95"},"scope":62964,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":62198,"nodeType":"FunctionDefinition","src":"11772:459:95","nodes":[],"body":{"id":62197,"nodeType":"Block","src":"11870:361:95","nodes":[],"statements":[{"assignments":[62174],"declarations":[{"constant":false,"id":62174,"mutability":"mutable","name":"bytes32Set","nameLocation":"11913:10:95","nodeType":"VariableDeclaration","scope":62197,"src":"11880:43:95","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$55501_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":62173,"nodeType":"UserDefinedTypeName","pathNode":{"id":62172,"name":"EnumerableSet.Bytes32Set","nameLocations":["11880:13:95","11894:10:95"],"nodeType":"IdentifierPath","referencedDeclaration":55501,"src":"11880:24:95"},"referencedDeclaration":55501,"src":"11880:24:95","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$55501_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"id":62175,"nodeType":"VariableDeclarationStatement","src":"11880:43:95"},{"AST":{"nativeSrc":"11958:65:95","nodeType":"YulBlock","src":"11958:65:95","statements":[{"nativeSrc":"11972:41:95","nodeType":"YulAssignment","src":"11972:41:95","value":{"name":"_bridgingPayments.slot","nativeSrc":"11991:22:95","nodeType":"YulIdentifier","src":"11991:22:95"},"variableNames":[{"name":"bytes32Set.slot","nativeSrc":"11972:15:95","nodeType":"YulIdentifier","src":"11972:15:95"}]}]},"evmVersion":"prague","externalReferences":[{"declaration":61848,"isOffset":false,"isSlot":true,"src":"11991:22:95","suffix":"slot","valueSize":1},{"declaration":62174,"isOffset":false,"isSlot":true,"src":"11972:15:95","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":62176,"nodeType":"InlineAssembly","src":"11933:90:95"},{"assignments":[62181],"declarations":[{"constant":false,"id":62181,"mutability":"mutable","name":"store","nameLocation":"12050:5:95","nodeType":"VariableDeclaration","scope":62197,"src":"12033:22:95","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":62179,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12033:7:95","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":62180,"nodeType":"ArrayTypeName","src":"12033:9:95","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":62187,"initialValue":{"arguments":[{"id":62183,"name":"bytes32Set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62174,"src":"12067:10:95","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$55501_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},{"id":62184,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62162,"src":"12079:6:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":62185,"name":"limit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62164,"src":"12087:5:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32Set_$55501_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":62182,"name":"paginate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62301,"src":"12058:8:95","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$55501_storage_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,uint256,uint256) view returns (bytes32[] memory)"}},"id":62186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12058:35:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12033:60:95"},{"assignments":[62192],"declarations":[{"constant":false,"id":62192,"mutability":"mutable","name":"result","nameLocation":"12120:6:95","nodeType":"VariableDeclaration","scope":62197,"src":"12103:23:95","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":62190,"name":"address","nodeType":"ElementaryTypeName","src":"12103:7:95","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":62191,"nodeType":"ArrayTypeName","src":"12103:9:95","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":62193,"nodeType":"VariableDeclarationStatement","src":"12103:23:95"},{"AST":{"nativeSrc":"12162:39:95","nodeType":"YulBlock","src":"12162:39:95","statements":[{"nativeSrc":"12176:15:95","nodeType":"YulAssignment","src":"12176:15:95","value":{"name":"store","nativeSrc":"12186:5:95","nodeType":"YulIdentifier","src":"12186:5:95"},"variableNames":[{"name":"result","nativeSrc":"12176:6:95","nodeType":"YulIdentifier","src":"12176:6:95"}]}]},"evmVersion":"prague","externalReferences":[{"declaration":62192,"isOffset":false,"isSlot":false,"src":"12176:6:95","valueSize":1},{"declaration":62181,"isOffset":false,"isSlot":false,"src":"12186:5:95","valueSize":1}],"flags":["memory-safe"],"id":62194,"nodeType":"InlineAssembly","src":"12137:64:95"},{"expression":{"id":62195,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62192,"src":"12218:6:95","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":62169,"id":62196,"nodeType":"Return","src":"12211:13:95"}]},"baseFunctions":[65333],"documentation":{"id":62160,"nodeType":"StructuredDocumentation","src":"11514:253:95","text":" @dev Returns list of bridging payments.\n @param offset Offset of the first bridging payment to return.\n @param limit Maximum number of bridging payments to return.\n @return bridgingPayments List of bridging payments."},"functionSelector":"87e7a3a3","implemented":true,"kind":"function","modifiers":[],"name":"bridgingPayments","nameLocation":"11781:16:95","parameters":{"id":62165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62162,"mutability":"mutable","name":"offset","nameLocation":"11806:6:95","nodeType":"VariableDeclaration","scope":62198,"src":"11798:14:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":62161,"name":"uint256","nodeType":"ElementaryTypeName","src":"11798:7:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":62164,"mutability":"mutable","name":"limit","nameLocation":"11822:5:95","nodeType":"VariableDeclaration","scope":62198,"src":"11814:13:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":62163,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11797:31:95"},"returnParameters":{"id":62169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62168,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":62198,"src":"11852:16:95","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":62166,"name":"address","nodeType":"ElementaryTypeName","src":"11852:7:95","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":62167,"nodeType":"ArrayTypeName","src":"11852:9:95","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"11851:18:95"},"scope":62964,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":62212,"nodeType":"FunctionDefinition","src":"12471:148:95","nodes":[],"body":{"id":62211,"nodeType":"Block","src":"12552:67:95","nodes":[],"statements":[{"expression":{"arguments":[{"id":62208,"name":"bridgingPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62201,"src":"12596:15:95","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":62206,"name":"_bridgingPayments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61848,"src":"12569:17:95","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$55671_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":62207,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12587:8:95","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":55765,"src":"12569:26:95","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$55671_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$55671_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"}},"id":62209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12569:43:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":62205,"id":62210,"nodeType":"Return","src":"12562:50:95"}]},"baseFunctions":[65341],"documentation":{"id":62199,"nodeType":"StructuredDocumentation","src":"12237:229:95","text":" @dev Returns whether the bridging payment is registered.\n @param bridgingPayment Bridging payment address.\n @return isBridgingPayment `true` if the bridging payment is registered, `false` otherwise."},"functionSelector":"0c9d9b97","implemented":true,"kind":"function","modifiers":[],"name":"isBridgingPayment","nameLocation":"12480:17:95","parameters":{"id":62202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62201,"mutability":"mutable","name":"bridgingPayment","nameLocation":"12506:15:95","nodeType":"VariableDeclaration","scope":62212,"src":"12498:23:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":62200,"name":"address","nodeType":"ElementaryTypeName","src":"12498:7:95","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12497:25:95"},"returnParameters":{"id":62205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":62212,"src":"12546:4:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":62203,"name":"bool","nodeType":"ElementaryTypeName","src":"12546:4:95","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12545:6:95"},"scope":62964,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":62301,"nodeType":"FunctionDefinition","src":"12876:622:95","nodes":[],"body":{"id":62300,"nodeType":"Block","src":"13038:460:95","nodes":[],"statements":[{"assignments":[62227],"declarations":[{"constant":false,"id":62227,"mutability":"mutable","name":"length","nameLocation":"13056:6:95","nodeType":"VariableDeclaration","scope":62300,"src":"13048:14:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":62226,"name":"uint256","nodeType":"ElementaryTypeName","src":"13048:7:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":62231,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":62228,"name":"bytes32Set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62216,"src":"13065:10:95","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$55501_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":62229,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13076:6:95","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":55583,"src":"13065:17:95","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$55501_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Bytes32Set_$55501_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer) view returns (uint256)"}},"id":62230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13065:19:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13048:36:95"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":62234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":62232,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62218,"src":"13099:6:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":62233,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62227,"src":"13109:6:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13099:16:95","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":62242,"nodeType":"IfStatement","src":"13095:70:95","trueBody":{"id":62241,"nodeType":"Block","src":"13117:48:95","statements":[{"expression":{"arguments":[{"hexValue":"30","id":62238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13152:1:95","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"13138:13:95","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":62235,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13142:7:95","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":62236,"nodeType":"ArrayTypeName","src":"13142:9:95","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":62239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13138:16:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":62225,"id":62240,"nodeType":"Return","src":"13131:23:95"}]}},{"assignments":[62244],"declarations":[{"constant":false,"id":62244,"mutability":"mutable","name":"end","nameLocation":"13183:3:95","nodeType":"VariableDeclaration","scope":62300,"src":"13175:11:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":62243,"name":"uint256","nodeType":"ElementaryTypeName","src":"13175:7:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":62248,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":62247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":62245,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62218,"src":"13189:6:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":62246,"name":"limit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62220,"src":"13198:5:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13189:14:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13175:28:95"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":62251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":62249,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62244,"src":"13217:3:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":62250,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62227,"src":"13223:6:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13217:12:95","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":62257,"nodeType":"IfStatement","src":"13213:55:95","trueBody":{"id":62256,"nodeType":"Block","src":"13231:37:95","statements":[{"expression":{"id":62254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":62252,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62244,"src":"13245:3:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":62253,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62227,"src":"13251:6:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13245:12:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":62255,"nodeType":"ExpressionStatement","src":"13245:12:95"}]}},{"assignments":[62259],"declarations":[{"constant":false,"id":62259,"mutability":"mutable","name":"size","nameLocation":"13286:4:95","nodeType":"VariableDeclaration","scope":62300,"src":"13278:12:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":62258,"name":"uint256","nodeType":"ElementaryTypeName","src":"13278:7:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":62263,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":62262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":62260,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62244,"src":"13293:3:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":62261,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62218,"src":"13299:6:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13293:12:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13278:27:95"},{"assignments":[62268],"declarations":[{"constant":false,"id":62268,"mutability":"mutable","name":"result","nameLocation":"13332:6:95","nodeType":"VariableDeclaration","scope":62300,"src":"13315:23:95","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":62266,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13315:7:95","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":62267,"nodeType":"ArrayTypeName","src":"13315:9:95","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":62274,"initialValue":{"arguments":[{"id":62272,"name":"size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62259,"src":"13355:4:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":62271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"13341:13:95","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":62269,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13345:7:95","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":62270,"nodeType":"ArrayTypeName","src":"13345:9:95","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":62273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13341:19:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"13315:45:95"},{"body":{"id":62296,"nodeType":"Block","src":"13406:62:95","statements":[{"expression":{"id":62294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":62285,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62268,"src":"13420:6:95","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":62287,"indexExpression":{"id":62286,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62276,"src":"13427:1:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13420:9:95","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":62292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":62290,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62218,"src":"13446:6:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":62291,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62276,"src":"13455:1:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13446:10:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":62288,"name":"bytes32Set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62216,"src":"13432:10:95","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$55501_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":62289,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13443:2:95","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":55601,"src":"13432:13:95","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$55501_storage_ptr_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_struct$_Bytes32Set_$55501_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,uint256) view returns (bytes32)"}},"id":62293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13432:25:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"13420:37:95","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":62295,"nodeType":"ExpressionStatement","src":"13420:37:95"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":62281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":62279,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62276,"src":"13391:1:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":62280,"name":"size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62259,"src":"13395:4:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13391:8:95","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":62297,"initializationExpression":{"assignments":[62276],"declarations":[{"constant":false,"id":62276,"mutability":"mutable","name":"i","nameLocation":"13384:1:95","nodeType":"VariableDeclaration","scope":62297,"src":"13376:9:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":62275,"name":"uint256","nodeType":"ElementaryTypeName","src":"13376:7:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":62278,"initialValue":{"hexValue":"30","id":62277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13388:1:95","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13376:13:95"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":62283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13401:3:95","subExpression":{"id":62282,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62276,"src":"13401:1:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":62284,"nodeType":"ExpressionStatement","src":"13401:3:95"},"nodeType":"ForStatement","src":"13371:97:95"},{"expression":{"id":62298,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62268,"src":"13485:6:95","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":62225,"id":62299,"nodeType":"Return","src":"13478:13:95"}]},"documentation":{"id":62213,"nodeType":"StructuredDocumentation","src":"12625:246:95","text":" @dev Returns list of items from the set.\n @param bytes32Set Set of items.\n @param offset Offset of the first item to return.\n @param limit Maximum number of items to return.\n @return items List of items."},"implemented":true,"kind":"function","modifiers":[],"name":"paginate","nameLocation":"12885:8:95","parameters":{"id":62221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62216,"mutability":"mutable","name":"bytes32Set","nameLocation":"12927:10:95","nodeType":"VariableDeclaration","scope":62301,"src":"12894:43:95","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$55501_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":62215,"nodeType":"UserDefinedTypeName","pathNode":{"id":62214,"name":"EnumerableSet.Bytes32Set","nameLocations":["12894:13:95","12908:10:95"],"nodeType":"IdentifierPath","referencedDeclaration":55501,"src":"12894:24:95"},"referencedDeclaration":55501,"src":"12894:24:95","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$55501_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":62218,"mutability":"mutable","name":"offset","nameLocation":"12947:6:95","nodeType":"VariableDeclaration","scope":62301,"src":"12939:14:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":62217,"name":"uint256","nodeType":"ElementaryTypeName","src":"12939:7:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":62220,"mutability":"mutable","name":"limit","nameLocation":"12963:5:95","nodeType":"VariableDeclaration","scope":62301,"src":"12955:13:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":62219,"name":"uint256","nodeType":"ElementaryTypeName","src":"12955:7:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12893:76:95"},"returnParameters":{"id":62225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62224,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":62301,"src":"13016:16:95","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":62222,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13016:7:95","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":62223,"nodeType":"ArrayTypeName","src":"13016:9:95","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"13015:18:95"},"scope":62964,"stateMutability":"view","virtual":false,"visibility":"private"},{"id":62312,"nodeType":"FunctionDefinition","src":"13553:71:95","nodes":[],"body":{"id":62311,"nodeType":"Block","src":"13599:25:95","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":62308,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41898,"src":"13609:6:95","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":62309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13609:8:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":62310,"nodeType":"ExpressionStatement","src":"13609:8:95"}]},"baseFunctions":[66072],"documentation":{"id":62302,"nodeType":"StructuredDocumentation","src":"13504:44:95","text":" @dev Pauses the contract."},"functionSelector":"8456cb59","implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":62305,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61831,"src":"13586:11:95","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":62306,"kind":"modifierInvocation","modifierName":{"id":62304,"name":"onlyRole","nameLocations":["13577:8:95"],"nodeType":"IdentifierPath","referencedDeclaration":39758,"src":"13577:8:95"},"nodeType":"ModifierInvocation","src":"13577:21:95"}],"name":"pause","nameLocation":"13562:5:95","parameters":{"id":62303,"nodeType":"ParameterList","parameters":[],"src":"13567:2:95"},"returnParameters":{"id":62307,"nodeType":"ParameterList","parameters":[],"src":"13599:0:95"},"scope":62964,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":62323,"nodeType":"FunctionDefinition","src":"13681:75:95","nodes":[],"body":{"id":62322,"nodeType":"Block","src":"13729:27:95","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":62319,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41922,"src":"13739:8:95","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":62320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13739:10:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":62321,"nodeType":"ExpressionStatement","src":"13739:10:95"}]},"baseFunctions":[66076],"documentation":{"id":62313,"nodeType":"StructuredDocumentation","src":"13630:46:95","text":" @dev Unpauses the contract."},"functionSelector":"3f4ba83a","implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":62316,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61831,"src":"13716:11:95","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":62317,"kind":"modifierInvocation","modifierName":{"id":62315,"name":"onlyRole","nameLocations":["13707:8:95"],"nodeType":"IdentifierPath","referencedDeclaration":39758,"src":"13707:8:95"},"nodeType":"ModifierInvocation","src":"13707:21:95"}],"name":"unpause","nameLocation":"13690:7:95","parameters":{"id":62314,"nodeType":"ParameterList","parameters":[],"src":"13697:2:95"},"returnParameters":{"id":62318,"nodeType":"ParameterList","parameters":[],"src":"13729:0:95"},"scope":62964,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":62334,"nodeType":"FunctionDefinition","src":"13921:103:95","nodes":[],"body":{"id":62333,"nodeType":"Block","src":"14022:2:95","nodes":[],"statements":[]},"baseFunctions":[40662],"documentation":{"id":62324,"nodeType":"StructuredDocumentation","src":"13762:154:95","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract.\n      Called by {upgradeToAndCall}."},"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":62330,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39729,"src":"14002:18:95","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":62331,"kind":"modifierInvocation","modifierName":{"id":62329,"name":"onlyRole","nameLocations":["13993:8:95"],"nodeType":"IdentifierPath","referencedDeclaration":39758,"src":"13993:8:95"},"nodeType":"ModifierInvocation","src":"13993:28:95"}],"name":"_authorizeUpgrade","nameLocation":"13930:17:95","overrides":{"id":62328,"nodeType":"OverrideSpecifier","overrides":[],"src":"13984:8:95"},"parameters":{"id":62327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62326,"mutability":"mutable","name":"newImplementation","nameLocation":"13956:17:95","nodeType":"VariableDeclaration","scope":62334,"src":"13948:25:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":62325,"name":"address","nodeType":"ElementaryTypeName","src":"13948:7:95","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13947:27:95"},"returnParameters":{"id":62332,"nodeType":"ParameterList","parameters":[],"src":"14022:0:95"},"scope":62964,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":62414,"nodeType":"FunctionDefinition","src":"14332:634:95","nodes":[],"body":{"id":62413,"nodeType":"Block","src":"14421:545:95","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":62348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":62346,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62339,"src":"14435:6:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":62347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14445:1:95","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14435:11:95","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":62353,"nodeType":"IfStatement","src":"14431:64:95","trueBody":{"id":62352,"nodeType":"Block","src":"14448:47:95","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":62349,"name":"InvalidAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65160,"src":"14469:13:95","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":62350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14469:15:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":62351,"nodeType":"RevertStatement","src":"14462:22:95"}]}},{"assignments":[null,62356],"declarations":[null,{"constant":false,"id":62356,"mutability":"mutable","name":"tokenType","nameLocation":"14518:9:95","nodeType":"VariableDeclaration","scope":62413,"src":"14508:19:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$65219","typeString":"enum IERC20Manager.TokenType"},"typeName":{"id":62355,"nodeType":"UserDefinedTypeName","pathNode":{"id":62354,"name":"TokenType","nameLocations":["14508:9:95"],"nodeType":"IdentifierPath","referencedDeclaration":65219,"src":"14508:9:95"},"referencedDeclaration":65219,"src":"14508:9:95","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$65219","typeString":"enum IERC20Manager.TokenType"}},"visibility":"internal"}],"id":62361,"initialValue":{"arguments":[{"id":62359,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62337,"src":"14546:5:95","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":62357,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61845,"src":"14531:7:95","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToTokenTypeMap_$66439_storage","typeString":"struct CustomEnumerableMap.AddressToTokenTypeMap storage ref"}},"id":62358,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14539:6:95","memberName":"tryGet","nodeType":"MemberAccess","referencedDeclaration":66654,"src":"14531:14:95","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressToTokenTypeMap_$66439_storage_ptr_$_t_address_$returns$_t_bool_$_t_enum$_TokenType_$65219_$attached_to$_t_struct$_AddressToTokenTypeMap_$66439_storage_ptr_$","typeString":"function (struct CustomEnumerableMap.AddressToTokenTypeMap storage pointer,address) view returns (bool,enum IERC20Manager.TokenType)"}},"id":62360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14531:21:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_enum$_TokenType_$65219_$","typeString":"tuple(bool,enum IERC20Manager.TokenType)"}},"nodeType":"VariableDeclarationStatement","src":"14505:47:95"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_TokenType_$65219","typeString":"enum IERC20Manager.TokenType"},"id":62365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":62362,"name":"tokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62356,"src":"14567:9:95","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$65219","typeString":"enum IERC20Manager.TokenType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":62363,"name":"TokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65219,"src":"14580:9:95","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TokenType_$65219_$","typeString":"type(enum IERC20Manager.TokenType)"}},"id":62364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14590:7:95","memberName":"Unknown","nodeType":"MemberAccess","referencedDeclaration":65216,"src":"14580:17:95","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$65219","typeString":"enum IERC20Manager.TokenType"}},"src":"14567:30:95","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_TokenType_$65219","typeString":"enum IERC20Manager.TokenType"},"id":62373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":62370,"name":"tokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62356,"src":"14659:9:95","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$65219","typeString":"enum IERC20Manager.TokenType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":62371,"name":"TokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65219,"src":"14672:9:95","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TokenType_$65219_$","typeString":"type(enum IERC20Manager.TokenType)"}},"id":62372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14682:8:95","memberName":"Ethereum","nodeType":"MemberAccess","referencedDeclaration":65217,"src":"14672:18:95","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$65219","typeString":"enum IERC20Manager.TokenType"}},"src":"14659:31:95","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_TokenType_$65219","typeString":"enum IERC20Manager.TokenType"},"id":62391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":62388,"name":"tokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62356,"src":"14792:9:95","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$65219","typeString":"enum IERC20Manager.TokenType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":62389,"name":"TokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65219,"src":"14805:9:95","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TokenType_$65219_$","typeString":"type(enum IERC20Manager.TokenType)"}},"id":62390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14815:4:95","memberName":"Gear","nodeType":"MemberAccess","referencedDeclaration":65218,"src":"14805:14:95","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$65219","typeString":"enum IERC20Manager.TokenType"}},"src":"14792:27:95","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":62402,"nodeType":"IfStatement","src":"14788:108:95","trueBody":{"id":62401,"nodeType":"Block","src":"14821:75:95","statements":[{"expression":{"arguments":[{"expression":{"id":62396,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14866:3:95","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":62397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14870:6:95","memberName":"sender","nodeType":"MemberAccess","src":"14866:10:95","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":62398,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62339,"src":"14878:6:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":62393,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62337,"src":"14850:5:95","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":62392,"name":"IERC20Burnable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65135,"src":"14835:14:95","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Burnable_$65135_$","typeString":"type(contract IERC20Burnable)"}},"id":62394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14835:21:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Burnable_$65135","typeString":"contract IERC20Burnable"}},"id":62395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14857:8:95","memberName":"burnFrom","nodeType":"MemberAccess","referencedDeclaration":65134,"src":"14835:30:95","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":62399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14835:50:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":62400,"nodeType":"ExpressionStatement","src":"14835:50:95"}]}},"id":62403,"nodeType":"IfStatement","src":"14655:241:95","trueBody":{"id":62387,"nodeType":"Block","src":"14692:90:95","statements":[{"expression":{"arguments":[{"expression":{"id":62378,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14737:3:95","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":62379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14741:6:95","memberName":"sender","nodeType":"MemberAccess","src":"14737:10:95","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":62382,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"14757:4:95","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Manager_$62964","typeString":"contract ERC20Manager"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20Manager_$62964","typeString":"contract ERC20Manager"}],"id":62381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14749:7:95","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":62380,"name":"address","nodeType":"ElementaryTypeName","src":"14749:7:95","typeDescriptions":{}}},"id":62383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14749:13:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":62384,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62339,"src":"14764:6:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":62375,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62337,"src":"14713:5:95","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":62374,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44122,"src":"14706:6:95","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$44122_$","typeString":"type(contract IERC20)"}},"id":62376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14706:13:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$44122","typeString":"contract IERC20"}},"id":62377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14720:16:95","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":44456,"src":"14706:30:95","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$44122_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$44122_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":62385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14706:65:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":62386,"nodeType":"ExpressionStatement","src":"14706:65:95"}]}},"id":62404,"nodeType":"IfStatement","src":"14563:333:95","trueBody":{"id":62369,"nodeType":"Block","src":"14599:50:95","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":62366,"name":"InvalidTokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65163,"src":"14620:16:95","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":62367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14620:18:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":62368,"nodeType":"RevertStatement","src":"14613:25:95"}]}},{"eventCall":{"arguments":[{"expression":{"id":62406,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14929:3:95","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":62407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14933:6:95","memberName":"sender","nodeType":"MemberAccess","src":"14929:10:95","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":62408,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62341,"src":"14941:2:95","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":62409,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62337,"src":"14945:5:95","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":62410,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62339,"src":"14952:6:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":62405,"name":"BridgingRequested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65177,"src":"14911:17:95","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,bytes32,address,uint256)"}},"id":62411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14911:48:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":62412,"nodeType":"EmitStatement","src":"14906:53:95"}]},"baseFunctions":[65351],"documentation":{"id":62335,"nodeType":"StructuredDocumentation","src":"14030:297:95","text":" @dev Requests bridging of tokens.\n      Emits `BridgingRequested` event.\n @param token Token address.\n @param amount Amount of tokens to bridge.\n @param to Destination address.\n @dev Reverts if token is not registered with `InvalidTokenType` error."},"functionSelector":"c305870c","implemented":true,"kind":"function","modifiers":[{"id":62344,"kind":"modifierInvocation","modifierName":{"id":62343,"name":"whenNotPaused","nameLocations":["14407:13:95"],"nodeType":"IdentifierPath","referencedDeclaration":41813,"src":"14407:13:95"},"nodeType":"ModifierInvocation","src":"14407:13:95"}],"name":"requestBridging","nameLocation":"14341:15:95","parameters":{"id":62342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62337,"mutability":"mutable","name":"token","nameLocation":"14365:5:95","nodeType":"VariableDeclaration","scope":62414,"src":"14357:13:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":62336,"name":"address","nodeType":"ElementaryTypeName","src":"14357:7:95","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":62339,"mutability":"mutable","name":"amount","nameLocation":"14380:6:95","nodeType":"VariableDeclaration","scope":62414,"src":"14372:14:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":62338,"name":"uint256","nodeType":"ElementaryTypeName","src":"14372:7:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":62341,"mutability":"mutable","name":"to","nameLocation":"14396:2:95","nodeType":"VariableDeclaration","scope":62414,"src":"14388:10:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":62340,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14388:7:95","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14356:43:95"},"returnParameters":{"id":62345,"nodeType":"ParameterList","parameters":[],"src":"14421:0:95"},"scope":62964,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":62454,"nodeType":"FunctionDefinition","src":"15262:396:95","nodes":[],"body":{"id":62453,"nodeType":"Block","src":"15421:237:95","nodes":[],"statements":[{"condition":{"id":62432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"15435:44:95","subExpression":{"arguments":[{"id":62430,"name":"bridgingPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62423,"src":"15463:15:95","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":62428,"name":"_bridgingPayments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61848,"src":"15436:17:95","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$55671_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":62429,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15454:8:95","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":55765,"src":"15436:26:95","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$55671_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$55671_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"}},"id":62431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15436:43:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":62437,"nodeType":"IfStatement","src":"15431:106:95","trueBody":{"id":62436,"nodeType":"Block","src":"15481:56:95","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":62433,"name":"InvalidBridgingPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65166,"src":"15502:22:95","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":62434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15502:24:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":62435,"nodeType":"RevertStatement","src":"15495:31:95"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":62439,"name":"bridgingPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62423,"src":"15564:15:95","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":62438,"name":"IBridgingPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65117,"src":"15547:16:95","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBridgingPayment_$65117_$","typeString":"type(contract IBridgingPayment)"}},"id":62440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15547:33:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBridgingPayment_$65117","typeString":"contract IBridgingPayment"}},"id":62441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15581:6:95","memberName":"payFee","nodeType":"MemberAccess","referencedDeclaration":65116,"src":"15547:40:95","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$","typeString":"function () payable external"}},"id":62444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":62442,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15595:3:95","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":62443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15599:5:95","memberName":"value","nodeType":"MemberAccess","src":"15595:9:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"15547:58:95","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$value","typeString":"function () payable external"}},"id":62445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15547:60:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":62446,"nodeType":"ExpressionStatement","src":"15547:60:95"},{"expression":{"arguments":[{"id":62448,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62417,"src":"15633:5:95","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":62449,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62419,"src":"15640:6:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":62450,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62421,"src":"15648:2:95","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":62447,"name":"requestBridging","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62414,"src":"15617:15:95","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (address,uint256,bytes32)"}},"id":62451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15617:34:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":62452,"nodeType":"ExpressionStatement","src":"15617:34:95"}]},"baseFunctions":[65363],"documentation":{"id":62415,"nodeType":"StructuredDocumentation","src":"14972:285:95","text":" @dev Requests bridging of tokens and pays fee to one of the `bridgingPayment` contracts.\n @param token Token address.\n @param amount Amount of tokens to bridge.\n @param to Destination address.\n @param bridgingPayment Bridging payment address."},"functionSelector":"1e324b52","implemented":true,"kind":"function","modifiers":[{"id":62426,"kind":"modifierInvocation","modifierName":{"id":62425,"name":"whenNotPaused","nameLocations":["15403:13:95"],"nodeType":"IdentifierPath","referencedDeclaration":41813,"src":"15403:13:95"},"nodeType":"ModifierInvocation","src":"15403:13:95"}],"name":"requestBridgingPayingFee","nameLocation":"15271:24:95","parameters":{"id":62424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62417,"mutability":"mutable","name":"token","nameLocation":"15304:5:95","nodeType":"VariableDeclaration","scope":62454,"src":"15296:13:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":62416,"name":"address","nodeType":"ElementaryTypeName","src":"15296:7:95","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":62419,"mutability":"mutable","name":"amount","nameLocation":"15319:6:95","nodeType":"VariableDeclaration","scope":62454,"src":"15311:14:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":62418,"name":"uint256","nodeType":"ElementaryTypeName","src":"15311:7:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":62421,"mutability":"mutable","name":"to","nameLocation":"15335:2:95","nodeType":"VariableDeclaration","scope":62454,"src":"15327:10:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":62420,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15327:7:95","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":62423,"mutability":"mutable","name":"bridgingPayment","nameLocation":"15347:15:95","nodeType":"VariableDeclaration","scope":62454,"src":"15339:23:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":62422,"name":"address","nodeType":"ElementaryTypeName","src":"15339:7:95","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15295:68:95"},"returnParameters":{"id":62427,"nodeType":"ParameterList","parameters":[],"src":"15421:0:95"},"scope":62964,"stateMutability":"payable","virtual":false,"visibility":"public"},{"id":62502,"nodeType":"FunctionDefinition","src":"16184:366:95","nodes":[],"body":{"id":62501,"nodeType":"Block","src":"16394:156:95","nodes":[],"statements":[{"clauses":[{"block":{"id":62490,"nodeType":"Block","src":"16489:2:95","statements":[]},"errorName":"","id":62491,"nodeType":"TryCatchClause","src":"16489:2:95"},{"block":{"id":62492,"nodeType":"Block","src":"16498:2:95","statements":[]},"errorName":"","id":62493,"nodeType":"TryCatchClause","src":"16492:8:95"}],"externalCall":{"arguments":[{"expression":{"id":62478,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16435:3:95","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":62479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16439:6:95","memberName":"sender","nodeType":"MemberAccess","src":"16435:10:95","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":62482,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"16455:4:95","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Manager_$62964","typeString":"contract ERC20Manager"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20Manager_$62964","typeString":"contract ERC20Manager"}],"id":62481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16447:7:95","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":62480,"name":"address","nodeType":"ElementaryTypeName","src":"16447:7:95","typeDescriptions":{}}},"id":62483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16447:13:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":62484,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62459,"src":"16462:6:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":62485,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62463,"src":"16470:8:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":62486,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62465,"src":"16480:1:95","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":62487,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62467,"src":"16483:1:95","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":62488,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62469,"src":"16486:1:95","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"arguments":[{"id":62475,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62457,"src":"16421:5:95","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":62474,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44384,"src":"16408:12:95","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Permit_$44384_$","typeString":"type(contract IERC20Permit)"}},"id":62476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16408:19:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$44384","typeString":"contract IERC20Permit"}},"id":62477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16428:6:95","memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":44369,"src":"16408:26:95","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"}},"id":62489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16408:80:95","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":62494,"nodeType":"TryStatement","src":"16404:96:95"},{"expression":{"arguments":[{"id":62496,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62457,"src":"16525:5:95","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":62497,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62459,"src":"16532:6:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":62498,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62461,"src":"16540:2:95","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":62495,"name":"requestBridging","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62414,"src":"16509:15:95","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (address,uint256,bytes32)"}},"id":62499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16509:34:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":62500,"nodeType":"ExpressionStatement","src":"16509:34:95"}]},"baseFunctions":[65381],"documentation":{"id":62455,"nodeType":"StructuredDocumentation","src":"15664:515:95","text":" @dev Requests bridging of tokens.\n      This function uses `permit` to approve spending of tokens to optimize gas costs.\n      (If token supports `permit` function).\n @param token Token address.\n @param amount Amount of tokens to bridge.\n @param to Destination address.\n @param deadline Deadline for the transaction to be executed.\n @param v ECDSA signature parameter.\n @param r ECDSA signature parameter.\n @param s ECDSA signature parameter."},"functionSelector":"6a762d5c","implemented":true,"kind":"function","modifiers":[{"id":62472,"kind":"modifierInvocation","modifierName":{"id":62471,"name":"whenNotPaused","nameLocations":["16380:13:95"],"nodeType":"IdentifierPath","referencedDeclaration":41813,"src":"16380:13:95"},"nodeType":"ModifierInvocation","src":"16380:13:95"}],"name":"requestBridgingWithPermit","nameLocation":"16193:25:95","parameters":{"id":62470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62457,"mutability":"mutable","name":"token","nameLocation":"16236:5:95","nodeType":"VariableDeclaration","scope":62502,"src":"16228:13:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":62456,"name":"address","nodeType":"ElementaryTypeName","src":"16228:7:95","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":62459,"mutability":"mutable","name":"amount","nameLocation":"16259:6:95","nodeType":"VariableDeclaration","scope":62502,"src":"16251:14:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":62458,"name":"uint256","nodeType":"ElementaryTypeName","src":"16251:7:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":62461,"mutability":"mutable","name":"to","nameLocation":"16283:2:95","nodeType":"VariableDeclaration","scope":62502,"src":"16275:10:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":62460,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16275:7:95","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":62463,"mutability":"mutable","name":"deadline","nameLocation":"16303:8:95","nodeType":"VariableDeclaration","scope":62502,"src":"16295:16:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":62462,"name":"uint256","nodeType":"ElementaryTypeName","src":"16295:7:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":62465,"mutability":"mutable","name":"v","nameLocation":"16327:1:95","nodeType":"VariableDeclaration","scope":62502,"src":"16321:7:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":62464,"name":"uint8","nodeType":"ElementaryTypeName","src":"16321:5:95","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":62467,"mutability":"mutable","name":"r","nameLocation":"16346:1:95","nodeType":"VariableDeclaration","scope":62502,"src":"16338:9:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":62466,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16338:7:95","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":62469,"mutability":"mutable","name":"s","nameLocation":"16365:1:95","nodeType":"VariableDeclaration","scope":62502,"src":"16357:9:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":62468,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16357:7:95","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16218:154:95"},"returnParameters":{"id":62473,"nodeType":"ParameterList","parameters":[],"src":"16394:0:95"},"scope":62964,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":62554,"nodeType":"FunctionDefinition","src":"17187:526:95","nodes":[],"body":{"id":62553,"nodeType":"Block","src":"17447:266:95","nodes":[],"statements":[{"condition":{"id":62528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"17461:44:95","subExpression":{"arguments":[{"id":62526,"name":"bridgingPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62519,"src":"17489:15:95","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":62524,"name":"_bridgingPayments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61848,"src":"17462:17:95","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$55671_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":62525,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17480:8:95","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":55765,"src":"17462:26:95","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$55671_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$55671_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"}},"id":62527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17462:43:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":62533,"nodeType":"IfStatement","src":"17457:106:95","trueBody":{"id":62532,"nodeType":"Block","src":"17507:56:95","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":62529,"name":"InvalidBridgingPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65166,"src":"17528:22:95","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":62530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17528:24:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":62531,"nodeType":"RevertStatement","src":"17521:31:95"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":62535,"name":"bridgingPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62519,"src":"17590:15:95","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":62534,"name":"IBridgingPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65117,"src":"17573:16:95","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBridgingPayment_$65117_$","typeString":"type(contract IBridgingPayment)"}},"id":62536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17573:33:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBridgingPayment_$65117","typeString":"contract IBridgingPayment"}},"id":62537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17607:6:95","memberName":"payFee","nodeType":"MemberAccess","referencedDeclaration":65116,"src":"17573:40:95","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$","typeString":"function () payable external"}},"id":62540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":62538,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"17621:3:95","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":62539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17625:5:95","memberName":"value","nodeType":"MemberAccess","src":"17621:9:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"17573:58:95","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$value","typeString":"function () payable external"}},"id":62541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17573:60:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":62542,"nodeType":"ExpressionStatement","src":"17573:60:95"},{"expression":{"arguments":[{"id":62544,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62505,"src":"17669:5:95","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":62545,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62507,"src":"17676:6:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":62546,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62509,"src":"17684:2:95","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":62547,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62511,"src":"17688:8:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":62548,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62513,"src":"17698:1:95","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":62549,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62515,"src":"17701:1:95","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":62550,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62517,"src":"17704:1:95","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":62543,"name":"requestBridgingWithPermit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62502,"src":"17643:25:95","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (address,uint256,bytes32,uint256,uint8,bytes32,bytes32)"}},"id":62551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17643:63:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":62552,"nodeType":"ExpressionStatement","src":"17643:63:95"}]},"baseFunctions":[65401],"documentation":{"id":62503,"nodeType":"StructuredDocumentation","src":"16556:626:95","text":" @dev Requests bridging of tokens and pays fee to one of the `bridgingPayment` contracts.\n      This function uses `permit` to approve spending of tokens to optimize gas costs.\n      (If token supports `permit` function).\n @param token Token address.\n @param amount Amount of tokens to bridge.\n @param to Destination address.\n @param deadline Deadline for the transaction to be executed.\n @param v ECDSA signature parameter.\n @param r ECDSA signature parameter.\n @param s ECDSA signature parameter.\n @param bridgingPayment Bridging payment address."},"functionSelector":"f6cdd9cc","implemented":true,"kind":"function","modifiers":[{"id":62522,"kind":"modifierInvocation","modifierName":{"id":62521,"name":"whenNotPaused","nameLocations":["17433:13:95"],"nodeType":"IdentifierPath","referencedDeclaration":41813,"src":"17433:13:95"},"nodeType":"ModifierInvocation","src":"17433:13:95"}],"name":"requestBridgingPayingFeeWithPermit","nameLocation":"17196:34:95","parameters":{"id":62520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62505,"mutability":"mutable","name":"token","nameLocation":"17248:5:95","nodeType":"VariableDeclaration","scope":62554,"src":"17240:13:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":62504,"name":"address","nodeType":"ElementaryTypeName","src":"17240:7:95","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":62507,"mutability":"mutable","name":"amount","nameLocation":"17271:6:95","nodeType":"VariableDeclaration","scope":62554,"src":"17263:14:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":62506,"name":"uint256","nodeType":"ElementaryTypeName","src":"17263:7:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":62509,"mutability":"mutable","name":"to","nameLocation":"17295:2:95","nodeType":"VariableDeclaration","scope":62554,"src":"17287:10:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":62508,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17287:7:95","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":62511,"mutability":"mutable","name":"deadline","nameLocation":"17315:8:95","nodeType":"VariableDeclaration","scope":62554,"src":"17307:16:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":62510,"name":"uint256","nodeType":"ElementaryTypeName","src":"17307:7:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":62513,"mutability":"mutable","name":"v","nameLocation":"17339:1:95","nodeType":"VariableDeclaration","scope":62554,"src":"17333:7:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":62512,"name":"uint8","nodeType":"ElementaryTypeName","src":"17333:5:95","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":62515,"mutability":"mutable","name":"r","nameLocation":"17358:1:95","nodeType":"VariableDeclaration","scope":62554,"src":"17350:9:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":62514,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17350:7:95","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":62517,"mutability":"mutable","name":"s","nameLocation":"17377:1:95","nodeType":"VariableDeclaration","scope":62554,"src":"17369:9:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":62516,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17369:7:95","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":62519,"mutability":"mutable","name":"bridgingPayment","nameLocation":"17396:15:95","nodeType":"VariableDeclaration","scope":62554,"src":"17388:23:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":62518,"name":"address","nodeType":"ElementaryTypeName","src":"17388:7:95","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17230:187:95"},"returnParameters":{"id":62523,"nodeType":"ParameterList","parameters":[],"src":"17447:0:95"},"scope":62964,"stateMutability":"payable","virtual":false,"visibility":"public"},{"id":62599,"nodeType":"FunctionDefinition","src":"17991:412:95","nodes":[],"body":{"id":62598,"nodeType":"Block","src":"18076:327:95","nodes":[],"statements":[{"assignments":[62566],"declarations":[{"constant":false,"id":62566,"mutability":"mutable","name":"bridgingPayment","nameLocation":"18102:15:95","nodeType":"VariableDeclaration","scope":62598,"src":"18086:31:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_BridgingPayment_$61632","typeString":"contract BridgingPayment"},"typeName":{"id":62565,"nodeType":"UserDefinedTypeName","pathNode":{"id":62564,"name":"BridgingPayment","nameLocations":["18086:15:95"],"nodeType":"IdentifierPath","referencedDeclaration":61632,"src":"18086:15:95"},"referencedDeclaration":61632,"src":"18086:15:95","typeDescriptions":{"typeIdentifier":"t_contract$_BridgingPayment_$61632","typeString":"contract BridgingPayment"}},"visibility":"internal"}],"id":62578,"initialValue":{"arguments":[{"arguments":[{"id":62572,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"18148:4:95","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Manager_$62964","typeString":"contract ERC20Manager"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20Manager_$62964","typeString":"contract ERC20Manager"}],"id":62571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18140:7:95","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":62570,"name":"address","nodeType":"ElementaryTypeName","src":"18140:7:95","typeDescriptions":{}}},"id":62573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18140:13:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":62574,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62557,"src":"18155:3:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":62575,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"18160:3:95","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":62576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18164:6:95","memberName":"sender","nodeType":"MemberAccess","src":"18160:10:95","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":62569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"18120:19:95","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_contract$_BridgingPayment_$61632_$","typeString":"function (address,uint256,address) returns (contract BridgingPayment)"},"typeName":{"id":62568,"nodeType":"UserDefinedTypeName","pathNode":{"id":62567,"name":"BridgingPayment","nameLocations":["18124:15:95"],"nodeType":"IdentifierPath","referencedDeclaration":61632,"src":"18124:15:95"},"referencedDeclaration":61632,"src":"18124:15:95","typeDescriptions":{"typeIdentifier":"t_contract$_BridgingPayment_$61632","typeString":"contract BridgingPayment"}}},"id":62577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18120:51:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_BridgingPayment_$61632","typeString":"contract BridgingPayment"}},"nodeType":"VariableDeclarationStatement","src":"18086:85:95"},{"assignments":[62580],"declarations":[{"constant":false,"id":62580,"mutability":"mutable","name":"bridgingPaymentAddress","nameLocation":"18190:22:95","nodeType":"VariableDeclaration","scope":62598,"src":"18182:30:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":62579,"name":"address","nodeType":"ElementaryTypeName","src":"18182:7:95","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":62585,"initialValue":{"arguments":[{"id":62583,"name":"bridgingPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62566,"src":"18223:15:95","typeDescriptions":{"typeIdentifier":"t_contract$_BridgingPayment_$61632","typeString":"contract BridgingPayment"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BridgingPayment_$61632","typeString":"contract BridgingPayment"}],"id":62582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18215:7:95","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":62581,"name":"address","nodeType":"ElementaryTypeName","src":"18215:7:95","typeDescriptions":{}}},"id":62584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18215:24:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"18182:57:95"},{"expression":{"arguments":[{"id":62589,"name":"bridgingPaymentAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62580,"src":"18271:22:95","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":62586,"name":"_bridgingPayments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61848,"src":"18249:17:95","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$55671_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":62588,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18267:3:95","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":55698,"src":"18249:21:95","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$55671_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$55671_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":62590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18249:45:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":62591,"nodeType":"ExpressionStatement","src":"18249:45:95"},{"eventCall":{"arguments":[{"id":62593,"name":"bridgingPaymentAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62580,"src":"18333:22:95","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":62592,"name":"BridgingPaymentCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65193,"src":"18310:22:95","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":62594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18310:46:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":62595,"nodeType":"EmitStatement","src":"18305:51:95"},{"expression":{"id":62596,"name":"bridgingPaymentAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62580,"src":"18374:22:95","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":62563,"id":62597,"nodeType":"Return","src":"18367:29:95"}]},"baseFunctions":[65409],"documentation":{"id":62555,"nodeType":"StructuredDocumentation","src":"17719:267:95","text":" @dev Creates a new `BridgingPayment` contract (ERC20Manager is factory).\n      Emits `BridgingPaymentCreated` event.\n @param fee Fee amount in wei.\n @return bridgingPaymentAddress Address of the created `bridgingPayment` contract."},"functionSelector":"38ff319f","implemented":true,"kind":"function","modifiers":[{"id":62560,"kind":"modifierInvocation","modifierName":{"id":62559,"name":"whenNotPaused","nameLocations":["18044:13:95"],"nodeType":"IdentifierPath","referencedDeclaration":41813,"src":"18044:13:95"},"nodeType":"ModifierInvocation","src":"18044:13:95"}],"name":"createBridgingPayment","nameLocation":"18000:21:95","parameters":{"id":62558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62557,"mutability":"mutable","name":"fee","nameLocation":"18030:3:95","nodeType":"VariableDeclaration","scope":62599,"src":"18022:11:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":62556,"name":"uint256","nodeType":"ElementaryTypeName","src":"18022:7:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18021:13:95"},"returnParameters":{"id":62563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62562,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":62599,"src":"18067:7:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":62561,"name":"address","nodeType":"ElementaryTypeName","src":"18067:7:95","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"18066:9:95"},"scope":62964,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":62652,"nodeType":"FunctionDefinition","src":"18631:575:95","nodes":[],"body":{"id":62651,"nodeType":"Block","src":"18703:503:95","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":62610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":62607,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"18717:3:95","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":62608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18721:6:95","memberName":"sender","nodeType":"MemberAccess","src":"18717:10:95","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":62609,"name":"_messageQueue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61839,"src":"18731:13:95","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"18717:27:95","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":62615,"nodeType":"IfStatement","src":"18713:80:95","trueBody":{"id":62614,"nodeType":"Block","src":"18746:47:95","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":62611,"name":"InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65151,"src":"18767:13:95","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":62612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18767:15:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":62613,"nodeType":"RevertStatement","src":"18760:22:95"}]}},{"condition":{"arguments":[{"id":62618,"name":"source","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62602,"src":"18829:6:95","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":62616,"name":"_vftManagers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61842,"src":"18807:12:95","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$55501_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":62617,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18820:8:95","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":55568,"src":"18807:21:95","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$55501_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$55501_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) view returns (bool)"}},"id":62619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18807:29:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":62634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":62630,"name":"source","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62602,"src":"18976:6:95","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":62631,"name":"_governanceAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61834,"src":"18986:16:95","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$65652","typeString":"contract IGovernance"}},"id":62632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19003:10:95","memberName":"governance","nodeType":"MemberAccess","referencedDeclaration":65633,"src":"18986:27:95","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":62633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18986:29:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"18976:39:95","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":62648,"nodeType":"Block","src":"19153:47:95","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":62645,"name":"InvalidSource","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65154,"src":"19174:13:95","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":62646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19174:15:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":62647,"nodeType":"RevertStatement","src":"19167:22:95"}]},"id":62649,"nodeType":"IfStatement","src":"18972:228:95","trueBody":{"id":62644,"nodeType":"Block","src":"19017:130:95","statements":[{"condition":{"id":62638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"19035:44:95","subExpression":{"arguments":[{"id":62636,"name":"payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62604,"src":"19071:7:95","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":62635,"name":"_tryParseAndApplyGovernanceMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62963,"src":"19036:34:95","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes_calldata_ptr_$returns$_t_bool_$","typeString":"function (bytes calldata) returns (bool)"}},"id":62637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19036:43:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":62643,"nodeType":"IfStatement","src":"19031:106:95","trueBody":{"id":62642,"nodeType":"Block","src":"19081:56:95","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":62639,"name":"InvalidPayload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65157,"src":"19106:14:95","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":62640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19106:16:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":62641,"nodeType":"RevertStatement","src":"19099:23:95"}]}}]}},"id":62650,"nodeType":"IfStatement","src":"18803:397:95","trueBody":{"id":62629,"nodeType":"Block","src":"18838:128:95","statements":[{"condition":{"id":62623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18856:42:95","subExpression":{"arguments":[{"id":62621,"name":"payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62604,"src":"18890:7:95","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":62620,"name":"_tryParseAndApplyTransferMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62738,"src":"18857:32:95","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes_calldata_ptr_$returns$_t_bool_$","typeString":"function (bytes calldata) returns (bool)"}},"id":62622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18857:41:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":62628,"nodeType":"IfStatement","src":"18852:104:95","trueBody":{"id":62627,"nodeType":"Block","src":"18900:56:95","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":62624,"name":"InvalidPayload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65157,"src":"18925:14:95","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":62625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18925:16:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":62626,"nodeType":"RevertStatement","src":"18918:23:95"}]}}]}}]},"baseFunctions":[65773],"documentation":{"id":62600,"nodeType":"StructuredDocumentation","src":"18409:217:95","text":" @dev Handles message originated from Vara Network.\n @param source Source of the message (`ActorId` from Vara Network).\n @param payload Payload of the message (message from Vara Network)."},"functionSelector":"302ac5d0","implemented":true,"kind":"function","modifiers":[],"name":"handleMessage","nameLocation":"18640:13:95","parameters":{"id":62605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62602,"mutability":"mutable","name":"source","nameLocation":"18662:6:95","nodeType":"VariableDeclaration","scope":62652,"src":"18654:14:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":62601,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18654:7:95","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":62604,"mutability":"mutable","name":"payload","nameLocation":"18685:7:95","nodeType":"VariableDeclaration","scope":62652,"src":"18670:22:95","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":62603,"name":"bytes","nodeType":"ElementaryTypeName","src":"18670:5:95","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18653:40:95"},"returnParameters":{"id":62606,"nodeType":"ParameterList","parameters":[],"src":"18703:0:95"},"scope":62964,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":62738,"nodeType":"FunctionDefinition","src":"19668:1399:95","nodes":[],"body":{"id":62737,"nodeType":"Block","src":"19757:1310:95","nodes":[],"statements":[{"condition":{"id":62665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"19771:42:95","subExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":62663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":62660,"name":"payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62655,"src":"19773:7:95","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":62661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19781:6:95","memberName":"length","nodeType":"MemberAccess","src":"19773:14:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":62662,"name":"TRANSFER_MESSAGE_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61728,"src":"19791:21:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19773:39:95","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":62664,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19772:41:95","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":62669,"nodeType":"IfStatement","src":"19767:85:95","trueBody":{"id":62668,"nodeType":"Block","src":"19815:37:95","statements":[{"expression":{"hexValue":"66616c7365","id":62666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19836:5:95","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":62659,"id":62667,"nodeType":"Return","src":"19829:12:95"}]}},{"assignments":[62671],"declarations":[{"constant":false,"id":62671,"mutability":"mutable","name":"sender","nameLocation":"19870:6:95","nodeType":"VariableDeclaration","scope":62737,"src":"19862:14:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":62670,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19862:7:95","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":62672,"nodeType":"VariableDeclarationStatement","src":"19862:14:95"},{"assignments":[62674],"declarations":[{"constant":false,"id":62674,"mutability":"mutable","name":"receiver","nameLocation":"19894:8:95","nodeType":"VariableDeclaration","scope":62737,"src":"19886:16:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":62673,"name":"address","nodeType":"ElementaryTypeName","src":"19886:7:95","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":62675,"nodeType":"VariableDeclarationStatement","src":"19886:16:95"},{"assignments":[62677],"declarations":[{"constant":false,"id":62677,"mutability":"mutable","name":"token","nameLocation":"19920:5:95","nodeType":"VariableDeclaration","scope":62737,"src":"19912:13:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":62676,"name":"address","nodeType":"ElementaryTypeName","src":"19912:7:95","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":62678,"nodeType":"VariableDeclarationStatement","src":"19912:13:95"},{"assignments":[62680],"declarations":[{"constant":false,"id":62680,"mutability":"mutable","name":"amount","nameLocation":"19943:6:95","nodeType":"VariableDeclaration","scope":62737,"src":"19935:14:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":62679,"name":"uint256","nodeType":"ElementaryTypeName","src":"19935:7:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":62681,"nodeType":"VariableDeclarationStatement","src":"19935:14:95"},{"AST":{"nativeSrc":"20059:550:95","nodeType":"YulBlock","src":"20059:550:95","statements":[{"nativeSrc":"20073:38:95","nodeType":"YulAssignment","src":"20073:38:95","value":{"arguments":[{"name":"payload.offset","nativeSrc":"20096:14:95","nodeType":"YulIdentifier","src":"20096:14:95"}],"functionName":{"name":"calldataload","nativeSrc":"20083:12:95","nodeType":"YulIdentifier","src":"20083:12:95"},"nativeSrc":"20083:28:95","nodeType":"YulFunctionCall","src":"20083:28:95"},"variableNames":[{"name":"sender","nativeSrc":"20073:6:95","nodeType":"YulIdentifier","src":"20073:6:95"}]},{"nativeSrc":"20248:79:95","nodeType":"YulAssignment","src":"20248:79:95","value":{"arguments":[{"name":"RECEIVER_BIT_SHIFT","nativeSrc":"20264:18:95","nodeType":"YulIdentifier","src":"20264:18:95"},{"arguments":[{"arguments":[{"name":"payload.offset","nativeSrc":"20301:14:95","nodeType":"YulIdentifier","src":"20301:14:95"},{"name":"OFFSET1","nativeSrc":"20317:7:95","nodeType":"YulIdentifier","src":"20317:7:95"}],"functionName":{"name":"add","nativeSrc":"20297:3:95","nodeType":"YulIdentifier","src":"20297:3:95"},"nativeSrc":"20297:28:95","nodeType":"YulFunctionCall","src":"20297:28:95"}],"functionName":{"name":"calldataload","nativeSrc":"20284:12:95","nodeType":"YulIdentifier","src":"20284:12:95"},"nativeSrc":"20284:42:95","nodeType":"YulFunctionCall","src":"20284:42:95"}],"functionName":{"name":"shr","nativeSrc":"20260:3:95","nodeType":"YulIdentifier","src":"20260:3:95"},"nativeSrc":"20260:67:95","nodeType":"YulFunctionCall","src":"20260:67:95"},"variableNames":[{"name":"receiver","nativeSrc":"20248:8:95","nodeType":"YulIdentifier","src":"20248:8:95"}]},{"nativeSrc":"20461:73:95","nodeType":"YulAssignment","src":"20461:73:95","value":{"arguments":[{"name":"TOKEN_BIT_SHIFT","nativeSrc":"20474:15:95","nodeType":"YulIdentifier","src":"20474:15:95"},{"arguments":[{"arguments":[{"name":"payload.offset","nativeSrc":"20508:14:95","nodeType":"YulIdentifier","src":"20508:14:95"},{"name":"OFFSET2","nativeSrc":"20524:7:95","nodeType":"YulIdentifier","src":"20524:7:95"}],"functionName":{"name":"add","nativeSrc":"20504:3:95","nodeType":"YulIdentifier","src":"20504:3:95"},"nativeSrc":"20504:28:95","nodeType":"YulFunctionCall","src":"20504:28:95"}],"functionName":{"name":"calldataload","nativeSrc":"20491:12:95","nodeType":"YulIdentifier","src":"20491:12:95"},"nativeSrc":"20491:42:95","nodeType":"YulFunctionCall","src":"20491:42:95"}],"functionName":{"name":"shr","nativeSrc":"20470:3:95","nodeType":"YulIdentifier","src":"20470:3:95"},"nativeSrc":"20470:64:95","nodeType":"YulFunctionCall","src":"20470:64:95"},"variableNames":[{"name":"token","nativeSrc":"20461:5:95","nodeType":"YulIdentifier","src":"20461:5:95"}]},{"nativeSrc":"20547:52:95","nodeType":"YulAssignment","src":"20547:52:95","value":{"arguments":[{"arguments":[{"name":"payload.offset","nativeSrc":"20574:14:95","nodeType":"YulIdentifier","src":"20574:14:95"},{"name":"OFFSET3","nativeSrc":"20590:7:95","nodeType":"YulIdentifier","src":"20590:7:95"}],"functionName":{"name":"add","nativeSrc":"20570:3:95","nodeType":"YulIdentifier","src":"20570:3:95"},"nativeSrc":"20570:28:95","nodeType":"YulFunctionCall","src":"20570:28:95"}],"functionName":{"name":"calldataload","nativeSrc":"20557:12:95","nodeType":"YulIdentifier","src":"20557:12:95"},"nativeSrc":"20557:42:95","nodeType":"YulFunctionCall","src":"20557:42:95"},"variableNames":[{"name":"amount","nativeSrc":"20547:6:95","nodeType":"YulIdentifier","src":"20547:6:95"}]}]},"evmVersion":"prague","externalReferences":[{"declaration":61740,"isOffset":false,"isSlot":false,"src":"20317:7:95","valueSize":1},{"declaration":61744,"isOffset":false,"isSlot":false,"src":"20524:7:95","valueSize":1},{"declaration":61748,"isOffset":false,"isSlot":false,"src":"20590:7:95","valueSize":1},{"declaration":61732,"isOffset":false,"isSlot":false,"src":"20264:18:95","valueSize":1},{"declaration":61736,"isOffset":false,"isSlot":false,"src":"20474:15:95","valueSize":1},{"declaration":62680,"isOffset":false,"isSlot":false,"src":"20547:6:95","valueSize":1},{"declaration":62655,"isOffset":true,"isSlot":false,"src":"20096:14:95","suffix":"offset","valueSize":1},{"declaration":62655,"isOffset":true,"isSlot":false,"src":"20301:14:95","suffix":"offset","valueSize":1},{"declaration":62655,"isOffset":true,"isSlot":false,"src":"20508:14:95","suffix":"offset","valueSize":1},{"declaration":62655,"isOffset":true,"isSlot":false,"src":"20574:14:95","suffix":"offset","valueSize":1},{"declaration":62674,"isOffset":false,"isSlot":false,"src":"20248:8:95","valueSize":1},{"declaration":62671,"isOffset":false,"isSlot":false,"src":"20073:6:95","valueSize":1},{"declaration":62677,"isOffset":false,"isSlot":false,"src":"20461:5:95","valueSize":1}],"flags":["memory-safe"],"id":62682,"nodeType":"InlineAssembly","src":"20034:575:95"},{"assignments":[null,62685],"declarations":[null,{"constant":false,"id":62685,"mutability":"mutable","name":"tokenType","nameLocation":"20632:9:95","nodeType":"VariableDeclaration","scope":62737,"src":"20622:19:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$65219","typeString":"enum IERC20Manager.TokenType"},"typeName":{"id":62684,"nodeType":"UserDefinedTypeName","pathNode":{"id":62683,"name":"TokenType","nameLocations":["20622:9:95"],"nodeType":"IdentifierPath","referencedDeclaration":65219,"src":"20622:9:95"},"referencedDeclaration":65219,"src":"20622:9:95","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$65219","typeString":"enum IERC20Manager.TokenType"}},"visibility":"internal"}],"id":62690,"initialValue":{"arguments":[{"id":62688,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62677,"src":"20660:5:95","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":62686,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61845,"src":"20645:7:95","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToTokenTypeMap_$66439_storage","typeString":"struct CustomEnumerableMap.AddressToTokenTypeMap storage ref"}},"id":62687,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20653:6:95","memberName":"tryGet","nodeType":"MemberAccess","referencedDeclaration":66654,"src":"20645:14:95","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressToTokenTypeMap_$66439_storage_ptr_$_t_address_$returns$_t_bool_$_t_enum$_TokenType_$65219_$attached_to$_t_struct$_AddressToTokenTypeMap_$66439_storage_ptr_$","typeString":"function (struct CustomEnumerableMap.AddressToTokenTypeMap storage pointer,address) view returns (bool,enum IERC20Manager.TokenType)"}},"id":62689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20645:21:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_enum$_TokenType_$65219_$","typeString":"tuple(bool,enum IERC20Manager.TokenType)"}},"nodeType":"VariableDeclarationStatement","src":"20619:47:95"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_TokenType_$65219","typeString":"enum IERC20Manager.TokenType"},"id":62694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":62691,"name":"tokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62685,"src":"20681:9:95","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$65219","typeString":"enum IERC20Manager.TokenType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":62692,"name":"TokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65219,"src":"20694:9:95","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TokenType_$65219_$","typeString":"type(enum IERC20Manager.TokenType)"}},"id":62693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"20704:7:95","memberName":"Unknown","nodeType":"MemberAccess","referencedDeclaration":65216,"src":"20694:17:95","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$65219","typeString":"enum IERC20Manager.TokenType"}},"src":"20681:30:95","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_TokenType_$65219","typeString":"enum IERC20Manager.TokenType"},"id":62702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":62699,"name":"tokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62685,"src":"20773:9:95","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$65219","typeString":"enum IERC20Manager.TokenType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":62700,"name":"TokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65219,"src":"20786:9:95","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TokenType_$65219_$","typeString":"type(enum IERC20Manager.TokenType)"}},"id":62701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"20796:8:95","memberName":"Ethereum","nodeType":"MemberAccess","referencedDeclaration":65217,"src":"20786:18:95","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$65219","typeString":"enum IERC20Manager.TokenType"}},"src":"20773:31:95","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_TokenType_$65219","typeString":"enum IERC20Manager.TokenType"},"id":62715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":62712,"name":"tokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62685,"src":"20885:9:95","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$65219","typeString":"enum IERC20Manager.TokenType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":62713,"name":"TokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65219,"src":"20898:9:95","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TokenType_$65219_$","typeString":"type(enum IERC20Manager.TokenType)"}},"id":62714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"20908:4:95","memberName":"Gear","nodeType":"MemberAccess","referencedDeclaration":65218,"src":"20898:14:95","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$65219","typeString":"enum IERC20Manager.TokenType"}},"src":"20885:27:95","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":62725,"nodeType":"IfStatement","src":"20881:102:95","trueBody":{"id":62724,"nodeType":"Block","src":"20914:69:95","statements":[{"expression":{"arguments":[{"id":62720,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62674,"src":"20955:8:95","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":62721,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62680,"src":"20965:6:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":62717,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62677,"src":"20943:5:95","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":62716,"name":"IERC20Mintable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65546,"src":"20928:14:95","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Mintable_$65546_$","typeString":"type(contract IERC20Mintable)"}},"id":62718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20928:21:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Mintable_$65546","typeString":"contract IERC20Mintable"}},"id":62719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20950:4:95","memberName":"mint","nodeType":"MemberAccess","referencedDeclaration":65545,"src":"20928:26:95","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":62722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20928:44:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":62723,"nodeType":"ExpressionStatement","src":"20928:44:95"}]}},"id":62726,"nodeType":"IfStatement","src":"20769:214:95","trueBody":{"id":62711,"nodeType":"Block","src":"20806:69:95","statements":[{"expression":{"arguments":[{"id":62707,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62674,"src":"20847:8:95","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":62708,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62680,"src":"20857:6:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":62704,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62677,"src":"20827:5:95","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":62703,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44122,"src":"20820:6:95","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$44122_$","typeString":"type(contract IERC20)"}},"id":62705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20820:13:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$44122","typeString":"contract IERC20"}},"id":62706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20834:12:95","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":44429,"src":"20820:26:95","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$44122_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$44122_$","typeString":"function (contract IERC20,address,uint256)"}},"id":62709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20820:44:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":62710,"nodeType":"ExpressionStatement","src":"20820:44:95"}]}},"id":62727,"nodeType":"IfStatement","src":"20677:306:95","trueBody":{"id":62698,"nodeType":"Block","src":"20713:50:95","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":62695,"name":"InvalidTokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65163,"src":"20734:16:95","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":62696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20734:18:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":62697,"nodeType":"RevertStatement","src":"20727:25:95"}]}},{"eventCall":{"arguments":[{"id":62729,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62671,"src":"21006:6:95","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":62730,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62674,"src":"21014:8:95","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":62731,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62677,"src":"21024:5:95","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":62732,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62680,"src":"21031:6:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":62728,"name":"Bridged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65188,"src":"20998:7:95","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,address,uint256)"}},"id":62733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20998:40:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":62734,"nodeType":"EmitStatement","src":"20993:45:95"},{"expression":{"hexValue":"74727565","id":62735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"21056:4:95","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":62659,"id":62736,"nodeType":"Return","src":"21049:11:95"}]},"documentation":{"id":62653,"nodeType":"StructuredDocumentation","src":"19212:451:95","text":" @dev Tries to parse and apply transfer message originated from Vara Network.\n      Payload format:\n      ```solidity\n      address sender;\n      address receiver;\n      address token;\n      uint256 amount;\n      ```\n @param payload Payload of the message (message from Vara Network).\n @return success `true` if the message is parsed and applied, `false` otherwise."},"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseAndApplyTransferMessage","nameLocation":"19677:32:95","parameters":{"id":62656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62655,"mutability":"mutable","name":"payload","nameLocation":"19725:7:95","nodeType":"VariableDeclaration","scope":62738,"src":"19710:22:95","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":62654,"name":"bytes","nodeType":"ElementaryTypeName","src":"19710:5:95","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19709:24:95"},"returnParameters":{"id":62659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62658,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":62738,"src":"19751:4:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":62657,"name":"bool","nodeType":"ElementaryTypeName","src":"19751:4:95","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"19750:6:95"},"scope":62964,"stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"id":62963,"nodeType":"FunctionDefinition","src":"22151:3791:95","nodes":[],"body":{"id":62962,"nodeType":"Block","src":"22242:3700:95","nodes":[],"statements":[{"condition":{"id":62751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"22256:21:95","subExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":62749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":62746,"name":"payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62741,"src":"22258:7:95","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":62747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22266:6:95","memberName":"length","nodeType":"MemberAccess","src":"22258:14:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":62748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22275:1:95","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"22258:18:95","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":62750,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22257:20:95","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":62755,"nodeType":"IfStatement","src":"22252:64:95","trueBody":{"id":62754,"nodeType":"Block","src":"22279:37:95","statements":[{"expression":{"hexValue":"66616c7365","id":62752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"22300:5:95","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":62745,"id":62753,"nodeType":"Return","src":"22293:12:95"}]}},{"assignments":[62757],"declarations":[{"constant":false,"id":62757,"mutability":"mutable","name":"discriminant","nameLocation":"22334:12:95","nodeType":"VariableDeclaration","scope":62962,"src":"22326:20:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":62756,"name":"uint256","nodeType":"ElementaryTypeName","src":"22326:7:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":62758,"nodeType":"VariableDeclarationStatement","src":"22326:20:95"},{"AST":{"nativeSrc":"22381:225:95","nodeType":"YulBlock","src":"22381:225:95","statements":[{"nativeSrc":"22523:73:95","nodeType":"YulAssignment","src":"22523:73:95","value":{"arguments":[{"name":"DISCRIMINANT_BIT_SHIFT","nativeSrc":"22543:22:95","nodeType":"YulIdentifier","src":"22543:22:95"},{"arguments":[{"name":"payload.offset","nativeSrc":"22580:14:95","nodeType":"YulIdentifier","src":"22580:14:95"}],"functionName":{"name":"calldataload","nativeSrc":"22567:12:95","nodeType":"YulIdentifier","src":"22567:12:95"},"nativeSrc":"22567:28:95","nodeType":"YulFunctionCall","src":"22567:28:95"}],"functionName":{"name":"shr","nativeSrc":"22539:3:95","nodeType":"YulIdentifier","src":"22539:3:95"},"nativeSrc":"22539:57:95","nodeType":"YulFunctionCall","src":"22539:57:95"},"variableNames":[{"name":"discriminant","nativeSrc":"22523:12:95","nodeType":"YulIdentifier","src":"22523:12:95"}]}]},"evmVersion":"prague","externalReferences":[{"declaration":61756,"isOffset":false,"isSlot":false,"src":"22543:22:95","valueSize":1},{"declaration":62757,"isOffset":false,"isSlot":false,"src":"22523:12:95","valueSize":1},{"declaration":62741,"isOffset":true,"isSlot":false,"src":"22580:14:95","suffix":"offset","valueSize":1}],"flags":["memory-safe"],"id":62759,"nodeType":"InlineAssembly","src":"22356:250:95"},{"condition":{"id":62772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"22620:77:95","subExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":62770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":62762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":62760,"name":"discriminant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62757,"src":"22622:12:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":62761,"name":"ADD_VFT_MANAGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61764,"src":"22638:15:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22622:31:95","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":62769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":62763,"name":"discriminant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62757,"src":"22657:12:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[{"expression":{"id":62766,"name":"TokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65219,"src":"22681:9:95","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TokenType_$65219_$","typeString":"type(enum IERC20Manager.TokenType)"}},"id":62767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"22691:4:95","memberName":"Gear","nodeType":"MemberAccess","referencedDeclaration":65218,"src":"22681:14:95","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$65219","typeString":"enum IERC20Manager.TokenType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_TokenType_$65219","typeString":"enum IERC20Manager.TokenType"}],"id":62765,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22673:7:95","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":62764,"name":"uint256","nodeType":"ElementaryTypeName","src":"22673:7:95","typeDescriptions":{}}},"id":62768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22673:23:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22657:39:95","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"22622:74:95","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":62771,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22621:76:95","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":62776,"nodeType":"IfStatement","src":"22616:120:95","trueBody":{"id":62775,"nodeType":"Block","src":"22699:37:95","statements":[{"expression":{"hexValue":"66616c7365","id":62773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"22720:5:95","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":62745,"id":62774,"nodeType":"Return","src":"22713:12:95"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":62779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":62777,"name":"discriminant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62757,"src":"22750:12:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":62778,"name":"ADD_VFT_MANAGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61764,"src":"22766:15:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22750:31:95","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":62807,"nodeType":"IfStatement","src":"22746:524:95","trueBody":{"id":62806,"nodeType":"Block","src":"22783:487:95","statements":[{"condition":{"id":62785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"22801:49:95","subExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":62783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":62780,"name":"payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62741,"src":"22803:7:95","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":62781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22811:6:95","memberName":"length","nodeType":"MemberAccess","src":"22803:14:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":62782,"name":"ADD_VFT_MANAGER_MESSAGE_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61774,"src":"22821:28:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22803:46:95","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":62784,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22802:48:95","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":62789,"nodeType":"IfStatement","src":"22797:100:95","trueBody":{"id":62788,"nodeType":"Block","src":"22852:45:95","statements":[{"expression":{"hexValue":"66616c7365","id":62786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"22877:5:95","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":62745,"id":62787,"nodeType":"Return","src":"22870:12:95"}]}},{"assignments":[62791],"declarations":[{"constant":false,"id":62791,"mutability":"mutable","name":"vftManager","nameLocation":"23007:10:95","nodeType":"VariableDeclaration","scope":62806,"src":"22999:18:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":62790,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22999:7:95","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":62792,"nodeType":"VariableDeclarationStatement","src":"22999:18:95"},{"AST":{"nativeSrc":"23056:88:95","nodeType":"YulBlock","src":"23056:88:95","statements":[{"nativeSrc":"23074:56:95","nodeType":"YulAssignment","src":"23074:56:95","value":{"arguments":[{"arguments":[{"name":"payload.offset","nativeSrc":"23105:14:95","nodeType":"YulIdentifier","src":"23105:14:95"},{"name":"OFFSET4","nativeSrc":"23121:7:95","nodeType":"YulIdentifier","src":"23121:7:95"}],"functionName":{"name":"add","nativeSrc":"23101:3:95","nodeType":"YulIdentifier","src":"23101:3:95"},"nativeSrc":"23101:28:95","nodeType":"YulFunctionCall","src":"23101:28:95"}],"functionName":{"name":"calldataload","nativeSrc":"23088:12:95","nodeType":"YulIdentifier","src":"23088:12:95"},"nativeSrc":"23088:42:95","nodeType":"YulFunctionCall","src":"23088:42:95"},"variableNames":[{"name":"vftManager","nativeSrc":"23074:10:95","nodeType":"YulIdentifier","src":"23074:10:95"}]}]},"evmVersion":"prague","externalReferences":[{"declaration":61760,"isOffset":false,"isSlot":false,"src":"23121:7:95","valueSize":1},{"declaration":62741,"isOffset":true,"isSlot":false,"src":"23105:14:95","suffix":"offset","valueSize":1},{"declaration":62791,"isOffset":false,"isSlot":false,"src":"23074:10:95","valueSize":1}],"flags":["memory-safe"],"id":62793,"nodeType":"InlineAssembly","src":"23031:113:95"},{"expression":{"arguments":[{"id":62797,"name":"vftManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62791,"src":"23175:10:95","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":62794,"name":"_vftManagers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61842,"src":"23158:12:95","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$55501_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":62796,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23171:3:95","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":55519,"src":"23158:16:95","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Set_$55501_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$55501_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"}},"id":62798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23158:28:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":62799,"nodeType":"ExpressionStatement","src":"23158:28:95"},{"eventCall":{"arguments":[{"id":62801,"name":"vftManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62791,"src":"23222:10:95","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":62800,"name":"VftManagerAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65198,"src":"23206:15:95","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$returns$__$","typeString":"function (bytes32)"}},"id":62802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23206:27:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":62803,"nodeType":"EmitStatement","src":"23201:32:95"},{"expression":{"hexValue":"74727565","id":62804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"23255:4:95","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":62745,"id":62805,"nodeType":"Return","src":"23248:11:95"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":62814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":62808,"name":"discriminant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62757,"src":"23284:12:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"expression":{"id":62811,"name":"TokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65219,"src":"23308:9:95","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TokenType_$65219_$","typeString":"type(enum IERC20Manager.TokenType)"}},"id":62812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"23318:8:95","memberName":"Ethereum","nodeType":"MemberAccess","referencedDeclaration":65217,"src":"23308:18:95","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$65219","typeString":"enum IERC20Manager.TokenType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_TokenType_$65219","typeString":"enum IERC20Manager.TokenType"}],"id":62810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23300:7:95","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":62809,"name":"uint256","nodeType":"ElementaryTypeName","src":"23300:7:95","typeDescriptions":{}}},"id":62813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23300:27:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23284:43:95","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":62844,"nodeType":"IfStatement","src":"23280:712:95","trueBody":{"id":62843,"nodeType":"Block","src":"23329:663:95","statements":[{"condition":{"id":62820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"23347:57:95","subExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":62818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":62815,"name":"payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62741,"src":"23349:7:95","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":62816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23357:6:95","memberName":"length","nodeType":"MemberAccess","src":"23349:14:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":62817,"name":"REGISTER_ETHEREUM_TOKEN_MESSAGE_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61818,"src":"23367:36:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23349:54:95","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":62819,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"23348:56:95","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":62824,"nodeType":"IfStatement","src":"23343:108:95","trueBody":{"id":62823,"nodeType":"Block","src":"23406:45:95","statements":[{"expression":{"hexValue":"66616c7365","id":62821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"23431:5:95","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":62745,"id":62822,"nodeType":"Return","src":"23424:12:95"}]}},{"assignments":[62826],"declarations":[{"constant":false,"id":62826,"mutability":"mutable","name":"token","nameLocation":"23561:5:95","nodeType":"VariableDeclaration","scope":62843,"src":"23553:13:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":62825,"name":"address","nodeType":"ElementaryTypeName","src":"23553:7:95","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":62827,"nodeType":"VariableDeclarationStatement","src":"23553:13:95"},{"AST":{"nativeSrc":"23605:248:95","nodeType":"YulBlock","src":"23605:248:95","statements":[{"nativeSrc":"23757:82:95","nodeType":"YulAssignment","src":"23757:82:95","value":{"arguments":[{"name":"ETHEREUM_TOKEN_BIT_SHIFT","nativeSrc":"23770:24:95","nodeType":"YulIdentifier","src":"23770:24:95"},{"arguments":[{"arguments":[{"name":"payload.offset","nativeSrc":"23813:14:95","nodeType":"YulIdentifier","src":"23813:14:95"},{"name":"OFFSET4","nativeSrc":"23829:7:95","nodeType":"YulIdentifier","src":"23829:7:95"}],"functionName":{"name":"add","nativeSrc":"23809:3:95","nodeType":"YulIdentifier","src":"23809:3:95"},"nativeSrc":"23809:28:95","nodeType":"YulFunctionCall","src":"23809:28:95"}],"functionName":{"name":"calldataload","nativeSrc":"23796:12:95","nodeType":"YulIdentifier","src":"23796:12:95"},"nativeSrc":"23796:42:95","nodeType":"YulFunctionCall","src":"23796:42:95"}],"functionName":{"name":"shr","nativeSrc":"23766:3:95","nodeType":"YulIdentifier","src":"23766:3:95"},"nativeSrc":"23766:73:95","nodeType":"YulFunctionCall","src":"23766:73:95"},"variableNames":[{"name":"token","nativeSrc":"23757:5:95","nodeType":"YulIdentifier","src":"23757:5:95"}]}]},"evmVersion":"prague","externalReferences":[{"declaration":61822,"isOffset":false,"isSlot":false,"src":"23770:24:95","valueSize":1},{"declaration":61760,"isOffset":false,"isSlot":false,"src":"23829:7:95","valueSize":1},{"declaration":62741,"isOffset":true,"isSlot":false,"src":"23813:14:95","suffix":"offset","valueSize":1},{"declaration":62826,"isOffset":false,"isSlot":false,"src":"23757:5:95","valueSize":1}],"flags":["memory-safe"],"id":62828,"nodeType":"InlineAssembly","src":"23580:273:95"},{"expression":{"arguments":[{"id":62832,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62826,"src":"23879:5:95","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":62833,"name":"TokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65219,"src":"23886:9:95","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TokenType_$65219_$","typeString":"type(enum IERC20Manager.TokenType)"}},"id":62834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"23896:8:95","memberName":"Ethereum","nodeType":"MemberAccess","referencedDeclaration":65217,"src":"23886:18:95","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$65219","typeString":"enum IERC20Manager.TokenType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_TokenType_$65219","typeString":"enum IERC20Manager.TokenType"}],"expression":{"id":62829,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61845,"src":"23867:7:95","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToTokenTypeMap_$66439_storage","typeString":"struct CustomEnumerableMap.AddressToTokenTypeMap storage ref"}},"id":62831,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23875:3:95","memberName":"set","nodeType":"MemberAccess","referencedDeclaration":66477,"src":"23867:11:95","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressToTokenTypeMap_$66439_storage_ptr_$_t_address_$_t_enum$_TokenType_$65219_$returns$_t_bool_$attached_to$_t_struct$_AddressToTokenTypeMap_$66439_storage_ptr_$","typeString":"function (struct CustomEnumerableMap.AddressToTokenTypeMap storage pointer,address,enum IERC20Manager.TokenType) returns (bool)"}},"id":62835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23867:38:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":62836,"nodeType":"ExpressionStatement","src":"23867:38:95"},{"eventCall":{"arguments":[{"id":62838,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62826,"src":"23949:5:95","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":62837,"name":"EthereumTokenRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65203,"src":"23925:23:95","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":62839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23925:30:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":62840,"nodeType":"EmitStatement","src":"23920:35:95"},{"expression":{"hexValue":"74727565","id":62841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"23977:4:95","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":62745,"id":62842,"nodeType":"Return","src":"23970:11:95"}]}},{"condition":{"id":62850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"24092:53:95","subExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":62848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":62845,"name":"payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62741,"src":"24094:7:95","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":62846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24102:6:95","memberName":"length","nodeType":"MemberAccess","src":"24094:14:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":62847,"name":"REGISTER_GEAR_TOKEN_MESSAGE_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61808,"src":"24112:32:95","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24094:50:95","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":62849,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24093:52:95","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":62854,"nodeType":"IfStatement","src":"24088:96:95","trueBody":{"id":62853,"nodeType":"Block","src":"24147:37:95","statements":[{"expression":{"hexValue":"66616c7365","id":62851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"24168:5:95","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":62745,"id":62852,"nodeType":"Return","src":"24161:12:95"}]}},{"assignments":[62856],"declarations":[{"constant":false,"id":62856,"mutability":"mutable","name":"tokenName","nameLocation":"24202:9:95","nodeType":"VariableDeclaration","scope":62962,"src":"24194:17:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":62855,"name":"bytes32","nodeType":"ElementaryTypeName","src":"24194:7:95","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":62857,"nodeType":"VariableDeclarationStatement","src":"24194:17:95"},{"assignments":[62859],"declarations":[{"constant":false,"id":62859,"mutability":"mutable","name":"tokenSymbol","nameLocation":"24229:11:95","nodeType":"VariableDeclaration","scope":62962,"src":"24221:19:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":62858,"name":"bytes32","nodeType":"ElementaryTypeName","src":"24221:7:95","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":62860,"nodeType":"VariableDeclarationStatement","src":"24221:19:95"},{"assignments":[62862],"declarations":[{"constant":false,"id":62862,"mutability":"mutable","name":"tokenDecimals","nameLocation":"24256:13:95","nodeType":"VariableDeclaration","scope":62962,"src":"24250:19:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":62861,"name":"uint8","nodeType":"ElementaryTypeName","src":"24250:5:95","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":62863,"nodeType":"VariableDeclarationStatement","src":"24250:19:95"},{"AST":{"nativeSrc":"24684:454:95","nodeType":"YulBlock","src":"24684:454:95","statements":[{"nativeSrc":"24698:55:95","nodeType":"YulAssignment","src":"24698:55:95","value":{"arguments":[{"arguments":[{"name":"payload.offset","nativeSrc":"24728:14:95","nodeType":"YulIdentifier","src":"24728:14:95"},{"name":"OFFSET4","nativeSrc":"24744:7:95","nodeType":"YulIdentifier","src":"24744:7:95"}],"functionName":{"name":"add","nativeSrc":"24724:3:95","nodeType":"YulIdentifier","src":"24724:3:95"},"nativeSrc":"24724:28:95","nodeType":"YulFunctionCall","src":"24724:28:95"}],"functionName":{"name":"calldataload","nativeSrc":"24711:12:95","nodeType":"YulIdentifier","src":"24711:12:95"},"nativeSrc":"24711:42:95","nodeType":"YulFunctionCall","src":"24711:42:95"},"variableNames":[{"name":"tokenName","nativeSrc":"24698:9:95","nodeType":"YulIdentifier","src":"24698:9:95"}]},{"nativeSrc":"24766:57:95","nodeType":"YulAssignment","src":"24766:57:95","value":{"arguments":[{"arguments":[{"name":"payload.offset","nativeSrc":"24798:14:95","nodeType":"YulIdentifier","src":"24798:14:95"},{"name":"OFFSET5","nativeSrc":"24814:7:95","nodeType":"YulIdentifier","src":"24814:7:95"}],"functionName":{"name":"add","nativeSrc":"24794:3:95","nodeType":"YulIdentifier","src":"24794:3:95"},"nativeSrc":"24794:28:95","nodeType":"YulFunctionCall","src":"24794:28:95"}],"functionName":{"name":"calldataload","nativeSrc":"24781:12:95","nodeType":"YulIdentifier","src":"24781:12:95"},"nativeSrc":"24781:42:95","nodeType":"YulFunctionCall","src":"24781:42:95"},"variableNames":[{"name":"tokenSymbol","nativeSrc":"24766:11:95","nodeType":"YulIdentifier","src":"24766:11:95"}]},{"nativeSrc":"24836:59:95","nodeType":"YulAssignment","src":"24836:59:95","value":{"arguments":[{"arguments":[{"name":"payload.offset","nativeSrc":"24870:14:95","nodeType":"YulIdentifier","src":"24870:14:95"},{"name":"OFFSET6","nativeSrc":"24886:7:95","nodeType":"YulIdentifier","src":"24886:7:95"}],"functionName":{"name":"add","nativeSrc":"24866:3:95","nodeType":"YulIdentifier","src":"24866:3:95"},"nativeSrc":"24866:28:95","nodeType":"YulFunctionCall","src":"24866:28:95"}],"functionName":{"name":"calldataload","nativeSrc":"24853:12:95","nodeType":"YulIdentifier","src":"24853:12:95"},"nativeSrc":"24853:42:95","nodeType":"YulFunctionCall","src":"24853:42:95"},"variableNames":[{"name":"tokenDecimals","nativeSrc":"24836:13:95","nodeType":"YulIdentifier","src":"24836:13:95"}]},{"nativeSrc":"25038:90:95","nodeType":"YulAssignment","src":"25038:90:95","value":{"arguments":[{"name":"TOKEN_DECIMALS_BIT_SHIFT","nativeSrc":"25059:24:95","nodeType":"YulIdentifier","src":"25059:24:95"},{"arguments":[{"arguments":[{"name":"payload.offset","nativeSrc":"25102:14:95","nodeType":"YulIdentifier","src":"25102:14:95"},{"name":"OFFSET6","nativeSrc":"25118:7:95","nodeType":"YulIdentifier","src":"25118:7:95"}],"functionName":{"name":"add","nativeSrc":"25098:3:95","nodeType":"YulIdentifier","src":"25098:3:95"},"nativeSrc":"25098:28:95","nodeType":"YulFunctionCall","src":"25098:28:95"}],"functionName":{"name":"calldataload","nativeSrc":"25085:12:95","nodeType":"YulIdentifier","src":"25085:12:95"},"nativeSrc":"25085:42:95","nodeType":"YulFunctionCall","src":"25085:42:95"}],"functionName":{"name":"shr","nativeSrc":"25055:3:95","nodeType":"YulIdentifier","src":"25055:3:95"},"nativeSrc":"25055:73:95","nodeType":"YulFunctionCall","src":"25055:73:95"},"variableNames":[{"name":"tokenDecimals","nativeSrc":"25038:13:95","nodeType":"YulIdentifier","src":"25038:13:95"}]}]},"evmVersion":"prague","externalReferences":[{"declaration":61760,"isOffset":false,"isSlot":false,"src":"24744:7:95","valueSize":1},{"declaration":61794,"isOffset":false,"isSlot":false,"src":"24814:7:95","valueSize":1},{"declaration":61798,"isOffset":false,"isSlot":false,"src":"24886:7:95","valueSize":1},{"declaration":61798,"isOffset":false,"isSlot":false,"src":"25118:7:95","valueSize":1},{"declaration":61790,"isOffset":false,"isSlot":false,"src":"25059:24:95","valueSize":1},{"declaration":62741,"isOffset":true,"isSlot":false,"src":"24728:14:95","suffix":"offset","valueSize":1},{"declaration":62741,"isOffset":true,"isSlot":false,"src":"24798:14:95","suffix":"offset","valueSize":1},{"declaration":62741,"isOffset":true,"isSlot":false,"src":"24870:14:95","suffix":"offset","valueSize":1},{"declaration":62741,"isOffset":true,"isSlot":false,"src":"25102:14:95","suffix":"offset","valueSize":1},{"declaration":62862,"isOffset":false,"isSlot":false,"src":"24836:13:95","valueSize":1},{"declaration":62862,"isOffset":false,"isSlot":false,"src":"25038:13:95","valueSize":1},{"declaration":62856,"isOffset":false,"isSlot":false,"src":"24698:9:95","valueSize":1},{"declaration":62859,"isOffset":false,"isSlot":false,"src":"24766:11:95","valueSize":1}],"flags":["memory-safe"],"id":62864,"nodeType":"InlineAssembly","src":"24659:479:95"},{"assignments":[62866],"declarations":[{"constant":false,"id":62866,"mutability":"mutable","name":"tokenNameLength","nameLocation":"25154:15:95","nodeType":"VariableDeclaration","scope":62962,"src":"25148:21:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":62865,"name":"uint8","nodeType":"ElementaryTypeName","src":"25148:5:95","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":62873,"initialValue":{"arguments":[{"baseExpression":{"id":62869,"name":"tokenName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62856,"src":"25178:9:95","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":62871,"indexExpression":{"hexValue":"30","id":62870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25188:1:95","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25178:12:95","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":62868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25172:5:95","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":62867,"name":"uint8","nodeType":"ElementaryTypeName","src":"25172:5:95","typeDescriptions":{}}},"id":62872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25172:19:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"25148:43:95"},{"condition":{"id":62882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"25205:48:95","subExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":62880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":62876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":62874,"name":"tokenNameLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62866,"src":"25207:15:95","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"31","id":62875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25226:1:95","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25207:20:95","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":62879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":62877,"name":"tokenNameLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62866,"src":"25231:15:95","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3331","id":62878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25250:2:95","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"25231:21:95","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25207:45:95","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":62881,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25206:47:95","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":62886,"nodeType":"IfStatement","src":"25201:91:95","trueBody":{"id":62885,"nodeType":"Block","src":"25255:37:95","statements":[{"expression":{"hexValue":"66616c7365","id":62883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"25276:5:95","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":62745,"id":62884,"nodeType":"Return","src":"25269:12:95"}]}},{"assignments":[62888],"declarations":[{"constant":false,"id":62888,"mutability":"mutable","name":"tokenSymbolLength","nameLocation":"25308:17:95","nodeType":"VariableDeclaration","scope":62962,"src":"25302:23:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":62887,"name":"uint8","nodeType":"ElementaryTypeName","src":"25302:5:95","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":62895,"initialValue":{"arguments":[{"baseExpression":{"id":62891,"name":"tokenSymbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62859,"src":"25334:11:95","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":62893,"indexExpression":{"hexValue":"30","id":62892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25346:1:95","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25334:14:95","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":62890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25328:5:95","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":62889,"name":"uint8","nodeType":"ElementaryTypeName","src":"25328:5:95","typeDescriptions":{}}},"id":62894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25328:21:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"25302:47:95"},{"condition":{"id":62904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"25363:52:95","subExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":62902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":62898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":62896,"name":"tokenSymbolLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62888,"src":"25365:17:95","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"31","id":62897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25386:1:95","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25365:22:95","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":62901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":62899,"name":"tokenSymbolLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62888,"src":"25391:17:95","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3331","id":62900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25412:2:95","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"25391:23:95","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25365:49:95","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":62903,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25364:51:95","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":62908,"nodeType":"IfStatement","src":"25359:95:95","trueBody":{"id":62907,"nodeType":"Block","src":"25417:37:95","statements":[{"expression":{"hexValue":"66616c7365","id":62905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"25438:5:95","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":62745,"id":62906,"nodeType":"Return","src":"25431:12:95"}]}},{"assignments":[62910],"declarations":[{"constant":false,"id":62910,"mutability":"mutable","name":"tokenNameStr","nameLocation":"25478:12:95","nodeType":"VariableDeclaration","scope":62962,"src":"25464:26:95","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":62909,"name":"string","nodeType":"ElementaryTypeName","src":"25464:6:95","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":62915,"initialValue":{"arguments":[{"id":62913,"name":"tokenName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62856,"src":"25513:9:95","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":62911,"name":"LibString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":66745,"src":"25493:9:95","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibString_$66745_$","typeString":"type(library LibString)"}},"id":62912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25503:9:95","memberName":"unpackOne","nodeType":"MemberAccess","referencedDeclaration":66744,"src":"25493:19:95","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_string_memory_ptr_$","typeString":"function (bytes32) pure returns (string memory)"}},"id":62914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25493:30:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"25464:59:95"},{"assignments":[62917],"declarations":[{"constant":false,"id":62917,"mutability":"mutable","name":"tokenSymbolStr","nameLocation":"25547:14:95","nodeType":"VariableDeclaration","scope":62962,"src":"25533:28:95","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":62916,"name":"string","nodeType":"ElementaryTypeName","src":"25533:6:95","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":62922,"initialValue":{"arguments":[{"id":62920,"name":"tokenSymbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62859,"src":"25584:11:95","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":62918,"name":"LibString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":66745,"src":"25564:9:95","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibString_$66745_$","typeString":"type(library LibString)"}},"id":62919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25574:9:95","memberName":"unpackOne","nodeType":"MemberAccess","referencedDeclaration":66744,"src":"25564:19:95","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_string_memory_ptr_$","typeString":"function (bytes32) pure returns (string memory)"}},"id":62921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25564:32:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"25533:63:95"},{"assignments":[62925],"declarations":[{"constant":false,"id":62925,"mutability":"mutable","name":"gearSupply","nameLocation":"25623:10:95","nodeType":"VariableDeclaration","scope":62962,"src":"25607:26:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20GearSupply_$65079","typeString":"contract ERC20GearSupply"},"typeName":{"id":62924,"nodeType":"UserDefinedTypeName","pathNode":{"id":62923,"name":"ERC20GearSupply","nameLocations":["25607:15:95"],"nodeType":"IdentifierPath","referencedDeclaration":65079,"src":"25607:15:95"},"referencedDeclaration":65079,"src":"25607:15:95","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20GearSupply_$65079","typeString":"contract ERC20GearSupply"}},"visibility":"internal"}],"id":62937,"initialValue":{"arguments":[{"arguments":[{"id":62931,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"25664:4:95","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Manager_$62964","typeString":"contract ERC20Manager"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20Manager_$62964","typeString":"contract ERC20Manager"}],"id":62930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25656:7:95","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":62929,"name":"address","nodeType":"ElementaryTypeName","src":"25656:7:95","typeDescriptions":{}}},"id":62932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25656:13:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":62933,"name":"tokenNameStr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62910,"src":"25671:12:95","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":62934,"name":"tokenSymbolStr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62917,"src":"25685:14:95","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":62935,"name":"tokenDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62862,"src":"25701:13:95","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":62928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"25636:19:95","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_ERC20GearSupply_$65079_$","typeString":"function (address,string memory,string memory,uint8) returns (contract ERC20GearSupply)"},"typeName":{"id":62927,"nodeType":"UserDefinedTypeName","pathNode":{"id":62926,"name":"ERC20GearSupply","nameLocations":["25640:15:95"],"nodeType":"IdentifierPath","referencedDeclaration":65079,"src":"25640:15:95"},"referencedDeclaration":65079,"src":"25640:15:95","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20GearSupply_$65079","typeString":"contract ERC20GearSupply"}}},"id":62936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25636:79:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ERC20GearSupply_$65079","typeString":"contract ERC20GearSupply"}},"nodeType":"VariableDeclarationStatement","src":"25607:108:95"},{"assignments":[62939],"declarations":[{"constant":false,"id":62939,"mutability":"mutable","name":"tokenAddress","nameLocation":"25733:12:95","nodeType":"VariableDeclaration","scope":62962,"src":"25725:20:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":62938,"name":"address","nodeType":"ElementaryTypeName","src":"25725:7:95","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":62944,"initialValue":{"arguments":[{"id":62942,"name":"gearSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62925,"src":"25756:10:95","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20GearSupply_$65079","typeString":"contract ERC20GearSupply"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20GearSupply_$65079","typeString":"contract ERC20GearSupply"}],"id":62941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25748:7:95","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":62940,"name":"address","nodeType":"ElementaryTypeName","src":"25748:7:95","typeDescriptions":{}}},"id":62943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25748:19:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"25725:42:95"},{"expression":{"arguments":[{"id":62948,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62939,"src":"25790:12:95","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":62949,"name":"TokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65219,"src":"25804:9:95","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TokenType_$65219_$","typeString":"type(enum IERC20Manager.TokenType)"}},"id":62950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"25814:4:95","memberName":"Gear","nodeType":"MemberAccess","referencedDeclaration":65218,"src":"25804:14:95","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$65219","typeString":"enum IERC20Manager.TokenType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_TokenType_$65219","typeString":"enum IERC20Manager.TokenType"}],"expression":{"id":62945,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61845,"src":"25778:7:95","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToTokenTypeMap_$66439_storage","typeString":"struct CustomEnumerableMap.AddressToTokenTypeMap storage ref"}},"id":62947,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25786:3:95","memberName":"set","nodeType":"MemberAccess","referencedDeclaration":66477,"src":"25778:11:95","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressToTokenTypeMap_$66439_storage_ptr_$_t_address_$_t_enum$_TokenType_$65219_$returns$_t_bool_$attached_to$_t_struct$_AddressToTokenTypeMap_$66439_storage_ptr_$","typeString":"function (struct CustomEnumerableMap.AddressToTokenTypeMap storage pointer,address,enum IERC20Manager.TokenType) returns (bool)"}},"id":62951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25778:41:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":62952,"nodeType":"ExpressionStatement","src":"25778:41:95"},{"eventCall":{"arguments":[{"id":62954,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62939,"src":"25855:12:95","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":62955,"name":"tokenNameStr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62910,"src":"25869:12:95","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":62956,"name":"tokenSymbolStr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62917,"src":"25883:14:95","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":62957,"name":"tokenDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62862,"src":"25899:13:95","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":62953,"name":"GearTokenRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65214,"src":"25835:19:95","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$__$","typeString":"function (address,string memory,string memory,uint8)"}},"id":62958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25835:78:95","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":62959,"nodeType":"EmitStatement","src":"25830:83:95"},{"expression":{"hexValue":"74727565","id":62960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"25931:4:95","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":62745,"id":62961,"nodeType":"Return","src":"25924:11:95"}]},"documentation":{"id":62739,"nodeType":"StructuredDocumentation","src":"21073:1073:95","text":" @dev Tries to parse and apply governance message originated from Vara Network.\n      Payload format:\n      ```solidity\n      uint8 discriminant;\n      ```\n      `discriminant` can be:\n      - `ADD_VFT_MANAGER = 0x00` - add new VFT manager to list of registered VFT managers\n          ```solidity\n          bytes32 vftManager; // 32 bytes\n          ```\n      - `TokenType.Ethereum = 0x01` - register Ethereum token\n          ```solidity\n          address token; // 20 bytes\n          ```\n      - `TokenType.Gear = 0x02` - register Gear token\n          ```solidity\n          bytes32 tokenName; // 1 byte length + 31 bytes datas\n          bytes32 tokenSymbol; // 1 byte length + 31 bytes data\n          uint8 tokenDecimals; // 1 byte\n          ```\n @param payload Payload of the message (message from Vara Network).\n @return success `true` if the message is parsed and applied, `false` otherwise."},"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseAndApplyGovernanceMessage","nameLocation":"22160:34:95","parameters":{"id":62742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62741,"mutability":"mutable","name":"payload","nameLocation":"22210:7:95","nodeType":"VariableDeclaration","scope":62963,"src":"22195:22:95","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":62740,"name":"bytes","nodeType":"ElementaryTypeName","src":"22195:5:95","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"22194:24:95"},"returnParameters":{"id":62745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62744,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":62963,"src":"22236:4:95","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":62743,"name":"bool","nodeType":"ElementaryTypeName","src":"22236:4:95","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"22235:6:95"},"scope":62964,"stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"abstract":false,"baseContracts":[{"baseName":{"id":61673,"name":"Initializable","nameLocations":["1566:13:95"],"nodeType":"IdentifierPath","referencedDeclaration":40526,"src":"1566:13:95"},"id":61674,"nodeType":"InheritanceSpecifier","src":"1566:13:95"},{"baseName":{"id":61675,"name":"AccessControlUpgradeable","nameLocations":["1585:24:95"],"nodeType":"IdentifierPath","referencedDeclaration":40063,"src":"1585:24:95"},"id":61676,"nodeType":"InheritanceSpecifier","src":"1585:24:95"},{"baseName":{"id":61677,"name":"PausableUpgradeable","nameLocations":["1615:19:95"],"nodeType":"IdentifierPath","referencedDeclaration":41923,"src":"1615:19:95"},"id":61678,"nodeType":"InheritanceSpecifier","src":"1615:19:95"},{"baseName":{"id":61679,"name":"UUPSUpgradeable","nameLocations":["1640:15:95"],"nodeType":"IdentifierPath","referencedDeclaration":40708,"src":"1640:15:95"},"id":61680,"nodeType":"InheritanceSpecifier","src":"1640:15:95"},{"baseName":{"id":61681,"name":"IPausable","nameLocations":["1661:9:95"],"nodeType":"IdentifierPath","referencedDeclaration":66077,"src":"1661:9:95"},"id":61682,"nodeType":"InheritanceSpecifier","src":"1661:9:95"},{"baseName":{"id":61683,"name":"IMessageHandler","nameLocations":["1676:15:95"],"nodeType":"IdentifierPath","referencedDeclaration":65774,"src":"1676:15:95"},"id":61684,"nodeType":"InheritanceSpecifier","src":"1676:15:95"},{"baseName":{"id":61685,"name":"IERC20Manager","nameLocations":["1697:13:95"],"nodeType":"IdentifierPath","referencedDeclaration":65410,"src":"1697:13:95"},"id":61686,"nodeType":"InheritanceSpecifier","src":"1697:13:95"}],"canonicalName":"ERC20Manager","contractDependencies":[61632,65079],"contractKind":"contract","fullyImplemented":true,"linearizedBaseContracts":[62964,65410,65774,66077,40708,42684,41923,40063,42307,48876,42390,41652,40526],"name":"ERC20Manager","nameLocation":"1546:12:95","scope":62965,"usedErrors":[40275,40278,40553,40558,41802,41805,42317,42320,42879,42892,44396,44858,46161,65151,65154,65157,65160,65163,65166],"usedEvents":[40283,41794,41799,42329,42338,42347,42632,65177,65188,65193,65198,65203,65214]}],"license":"GPL-3.0-or-later WITH Classpath-exception-2.0"},"id":95}