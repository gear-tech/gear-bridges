{"abi":[{"type":"constructor","inputs":[{"name":"relayer","type":"address","internalType":"contract IRelayer"}],"stateMutability":"nonpayable"},{"type":"function","name":"calculateMerkleRoot","inputs":[{"name":"proof","type":"bytes32[]","internalType":"bytes32[]"},{"name":"leaf_hash","type":"bytes32","internalType":"bytes32"},{"name":"total_leaves","type":"uint256","internalType":"uint256"},{"name":"leaf_index","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"isProcessed","inputs":[{"name":"message","type":"tuple","internalType":"struct VaraMessage","components":[{"name":"nonce","type":"bytes32","internalType":"bytes32"},{"name":"sender","type":"bytes32","internalType":"bytes32"},{"name":"receiver","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}]}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"processMessage","inputs":[{"name":"block_number","type":"uint256","internalType":"uint256"},{"name":"total_leaves","type":"uint256","internalType":"uint256"},{"name":"leaf_index","type":"uint256","internalType":"uint256"},{"name":"message","type":"tuple","internalType":"struct VaraMessage","components":[{"name":"nonce","type":"bytes32","internalType":"bytes32"},{"name":"sender","type":"bytes32","internalType":"bytes32"},{"name":"receiver","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}]},{"name":"proof","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"MessageProcessed","inputs":[{"name":"blockNumber","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"messageHash","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"messageNonce","type":"bytes32","indexed":true,"internalType":"bytes32"}],"anonymous":false},{"type":"error","name":"BadProof","inputs":[]},{"type":"error","name":"MerkleRootNotSet","inputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"MessageAlreadyProcessed","inputs":[{"name":"messageNonce","type":"bytes32","internalType":"bytes32"}]},{"type":"error","name":"MessageNotProcessed","inputs":[]},{"type":"error","name":"RelayerEmergencyStop","inputs":[]}],"bytecode":{"object":"0x60a034606657601f61060f38819003918201601f19168301916001600160401b03831184841017606a57808492602094604052833981010312606657516001600160a01b0381168103606657608052604051610590908161007f8239608051816101450152f35b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe6080806040526004361015610012575f80fd5b5f3560e01c90816344855efc146100df57508063e1a551cf146100905763f250df321461003d575f80fd5b3461008c57602036600319011261008c5760043567ffffffffffffffff811161008c576080600319823603011261008c57600401355f525f602052602060ff60405f2054166040519015158152f35b5f80fd5b3461008c57608036600319011261008c5760043567ffffffffffffffff811161008c576100d76100c6602092369060040161040e565b6064359160443591602435916104d4565b604051908152f35b3461008c5760a036600319011261008c576064359060043567ffffffffffffffff831161008c5782600401926080600319823603011261008c5760843567ffffffffffffffff811161008c5761013990369060040161040e565b6318e9666960e21b85527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031694909290602081600481895afa90811561036c575f916103ef575b506103e057853595865f525f60205260ff60405f2054166103cd5760248083013594604484019460208a60646101bd8961048d565b97019661021560748b6101d08b8b6104a1565b80916040519687948a8601998a5260408601526bffffffffffffffffffffffff199060601b1660608501528484013781015f838201520301601f19810183528261043f565b51902060405182810191825282815261022f60408261043f565b5190209960405194858092630aab8ba560e01b82528c60048301525afa92831561036c575f93610399575b5082156103865790610274918960443592602435926104d4565b03610377576064936102b05f936020958a865285875260408620600160ff198254161790556102a960018060a01b039161048d565b16936104a1565b9586949192604051978896879586936317a7ea2760e31b8552600485015260406024850152816044850152848401378181018301849052601f01601f191681010301925af190811561036c575f9161033d575b506103175763ef2a441760e01b5f5260045ffd5b7f86b784cc94bf75127f81b9f806d51b5a1cf5a970b3b349f1d3dc7086007bcec55f80a4005b61035f915060203d602011610365575b610357818361043f565b810190610475565b84610303565b503d61034d565b6040513d5f823e3d90fd5b637ca55c7760e01b5f5260045ffd5b876354e2ed2d60e11b5f5260045260245ffd5b9092506020813d6020116103c5575b816103b56020938361043f565b8101031261008c5751918a61025a565b3d91506103a8565b8663398560f160e11b5f5260045260245ffd5b63dfe54af360e01b5f5260045ffd5b610408915060203d60201161036557610357818361043f565b87610188565b9181601f8401121561008c5782359167ffffffffffffffff831161008c576020808501948460051b01011161008c57565b90601f8019910116810190811067ffffffffffffffff82111761046157604052565b634e487b7160e01b5f52604160045260245ffd5b9081602091031261008c5751801515810361008c5790565b356001600160a01b038116810361008c5790565b903590601e198136030182121561008c570180359067ffffffffffffffff821161008c5760200191813603831361008c57565b90949293928484101561057c575f9493925b86861015610573578560051b8301356001808616148015610560575b15610550575f5260205260405f20925b60011c935f19810190811161053c5760011c6001810180911161053c5760019095019493926104e6565b634e487b7160e01b5f52601160045260245ffd5b905f5260205260405f2092610512565b506001850180861161053c578614610502565b95509350505050565b634e487b7160e01b5f52600160045260245ffd","sourceMap":"251:4084:58:-:0;;;;;;;;;;;;;-1:-1:-1;;251:4084:58;;;;-1:-1:-1;;;;;251:4084:58;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;251:4084:58;;;;;;369:17;;251:4084;;;;;;;;369:17;251:4084;;;;;;;-1:-1:-1;251:4084:58;;;;;;-1:-1:-1;251:4084:58;;;;;-1:-1:-1;251:4084:58","linkReferences":{}},"deployedBytecode":{"object":"0x6080806040526004361015610012575f80fd5b5f3560e01c90816344855efc146100df57508063e1a551cf146100905763f250df321461003d575f80fd5b3461008c57602036600319011261008c5760043567ffffffffffffffff811161008c576080600319823603011261008c57600401355f525f602052602060ff60405f2054166040519015158152f35b5f80fd5b3461008c57608036600319011261008c5760043567ffffffffffffffff811161008c576100d76100c6602092369060040161040e565b6064359160443591602435916104d4565b604051908152f35b3461008c5760a036600319011261008c576064359060043567ffffffffffffffff831161008c5782600401926080600319823603011261008c5760843567ffffffffffffffff811161008c5761013990369060040161040e565b6318e9666960e21b85527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031694909290602081600481895afa90811561036c575f916103ef575b506103e057853595865f525f60205260ff60405f2054166103cd5760248083013594604484019460208a60646101bd8961048d565b97019661021560748b6101d08b8b6104a1565b80916040519687948a8601998a5260408601526bffffffffffffffffffffffff199060601b1660608501528484013781015f838201520301601f19810183528261043f565b51902060405182810191825282815261022f60408261043f565b5190209960405194858092630aab8ba560e01b82528c60048301525afa92831561036c575f93610399575b5082156103865790610274918960443592602435926104d4565b03610377576064936102b05f936020958a865285875260408620600160ff198254161790556102a960018060a01b039161048d565b16936104a1565b9586949192604051978896879586936317a7ea2760e31b8552600485015260406024850152816044850152848401378181018301849052601f01601f191681010301925af190811561036c575f9161033d575b506103175763ef2a441760e01b5f5260045ffd5b7f86b784cc94bf75127f81b9f806d51b5a1cf5a970b3b349f1d3dc7086007bcec55f80a4005b61035f915060203d602011610365575b610357818361043f565b810190610475565b84610303565b503d61034d565b6040513d5f823e3d90fd5b637ca55c7760e01b5f5260045ffd5b876354e2ed2d60e11b5f5260045260245ffd5b9092506020813d6020116103c5575b816103b56020938361043f565b8101031261008c5751918a61025a565b3d91506103a8565b8663398560f160e11b5f5260045260245ffd5b63dfe54af360e01b5f5260045ffd5b610408915060203d60201161036557610357818361043f565b87610188565b9181601f8401121561008c5782359167ffffffffffffffff831161008c576020808501948460051b01011161008c57565b90601f8019910116810190811067ffffffffffffffff82111761046157604052565b634e487b7160e01b5f52604160045260245ffd5b9081602091031261008c5751801515810361008c5790565b356001600160a01b038116810361008c5790565b903590601e198136030182121561008c570180359067ffffffffffffffff821161008c5760200191813603831361008c57565b90949293928484101561057c575f9493925b86861015610573578560051b8301356001808616148015610560575b15610550575f5260205260405f20925b60011c935f19810190811161053c5760011c6001810180911161053c5760019095019493926104e6565b634e487b7160e01b5f52601160045260245ffd5b905f5260205260405f2092610512565b506001850180861161053c578614610502565b95509350505050565b634e487b7160e01b5f52600160045260245ffd","sourceMap":"251:4084:58:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;251:4084:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;251:4084:58;;;;;;;;;;;3029:64;251:4084;;;;;;;;:::i;:::-;;;;;;;;;3029:64;;:::i;:::-;251:4084;;;;;;;;;;;;-1:-1:-1;;251:4084:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;1554:23:58;;:7;-1:-1:-1;;;;;251:4084:58;;;;;;;;;;1554:23;;;;;;;251:4084;1554:23;;;251:4084;1550:83;;;251:4084;;;;;;;;;;;;;;;1643:110;;251:4084;585:14;;;251:4084;613:16;251:4084;613:16;;;251:4084;613:16;251:4084;613:16;;;:::i;:::-;643:12;;;528:137;251:4084;643:12;;;;;:::i;:::-;251:4084;;;;528:137;;;;;;251:4084;;;;;;;;;;;;;;;;;;;;;;;;;;;;528:137;;;;;;;;;;:::i;:::-;251:4084;709:15;;251:4084;;692:33;;;251:4084;;;692:33;;;;251:4084;692:33;;:::i;:::-;251:4084;682:44;;251:4084;;;;;;;;;;1837:35;;;251:4084;1837:35;;251:4084;1837:35;;;;;;;251:4084;1837:35;;;251:4084;1887:25;;;1883:93;;251:4084;2003:63;251:4084;;;;;;;2003:63;;:::i;:::-;:90;1986:160;;251:4084;;2334:12;251:4084;;;;;;;;;;;;;;;;;;;;;;2248:16;251:4084;;;;;2248:16;;:::i;:::-;251:4084;2334:12;;:::i;:::-;251:4084;;;;;;;;;;;;;;;;;2226:134;;251:4084;2226:134;;251:4084;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;251:4084:58;;;2226:134;;;;;;;;;;251:4084;2226:134;;;251:4084;-1:-1:-1;2225:135:58;;2392:21;;;251:4084;2392:21;251:4084;;2392:21;2208:307;2449:55;251:4084;2449:55;;251:4084;2226:134;;;;251:4084;2226:134;251:4084;2226:134;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;251:4084;;;;;;;;;1986:160;2125:10;;;251:4084;2125:10;251:4084;;2125:10;1883:93;1935:30;;;;251:4084;1935:30;251:4084;;;;1935:30;1837:35;;;;251:4084;1837:35;;251:4084;1837:35;;;;;;251:4084;1837:35;;;:::i;:::-;;;251:4084;;;;;1837:35;;;;;;;-1:-1:-1;1837:35:58;;1643:110;1704:38;;;;251:4084;1704:38;251:4084;;;;1704:38;1550:83;1600:22;;;251:4084;1600:22;251:4084;;1600:22;1554:23;;;;251:4084;1554:23;251:4084;1554:23;;;;;;;:::i;:::-;;;;251:4084;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;528:137;;251:4084;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;251:4084:58;;;;;-1:-1:-1;251:4084:58;;;;;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;;;;251:4084:58;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3399:934::-;;;;;;3616:13;;;251:4084;;;3658:1;3646:13;;;3679:3;3661:16;;;;;;251:4084;;;;;;3762:1;251:4084;;;3749:14;3748:40;;;;3679:3;3744:476;;;3658:1;3808:180;;;;3658:1;3808:180;3744:476;;3762:1;251:4084;;-1:-1:-1;;251:4084:58;;;;;;;3762:1;251:4084;3762:1;251:4084;;;;;;;3762:1;4265:29;3679:3;251:4084;3646:13;;;;;251:4084;;;;3658:1;251:4084;;;;;3658:1;251:4084;3744:476;4026:180;3658:1;4026:180;;;;3658:1;4026:180;3744:476;;;3748:40;251:4084;3762:1;251:4084;;;;;;;3769:18;;3748:40;;3661:16;;-1:-1:-1;3661:16:58;-1:-1:-1;;;;3399:934:58:o;251:4084::-;;;;;;;;;;;","linkReferences":{},"immutableReferences":{"48895":[{"start":325,"length":32}]}},"methodIdentifiers":{"calculateMerkleRoot(bytes32[],bytes32,uint256,uint256)":"e1a551cf","isProcessed((bytes32,bytes32,address,bytes))":"f250df32","processMessage(uint256,uint256,uint256,(bytes32,bytes32,address,bytes),bytes32[])":"44855efc"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IRelayer\",\"name\":\"relayer\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BadProof\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"MerkleRootNotSet\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"messageNonce\",\"type\":\"bytes32\"}],\"name\":\"MessageAlreadyProcessed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MessageNotProcessed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RelayerEmergencyStop\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"messageHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"messageNonce\",\"type\":\"bytes32\"}],\"name\":\"MessageProcessed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32\",\"name\":\"leaf_hash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"total_leaves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"leaf_index\",\"type\":\"uint256\"}],\"name\":\"calculateMerkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct VaraMessage\",\"name\":\"message\",\"type\":\"tuple\"}],\"name\":\"isProcessed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"block_number\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"total_leaves\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"leaf_index\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct VaraMessage\",\"name\":\"message\",\"type\":\"tuple\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"processMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"calculateMerkleRoot(bytes32[],bytes32,uint256,uint256)\":{\"details\":\"Calculated merkle tree root for a provided merkle proof.\",\"params\":{\"leaf_hash\":\"- Hash of data stored in target leaf.\",\"leaf_index\":\"- Index of target leaf.\",\"proof\":\"- Merkle proof.\",\"total_leaves\":\"- Number of leaves in merkle tree.\"}},\"isProcessed((bytes32,bytes32,address,bytes))\":{\"details\":\"Checks if `VaraMessage` already was processed.\",\"params\":{\"message\":\"- Message it checks agaiunst.\"}},\"processMessage(uint256,uint256,uint256,(bytes32,bytes32,address,bytes),bytes32[])\":{\"details\":\"Unpack message from merkle tree and relay it to the receiver.\",\"params\":{\"block_number\":\"- Block number of block containing target merkle tree.\",\"leaf_index\":\"- Index of leaf containing target message. See `binary_merkle_tree` for  reference.\",\"message\":\"- Target message.\",\"proof\":\"- Merkle proof of inclusion of leaf #`leaf_index` into target merkle tree that  was included into `block_number`.\",\"total_leaves\":\"- Number of leaves in target merkle tree.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/MessageQueue.sol\":\"MessageQueue\"},\"debug\":{\"revertStrings\":\"strip\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"appendCBOR\":false,\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"src/MessageQueue.sol\":{\"keccak256\":\"0xa22287575423db4172be5a404eea8684daf666bbc3607c72efffbcbc474e3cec\",\"license\":\"GPL-3.0-or-later WITH Classpath-exception-2.0\",\"urls\":[\"bzz-raw://e835bb00c771c6493bc1cd1e4c46ccef785ad56d21b17d5acfff9e931fcfe8ae\",\"dweb:/ipfs/Qmb4WLKon7gN39n4LvKQEpfT3mJzRnGao1qqjT7dDqkj5g\"]},\"src/interfaces/IMessageQueue.sol\":{\"keccak256\":\"0xade9d1a0b7e489966dc236d30a143b1d0b81f7c68d948d29a133a7e476b5493d\",\"license\":\"GPL-3.0-or-later WITH Classpath-exception-2.0\",\"urls\":[\"bzz-raw://86ffd5a3aa017f839f9e91ae5cdbbc2e1a43aadd93f223a5cd7d01bfbd863a63\",\"dweb:/ipfs/Qme8nGSX2qUH1MV6y3zxRkpru2i45hE8btSPM9KqvqkgAf\"]},\"src/interfaces/IRelayer.sol\":{\"keccak256\":\"0xec5960e66fb0e9d02ec13b5bae6712b4921a59bbd284bdf2b4668d8c26fb5093\",\"license\":\"GPL-3.0-or-later WITH Classpath-exception-2.0\",\"urls\":[\"bzz-raw://9bcf40429387c622d71fdc7ca5e9060854d795db22e50af1a77dd40fba41535b\",\"dweb:/ipfs/QmfNfRitpmnkMR3gbFYu65bdiPZwFJBm5HaPonMAitZ5WR\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.30+commit.73712a01"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"contract IRelayer","name":"relayer","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"type":"error","name":"BadProof"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"type":"error","name":"MerkleRootNotSet"},{"inputs":[{"internalType":"bytes32","name":"messageNonce","type":"bytes32"}],"type":"error","name":"MessageAlreadyProcessed"},{"inputs":[],"type":"error","name":"MessageNotProcessed"},{"inputs":[],"type":"error","name":"RelayerEmergencyStop"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256","indexed":true},{"internalType":"bytes32","name":"messageHash","type":"bytes32","indexed":true},{"internalType":"bytes32","name":"messageNonce","type":"bytes32","indexed":true}],"type":"event","name":"MessageProcessed","anonymous":false},{"inputs":[{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"},{"internalType":"bytes32","name":"leaf_hash","type":"bytes32"},{"internalType":"uint256","name":"total_leaves","type":"uint256"},{"internalType":"uint256","name":"leaf_index","type":"uint256"}],"stateMutability":"pure","type":"function","name":"calculateMerkleRoot","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"struct VaraMessage","name":"message","type":"tuple","components":[{"internalType":"bytes32","name":"nonce","type":"bytes32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}]}],"stateMutability":"view","type":"function","name":"isProcessed","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"block_number","type":"uint256"},{"internalType":"uint256","name":"total_leaves","type":"uint256"},{"internalType":"uint256","name":"leaf_index","type":"uint256"},{"internalType":"struct VaraMessage","name":"message","type":"tuple","components":[{"internalType":"bytes32","name":"nonce","type":"bytes32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}]},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"processMessage"}],"devdoc":{"kind":"dev","methods":{"calculateMerkleRoot(bytes32[],bytes32,uint256,uint256)":{"details":"Calculated merkle tree root for a provided merkle proof.","params":{"leaf_hash":"- Hash of data stored in target leaf.","leaf_index":"- Index of target leaf.","proof":"- Merkle proof.","total_leaves":"- Number of leaves in merkle tree."}},"isProcessed((bytes32,bytes32,address,bytes))":{"details":"Checks if `VaraMessage` already was processed.","params":{"message":"- Message it checks agaiunst."}},"processMessage(uint256,uint256,uint256,(bytes32,bytes32,address,bytes),bytes32[])":{"details":"Unpack message from merkle tree and relay it to the receiver.","params":{"block_number":"- Block number of block containing target merkle tree.","leaf_index":"- Index of leaf containing target message. See `binary_merkle_tree` for  reference.","message":"- Target message.","proof":"- Merkle proof of inclusion of leaf #`leaf_index` into target merkle tree that  was included into `block_number`.","total_leaves":"- Number of leaves in target merkle tree."}}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"none","appendCBOR":false},"compilationTarget":{"src/MessageQueue.sol":"MessageQueue"},"evmVersion":"prague","libraries":{},"viaIR":true},"sources":{"src/MessageQueue.sol":{"keccak256":"0xa22287575423db4172be5a404eea8684daf666bbc3607c72efffbcbc474e3cec","urls":["bzz-raw://e835bb00c771c6493bc1cd1e4c46ccef785ad56d21b17d5acfff9e931fcfe8ae","dweb:/ipfs/Qmb4WLKon7gN39n4LvKQEpfT3mJzRnGao1qqjT7dDqkj5g"],"license":"GPL-3.0-or-later WITH Classpath-exception-2.0"},"src/interfaces/IMessageQueue.sol":{"keccak256":"0xade9d1a0b7e489966dc236d30a143b1d0b81f7c68d948d29a133a7e476b5493d","urls":["bzz-raw://86ffd5a3aa017f839f9e91ae5cdbbc2e1a43aadd93f223a5cd7d01bfbd863a63","dweb:/ipfs/Qme8nGSX2qUH1MV6y3zxRkpru2i45hE8btSPM9KqvqkgAf"],"license":"GPL-3.0-or-later WITH Classpath-exception-2.0"},"src/interfaces/IRelayer.sol":{"keccak256":"0xec5960e66fb0e9d02ec13b5bae6712b4921a59bbd284bdf2b4668d8c26fb5093","urls":["bzz-raw://9bcf40429387c622d71fdc7ca5e9060854d795db22e50af1a77dd40fba41535b","dweb:/ipfs/QmfNfRitpmnkMR3gbFYu65bdiPZwFJBm5HaPonMAitZ5WR"],"license":"GPL-3.0-or-later WITH Classpath-exception-2.0"}},"version":1},"id":58}