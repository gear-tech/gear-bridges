{"abi":[{"type":"constructor","inputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"DEFAULT_ADMIN_ROLE","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"PAUSER_ROLE","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"UPGRADE_INTERFACE_VERSION","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"bridgingPayments","inputs":[],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"bridgingPayments","inputs":[{"name":"offset","type":"uint256","internalType":"uint256"},{"name":"limit","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"createBridgingPayment","inputs":[{"name":"fee","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"getRoleAdmin","inputs":[{"name":"role","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"getTokenType","inputs":[{"name":"token","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint8","internalType":"enum IERC20Manager.TokenType"}],"stateMutability":"view"},{"type":"function","name":"governanceAdmin","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"governancePauser","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"grantRole","inputs":[{"name":"role","type":"bytes32","internalType":"bytes32"},{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"handleMessage","inputs":[{"name":"source","type":"bytes32","internalType":"bytes32"},{"name":"payload","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"hasRole","inputs":[{"name":"role","type":"bytes32","internalType":"bytes32"},{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"initialize","inputs":[{"name":"governanceAdmin_","type":"address","internalType":"contract IGovernance"},{"name":"governancePauser_","type":"address","internalType":"contract IGovernance"},{"name":"messageQueue_","type":"address","internalType":"address"},{"name":"vftManager","type":"bytes32","internalType":"bytes32"},{"name":"tokens_","type":"tuple[]","internalType":"struct IERC20Manager.TokenInfo[]","components":[{"name":"token","type":"address","internalType":"address"},{"name":"tokenType","type":"uint8","internalType":"enum IERC20Manager.TokenType"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"isBridgingPayment","inputs":[{"name":"bridgingPayment","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isVftManager","inputs":[{"name":"vftManager","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"messageQueue","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"pause","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"paused","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"proxiableUUID","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"renounceRole","inputs":[{"name":"role","type":"bytes32","internalType":"bytes32"},{"name":"callerConfirmation","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"requestBridging","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"to","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"requestBridgingPayingFee","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"to","type":"bytes32","internalType":"bytes32"},{"name":"bridgingPayment","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"requestBridgingPayingFeeWithPermit","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"to","type":"bytes32","internalType":"bytes32"},{"name":"deadline","type":"uint256","internalType":"uint256"},{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"},{"name":"bridgingPayment","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"requestBridgingWithPermit","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"to","type":"bytes32","internalType":"bytes32"},{"name":"deadline","type":"uint256","internalType":"uint256"},{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"revokeRole","inputs":[{"name":"role","type":"bytes32","internalType":"bytes32"},{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"supportsInterface","inputs":[{"name":"interfaceId","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"tokens","inputs":[{"name":"offset","type":"uint256","internalType":"uint256"},{"name":"limit","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"tokens","inputs":[],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"totalBridgingPayments","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"totalTokens","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"totalVftManagers","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"unpause","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"upgradeToAndCall","inputs":[{"name":"newImplementation","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"vftManagers","inputs":[],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"vftManagers","inputs":[{"name":"offset","type":"uint256","internalType":"uint256"},{"name":"limit","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"event","name":"Bridged","inputs":[{"name":"from","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"token","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"BridgingPaymentCreated","inputs":[{"name":"bridgingPayment","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"BridgingRequested","inputs":[{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"token","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"EthereumTokenRegistered","inputs":[{"name":"token","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"GearTokenRegistered","inputs":[{"name":"token","type":"address","indexed":false,"internalType":"address"},{"name":"tokenName","type":"string","indexed":false,"internalType":"string"},{"name":"tokenSymbol","type":"string","indexed":false,"internalType":"string"},{"name":"tokenDecimals","type":"uint8","indexed":false,"internalType":"uint8"}],"anonymous":false},{"type":"event","name":"Initialized","inputs":[{"name":"version","type":"uint64","indexed":false,"internalType":"uint64"}],"anonymous":false},{"type":"event","name":"Paused","inputs":[{"name":"account","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"RoleAdminChanged","inputs":[{"name":"role","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"previousAdminRole","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"newAdminRole","type":"bytes32","indexed":true,"internalType":"bytes32"}],"anonymous":false},{"type":"event","name":"RoleGranted","inputs":[{"name":"role","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"account","type":"address","indexed":true,"internalType":"address"},{"name":"sender","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"RoleRevoked","inputs":[{"name":"role","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"account","type":"address","indexed":true,"internalType":"address"},{"name":"sender","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"Unpaused","inputs":[{"name":"account","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"Upgraded","inputs":[{"name":"implementation","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"VftManagerAdded","inputs":[{"name":"vftManager","type":"bytes32","indexed":false,"internalType":"bytes32"}],"anonymous":false},{"type":"error","name":"AccessControlBadConfirmation","inputs":[]},{"type":"error","name":"AccessControlUnauthorizedAccount","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"neededRole","type":"bytes32","internalType":"bytes32"}]},{"type":"error","name":"AddressEmptyCode","inputs":[{"name":"target","type":"address","internalType":"address"}]},{"type":"error","name":"ERC1967InvalidImplementation","inputs":[{"name":"implementation","type":"address","internalType":"address"}]},{"type":"error","name":"ERC1967NonPayable","inputs":[]},{"type":"error","name":"EnforcedPause","inputs":[]},{"type":"error","name":"ExpectedPause","inputs":[]},{"type":"error","name":"FailedCall","inputs":[]},{"type":"error","name":"InvalidAmount","inputs":[]},{"type":"error","name":"InvalidBridgingPayment","inputs":[]},{"type":"error","name":"InvalidInitialization","inputs":[]},{"type":"error","name":"InvalidPayload","inputs":[]},{"type":"error","name":"InvalidSender","inputs":[]},{"type":"error","name":"InvalidSource","inputs":[]},{"type":"error","name":"InvalidTokenType","inputs":[]},{"type":"error","name":"NotInitializing","inputs":[]},{"type":"error","name":"SafeERC20FailedOperation","inputs":[{"name":"token","type":"address","internalType":"address"}]},{"type":"error","name":"UUPSUnauthorizedCallContext","inputs":[]},{"type":"error","name":"UUPSUnsupportedProxiableUUID","inputs":[{"name":"slot","type":"bytes32","internalType":"bytes32"}]}],"bytecode":{"object":"0x60a080604052346100c257306080525f516020613ee75f395f51905f525460ff8160401c166100b3576002600160401b03196001600160401b03821601610060575b604051613e2090816100c78239608051818181610cd20152610da20152f35b6001600160401b0319166001600160401b039081175f516020613ee75f395f51905f525581527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a15f80610041565b63f92ee8a960e01b5f5260045ffd5b5f80fdfe6080806040526004361015610012575f80fd5b5f905f3560e01c90816258f6b81461153a5750806301ffc9a7146114e45780630c9d9b97146114ac578063109ec2e7146114385780631e324b5214611385578063240dfa9514611367578063248a9ca3146113275780632f2ff15d146112dc578063302ac5d01461119557806336568abe1461115057806338ff319f1461108b5780633b70c18a146110625780633f4ba83a14610fe25780634e68953914610fad5780634f1ef28614610d2657806352d1902d14610cbf5780635c975abb14610c905780636a762d5c14610c62578063763b754a146109165780637e1c0c09146108f85780638456cb591461088557806387be40b11461081057806387e7a3a3146107f55780638b4864d6146107da5780638b841f6c146107bc57806391d148541461076657806393272baf1461071a5780639d63848a14610699578063a217fddf1461067d578063ad3cb1cc14610634578063c1c6092114610609578063c305870c146104b3578063c81eb7971461048a578063d547741f14610436578063e63ab1e91461041a5763f6cdd9cc146101a9575f80fd5b610100366003190112610417576101be61155c565b6024356101c961161c565b9160e4356001600160a01b03811690819003610415576101e76116df565b6101fc815f52600960205260405f2054151590565b15610406578085913b156103ed5781600491604051928380926314b0812960e11b825234905af180156103a6576103f1575b50506102386116df565b6001600160a01b038116928490843b156103ed5760ff6040519163d505accf60e01b8352336004840152306024840152856044840152606435606484015216608482015260a43560a482015260c43560c4820152818160e48183895af16103d4575b50506102a46116df565b81156103c5576102b39061203e565b905060038110156103b157806102d25763a1e9dd9d60e01b8452600484fd5b6001810361034857506103156040516323b872dd60e01b60208201523360248201523060448201528260648201526064815261030f6084826115ca565b836121f8565b604051908152604435907ff80de57fd7626baaff7d867494866703686569822c2326ae60b2515ede953c3a60203392a480f35b60020361031557813b156103a25760405163079cc67960e41b8152336004820152602481018290528390818160448183885af180156103a65761038d575b5050610315565b81610397916115ca565b6103a257825f610386565b8280fd5b6040513d84823e3d90fd5b634e487b7160e01b84526021600452602484fd5b63162908e360e11b8452600484fd5b816103de916115ca565b6103e957835f61029a565b8380fd5b5080fd5b816103fb916115ca565b6103e957835f61022e565b631e37e19560e31b8552600485fd5b845b80fd5b5034610417578060031936011261041757602060405160018152f35b503461041757604036600319011261041757610486600435610456611572565b9061048161047c825f525f516020613dc05f395f51905f52602052600160405f20015490565b611756565b611d66565b5080f35b50346104175780600319360112610417576001546040516001600160a01b039091168152602090f35b5034610417576060366003190112610417576104cd61155c565b602435906104d96116df565b81156105fa576104e88161203e565b905060038110156103b157806105075763a1e9dd9d60e01b8452600484fd5b6001810361059257506105536040516323b872dd60e01b6020820152336024820152306044820152836064820152606481526105446084826115ca565b6001600160a01b0383166121f8565b6040519182526001600160a01b0316906044359033907ff80de57fd7626baaff7d867494866703686569822c2326ae60b2515ede953c3a90602090a480f35b60020361055357826001600160a01b038216803b156103ed5760405163079cc67960e41b8152336004820152602481018590529082908290604490829084905af180156103a6576105e5575b5050610553565b816105ef916115ca565b6103a257825f6105de565b63162908e360e11b8352600483fd5b50346104175761063061062461061e3661167d565b90611fc1565b60405191829182611644565b0390f35b5034610417578060031936011261041757506106306040516106576040826115ca565b60058152640352e302e360dc1b6020820152604051918291602083526020830190611693565b5034610417578060031936011261041757602090604051908152f35b503461041757806003193601126104175760405180916020600554928381520191600582527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0915b81811061070457610630856106f8818703826115ca565b60405191829182611588565b82548452602090930192600192830192016106e1565b50346104175760203660031901126104175761073c61073761155c565b61203e565b6040519150600381101561075257602092508152f35b634e487b7160e01b83526021600452602483fd5b5034610417576040366003190112610417576040610782611572565b9160043581525f516020613dc05f395f51905f52602052209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b50346104175780600319360112610417576020600854604051908152f35b5034610417576106306106f86107ef3661167d565b90611f44565b5034610417576106306106f861080a3661167d565b90611eab565b503461041757806003193601126104175760405180916020600354928381520191600382527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b915b81811061086f5761063085610624818703826115ca565b8254845260209093019260019283019201610858565b503461041757806003193601126104175761089e611706565b6108a66116df565b600160ff195f516020613de05f395f51905f525416175f516020613de05f395f51905f52557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a180f35b50346104175780600319360112610417576020600554604051908152f35b50346104175760a03660031901126104175761093061155c565b610938611572565b6044356001600160a01b038116908190036103e9576084359167ffffffffffffffff831161041557366023840112156104155782600401356109798161162c565b9361098760405195866115ca565b8185526024602086019260061b82010190368211610c5e57602401915b818310610be6575050505f516020613e005f395f51905f52549360ff8560401c16159467ffffffffffffffff811680159081610bde575b6001149081610bd4575b159081610bcb575b50610bbc5767ffffffffffffffff1981166001175f516020613e005f395f51905f525585610b90575b50610a1f61218d565b610a2761218d565b610a2f61218d565b6001600160a01b031690610a428261179c565b50610a4c8261184b565b506001600160a01b031690610a608261184b565b506001600160601b0360a01b8654161785556001600160601b0360a01b60015416176001556001600160601b0360a01b6002541617600255610aa36064356120d4565b50825b8151811015610b2f57610ab981836116b7565b51602081019081516003811015610b1b57610add5763a1e9dd9d60e01b8652600486fd5b519051906001600160a01b03166003821015610b075760019291610b0091611e02565b5001610aa6565b634e487b7160e01b86526021600452602486fd5b634e487b7160e01b87526021600452602487fd5b5050610b385780f35b68ff0000000000000000195f516020613e005f395f51905f5254165f516020613e005f395f51905f52557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a180f35b68ffffffffffffffffff191668010000000000000001175f516020613e005f395f51905f52555f610a16565b63f92ee8a960e01b8752600487fd5b9050155f6109ed565b303b1591506109e5565b8791506109db565b604083360312610c5e57604051906040820182811067ffffffffffffffff821117610c4a5760405283356001600160a01b0381168103610c465782526020840135906003821015610c4657826020928360409501528152019201916109a4565b8980fd5b634e487b7160e01b8a52604160045260248afd5b8780fd5b50346104175760e036600319011261041757610c7c61155c565b602435610c8761161c565b916102386116df565b5034610417578060031936011261041757602060ff5f516020613de05f395f51905f5254166040519015158152f35b50346104175780600319360112610417577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163003610d175760206040515f516020613da05f395f51905f528152f35b63703e46dd60e11b8152600490fd5b50604036600319011261041757610d3b61155c565b6024359067ffffffffffffffff82116103a257366023830112156103a25781600401359083610d6983611600565b93610d7760405195866115ca565b838552602085019336602482840101116103a257806024602093018637850101526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016308114908115610f8b575b50610f7c578380525f516020613dc05f395f51905f5260209081526040808620335f908152925290205460ff1615610f64576040516352d1902d60e01b81526001600160a01b0382169390602081600481885afa869181610f2c575b50610e4257634c9c8ce360e01b86526004859052602486fd5b93845f516020613da05f395f51905f52879603610f1a5750823b15610f08575f516020613da05f395f51905f5280546001600160a01b031916821790558491907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8380a2805115610eed576104869382915190845af43d15610ee5573d91610ec983611600565b92610ed760405194856115ca565b83523d85602085013e612250565b606091612250565b5050505034610ef95780f35b63b398979f60e01b8152600490fd5b634c9c8ce360e01b8552600452602484fd5b632a87526960e21b8652600452602485fd5b9091506020813d602011610f5c575b81610f48602093836115ca565b81010312610f585751905f610e29565b5f80fd5b3d9150610f3b565b63e2517d3f60e01b8452336004526024849052604484fd5b63703e46dd60e11b8452600484fd5b5f516020613da05f395f51905f52546001600160a01b0316141590505f610dcd565b5034610417576020366003190112610417576020610fd86004355f52600460205260405f2054151590565b6040519015158152f35b5034610417578060031936011261041757610ffb611706565b5f516020613de05f395f51905f525460ff8116156110535760ff19165f516020613de05f395f51905f52557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a180f35b638dfc202b60e01b8252600482fd5b50346104175780600319360112610417576002546040516001600160a01b039091168152602090f35b5034610417576020366003190112610417576110a56116df565b60405161043d8082019082821067ffffffffffffffff83111761113c5760609183916122af8339308152600435602082015233604082015203019082f0801561112f576020906001600160a01b03166110fd81612076565b507f9d5f66d985a12f505753a5f6417ed3c4ec6e68963ee0119770dda415f0d14ad082604051838152a1604051908152f35b50604051903d90823e3d90fd5b634e487b7160e01b84526041600452602484fd5b50346104175760403660031901126104175761116a611572565b336001600160a01b038216036111865761048690600435611d66565b63334bd91960e11b8252600482fd5b50346104175760403660031901126104175760043560243567ffffffffffffffff81116103a257366023820112156103a25780600401359167ffffffffffffffff83116103e957602482019160248436920101116103e9576002546001600160a01b031633036112cd57611214815f52600460205260405f2054151590565b1561123b57509061122491611bd6565b1561122c5780f35b637c6953f960e01b8152600490fd5b8354604051635aa6e67560e01b81529190602090839060049082906001600160a01b03165afa9182156112c257859261128e575b500361127f5790611224916119fe565b638154374b60e01b8352600483fd5b9091506020813d6020116112ba575b816112aa602093836115ca565b81010312610f585751905f61126f565b3d915061129d565b6040513d87823e3d90fd5b636edaef2f60e11b8452600484fd5b5034610417576040366003190112610417576104866004356112fc611572565b9061132261047c825f525f516020613dc05f395f51905f52602052600160405f20015490565b6118f8565b503461041757602036600319011261041757602061135f6004355f525f516020613dc05f395f51905f52602052600160405f20015490565b604051908152f35b50346104175780600319360112610417576020600354604051908152f35b506080366003190112610f585761139a61155c565b602435906064356001600160a01b03811690819003610f58576113bb6116df565b6113d0815f52600960205260405f2054151590565b1561142957803b15610f58575f600491604051928380926314b0812960e11b825234905af1801561141e57611409575b506104d96116df565b6114169193505f906115ca565b5f915f611400565b6040513d5f823e3d90fd5b631e37e19560e31b5f5260045ffd5b34610f58575f366003190112610f585760405180602060085491828152019060085f527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3905f5b81811061149657610630856106f8818703826115ca565b825484526020909301926001928301920161147f565b34610f58576020366003190112610f58576020610fd86001600160a01b036114d261155c565b165f52600960205260405f2054151590565b34610f58576020366003190112610f585760043563ffffffff60e01b8116809103610f5857602090637965db0b60e01b8114908115611529575b506040519015158152f35b6301ffc9a760e01b1490508261151e565b34610f58575f366003190112610f58575f546001600160a01b03168152602090f35b600435906001600160a01b0382168203610f5857565b602435906001600160a01b0382168203610f5857565b60206040818301928281528451809452019201905f5b8181106115ab5750505090565b82516001600160a01b031684526020938401939092019160010161159e565b90601f8019910116810190811067ffffffffffffffff8211176115ec57604052565b634e487b7160e01b5f52604160045260245ffd5b67ffffffffffffffff81116115ec57601f01601f191660200190565b6084359060ff82168203610f5857565b67ffffffffffffffff81116115ec5760051b60200190565b60206040818301928281528451809452019201905f5b8181106116675750505090565b825184526020938401939092019160010161165a565b6040906003190112610f58576004359060243590565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b80518210156116cb5760209160051b010190565b634e487b7160e01b5f52603260045260245ffd5b60ff5f516020613de05f395f51905f5254166116f757565b63d93c066560e01b5f5260045ffd5b335f9081527f2222dce04fae1e25cd76e9391151ad9e0187ef92144ac6ce9e4e09f2c453b751602052604090205460ff161561173e57565b63e2517d3f60e01b5f5233600452600160245260445ffd5b5f8181525f516020613dc05f395f51905f526020908152604080832033845290915290205460ff16156117865750565b63e2517d3f60e01b5f523360045260245260445ffd5b6001600160a01b0381165f9081527fb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d602052604090205460ff16611846576001600160a01b03165f8181527fb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d60205260408120805460ff191660011790553391907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a4600190565b505f90565b6001600160a01b0381165f9081527f2222dce04fae1e25cd76e9391151ad9e0187ef92144ac6ce9e4e09f2c453b751602052604090205460ff16611846576001600160a01b03165f8181527f2222dce04fae1e25cd76e9391151ad9e0187ef92144ac6ce9e4e09f2c453b75160205260408120805460ff191660019081179091553392917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9080a4600190565b5f8181525f516020613dc05f395f51905f52602090815260408083206001600160a01b038616845290915290205460ff16611996575f8181525f516020613dc05f395f51905f52602090815260408083206001600160a01b0395909516808452949091528120805460ff19166001179055339291907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9080a4600190565b50505f90565b919082018092116119a957565b634e487b7160e01b5f52601160045260245ffd5b926119f7906119e960609460ff9498979860018060a01b03168752608060208801526080870190611693565b908582036040870152611693565b9416910152565b90801561199657813560f81c60028111611b36578015611b9d57600114611b5557604203611846576001810135906041602182013591013560f81c91805f1a60018110159081611b49575b5015611b3657815f1a60018110159081611b3d575b5015611b3657611a8a611aaa919060405191604083016040525f8352601f8301525f6020835184010152565b919060405191604083016040525f8352601f8301525f6020835184010152565b6040516116b480820182811067ffffffffffffffff8211176115ec57858486611adb9386956126ec873930906119bd565b03905ff0801561141e577facef1c6c805d7395b4aeee279bc679beea84f01a1f1b08be7aef2af535bba81f936001600160a01b0390911691611b2e9190611b2184611e54565b50604051948594856119bd565b0390a1600190565b5050505f90565b601f915011155f611a5e565b601f915011155f611a49565b60150361184657602060017fdf6d7b91d41cb55ced11681822028e1605f72d50168b3898feb40ee04259d18292013560601c611b9081611e2f565b50604051908152a1600190565b5060210361184657602060017fc6b4ec1bc7a17331ef296e0810039347563e90c3fa496b4de270f6c5ff345abe920135611b90816120d4565b60685f920361199657602081013560601c603482013560601c91604881013590611bff8461203e565b90506003811015611d525780611c1e5763a1e9dd9d60e01b8652600486fd5b909192939450600181145f14611ca3575060405163a9059cbb60e01b6020808301919091526001600160a01b0385166024830152604480830185905282527fabdd326df16eff74bb67e4a6b3d6372ceba76796f256a7b7f8577108cf5db287929091611c9590611c8f6064826115ca565b876121f8565b6040519384523592a4600190565b600214611cd4575b60207fabdd326df16eff74bb67e4a6b3d6372ceba76796f256a7b7f8577108cf5db28791611c95565b833b15610f58576040516340c10f1960e01b81526001600160a01b038416600482015260248101839052905f8260448183895af190811561141e577fabdd326df16eff74bb67e4a6b3d6372ceba76796f256a7b7f8577108cf5db28792602092611d42575b50915050611cab565b5f611d4c916115ca565b5f611d39565b634e487b7160e01b5f52602160045260245ffd5b5f8181525f516020613dc05f395f51905f52602090815260408083206001600160a01b038616845290915290205460ff1615611996575f8181525f516020613dc05f395f51905f52602090815260408083206001600160a01b0395909516808452949091528120805460ff19169055339291907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9080a4600190565b6001600160a01b03166003821015611d5257611e2c91815f52600760205260405f20556005612132565b90565b6001600160a01b03165f81815260076020526040902060019055611e2c906005612132565b6001600160a01b03165f81815260076020526040902060029055611e2c906005612132565b90611e838261162c565b611e9060405191826115ca565b8281528092611ea1601f199161162c565b0190602036910137565b91906008549081841015611f2857611ec3908461199c565b90808211611f20575b508281039081116119a957611ee081611e79565b905f5b818110611ef1575090925050565b80611f08611f016001938861199c565b6008612061565b90549060031b1c611f1982866116b7565b5201611ee3565b90505f611ecc565b50509050604051611f3a6020826115ca565b5f81525f36813790565b91906005549081841015611f2857611f5c908461199c565b90808211611fb9575b508281039081116119a957611f7981611e79565b905f5b818110611f8a575090925050565b80611fa1611f9a6001938861199c565b6005612061565b90549060031b1c611fb282866116b7565b5201611f7c565b90505f611f65565b91906003549081841015611f2857611fd9908461199c565b90808211612036575b508281039081116119a957611ff681611e79565b905f5b818110612007575090925050565b8061201e6120176001938861199c565b6003612061565b90549060031b1c61202f82866116b7565b5201611ff9565b90505f611fe2565b612052906001600160a01b031660056121b8565b91906003831015611d52579190565b80548210156116cb575f5260205f2001905f90565b805f52600960205260405f2054155f1461184657600854600160401b8110156115ec578060016120ab92016008556008612061565b81549060031b9083821b915f19901b1916179055600854905f52600960205260405f2055600190565b805f52600460205260405f2054155f1461184657600354600160401b8110156115ec5780600161210992016003556003612061565b81549060031b9083821b915f19901b1916179055600354905f52600460205260405f2055600190565b5f82815260018201602052604090205461199657805490600160401b8210156115ec57612166826001809401835582612061565b81549060031b9085821b915f19901b19161790558054925f520160205260405f2055600190565b60ff5f516020613e005f395f51905f525460401c16156121a957565b631afcd79f60e31b5f5260045ffd5b9190805f526002830160205260405f20549283155f146121f0576121eb9293506001915f520160205260405f2054151590565b905f90565b505060019190565b905f602091828151910182855af11561141e575f513d61224757506001600160a01b0381163b155b6122275750565b635274afe760e01b5f9081526001600160a01b0391909116600452602490fd5b60011415612220565b90612274575080511561226557602081519101fd5b63d6bda27560e01b5f5260045ffd5b815115806122a5575b612285575090565b639996b31560e01b5f9081526001600160a01b0391909116600452602490fd5b50803b1561227d56fe60a0346100e757601f61043d38819003918201601f19168301916001600160401b038311848410176100eb578084926060946040528339810103126100e757610047816100ff565b602082015190916001600160a01b0390610063906040016100ff565b169182156100d4575f80546001600160a01b031981168517825560405194916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36080526001556103299081610114823960805181818161014c01526102000152f35b631e4fbdf760e01b5f525f60045260245ffd5b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b51906001600160a01b03821682036100e75756fe60806040526004361015610011575f80fd5b5f3560e01c806329610252146101f357806369fe0e2d146101d2578063715018a61461017b57806386ea825c146101375780638da5cb5b14610110578063ddca3f43146100f35763f2fde38b14610066575f80fd5b346100ef5760203660031901126100ef576004356001600160a01b038116908190036100ef57610094610303565b80156100dc575f80546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b5f525f60045260245ffd5b5f80fd5b346100ef575f3660031901126100ef576020600154604051908152f35b346100ef575f3660031901126100ef575f546040516001600160a01b039091168152602090f35b346100ef575f3660031901126100ef576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346100ef575f3660031901126100ef57610193610303565b5f80546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346100ef5760203660031901126100ef576101eb610303565b600435600155005b5f3660031901126100ef577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633036102f45760015434036102e5575f8080803460018060a01b038254165af13d156102e0573d67ffffffffffffffff81116102cc5760405190601f8101601f19908116603f0116820167ffffffffffffffff8111838210176102cc5760405281525f60203d92013e5b156102bd577faaeea0b595e409578c26dd16fa1bdb3a29a4d874694ecef3ca96376940f5fbfb5f80a1005b6353048b4960e11b5f5260045ffd5b634e487b7160e01b5f52604160045260245ffd5b610292565b631fbbed9560e01b5f5260045ffd5b63064917ff60e11b5f5260045ffd5b5f546001600160a01b0316330361031657565b63118cdaa760e01b5f523360045260245ffd61016080604052346104a0576116b4803803809161001d82856104a4565b83398101906080818303126104a05780516001600160a01b038116908190036104a05760208201516001600160401b0381116104a0578361005f9184016104c7565b60408301519093906001600160401b0381116104a0576060916100839185016104c7565b9201519160ff83168093036104a0576040938451926100a286856104a4565b60018452603160f81b6020850190815282519093906001600160401b0381116103b057600354600181811c91168015610496575b602082101461039257601f8111610433575b50806020601f82116001146103cf575f916103c4575b508160011b915f199060031b1c1916176003555b8051906001600160401b0382116103b05760045490600182811c921680156103a6575b60208310146103925781601f849311610324575b50602090601f83116001146102be575f926102b3575b50508160011b915f199060031b1c1916176004555b80156102a057600580546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a36101c48161051c565b610120526101d1836106a3565b6101405260208151910120918260e05251902080610100524660a05283519060208201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f84528583015260608201524660808201523060a082015260a0815261023c60c0826104a4565b5190206080523060c05260ff19600954161760095551610ed890816107dc823960805181610b4c015260a05181610c09015260c05181610b16015260e05181610b9b01526101005181610bc10152610120518161045f015261014051816104880152f35b631e4fbdf760e01b5f525f60045260245ffd5b015190505f8061015f565b60045f9081528281209350601f198516905b81811061030c57509084600195949392106102f4575b505050811b01600455610174565b01515f1960f88460031b161c191690555f80806102e6565b929360206001819287860151815501950193016102d0565b60045f529091507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f840160051c81019160208510610388575b90601f859493920160051c01905b81811061037a5750610149565b5f815584935060010161036d565b909150819061035f565b634e487b7160e01b5f52602260045260245ffd5b91607f1691610135565b634e487b7160e01b5f52604160045260245ffd5b90508401515f6100fe565b60035f9081528181209250601f198416905b81811061041b57509083600194939210610403575b5050811b01600355610112565b8601515f1960f88460031b161c191690555f806103f6565b9192602060018192868b0151815501940192016103e1565b60035f527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f830160051c8101916020841061048c575b601f0160051c01905b81811061048157506100e8565b5f8155600101610474565b909150819061046b565b90607f16906100d6565b5f80fd5b601f909101601f19168101906001600160401b038211908210176103b057604052565b81601f820112156104a0578051906001600160401b0382116103b057604051926104fb601f8401601f1916602001856104a4565b828452602083830101116104a057815f9260208093018386015e8301015290565b908151602081105f14610596575090601f815111610556576020815191015160208210610547571790565b5f198260200360031b1b161790565b604460209160405192839163305a27a960e01b83528160048401528051918291826024860152018484015e5f828201840152601f01601f19168101030190fd5b6001600160401b0381116103b057600654600181811c91168015610699575b602082101461039257601f8111610666575b50602092601f821160011461060557928192935f926105fa575b50508160011b915f199060031b1c19161760065560ff90565b015190505f806105e1565b601f1982169360065f52805f20915f5b86811061064e5750836001959610610636575b505050811b0160065560ff90565b01515f1960f88460031b161c191690555f8080610628565b91926020600181928685015181550194019201610615565b60065f52601f60205f20910160051c810190601f830160051c015b81811061068e57506105c7565b5f8155600101610681565b90607f16906105b5565b908151602081105f146106ce575090601f815111610556576020815191015160208210610547571790565b6001600160401b0381116103b057600754600181811c911680156107d1575b602082101461039257601f811161079e575b50602092601f821160011461073d57928192935f92610732575b50508160011b915f199060031b1c19161760075560ff90565b015190505f80610719565b601f1982169360075f52805f20915f5b868110610786575083600195961061076e575b505050811b0160075560ff90565b01515f1960f88460031b161c191690555f8080610760565b9192602060018192868501518155019401920161074d565b60075f52601f60205f20910160051c810190601f830160051c015b8181106107c657506106ff565b5f81556001016107b9565b90607f16906106ed56fe6080806040526004361015610012575f80fd5b5f3560e01c90816306fdde03146107bf57508063095ea7b31461079957806318160ddd1461077c57806323b872dd14610744578063313ce567146107245780633644e5151461070257806340c10f191461065657806342966c681461063957806370a0823114610602578063715018a6146105a757806379cc6790146105775780637ecebe001461053f57806384b0196e146104475780638da5cb5b1461041f57806395d89b411461033d578063a9059cbb1461030c578063d505accf146101c7578063dd62ed3e146101775763f2fde38b146100ed575f80fd5b3461017357602036600319011261017357610106610885565b61010e610c2f565b6001600160a01b0316801561016057600580546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3005b631e4fbdf760e01b5f525f60045260245ffd5b5f80fd5b3461017357604036600319011261017357610190610885565b61019861089b565b6001600160a01b039182165f908152600160209081526040808320949093168252928352819020549051908152f35b346101735760e0366003190112610173576101e0610885565b6101e861089b565b604435906064359260843560ff81168103610173578442116102f9576102bc6102c59160018060a01b03841696875f52600860205260405f20908154916001830190556040519060208201927f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c984528a604084015260018060a01b038916606084015289608084015260a083015260c082015260c0815261028a60e08261096a565b519020610295610b13565b906040519161190160f01b83526002830152602282015260c43591604260a4359220610dd7565b90929192610e64565b6001600160a01b03168481036102e257506102e09350610cda565b005b84906325c0072360e11b5f5260045260245260445ffd5b8463313c898160e11b5f5260045260245ffd5b3461017357604036600319011261017357610332610328610885565b6024359033610a69565b602060405160018152f35b34610173575f366003190112610173576040515f60045461035d816108b1565b80845290600181169081156103fb575060011461039d575b610399836103858185038261096a565b604051918291602083526020830190610861565b0390f35b60045f9081527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b939250905b8082106103e157509091508101602001610385610375565b9192600181602092548385880101520191019092916103c9565b60ff191660208086019190915291151560051b840190910191506103859050610375565b34610173575f366003190112610173576005546040516001600160a01b039091168152602090f35b34610173575f366003190112610173576104e36104837f0000000000000000000000000000000000000000000000000000000000000000610d3d565b6104ac7f0000000000000000000000000000000000000000000000000000000000000000610da0565b60206104f1604051926104bf838561096a565b5f84525f368137604051958695600f60f81b875260e08588015260e0870190610861565b908582036040870152610861565b4660608501523060808501525f60a085015283810360c08501528180845192838152019301915f5b82811061052857505050500390f35b835185528695509381019392810192600101610519565b34610173576020366003190112610173576001600160a01b03610560610885565b165f526008602052602060405f2054604051908152f35b34610173576040366003190112610173576102e0610593610885565b602435906105a28233836109a0565b610c56565b34610173575f366003190112610173576105bf610c2f565b600580546001600160a01b031981169091555f906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610173576020366003190112610173576001600160a01b03610623610885565b165f525f602052602060405f2054604051908152f35b34610173576020366003190112610173576102e060043533610c56565b346101735760403660031901126101735761066f610885565b6024359061067b610c2f565b6001600160a01b03169081156106ef57600254908082018092116106db5760207fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef915f9360025584845283825260408420818154019055604051908152a3005b634e487b7160e01b5f52601160045260245ffd5b63ec442f0560e01b5f525f60045260245ffd5b34610173575f36600319011261017357602061071c610b13565b604051908152f35b34610173575f36600319011261017357602060ff60095416604051908152f35b3461017357606036600319011261017357610332610760610885565b61076861089b565b604435916107778333836109a0565b610a69565b34610173575f366003190112610173576020600254604051908152f35b34610173576040366003190112610173576103326107b5610885565b6024359033610cda565b34610173575f366003190112610173575f6003546107dc816108b1565b80845290600181169081156103fb575060011461080357610399836103858185038261096a565b60035f9081527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b939250905b80821061084757509091508101602001610385610375565b91926001816020925483858801015201910190929161082f565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b600435906001600160a01b038216820361017357565b602435906001600160a01b038216820361017357565b90600182811c921680156108df575b60208310146108cb57565b634e487b7160e01b5f52602260045260245ffd5b91607f16916108c0565b5f92918154916108f8836108b1565b808352926001811690811561094d575060011461091457505050565b5f9081526020812093945091925b838310610933575060209250010190565b600181602092949394548385870101520191019190610922565b915050602093945060ff929192191683830152151560051b010190565b90601f8019910116810190811067ffffffffffffffff82111761098c57604052565b634e487b7160e01b5f52604160045260245ffd5b6001600160a01b039081165f818152600160209081526040808320948616835293905291909120549291905f1984106109da575b50505050565b828410610a46578015610a33576001600160a01b03821615610a20575f52600160205260405f209060018060a01b03165f5260205260405f20910390555f8080806109d4565b634a1406b160e11b5f525f60045260245ffd5b63e602df0560e01b5f525f60045260245ffd5b508290637dc7a0d960e11b5f5260018060a01b031660045260245260445260645ffd5b6001600160a01b0316908115610b00576001600160a01b03169182156106ef57815f525f60205260405f2054818110610ae757817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92602092855f525f84520360405f2055845f525f825260405f20818154019055604051908152a3565b8263391434e360e21b5f5260045260245260445260645ffd5b634b637e8f60e11b5f525f60045260245ffd5b307f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480610c06575b15610b6e577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f82527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a08152610c0060c08261096a565b51902090565b507f00000000000000000000000000000000000000000000000000000000000000004614610b45565b6005546001600160a01b03163303610c4357565b63118cdaa760e01b5f523360045260245ffd5b9091906001600160a01b03168015610b0057805f525f60205260405f2054838110610cc0576020845f94957fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef938587528684520360408620558060025403600255604051908152a3565b915063391434e360e21b5f5260045260245260445260645ffd5b6001600160a01b0316908115610a33576001600160a01b0316918215610a205760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591835f526001825260405f20855f5282528060405f2055604051908152a3565b60ff8114610d835760ff811690601f8211610d745760405191610d6160408461096a565b6020808452838101919036833783525290565b632cd44ac360e21b5f5260045ffd5b50604051610d9d81610d968160066108e9565b038261096a565b90565b60ff8114610dc45760ff811690601f8211610d745760405191610d6160408461096a565b50604051610d9d81610d968160076108e9565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411610e59579160209360809260ff5f9560405194855216868401526040830152606082015282805260015afa15610e4e575f516001600160a01b03811615610e4457905f905f90565b505f906001905f90565b6040513d5f823e3d90fd5b5050505f9160039190565b6004811015610ec45780610e76575050565b60018103610e8d5763f645eedf60e01b5f5260045ffd5b60028103610ea8575063fce698f760e01b5f5260045260245ffd5b600314610eb25750565b6335e2f38360e21b5f5260045260245ffd5b634e487b7160e01b5f52602160045260245ffd360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00","sourceMap":"1537:24252:85:-:0;;;;;;;1171:4:23;1163:13;;-1:-1:-1;;;;;;;;;;;1537:24252:85;;;;;;7894:76:22;;-1:-1:-1;;;;;;;;;;;1537:24252:85;;7983:34:22;7979:146;;-1:-1:-1;1537:24252:85;;;;;;;;1163:13:23;1537:24252:85;;;;;;;;;;;7979:146:22;-1:-1:-1;;;;;;1537:24252:85;-1:-1:-1;;;;;1537:24252:85;;;-1:-1:-1;;;;;;;;;;;1537:24252:85;;;8085:29:22;;1537:24252:85;;8085:29:22;7979:146;;;;7894:76;7936:23;;;-1:-1:-1;7936:23:22;;-1:-1:-1;7936:23:22;1537:24252:85;;;","linkReferences":{}},"deployedBytecode":{"object":"0x6080806040526004361015610012575f80fd5b5f905f3560e01c90816258f6b81461153a5750806301ffc9a7146114e45780630c9d9b97146114ac578063109ec2e7146114385780631e324b5214611385578063240dfa9514611367578063248a9ca3146113275780632f2ff15d146112dc578063302ac5d01461119557806336568abe1461115057806338ff319f1461108b5780633b70c18a146110625780633f4ba83a14610fe25780634e68953914610fad5780634f1ef28614610d2657806352d1902d14610cbf5780635c975abb14610c905780636a762d5c14610c62578063763b754a146109165780637e1c0c09146108f85780638456cb591461088557806387be40b11461081057806387e7a3a3146107f55780638b4864d6146107da5780638b841f6c146107bc57806391d148541461076657806393272baf1461071a5780639d63848a14610699578063a217fddf1461067d578063ad3cb1cc14610634578063c1c6092114610609578063c305870c146104b3578063c81eb7971461048a578063d547741f14610436578063e63ab1e91461041a5763f6cdd9cc146101a9575f80fd5b610100366003190112610417576101be61155c565b6024356101c961161c565b9160e4356001600160a01b03811690819003610415576101e76116df565b6101fc815f52600960205260405f2054151590565b15610406578085913b156103ed5781600491604051928380926314b0812960e11b825234905af180156103a6576103f1575b50506102386116df565b6001600160a01b038116928490843b156103ed5760ff6040519163d505accf60e01b8352336004840152306024840152856044840152606435606484015216608482015260a43560a482015260c43560c4820152818160e48183895af16103d4575b50506102a46116df565b81156103c5576102b39061203e565b905060038110156103b157806102d25763a1e9dd9d60e01b8452600484fd5b6001810361034857506103156040516323b872dd60e01b60208201523360248201523060448201528260648201526064815261030f6084826115ca565b836121f8565b604051908152604435907ff80de57fd7626baaff7d867494866703686569822c2326ae60b2515ede953c3a60203392a480f35b60020361031557813b156103a25760405163079cc67960e41b8152336004820152602481018290528390818160448183885af180156103a65761038d575b5050610315565b81610397916115ca565b6103a257825f610386565b8280fd5b6040513d84823e3d90fd5b634e487b7160e01b84526021600452602484fd5b63162908e360e11b8452600484fd5b816103de916115ca565b6103e957835f61029a565b8380fd5b5080fd5b816103fb916115ca565b6103e957835f61022e565b631e37e19560e31b8552600485fd5b845b80fd5b5034610417578060031936011261041757602060405160018152f35b503461041757604036600319011261041757610486600435610456611572565b9061048161047c825f525f516020613dc05f395f51905f52602052600160405f20015490565b611756565b611d66565b5080f35b50346104175780600319360112610417576001546040516001600160a01b039091168152602090f35b5034610417576060366003190112610417576104cd61155c565b602435906104d96116df565b81156105fa576104e88161203e565b905060038110156103b157806105075763a1e9dd9d60e01b8452600484fd5b6001810361059257506105536040516323b872dd60e01b6020820152336024820152306044820152836064820152606481526105446084826115ca565b6001600160a01b0383166121f8565b6040519182526001600160a01b0316906044359033907ff80de57fd7626baaff7d867494866703686569822c2326ae60b2515ede953c3a90602090a480f35b60020361055357826001600160a01b038216803b156103ed5760405163079cc67960e41b8152336004820152602481018590529082908290604490829084905af180156103a6576105e5575b5050610553565b816105ef916115ca565b6103a257825f6105de565b63162908e360e11b8352600483fd5b50346104175761063061062461061e3661167d565b90611fc1565b60405191829182611644565b0390f35b5034610417578060031936011261041757506106306040516106576040826115ca565b60058152640352e302e360dc1b6020820152604051918291602083526020830190611693565b5034610417578060031936011261041757602090604051908152f35b503461041757806003193601126104175760405180916020600554928381520191600582527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0915b81811061070457610630856106f8818703826115ca565b60405191829182611588565b82548452602090930192600192830192016106e1565b50346104175760203660031901126104175761073c61073761155c565b61203e565b6040519150600381101561075257602092508152f35b634e487b7160e01b83526021600452602483fd5b5034610417576040366003190112610417576040610782611572565b9160043581525f516020613dc05f395f51905f52602052209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b50346104175780600319360112610417576020600854604051908152f35b5034610417576106306106f86107ef3661167d565b90611f44565b5034610417576106306106f861080a3661167d565b90611eab565b503461041757806003193601126104175760405180916020600354928381520191600382527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b915b81811061086f5761063085610624818703826115ca565b8254845260209093019260019283019201610858565b503461041757806003193601126104175761089e611706565b6108a66116df565b600160ff195f516020613de05f395f51905f525416175f516020613de05f395f51905f52557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a180f35b50346104175780600319360112610417576020600554604051908152f35b50346104175760a03660031901126104175761093061155c565b610938611572565b6044356001600160a01b038116908190036103e9576084359167ffffffffffffffff831161041557366023840112156104155782600401356109798161162c565b9361098760405195866115ca565b8185526024602086019260061b82010190368211610c5e57602401915b818310610be6575050505f516020613e005f395f51905f52549360ff8560401c16159467ffffffffffffffff811680159081610bde575b6001149081610bd4575b159081610bcb575b50610bbc5767ffffffffffffffff1981166001175f516020613e005f395f51905f525585610b90575b50610a1f61218d565b610a2761218d565b610a2f61218d565b6001600160a01b031690610a428261179c565b50610a4c8261184b565b506001600160a01b031690610a608261184b565b506001600160601b0360a01b8654161785556001600160601b0360a01b60015416176001556001600160601b0360a01b6002541617600255610aa36064356120d4565b50825b8151811015610b2f57610ab981836116b7565b51602081019081516003811015610b1b57610add5763a1e9dd9d60e01b8652600486fd5b519051906001600160a01b03166003821015610b075760019291610b0091611e02565b5001610aa6565b634e487b7160e01b86526021600452602486fd5b634e487b7160e01b87526021600452602487fd5b5050610b385780f35b68ff0000000000000000195f516020613e005f395f51905f5254165f516020613e005f395f51905f52557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a180f35b68ffffffffffffffffff191668010000000000000001175f516020613e005f395f51905f52555f610a16565b63f92ee8a960e01b8752600487fd5b9050155f6109ed565b303b1591506109e5565b8791506109db565b604083360312610c5e57604051906040820182811067ffffffffffffffff821117610c4a5760405283356001600160a01b0381168103610c465782526020840135906003821015610c4657826020928360409501528152019201916109a4565b8980fd5b634e487b7160e01b8a52604160045260248afd5b8780fd5b50346104175760e036600319011261041757610c7c61155c565b602435610c8761161c565b916102386116df565b5034610417578060031936011261041757602060ff5f516020613de05f395f51905f5254166040519015158152f35b50346104175780600319360112610417577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163003610d175760206040515f516020613da05f395f51905f528152f35b63703e46dd60e11b8152600490fd5b50604036600319011261041757610d3b61155c565b6024359067ffffffffffffffff82116103a257366023830112156103a25781600401359083610d6983611600565b93610d7760405195866115ca565b838552602085019336602482840101116103a257806024602093018637850101526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016308114908115610f8b575b50610f7c578380525f516020613dc05f395f51905f5260209081526040808620335f908152925290205460ff1615610f64576040516352d1902d60e01b81526001600160a01b0382169390602081600481885afa869181610f2c575b50610e4257634c9c8ce360e01b86526004859052602486fd5b93845f516020613da05f395f51905f52879603610f1a5750823b15610f08575f516020613da05f395f51905f5280546001600160a01b031916821790558491907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8380a2805115610eed576104869382915190845af43d15610ee5573d91610ec983611600565b92610ed760405194856115ca565b83523d85602085013e612250565b606091612250565b5050505034610ef95780f35b63b398979f60e01b8152600490fd5b634c9c8ce360e01b8552600452602484fd5b632a87526960e21b8652600452602485fd5b9091506020813d602011610f5c575b81610f48602093836115ca565b81010312610f585751905f610e29565b5f80fd5b3d9150610f3b565b63e2517d3f60e01b8452336004526024849052604484fd5b63703e46dd60e11b8452600484fd5b5f516020613da05f395f51905f52546001600160a01b0316141590505f610dcd565b5034610417576020366003190112610417576020610fd86004355f52600460205260405f2054151590565b6040519015158152f35b5034610417578060031936011261041757610ffb611706565b5f516020613de05f395f51905f525460ff8116156110535760ff19165f516020613de05f395f51905f52557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a180f35b638dfc202b60e01b8252600482fd5b50346104175780600319360112610417576002546040516001600160a01b039091168152602090f35b5034610417576020366003190112610417576110a56116df565b60405161043d8082019082821067ffffffffffffffff83111761113c5760609183916122af8339308152600435602082015233604082015203019082f0801561112f576020906001600160a01b03166110fd81612076565b507f9d5f66d985a12f505753a5f6417ed3c4ec6e68963ee0119770dda415f0d14ad082604051838152a1604051908152f35b50604051903d90823e3d90fd5b634e487b7160e01b84526041600452602484fd5b50346104175760403660031901126104175761116a611572565b336001600160a01b038216036111865761048690600435611d66565b63334bd91960e11b8252600482fd5b50346104175760403660031901126104175760043560243567ffffffffffffffff81116103a257366023820112156103a25780600401359167ffffffffffffffff83116103e957602482019160248436920101116103e9576002546001600160a01b031633036112cd57611214815f52600460205260405f2054151590565b1561123b57509061122491611bd6565b1561122c5780f35b637c6953f960e01b8152600490fd5b8354604051635aa6e67560e01b81529190602090839060049082906001600160a01b03165afa9182156112c257859261128e575b500361127f5790611224916119fe565b638154374b60e01b8352600483fd5b9091506020813d6020116112ba575b816112aa602093836115ca565b81010312610f585751905f61126f565b3d915061129d565b6040513d87823e3d90fd5b636edaef2f60e11b8452600484fd5b5034610417576040366003190112610417576104866004356112fc611572565b9061132261047c825f525f516020613dc05f395f51905f52602052600160405f20015490565b6118f8565b503461041757602036600319011261041757602061135f6004355f525f516020613dc05f395f51905f52602052600160405f20015490565b604051908152f35b50346104175780600319360112610417576020600354604051908152f35b506080366003190112610f585761139a61155c565b602435906064356001600160a01b03811690819003610f58576113bb6116df565b6113d0815f52600960205260405f2054151590565b1561142957803b15610f58575f600491604051928380926314b0812960e11b825234905af1801561141e57611409575b506104d96116df565b6114169193505f906115ca565b5f915f611400565b6040513d5f823e3d90fd5b631e37e19560e31b5f5260045ffd5b34610f58575f366003190112610f585760405180602060085491828152019060085f527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3905f5b81811061149657610630856106f8818703826115ca565b825484526020909301926001928301920161147f565b34610f58576020366003190112610f58576020610fd86001600160a01b036114d261155c565b165f52600960205260405f2054151590565b34610f58576020366003190112610f585760043563ffffffff60e01b8116809103610f5857602090637965db0b60e01b8114908115611529575b506040519015158152f35b6301ffc9a760e01b1490508261151e565b34610f58575f366003190112610f58575f546001600160a01b03168152602090f35b600435906001600160a01b0382168203610f5857565b602435906001600160a01b0382168203610f5857565b60206040818301928281528451809452019201905f5b8181106115ab5750505090565b82516001600160a01b031684526020938401939092019160010161159e565b90601f8019910116810190811067ffffffffffffffff8211176115ec57604052565b634e487b7160e01b5f52604160045260245ffd5b67ffffffffffffffff81116115ec57601f01601f191660200190565b6084359060ff82168203610f5857565b67ffffffffffffffff81116115ec5760051b60200190565b60206040818301928281528451809452019201905f5b8181106116675750505090565b825184526020938401939092019160010161165a565b6040906003190112610f58576004359060243590565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b80518210156116cb5760209160051b010190565b634e487b7160e01b5f52603260045260245ffd5b60ff5f516020613de05f395f51905f5254166116f757565b63d93c066560e01b5f5260045ffd5b335f9081527f2222dce04fae1e25cd76e9391151ad9e0187ef92144ac6ce9e4e09f2c453b751602052604090205460ff161561173e57565b63e2517d3f60e01b5f5233600452600160245260445ffd5b5f8181525f516020613dc05f395f51905f526020908152604080832033845290915290205460ff16156117865750565b63e2517d3f60e01b5f523360045260245260445ffd5b6001600160a01b0381165f9081527fb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d602052604090205460ff16611846576001600160a01b03165f8181527fb7db2dd08fcb62d0c9e08c51941cae53c267786a0b75803fb7960902fc8ef97d60205260408120805460ff191660011790553391907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a4600190565b505f90565b6001600160a01b0381165f9081527f2222dce04fae1e25cd76e9391151ad9e0187ef92144ac6ce9e4e09f2c453b751602052604090205460ff16611846576001600160a01b03165f8181527f2222dce04fae1e25cd76e9391151ad9e0187ef92144ac6ce9e4e09f2c453b75160205260408120805460ff191660019081179091553392917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9080a4600190565b5f8181525f516020613dc05f395f51905f52602090815260408083206001600160a01b038616845290915290205460ff16611996575f8181525f516020613dc05f395f51905f52602090815260408083206001600160a01b0395909516808452949091528120805460ff19166001179055339291907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9080a4600190565b50505f90565b919082018092116119a957565b634e487b7160e01b5f52601160045260245ffd5b926119f7906119e960609460ff9498979860018060a01b03168752608060208801526080870190611693565b908582036040870152611693565b9416910152565b90801561199657813560f81c60028111611b36578015611b9d57600114611b5557604203611846576001810135906041602182013591013560f81c91805f1a60018110159081611b49575b5015611b3657815f1a60018110159081611b3d575b5015611b3657611a8a611aaa919060405191604083016040525f8352601f8301525f6020835184010152565b919060405191604083016040525f8352601f8301525f6020835184010152565b6040516116b480820182811067ffffffffffffffff8211176115ec57858486611adb9386956126ec873930906119bd565b03905ff0801561141e577facef1c6c805d7395b4aeee279bc679beea84f01a1f1b08be7aef2af535bba81f936001600160a01b0390911691611b2e9190611b2184611e54565b50604051948594856119bd565b0390a1600190565b5050505f90565b601f915011155f611a5e565b601f915011155f611a49565b60150361184657602060017fdf6d7b91d41cb55ced11681822028e1605f72d50168b3898feb40ee04259d18292013560601c611b9081611e2f565b50604051908152a1600190565b5060210361184657602060017fc6b4ec1bc7a17331ef296e0810039347563e90c3fa496b4de270f6c5ff345abe920135611b90816120d4565b60685f920361199657602081013560601c603482013560601c91604881013590611bff8461203e565b90506003811015611d525780611c1e5763a1e9dd9d60e01b8652600486fd5b909192939450600181145f14611ca3575060405163a9059cbb60e01b6020808301919091526001600160a01b0385166024830152604480830185905282527fabdd326df16eff74bb67e4a6b3d6372ceba76796f256a7b7f8577108cf5db287929091611c9590611c8f6064826115ca565b876121f8565b6040519384523592a4600190565b600214611cd4575b60207fabdd326df16eff74bb67e4a6b3d6372ceba76796f256a7b7f8577108cf5db28791611c95565b833b15610f58576040516340c10f1960e01b81526001600160a01b038416600482015260248101839052905f8260448183895af190811561141e577fabdd326df16eff74bb67e4a6b3d6372ceba76796f256a7b7f8577108cf5db28792602092611d42575b50915050611cab565b5f611d4c916115ca565b5f611d39565b634e487b7160e01b5f52602160045260245ffd5b5f8181525f516020613dc05f395f51905f52602090815260408083206001600160a01b038616845290915290205460ff1615611996575f8181525f516020613dc05f395f51905f52602090815260408083206001600160a01b0395909516808452949091528120805460ff19169055339291907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9080a4600190565b6001600160a01b03166003821015611d5257611e2c91815f52600760205260405f20556005612132565b90565b6001600160a01b03165f81815260076020526040902060019055611e2c906005612132565b6001600160a01b03165f81815260076020526040902060029055611e2c906005612132565b90611e838261162c565b611e9060405191826115ca565b8281528092611ea1601f199161162c565b0190602036910137565b91906008549081841015611f2857611ec3908461199c565b90808211611f20575b508281039081116119a957611ee081611e79565b905f5b818110611ef1575090925050565b80611f08611f016001938861199c565b6008612061565b90549060031b1c611f1982866116b7565b5201611ee3565b90505f611ecc565b50509050604051611f3a6020826115ca565b5f81525f36813790565b91906005549081841015611f2857611f5c908461199c565b90808211611fb9575b508281039081116119a957611f7981611e79565b905f5b818110611f8a575090925050565b80611fa1611f9a6001938861199c565b6005612061565b90549060031b1c611fb282866116b7565b5201611f7c565b90505f611f65565b91906003549081841015611f2857611fd9908461199c565b90808211612036575b508281039081116119a957611ff681611e79565b905f5b818110612007575090925050565b8061201e6120176001938861199c565b6003612061565b90549060031b1c61202f82866116b7565b5201611ff9565b90505f611fe2565b612052906001600160a01b031660056121b8565b91906003831015611d52579190565b80548210156116cb575f5260205f2001905f90565b805f52600960205260405f2054155f1461184657600854600160401b8110156115ec578060016120ab92016008556008612061565b81549060031b9083821b915f19901b1916179055600854905f52600960205260405f2055600190565b805f52600460205260405f2054155f1461184657600354600160401b8110156115ec5780600161210992016003556003612061565b81549060031b9083821b915f19901b1916179055600354905f52600460205260405f2055600190565b5f82815260018201602052604090205461199657805490600160401b8210156115ec57612166826001809401835582612061565b81549060031b9085821b915f19901b19161790558054925f520160205260405f2055600190565b60ff5f516020613e005f395f51905f525460401c16156121a957565b631afcd79f60e31b5f5260045ffd5b9190805f526002830160205260405f20549283155f146121f0576121eb9293506001915f520160205260405f2054151590565b905f90565b505060019190565b905f602091828151910182855af11561141e575f513d61224757506001600160a01b0381163b155b6122275750565b635274afe760e01b5f9081526001600160a01b0391909116600452602490fd5b60011415612220565b90612274575080511561226557602081519101fd5b63d6bda27560e01b5f5260045ffd5b815115806122a5575b612285575090565b639996b31560e01b5f9081526001600160a01b0391909116600452602490fd5b50803b1561227d56fe60a0346100e757601f61043d38819003918201601f19168301916001600160401b038311848410176100eb578084926060946040528339810103126100e757610047816100ff565b602082015190916001600160a01b0390610063906040016100ff565b169182156100d4575f80546001600160a01b031981168517825560405194916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36080526001556103299081610114823960805181818161014c01526102000152f35b631e4fbdf760e01b5f525f60045260245ffd5b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b51906001600160a01b03821682036100e75756fe60806040526004361015610011575f80fd5b5f3560e01c806329610252146101f357806369fe0e2d146101d2578063715018a61461017b57806386ea825c146101375780638da5cb5b14610110578063ddca3f43146100f35763f2fde38b14610066575f80fd5b346100ef5760203660031901126100ef576004356001600160a01b038116908190036100ef57610094610303565b80156100dc575f80546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b5f525f60045260245ffd5b5f80fd5b346100ef575f3660031901126100ef576020600154604051908152f35b346100ef575f3660031901126100ef575f546040516001600160a01b039091168152602090f35b346100ef575f3660031901126100ef576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346100ef575f3660031901126100ef57610193610303565b5f80546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346100ef5760203660031901126100ef576101eb610303565b600435600155005b5f3660031901126100ef577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633036102f45760015434036102e5575f8080803460018060a01b038254165af13d156102e0573d67ffffffffffffffff81116102cc5760405190601f8101601f19908116603f0116820167ffffffffffffffff8111838210176102cc5760405281525f60203d92013e5b156102bd577faaeea0b595e409578c26dd16fa1bdb3a29a4d874694ecef3ca96376940f5fbfb5f80a1005b6353048b4960e11b5f5260045ffd5b634e487b7160e01b5f52604160045260245ffd5b610292565b631fbbed9560e01b5f5260045ffd5b63064917ff60e11b5f5260045ffd5b5f546001600160a01b0316330361031657565b63118cdaa760e01b5f523360045260245ffd61016080604052346104a0576116b4803803809161001d82856104a4565b83398101906080818303126104a05780516001600160a01b038116908190036104a05760208201516001600160401b0381116104a0578361005f9184016104c7565b60408301519093906001600160401b0381116104a0576060916100839185016104c7565b9201519160ff83168093036104a0576040938451926100a286856104a4565b60018452603160f81b6020850190815282519093906001600160401b0381116103b057600354600181811c91168015610496575b602082101461039257601f8111610433575b50806020601f82116001146103cf575f916103c4575b508160011b915f199060031b1c1916176003555b8051906001600160401b0382116103b05760045490600182811c921680156103a6575b60208310146103925781601f849311610324575b50602090601f83116001146102be575f926102b3575b50508160011b915f199060031b1c1916176004555b80156102a057600580546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a36101c48161051c565b610120526101d1836106a3565b6101405260208151910120918260e05251902080610100524660a05283519060208201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f84528583015260608201524660808201523060a082015260a0815261023c60c0826104a4565b5190206080523060c05260ff19600954161760095551610ed890816107dc823960805181610b4c015260a05181610c09015260c05181610b16015260e05181610b9b01526101005181610bc10152610120518161045f015261014051816104880152f35b631e4fbdf760e01b5f525f60045260245ffd5b015190505f8061015f565b60045f9081528281209350601f198516905b81811061030c57509084600195949392106102f4575b505050811b01600455610174565b01515f1960f88460031b161c191690555f80806102e6565b929360206001819287860151815501950193016102d0565b60045f529091507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f840160051c81019160208510610388575b90601f859493920160051c01905b81811061037a5750610149565b5f815584935060010161036d565b909150819061035f565b634e487b7160e01b5f52602260045260245ffd5b91607f1691610135565b634e487b7160e01b5f52604160045260245ffd5b90508401515f6100fe565b60035f9081528181209250601f198416905b81811061041b57509083600194939210610403575b5050811b01600355610112565b8601515f1960f88460031b161c191690555f806103f6565b9192602060018192868b0151815501940192016103e1565b60035f527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f830160051c8101916020841061048c575b601f0160051c01905b81811061048157506100e8565b5f8155600101610474565b909150819061046b565b90607f16906100d6565b5f80fd5b601f909101601f19168101906001600160401b038211908210176103b057604052565b81601f820112156104a0578051906001600160401b0382116103b057604051926104fb601f8401601f1916602001856104a4565b828452602083830101116104a057815f9260208093018386015e8301015290565b908151602081105f14610596575090601f815111610556576020815191015160208210610547571790565b5f198260200360031b1b161790565b604460209160405192839163305a27a960e01b83528160048401528051918291826024860152018484015e5f828201840152601f01601f19168101030190fd5b6001600160401b0381116103b057600654600181811c91168015610699575b602082101461039257601f8111610666575b50602092601f821160011461060557928192935f926105fa575b50508160011b915f199060031b1c19161760065560ff90565b015190505f806105e1565b601f1982169360065f52805f20915f5b86811061064e5750836001959610610636575b505050811b0160065560ff90565b01515f1960f88460031b161c191690555f8080610628565b91926020600181928685015181550194019201610615565b60065f52601f60205f20910160051c810190601f830160051c015b81811061068e57506105c7565b5f8155600101610681565b90607f16906105b5565b908151602081105f146106ce575090601f815111610556576020815191015160208210610547571790565b6001600160401b0381116103b057600754600181811c911680156107d1575b602082101461039257601f811161079e575b50602092601f821160011461073d57928192935f92610732575b50508160011b915f199060031b1c19161760075560ff90565b015190505f80610719565b601f1982169360075f52805f20915f5b868110610786575083600195961061076e575b505050811b0160075560ff90565b01515f1960f88460031b161c191690555f8080610760565b9192602060018192868501518155019401920161074d565b60075f52601f60205f20910160051c810190601f830160051c015b8181106107c657506106ff565b5f81556001016107b9565b90607f16906106ed56fe6080806040526004361015610012575f80fd5b5f3560e01c90816306fdde03146107bf57508063095ea7b31461079957806318160ddd1461077c57806323b872dd14610744578063313ce567146107245780633644e5151461070257806340c10f191461065657806342966c681461063957806370a0823114610602578063715018a6146105a757806379cc6790146105775780637ecebe001461053f57806384b0196e146104475780638da5cb5b1461041f57806395d89b411461033d578063a9059cbb1461030c578063d505accf146101c7578063dd62ed3e146101775763f2fde38b146100ed575f80fd5b3461017357602036600319011261017357610106610885565b61010e610c2f565b6001600160a01b0316801561016057600580546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3005b631e4fbdf760e01b5f525f60045260245ffd5b5f80fd5b3461017357604036600319011261017357610190610885565b61019861089b565b6001600160a01b039182165f908152600160209081526040808320949093168252928352819020549051908152f35b346101735760e0366003190112610173576101e0610885565b6101e861089b565b604435906064359260843560ff81168103610173578442116102f9576102bc6102c59160018060a01b03841696875f52600860205260405f20908154916001830190556040519060208201927f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c984528a604084015260018060a01b038916606084015289608084015260a083015260c082015260c0815261028a60e08261096a565b519020610295610b13565b906040519161190160f01b83526002830152602282015260c43591604260a4359220610dd7565b90929192610e64565b6001600160a01b03168481036102e257506102e09350610cda565b005b84906325c0072360e11b5f5260045260245260445ffd5b8463313c898160e11b5f5260045260245ffd5b3461017357604036600319011261017357610332610328610885565b6024359033610a69565b602060405160018152f35b34610173575f366003190112610173576040515f60045461035d816108b1565b80845290600181169081156103fb575060011461039d575b610399836103858185038261096a565b604051918291602083526020830190610861565b0390f35b60045f9081527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b939250905b8082106103e157509091508101602001610385610375565b9192600181602092548385880101520191019092916103c9565b60ff191660208086019190915291151560051b840190910191506103859050610375565b34610173575f366003190112610173576005546040516001600160a01b039091168152602090f35b34610173575f366003190112610173576104e36104837f0000000000000000000000000000000000000000000000000000000000000000610d3d565b6104ac7f0000000000000000000000000000000000000000000000000000000000000000610da0565b60206104f1604051926104bf838561096a565b5f84525f368137604051958695600f60f81b875260e08588015260e0870190610861565b908582036040870152610861565b4660608501523060808501525f60a085015283810360c08501528180845192838152019301915f5b82811061052857505050500390f35b835185528695509381019392810192600101610519565b34610173576020366003190112610173576001600160a01b03610560610885565b165f526008602052602060405f2054604051908152f35b34610173576040366003190112610173576102e0610593610885565b602435906105a28233836109a0565b610c56565b34610173575f366003190112610173576105bf610c2f565b600580546001600160a01b031981169091555f906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610173576020366003190112610173576001600160a01b03610623610885565b165f525f602052602060405f2054604051908152f35b34610173576020366003190112610173576102e060043533610c56565b346101735760403660031901126101735761066f610885565b6024359061067b610c2f565b6001600160a01b03169081156106ef57600254908082018092116106db5760207fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef915f9360025584845283825260408420818154019055604051908152a3005b634e487b7160e01b5f52601160045260245ffd5b63ec442f0560e01b5f525f60045260245ffd5b34610173575f36600319011261017357602061071c610b13565b604051908152f35b34610173575f36600319011261017357602060ff60095416604051908152f35b3461017357606036600319011261017357610332610760610885565b61076861089b565b604435916107778333836109a0565b610a69565b34610173575f366003190112610173576020600254604051908152f35b34610173576040366003190112610173576103326107b5610885565b6024359033610cda565b34610173575f366003190112610173575f6003546107dc816108b1565b80845290600181169081156103fb575060011461080357610399836103858185038261096a565b60035f9081527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b939250905b80821061084757509091508101602001610385610375565b91926001816020925483858801015201910190929161082f565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b600435906001600160a01b038216820361017357565b602435906001600160a01b038216820361017357565b90600182811c921680156108df575b60208310146108cb57565b634e487b7160e01b5f52602260045260245ffd5b91607f16916108c0565b5f92918154916108f8836108b1565b808352926001811690811561094d575060011461091457505050565b5f9081526020812093945091925b838310610933575060209250010190565b600181602092949394548385870101520191019190610922565b915050602093945060ff929192191683830152151560051b010190565b90601f8019910116810190811067ffffffffffffffff82111761098c57604052565b634e487b7160e01b5f52604160045260245ffd5b6001600160a01b039081165f818152600160209081526040808320948616835293905291909120549291905f1984106109da575b50505050565b828410610a46578015610a33576001600160a01b03821615610a20575f52600160205260405f209060018060a01b03165f5260205260405f20910390555f8080806109d4565b634a1406b160e11b5f525f60045260245ffd5b63e602df0560e01b5f525f60045260245ffd5b508290637dc7a0d960e11b5f5260018060a01b031660045260245260445260645ffd5b6001600160a01b0316908115610b00576001600160a01b03169182156106ef57815f525f60205260405f2054818110610ae757817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92602092855f525f84520360405f2055845f525f825260405f20818154019055604051908152a3565b8263391434e360e21b5f5260045260245260445260645ffd5b634b637e8f60e11b5f525f60045260245ffd5b307f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480610c06575b15610b6e577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f82527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a08152610c0060c08261096a565b51902090565b507f00000000000000000000000000000000000000000000000000000000000000004614610b45565b6005546001600160a01b03163303610c4357565b63118cdaa760e01b5f523360045260245ffd5b9091906001600160a01b03168015610b0057805f525f60205260405f2054838110610cc0576020845f94957fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef938587528684520360408620558060025403600255604051908152a3565b915063391434e360e21b5f5260045260245260445260645ffd5b6001600160a01b0316908115610a33576001600160a01b0316918215610a205760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591835f526001825260405f20855f5282528060405f2055604051908152a3565b60ff8114610d835760ff811690601f8211610d745760405191610d6160408461096a565b6020808452838101919036833783525290565b632cd44ac360e21b5f5260045ffd5b50604051610d9d81610d968160066108e9565b038261096a565b90565b60ff8114610dc45760ff811690601f8211610d745760405191610d6160408461096a565b50604051610d9d81610d968160076108e9565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411610e59579160209360809260ff5f9560405194855216868401526040830152606082015282805260015afa15610e4e575f516001600160a01b03811615610e4457905f905f90565b505f906001905f90565b6040513d5f823e3d90fd5b5050505f9160039190565b6004811015610ec45780610e76575050565b60018103610e8d5763f645eedf60e01b5f5260045ffd5b60028103610ea8575063fce698f760e01b5f5260045260245ffd5b600314610eb25750565b6335e2f38360e21b5f5260045260245ffd5b634e487b7160e01b5f52602160045260245ffd360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00","sourceMap":"1537:24252:85:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1537:24252:85;;;;;;:::i;:::-;;;;;:::i;:::-;;;;-1:-1:-1;;;;;1537:24252:85;;;;;;;;1944:72:25;;:::i;:::-;12473:55:71;;-1:-1:-1;1537:24252:85;5197:14:71;1537:24252:85;;;-1:-1:-1;1537:24252:85;;5197:26:71;;5101:129;;12473:55;17306:44:85;17302:106;;17418:60;;;;;;;1537:24252;;;;;;;;;;;;17418:60;;17466:9;17418:60;;;;;;;;;1537:24252;1944:72:25;;;;:::i;:::-;-1:-1:-1;;;;;1537:24252:85;;;;;16253:80;;;;;1537:24252;;;;;;;16253:80;;16280:10;1537:24252;16253:80;;1537:24252;16300:4;1537:24252;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16253:80;;1537:24252;16253:80;;;;;;;1537:24252;1944:72:25;;;;:::i;:::-;14280:11:85;;14276:64;;14376:21;;;:::i;:::-;1537:24252;;;;;;;;14412:30;;;-1:-1:-1;;;14465:18:85;;1537:24252;14465:18;;14408:333;1537:24252;14504:31;;1537:24252;;;1745:53:50;1537:24252:85;;;;;;1745:53:50;;;16280:10:85;1537:24252;1745:53:50;;1537:24252:85;16300:4;1537:24252;;;;;;;;;;1745:53:50;;;1537:24252:85;1745:53:50;;:::i;:::-;;;:::i;:::-;1537:24252:85;;;;;;;16280:10;14756:48;1537:24252;16280:10;14756:48;;1537:24252;;14500:241;14650:14;14637:27;14500:241;14633:108;14680:50;;;;;1537:24252;;-1:-1:-1;;;14680:50:85;;16280:10;1537:24252;14680:50;;1537:24252;;;;;;;;;;;;;;14680:50;;;;;;;;;14633:108;;;14500:241;;14680:50;;;;;:::i;:::-;1537:24252;;14680:50;;;;1537:24252;;;;14680:50;1537:24252;;;;;;;;;;-1:-1:-1;;;1537:24252:85;;;;;;;;14276:64;-1:-1:-1;;;14314:15:85;;1537:24252;14314:15;;16253:80;;;;;:::i;:::-;1537:24252;;16253:80;;;;1537:24252;;;;16253:80;1537:24252;;;17418:60;;;;;:::i;:::-;1537:24252;;17418:60;;;;17302:106;-1:-1:-1;;;17373:24:85;;1537:24252;15347:24;17373;1537:24252;;;;;;;;;;;;;;;;;;;;;5528:4;1537:24252;;;;;;;;;;-1:-1:-1;;1537:24252:85;;;;5815:26:20;1537:24252:85;;;;:::i;:::-;5785:18:20;3283:4;5785:18;;-1:-1:-1;1537:24252:85;-1:-1:-1;;;;;;;;;;;1537:24252:85;;4967:24:20;1537:24252:85;-1:-1:-1;1537:24252:85;4967:24:20;1537:24252:85;4807:191:20;;5785:18;3283:4;:::i;:::-;5815:26;:::i;:::-;;1537:24252:85;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1537:24252:85;;;;;;;;;;;;;;;-1:-1:-1;;1537:24252:85;;;;;;:::i;:::-;;;1944:72:25;;;:::i;:::-;14280:11:85;;14276:64;;14376:21;;;:::i;:::-;1537:24252;;;;;;;;14412:30;;;-1:-1:-1;;;14465:18:85;;1537:24252;14465:18;;14408:333;1537:24252;14504:31;;1537:24252;;;1745:53:50;1537:24252:85;;;;;;1745:53:50;;;14582:10:85;1537:24252;1745:53:50;;1537:24252:85;14602:4;1537:24252;;;;;;;;;;1745:53:50;;;;;;:::i;:::-;-1:-1:-1;;;;;1537:24252:85;;1745:53:50;:::i;:::-;1537:24252:85;;;;;-1:-1:-1;;;;;1537:24252:85;;;;;14774:10;;14756:48;;1537:24252;;14756:48;1537:24252;;14500:241;14650:14;14637:27;14500:241;14633:108;1537:24252;-1:-1:-1;;;;;1537:24252:85;;14680:50;;;;;1537:24252;;-1:-1:-1;;;14680:50:85;;14711:10;1537:24252;14680:50;;1537:24252;;;;;;;;;;;;;;;;;;14680:50;;;;;;;;14633:108;;;14500:241;;14680:50;;;;;:::i;:::-;1537:24252;;14680:50;;;;14276:64;-1:-1:-1;;;14314:15:85;;1537:24252;14314:15;;1537:24252;;;;;;9191:37;1537:24252;;;:::i;:::-;9191:37;;:::i;:::-;1537:24252;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;1537:24252:85;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9962:7;1537:24252;;;;;;;9962:7;1537:24252;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1537:24252:85;;;;10788:21;1537:24252;;:::i;:::-;10788:21;:::i;:::-;1537:24252;;;-1:-1:-1;1537:24252:85;;;;;;;;;;;;;-1:-1:-1;;;1537:24252:85;;;;;;;;;;;;;;;-1:-1:-1;;1537:24252:85;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;;;;;;;1537:24252:85;;;3949:31:20;1537:24252:85;;;;;;-1:-1:-1;1537:24252:85;;;;;;-1:-1:-1;1537:24252:85;;;;;;;;;;;;;;;;;;;;;;;;;11073:17;1537:24252;;;;;;;;;;;;;10316:45;1537:24252;;;:::i;:::-;10316:45;;:::i;1537:24252::-;;;;;;11903:35;1537:24252;;;:::i;:::-;11903:35;;:::i;1537:24252::-;;;;;;;;;;;;;;;;;;8814:12;1537:24252;;;;;;;8814:12;1537:24252;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3283:4:20;;:::i;:::-;1944:72:25;;:::i;:::-;5528:4:85;1537:24252;;-1:-1:-1;;;;;;;;;;;1537:24252:85;;;-1:-1:-1;;;;;;;;;;;1537:24252:85;3319:20:25;1537:24252:85;;;966:10:24;1537:24252:85;;3319:20:25;1537:24252:85;;;;;;;;;;;;;;;;9767:7;1537:24252;;;;;;;;;;;;;;-1:-1:-1;;1537:24252:85;;;;;;:::i;:::-;;;:::i;:::-;;;-1:-1:-1;;;;;1537:24252:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1537:24252:85;;;;;;;4301:16:22;1537:24252:85;;;;4724:16:22;;:34;;;;1537:24252:85;;4788:16:22;:50;;;;1537:24252:85;4853:13:22;:30;;;;1537:24252:85;4849:91:22;;;-1:-1:-1;;1537:24252:85;;;;-1:-1:-1;;;;;;;;;;;1537:24252:85;;4977:67:22;;1537:24252:85;6891:76:22;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;1537:24252:85;;7011:57;1537:24252;7011:57;:::i;:::-;;7079:50;;;:::i;:::-;-1:-1:-1;;;;;;1537:24252:85;;7139:51;1537:24252;7139:51;:::i;:::-;;-1:-1:-1;;;;;1537:24252:85;;;;;;;;-1:-1:-1;;;;;1537:24252:85;;;;;;;;-1:-1:-1;;;;;1537:24252:85;;7293:29;1537:24252;;;7293:29;1537:24252;7898:23:71;1537:24252:85;;7898:23:71;:::i;:::-;;7376:13:85;7411:3;1537:24252;;7391:18;;;;;7459:10;;;;:::i;:::-;;1537:24252;7488:19;;1537:24252;;;;;;;;;7488:40;;-1:-1:-1;;;7555:18:85;;1537:24252;14465:18;7555;7484:192;1537:24252;;;;-1:-1:-1;;;;;1537:24252:85;;;;;;;;7612:49;;;;;:::i;:::-;;1537:24252;7376:13;;1537:24252;-1:-1:-1;;;1537:24252:85;;;;;;;;;-1:-1:-1;;;1537:24252:85;;;;;;;;7391:18;;;5064:101:22;;1537:24252:85;;5064:101:22;1537:24252:85;;-1:-1:-1;;;;;;;;;;;1537:24252:85;;-1:-1:-1;;;;;;;;;;;1537:24252:85;5140:14:22;1537:24252:85;;;;;;5140:14:22;1537:24252:85;;4977:67:22;-1:-1:-1;;1537:24252:85;;;-1:-1:-1;;;;;;;;;;;1537:24252:85;4977:67:22;;;4849:91;-1:-1:-1;;;4906:23:22;;1537:24252:85;4906:23:22;;4853:30;4870:13;;;4853:30;;;4788:50;4816:4;4808:25;:30;;-1:-1:-1;4788:50:22;;4724:34;;;-1:-1:-1;4724:34:22;;1537:24252:85;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1537:24252:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1537:24252:85;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1537:24252:85;;;;;;:::i;:::-;;;;;:::i;:::-;1944:72:25;;;:::i;1537:24252:85:-;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1537:24252:85;;;;;;;;;;;;;;;;;;;;;;;5090:6:23;-1:-1:-1;;;;;1537:24252:85;5081:4:23;5073:23;5069:145;;1537:24252:85;;;-1:-1:-1;;;;;;;;;;;1537:24252:85;;;5069:145:23;-1:-1:-1;;;5174:29:23;;1537:24252:85;;5174:29:23;1537:24252:85;-1:-1:-1;1537:24252:85;;-1:-1:-1;;1537:24252:85;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4667:6:23;1537:24252:85;4658:4:23;4650:23;;;:120;;;;1537:24252:85;4633:251:23;;;1537:24252:85;;;-1:-1:-1;;;;;;;;;;;1537:24252:85;;;;;;;;966:10:24;-1:-1:-1;1537:24252:85;;;;;;;;;;4516:23:20;4512:108;;1537:24252:85;;-1:-1:-1;;;6131:52:23;;-1:-1:-1;;;;;1537:24252:85;;;;;;;;;6131:52:23;;;;;;;1537:24252:85;-1:-1:-1;6127:437:23;;-1:-1:-1;;;6493:60:23;;1537:24252:85;;;;;1805:47:37;6493:60:23;6127:437;6225:40;;-1:-1:-1;;;;;;;;;;;6225:40:23;;;6221:120;;1748:29:37;;;:34;1744:119;;-1:-1:-1;;;;;;;;;;;1537:24252:85;;-1:-1:-1;;;;;;1537:24252:85;;;;;;;;2407:36:37;1537:24252:85;;2407:36:37;1537:24252:85;;2458:15:37;:11;;4107:55:51;4065:25;;;;;;;;1537:24252:85;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;4107:55:51;:::i;1537:24252:85:-;;;4107:55:51;:::i;2454:148:37:-;6163:9;;;;;6159:70;;1537:24252:85;;6159:70:37;-1:-1:-1;;;6199:19:37;;1537:24252:85;;6199:19:37;1744:119;-1:-1:-1;;;1805:47:37;;1537:24252:85;;;1805:47:37;;6221:120:23;-1:-1:-1;;;6292:34:23;;1537:24252:85;;;6292:34:23;;6131:52;;;;1537:24252:85;6131:52:23;;1537:24252:85;6131:52:23;;;;;;1537:24252:85;6131:52:23;;;:::i;:::-;;;1537:24252:85;;;;;6131:52:23;;;;1537:24252:85;-1:-1:-1;1537:24252:85;;6131:52:23;;;-1:-1:-1;6131:52:23;;4512:108:20;-1:-1:-1;;;4562:47:20;;966:10:24;1537:24252:85;;;;;;;4562:47:20;;4633:251:23;-1:-1:-1;;;4844:29:23;;1537:24252:85;4844:29:23;;4650:120;-1:-1:-1;;;;;;;;;;;1537:24252:85;-1:-1:-1;;;;;1537:24252:85;4728:42:23;;;-1:-1:-1;4650:120:23;;;1537:24252:85;;;;;;;-1:-1:-1;;1537:24252:85;;;;;8806:28:71;1537:24252:85;;-1:-1:-1;1537:24252:85;5197:14:71;1537:24252:85;;;-1:-1:-1;1537:24252:85;;5197:26:71;;5101:129;;8806:28;1537:24252:85;;;;;;;;;;;;;;;;;;;;;3283:4:20;;:::i;:::-;-1:-1:-1;;;;;;;;;;;1537:24252:85;;;;2971:9:25;2967:62;;1537:24252:85;;;-1:-1:-1;;;;;;;;;;;1537:24252:85;3627:22:25;1537:24252:85;;;966:10:24;1537:24252:85;;3627:22:25;1537:24252:85;;2967:62:25;-1:-1:-1;;;3003:15:25;;1537:24252:85;3003:15:25;;1537:24252:85;;;;;;;;;;;;;8360:13;1537:24252;;;-1:-1:-1;;;;;1537:24252:85;;;;;;;;;;;;;;;-1:-1:-1;;1537:24252:85;;;;1944:72:25;;:::i;:::-;1537:24252:85;;17965:51;;;;;;;;;;;;;;1537:24252;17965:51;;;;;;17993:4;1537:24252;;;;;;;;18005:10;1537:24252;;;;17965:51;;;;;;;;;1537:24252;;-1:-1:-1;;;;;1537:24252:85;11511:50:71;1537:24252:85;11511:50:71;:::i;:::-;;18155:46:85;1537:24252;;;;;;18155:46;1537:24252;;;;;;17965:51;1537:24252;;;;;;;;;;;17965:51;-1:-1:-1;;;1537:24252:85;;;;;;;;;;;;;;;-1:-1:-1;;1537:24252:85;;;;;;:::i;:::-;966:10:24;-1:-1:-1;;;;;1537:24252:85;;6489:34:20;6485:102;;6597:37;1537:24252:85;;;6597:37:20;:::i;6485:102::-;-1:-1:-1;;;6546:30:20;;1537:24252:85;6546:30:20;;1537:24252:85;;;;;;;-1:-1:-1;;1537:24252:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18576:13;1537:24252;-1:-1:-1;;;;;1537:24252:85;18562:10;:27;18558:80;;8806:28:71;;-1:-1:-1;1537:24252:85;5197:14:71;1537:24252:85;;;-1:-1:-1;1537:24252:85;;5197:26:71;;5101:129;;8806:28;18652:29:85;;;18702:41;;;;;:::i;:::-;18701:42;18697:104;;1537:24252;;18697:104;-1:-1:-1;;;18770:16:85;;1537:24252;;18770:16;18648:397;1537:24252;;;;-1:-1:-1;;;18831:29:85;;1537:24252;;;;;;;;;;-1:-1:-1;;;;;1537:24252:85;18831:29;;;;;;;;;;;18648:397;-1:-1:-1;18821:39:85;;;18881:43;;;;:::i;18817:228::-;-1:-1:-1;;;19019:15:85;;1537:24252;19019:15;;18831:29;;;;1537:24252;18831:29;;1537:24252;18831:29;;;;;;1537:24252;18831:29;;;:::i;:::-;;;1537:24252;;;;;18831:29;;;;;;;-1:-1:-1;18831:29:85;;;1537:24252;;;;;;;;;18558:80;-1:-1:-1;;;18612:15:85;;1537:24252;18612:15;;1537:24252;;;;;;;-1:-1:-1;;1537:24252:85;;;;5398:25:20;1537:24252:85;;;;:::i;:::-;5368:18:20;3283:4;5368:18;;-1:-1:-1;1537:24252:85;-1:-1:-1;;;;;;;;;;;1537:24252:85;;4967:24:20;1537:24252:85;-1:-1:-1;1537:24252:85;4967:24:20;1537:24252:85;4807:191:20;;3283:4;5398:25;:::i;1537:24252:85:-;;;;;;;-1:-1:-1;;1537:24252:85;;;;;;;;-1:-1:-1;1537:24252:85;-1:-1:-1;;;;;;;;;;;1537:24252:85;;4967:24:20;1537:24252:85;-1:-1:-1;1537:24252:85;4967:24:20;1537:24252:85;4807:191:20;;1537:24252:85;;;;;;;;;;;;;;;;;;;;;8592:12;1537:24252;;;;;;;;-1:-1:-1;1537:24252:85;;-1:-1:-1;;1537:24252:85;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;1537:24252:85;;;;;;;;1944:72:25;;:::i;:::-;12473:55:71;;-1:-1:-1;1537:24252:85;5197:14:71;1537:24252:85;;;-1:-1:-1;1537:24252:85;;5197:26:71;;5101:129;;12473:55;15280:44:85;15276:106;;15392:60;;;;;1537:24252;;;;;;;;;;;;15392:60;;15440:9;15392:60;;;;;;;;;1537:24252;1944:72:25;;;:::i;15392:60:85:-;;;;;1537:24252;15392:60;;:::i;:::-;1537:24252;15392:60;;;;;1537:24252;;;;;;;;;15276:106;15347:24;;;1537:24252;15347:24;1537:24252;;15347:24;1537:24252;;;;;;-1:-1:-1;;1537:24252:85;;;;;;;;11320:17;1537:24252;;;;;;;11320:17;1537:24252;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1537:24252:85;;;;;12473:55:71;-1:-1:-1;;;;;1537:24252:85;;:::i;:::-;;-1:-1:-1;1537:24252:85;5197:14:71;1537:24252:85;;;-1:-1:-1;1537:24252:85;;5197:26:71;;5101:129;;1537:24252:85;;;;;;-1:-1:-1;;1537:24252:85;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3599:47:20;;;:87;;;;1537:24252:85;;;;;;;;;;3599:87:20;-1:-1:-1;;;1101:40:26;;-1:-1:-1;3599:87:20;;;1537:24252:85;;;;;;-1:-1:-1;;1537:24252:85;;;;;;-1:-1:-1;;;;;1537:24252:85;;;;;;;;;;-1:-1:-1;;;;;1537:24252:85;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;1537:24252:85;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;1537:24252:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;1537:24252:85;;;;;-1:-1:-1;1537:24252:85;;;;;;;;;-1:-1:-1;;1537:24252:85;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;1537:24252:85;;;;;;;;-1:-1:-1;;1537:24252:85;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;2709:128:25;1537:24252:85;-1:-1:-1;;;;;;;;;;;1537:24252:85;;2770:61:25;;2709:128::o;2770:61::-;2805:15;;;-1:-1:-1;2805:15:25;;-1:-1:-1;2805:15:25;4196:103:20;966:10:24;-1:-1:-1;1537:24252:85;;;;;;;;;;;;4516:23:20;4512:108;;4196:103::o;4512:108::-;4562:47;;;-1:-1:-1;4562:47:20;966:10:24;4562:47:20;1537:24252:85;5528:4;1537:24252;;;-1:-1:-1;4562:47:20;4196:103;-1:-1:-1;1537:24252:85;;;-1:-1:-1;;;;;;;;;;;1537:24252:85;;;;;;;;966:10:24;1537:24252:85;;;;;;;;;;4516:23:20;4512:108;;4196:103;:::o;4512:108::-;4562:47;;;-1:-1:-1;4562:47:20;966:10:24;4562:47:20;1537:24252:85;;;;-1:-1:-1;4562:47:20;7318:387;-1:-1:-1;;;;;1537:24252:85;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1537:24252:85;;;;;;;;;;;;;-1:-1:-1;;1537:24252:85;;;;;966:10:24;;1537:24252:85;7580:40:20;1537:24252:85;;7580:40:20;7557:4;7634:11;:::o;7480:219::-;7676:12;1537:24252:85;7676:12:20;:::o;7318:387::-;-1:-1:-1;;;;;1537:24252:85;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1537:24252:85;;;;;;;;;;;;;-1:-1:-1;;1537:24252:85;4803:1:22;1537:24252:85;;;;;;966:10:24;;1537:24252:85;7580:40:20;;1537:24252:85;7580:40:20;4803:1:22;7634:11:20;:::o;7318:387::-;1537:24252:85;;;;-1:-1:-1;;;;;;;;;;;1537:24252:85;;;;;;;;-1:-1:-1;;;;;1537:24252:85;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1537:24252:85;;;;;;;;-1:-1:-1;;;;;1537:24252:85;;;;;;;;;;;;;;;-1:-1:-1;;1537:24252:85;;;;;966:10:24;;1537:24252:85;;7580:40:20;;1537:24252:85;7580:40:20;7557:4;7634:11;:::o;7480:219::-;7676:12;;1537:24252:85;7676:12:20;:::o;3769:2:85:-;;;;;;;;;;:::o;:::-;1537:24252;;;3769:2;;;;;;;;4884:77;;;;;;;1537:24252;4884:77;;;;1537:24252;;;;;;;;4884:77;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;1537:24252;;4884:77;;1537:24252;4884:77::o;21996:3791::-;;22103:18;;22097:64;;22201:250;;;;22526:14;22502:39;;22461:120;;22595:31;;22591:524;;22467:31;23129:43;23125:712;;3769:2;23939:50;23933:96;;22467:31;24504:479;;;;3769:2;;24504:479;;;;;;22201:250;24504:479;25023:12;;1537:24252;25023:12;22467:31;25052:20;;;:45;;;;21996:3791;25050:48;;25046:91;;25179:14;1537:24252;25179:14;22467:31;25210:22;;;:49;;;;21996:3791;25208:52;;25204:95;;25338:30;25409:32;25338:30;1334:522:110;1424:426;;;;;;;;;;;;;;;;;;;;;;;1334:522;25338:30:85;25409:32;1334:522:110;1424:426;;;;;;;;;;;;;;;;;;;;;;;1334:522;25409:32:85;1537:24252;;25481:79;;;;;;;;;;;;;;;;;;;;;;;25509:4;25481:79;;:::i;:::-;;;1537:24252;25481:79;;;;;25680:78;;-1:-1:-1;;;;;1537:24252:85;;;;25680:78;;1537:24252;25623:41;1537:24252;25623:41;:::i;:::-;;1537:24252;;25680:78;;;;;:::i;:::-;;;;22467:31;21996:3791;:::o;25204:95::-;25276:12;;;1537:24252;25276:12;:::o;25210:49::-;25257:2;25236:23;;;;25210:49;;;25052:45;25095:2;25076:21;;;;25052:45;;;23125:712;3769:2;23194:54;23188:108;;1537:24252;22467:31;23770:30;23425:273;;;;;23712:38;;;:::i;:::-;;1537:24252;;;;;23770:30;22467:31;23815:11;:::o;22591:524::-;22648:46;3769:2;22648:46;22642:100;;3769:2;22467:31;23051:27;22876:113;;;7898:23:71;;;:::i;19513:1399:85:-;3769:2;1537:24252;19596:4;19618:39;19612:85;;3769:2;19879:575;;;;;3769:2;19879:575;;;;;;3769:2;19879:575;;;20490:21;;;;:::i;:::-;1537:24252;;;;;;;;20526:30;;;-1:-1:-1;;;20579:18:85;;;14465;20579;20522:306;1537:24252;;;;;;;20618:31;;20614:214;1537:24252;;;-1:-1:-1;1537:24252:85;;-1:-1:-1;;;3769:2:85;1328:43:50;;;;;;;-1:-1:-1;;;;;1537:24252:85;;1328:43:50;;;1537:24252:85;;;;;;;;1328:43:50;;20843:40:85;;3769:2;;1328:43:50;;;1537:24252:85;;1328:43:50;:::i;:::-;;;:::i;:::-;1537:24252:85;;;;;19879:575;20843:40;;1537:24252;19513:1399;:::o;20614:214::-;20743:14;20730:27;20726:102;;20614:214;3769:2;20843:40;20614:214;;;20726:102;20773:44;;;;;1537:24252;;-1:-1:-1;;;20773:44:85;;-1:-1:-1;;;;;1537:24252:85;;20773:44;;;1537:24252;;;;;;;;-1:-1:-1;1537:24252:85;;;-1:-1:-1;20773:44:85;;;;;;;;20843:40;20773:44;3769:2;20773:44;;;20726:102;;;;;;;20773:44;1537:24252;20773:44;;;:::i;:::-;1537:24252;20773:44;;1537:24252;;;;;;;;;;;;7942:388:20;1537:24252:85;;;;-1:-1:-1;;;;;;;;;;;1537:24252:85;;;;;;;;-1:-1:-1;;;;;1537:24252:85;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1537:24252:85;;;;;;;;-1:-1:-1;;;;;1537:24252:85;;;;;;;;;;;;;;;-1:-1:-1;;1537:24252:85;;;966:10:24;;1537:24252:85;;8205:40:20;;1537:24252:85;8205:40:20;1537:24252:85;8259:11:20;:::o;771:246:109:-;-1:-1:-1;;;;;1537:24252:85;;;;;;;7898:23:71;1537:24252:85;;-1:-1:-1;1537:24252:85;3096:11:70;1537:24252:85;;;-1:-1:-1;1537:24252:85;;7612:7;7898:23:71;:::i;:::-;771:246:109;:::o;:::-;-1:-1:-1;;;;;1537:24252:85;-1:-1:-1;1537:24252:85;;;3096:11:70;1537:24252:85;;;;;;;;7898:23:71;;23712:7:85;7898:23:71;:::i;771:246:109:-;-1:-1:-1;;;;;1537:24252:85;-1:-1:-1;1537:24252:85;;;3096:11:70;1537:24252:85;;;;;25649:14;1537:24252;;7898:23:71;;25623:7:85;7898:23:71;:::i;1537:24252:85:-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;12721:622::-;;;11778:90;1537:24252;12944:16;;;;;12940:70;;13034:14;;;;:::i;:::-;13062:12;;;;13058:55;;12721:622;1537:24252;;;;;;;;;13186:19;;;:::i;:::-;13221:13;-1:-1:-1;13236:8:85;;;;;;-1:-1:-1;13323:13:85;;-1:-1:-1;;12721:622:85:o;13246:3::-;13291:10;5853:18:71;13291:10:85;1537:24252;13291:10;;;:::i;:::-;11778:90;5853:18:71;:::i;:::-;1537:24252:85;;;;;;13265:37;;;;:::i;:::-;1537:24252;;13221:13;;13058:55;13090:12;;13058:55;;;12940:70;1537:24252;;;;;;;;;;:::i;:::-;-1:-1:-1;1537:24252:85;;-1:-1:-1;1537:24252:85;;;12976:23;:::o;12721:622::-;;;10325:7;1537:24252;12944:16;;;;;12940:70;;13034:14;;;;:::i;:::-;13062:12;;;;13058:55;;12721:622;1537:24252;;;;;;;;;13186:19;;;:::i;:::-;13221:13;-1:-1:-1;13236:8:85;;;;;;-1:-1:-1;13323:13:85;;-1:-1:-1;;12721:622:85:o;13246:3::-;13291:10;5853:18:71;13291:10:85;1537:24252;13291:10;;;:::i;:::-;10325:7;5853:18:71;:::i;:::-;1537:24252:85;;;;;;13265:37;;;;:::i;:::-;1537:24252;;13221:13;;13058:55;13090:12;;13058:55;;;12721:622;;;9200:12;1537:24252;12944:16;;;;;12940:70;;13034:14;;;;:::i;:::-;13062:12;;;;13058:55;;12721:622;1537:24252;;;;;;;;;13186:19;;;:::i;:::-;13221:13;-1:-1:-1;13236:8:85;;;;;;-1:-1:-1;13323:13:85;;-1:-1:-1;;12721:622:85:o;13246:3::-;13291:10;5853:18:71;13291:10:85;1537:24252;13291:10;;;:::i;:::-;9200:12;5853:18:71;:::i;:::-;1537:24252:85;;;9200:12;1537:24252;;13265:37;;;;:::i;:::-;1537:24252;;13221:13;;13058:55;13090:12;;13058:55;;;3068:335:109;3267:64;;-1:-1:-1;;;;;1537:24252:85;14376:7;3267:64:109;:::i;:::-;1537:24252:85;;;;;;;;3341:55:109;3068:335;:::o;1537:24252:85:-;;;;;;;;-1:-1:-1;1537:24252:85;;-1:-1:-1;1537:24252:85;;;-1:-1:-1;1537:24252:85;:::o;2497:406:71:-;1537:24252:85;;;5197:14:71;1537:24252:85;;;;;;5197:26:71;2576:321;2580:22;;;18094:17:85;1537:24252;-1:-1:-1;;;1537:24252:85;;;;;;5197:14:71;1537:24252:85;;;18094:17;1537:24252;18094:17;1537:24252;:::i;:::-;;;;;;;;;;;;;;;;;;;;18094:17;1537:24252;;;;5197:14:71;1537:24252:85;;;;;;5197:14:71;2832:11;:::o;2497:406::-;1537:24252:85;;;5197:14:71;1537:24252:85;;;;;;5197:26:71;2576:321;2580:22;;;1537:24252:85;;-1:-1:-1;;;1537:24252:85;;;;;;5197:14:71;1537:24252:85;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;5197:14:71;1537:24252:85;;;;;;5197:14:71;2832:11;:::o;2497:406::-;-1:-1:-1;1537:24252:85;;;5197:14:71;;;1537:24252:85;;;;;;2581:21:71;;1537:24252:85;;;-1:-1:-1;;;1537:24252:85;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;2776:14:71;1537:24252:85;;;;;;;2832:11:71;:::o;7082:141:22:-;1537:24252:85;-1:-1:-1;;;;;;;;;;;1537:24252:85;;;;7148:18:22;7144:73;;7082:141::o;7144:73::-;7189:17;;;-1:-1:-1;7189:17:22;;-1:-1:-1;7189:17:22;5170:305:70;;;1537:24252:85;-1:-1:-1;1537:24252:85;5307:11:70;;;1537:24252:85;;;-1:-1:-1;1537:24252:85;;5337:17:70;;;5333:136;5337:17;;;8806:28:71;;;;5197:14;5101:129;-1:-1:-1;1537:24252:85;5197:14:71;1537:24252:85;;;-1:-1:-1;1537:24252:85;;5197:26:71;;5101:129;;8806:28;5370:39:70;-1:-1:-1;5370:39:70;:::o;5333:136::-;5440:18;;5448:4;5440:18;;:::o;8370:720:50:-;;-1:-1:-1;8507:421:50;8370:720;8507:421;;;;;;;;;;;;-1:-1:-1;8507:421:50;;8942:15;;-1:-1:-1;;;;;;1537:24252:85;;8960:26:50;:31;8942:68;8938:146;;8370:720;:::o;8938:146::-;-1:-1:-1;;;;9033:40:50;;;-1:-1:-1;;;;;1537:24252:85;;;;9033:40:50;1537:24252:85;;;9033:40:50;8942:68;9009:1;8994:16;;8942:68;;4437:582:51;;4609:8;;-1:-1:-1;1537:24252:85;;5690:21:51;:17;;5815:105;;;;;;5686:301;5957:19;;;5710:1;5957:19;;5710:1;5957:19;4605:408;1537:24252:85;;4857:22:51;:49;;;4605:408;4853:119;;4985:17;;:::o;4853:119::-;-1:-1:-1;;;4878:1:51;4933:24;;;-1:-1:-1;;;;;1537:24252:85;;;;4933:24:51;1537:24252:85;;;4933:24:51;4857:49;4883:18;;;:23;4857:49;","linkReferences":{},"immutableReferences":{"40546":[{"start":3282,"length":32},{"start":3490,"length":32}]}},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","PAUSER_ROLE()":"e63ab1e9","UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","bridgingPayments()":"109ec2e7","bridgingPayments(uint256,uint256)":"87e7a3a3","createBridgingPayment(uint256)":"38ff319f","getRoleAdmin(bytes32)":"248a9ca3","getTokenType(address)":"93272baf","governanceAdmin()":"0058f6b8","governancePauser()":"c81eb797","grantRole(bytes32,address)":"2f2ff15d","handleMessage(bytes32,bytes)":"302ac5d0","hasRole(bytes32,address)":"91d14854","initialize(address,address,address,bytes32,(address,uint8)[])":"763b754a","isBridgingPayment(address)":"0c9d9b97","isVftManager(bytes32)":"4e689539","messageQueue()":"3b70c18a","pause()":"8456cb59","paused()":"5c975abb","proxiableUUID()":"52d1902d","renounceRole(bytes32,address)":"36568abe","requestBridging(address,uint256,bytes32)":"c305870c","requestBridgingPayingFee(address,uint256,bytes32,address)":"1e324b52","requestBridgingPayingFeeWithPermit(address,uint256,bytes32,uint256,uint8,bytes32,bytes32,address)":"f6cdd9cc","requestBridgingWithPermit(address,uint256,bytes32,uint256,uint8,bytes32,bytes32)":"6a762d5c","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7","tokens()":"9d63848a","tokens(uint256,uint256)":"8b4864d6","totalBridgingPayments()":"8b841f6c","totalTokens()":"7e1c0c09","totalVftManagers()":"240dfa95","unpause()":"3f4ba83a","upgradeToAndCall(address,bytes)":"4f1ef286","vftManagers()":"87be40b1","vftManagers(uint256,uint256)":"c1c60921"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidBridgingPayment\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPayload\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSource\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTokenType\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"from\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Bridged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bridgingPayment\",\"type\":\"address\"}],\"name\":\"BridgingPaymentCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"to\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BridgingRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"EthereumTokenRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"tokenDecimals\",\"type\":\"uint8\"}],\"name\":\"GearTokenRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"vftManager\",\"type\":\"bytes32\"}],\"name\":\"VftManagerAdded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bridgingPayments\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"bridgingPayments\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"createBridgingPayment\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getTokenType\",\"outputs\":[{\"internalType\":\"enum IERC20Manager.TokenType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governanceAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governancePauser\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"source\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"handleMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IGovernance\",\"name\":\"governanceAdmin_\",\"type\":\"address\"},{\"internalType\":\"contract IGovernance\",\"name\":\"governancePauser_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"messageQueue_\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"vftManager\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"enum IERC20Manager.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"}],\"internalType\":\"struct IERC20Manager.TokenInfo[]\",\"name\":\"tokens_\",\"type\":\"tuple[]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"bridgingPayment\",\"type\":\"address\"}],\"name\":\"isBridgingPayment\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"vftManager\",\"type\":\"bytes32\"}],\"name\":\"isVftManager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"messageQueue\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"to\",\"type\":\"bytes32\"}],\"name\":\"requestBridging\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"to\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"bridgingPayment\",\"type\":\"address\"}],\"name\":\"requestBridgingPayingFee\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"to\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"bridgingPayment\",\"type\":\"address\"}],\"name\":\"requestBridgingPayingFeeWithPermit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"to\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"requestBridgingWithPermit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"tokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBridgingPayments\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalVftManagers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vftManagers\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"vftManagers\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidAmount()\":[{\"details\":\"Error thrown when the amount is invalid.\"}],\"InvalidBridgingPayment()\":[{\"details\":\"Error thrown when the bridging payment is invalid (not created by `ERC20Manager`).\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"InvalidPayload()\":[{\"details\":\"Error thrown when the payload is invalid.\"}],\"InvalidSender()\":[{\"details\":\"Error thrown when the sender is not the message queue.\"}],\"InvalidSource()\":[{\"details\":\"Error thrown when the source is not the governance.\"}],\"InvalidTokenType()\":[{\"details\":\"Error thrown when the token type is invalid (`TokenType.Unknown`).\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Bridged(bytes32,address,address,uint256)\":{\"details\":\"Event emitted when bridging request is accepted.\"},\"BridgingPaymentCreated(address)\":{\"details\":\"Event emitted when bridging payment is created.\"},\"BridgingRequested(address,bytes32,address,uint256)\":{\"details\":\"Event emitted when bridging request is made.\"},\"EthereumTokenRegistered(address)\":{\"details\":\"Event emitted when Ethereum token is registered.\"},\"GearTokenRegistered(address,string,string,uint8)\":{\"details\":\"Event emitted when Gear token is registered.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"},\"VftManagerAdded(bytes32)\":{\"details\":\"Event emitted when VFT manager is added to list of VFT managers.\"}},\"kind\":\"dev\",\"methods\":{\"bridgingPayments()\":{\"details\":\"Returns list of bridging payments.\",\"returns\":{\"_0\":\"bridgingPayments List of bridging payments.\"}},\"bridgingPayments(uint256,uint256)\":{\"details\":\"Returns list of bridging payments.\",\"params\":{\"limit\":\"Maximum number of bridging payments to return.\",\"offset\":\"Offset of the first bridging payment to return.\"},\"returns\":{\"_0\":\"bridgingPayments List of bridging payments.\"}},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"createBridgingPayment(uint256)\":{\"details\":\"Creates a new `BridgingPayment` contract (ERC20Manager is factory).      Emits `BridgingPaymentCreated` event.\",\"params\":{\"fee\":\"Fee amount in wei.\"},\"returns\":{\"_0\":\"bridgingPaymentAddress Address of the created `bridgingPayment` contract.\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getTokenType(address)\":{\"details\":\"Returns token type.\",\"params\":{\"token\":\"Token address.\"},\"returns\":{\"_0\":\"tokenType Token type. Returns `TokenType.Unknown` if token is not registered.\"}},\"governanceAdmin()\":{\"details\":\"Returns governance admin address.\",\"returns\":{\"_0\":\"governanceAdmin Governance admin address.\"}},\"governancePauser()\":{\"details\":\"Returns governance pauser address.\",\"returns\":{\"_0\":\"governancePauser Governance pauser address.\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"handleMessage(bytes32,bytes)\":{\"details\":\"Handles message originated from Vara Network.\",\"params\":{\"payload\":\"Payload of the message (message from Vara Network).\",\"source\":\"Source of the message (`ActorId` from Vara Network).\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"initialize(address,address,address,bytes32,(address,uint8)[])\":{\"details\":\"Initializes the ERC20Manager contract with the message queue and VFT manager addresses.      GovernanceAdmin contract is used to upgrade, pause/unpause the ERC20Manager contract.      GovernancePauser contract is used to pause/unpause the ERC20Manager contract.\",\"params\":{\"governanceAdmin_\":\"The address of the GovernanceAdmin contract that will process messages.\",\"governancePauser_\":\"The address of the GovernanceAdmin contract that will process pauser messages.\",\"messageQueue_\":\"The address of the message queue contract.\",\"tokens_\":\"The tokens that will be registered.\",\"vftManager\":\"The address of the VFT manager contract (on Vara Network).\"}},\"isBridgingPayment(address)\":{\"details\":\"Returns whether the bridging payment is registered.\",\"params\":{\"bridgingPayment\":\"Bridging payment address.\"},\"returns\":{\"_0\":\"isBridgingPayment `true` if the bridging payment is registered, `false` otherwise.\"}},\"isVftManager(bytes32)\":{\"details\":\"Returns whether the VFT manager is registered.\",\"params\":{\"vftManager\":\"VFT manager address.\"},\"returns\":{\"_0\":\"isVftManager `true` if the VFT manager is registered, `false` otherwise.\"}},\"messageQueue()\":{\"details\":\"Returns message queue address.\",\"returns\":{\"_0\":\"messageQueue Message queue address.\"}},\"pause()\":{\"details\":\"Pauses the contract.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"requestBridging(address,uint256,bytes32)\":{\"details\":\"Requests bridging of tokens.      Emits `BridgingRequested` event.Reverts if token is not registered with `InvalidTokenType` error.\",\"params\":{\"amount\":\"Amount of tokens to bridge.\",\"to\":\"Destination address.\",\"token\":\"Token address.\"}},\"requestBridgingPayingFee(address,uint256,bytes32,address)\":{\"details\":\"Requests bridging of tokens and pays fee to one of the `bridgingPayment` contracts.\",\"params\":{\"amount\":\"Amount of tokens to bridge.\",\"bridgingPayment\":\"Bridging payment address.\",\"to\":\"Destination address.\",\"token\":\"Token address.\"}},\"requestBridgingPayingFeeWithPermit(address,uint256,bytes32,uint256,uint8,bytes32,bytes32,address)\":{\"details\":\"Requests bridging of tokens and pays fee to one of the `bridgingPayment` contracts.      This function uses `permit` to approve spending of tokens to optimize gas costs.      (If token supports `permit` function).\",\"params\":{\"amount\":\"Amount of tokens to bridge.\",\"bridgingPayment\":\"Bridging payment address.\",\"deadline\":\"Deadline for the transaction to be executed.\",\"r\":\"ECDSA signature parameter.\",\"s\":\"ECDSA signature parameter.\",\"to\":\"Destination address.\",\"token\":\"Token address.\",\"v\":\"ECDSA signature parameter.\"}},\"requestBridgingWithPermit(address,uint256,bytes32,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Requests bridging of tokens.      This function uses `permit` to approve spending of tokens to optimize gas costs.      (If token supports `permit` function).\",\"params\":{\"amount\":\"Amount of tokens to bridge.\",\"deadline\":\"Deadline for the transaction to be executed.\",\"r\":\"ECDSA signature parameter.\",\"s\":\"ECDSA signature parameter.\",\"to\":\"Destination address.\",\"token\":\"Token address.\",\"v\":\"ECDSA signature parameter.\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokens()\":{\"details\":\"Returns list of tokens.\",\"returns\":{\"_0\":\"tokens List of tokens.\"}},\"tokens(uint256,uint256)\":{\"details\":\"Returns list of tokens.\",\"params\":{\"limit\":\"Maximum number of tokens to return.\",\"offset\":\"Offset of the first token to return.\"},\"returns\":{\"_0\":\"tokens List of tokens.\"}},\"totalBridgingPayments()\":{\"details\":\"Returns total number of bridging payments.\",\"returns\":{\"_0\":\"totalBridgingPayments Total number of bridging payments.\"}},\"totalTokens()\":{\"details\":\"Returns total number of tokens.\",\"returns\":{\"_0\":\"totalTokens Total number of tokens.\"}},\"totalVftManagers()\":{\"details\":\"Returns total number of VFT managers.\",\"returns\":{\"_0\":\"totalVftManagers Total number of VFT managers.\"}},\"unpause()\":{\"details\":\"Unpauses the contract.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"vftManagers()\":{\"details\":\"Returns list of VFT managers.\",\"returns\":{\"_0\":\"vftManagers List of VFT managers.\"}},\"vftManagers(uint256,uint256)\":{\"details\":\"Returns list of VFT managers.\",\"params\":{\"limit\":\"Maximum number of VFT managers to return.\",\"offset\":\"Offset of the first VFT manager to return.\"},\"returns\":{\"_0\":\"vftManagers List of VFT managers.\"}}},\"stateVariables\":{\"ADD_VFT_MANAGER\":{\"details\":\"Add VFT manager message discriminant.\"},\"ADD_VFT_MANAGER_MESSAGE_SIZE\":{\"details\":\"Size of add VFT manager message.\"},\"AMOUNT_SIZE\":{\"details\":\"`uint256 amount` size.\"},\"DISCRIMINANT_BIT_SHIFT\":{\"details\":\"`uint8 discriminant` bit shift.\"},\"DISCRIMINANT_SIZE\":{\"details\":\"`uint8 discriminant` size.\"},\"ETHEREUM_TOKEN_BIT_SHIFT\":{\"details\":\"`address token` bit shift.\"},\"ETHEREUM_TOKEN_SIZE\":{\"details\":\"`address token` size.\"},\"OFFSET1\":{\"details\":\"`SENDER_SIZE` offset.\"},\"OFFSET2\":{\"details\":\"`SENDER_SIZE + RECEIVER_SIZE` offset.\"},\"OFFSET3\":{\"details\":\"`SENDER_SIZE + RECEIVER_SIZE + TOKEN_SIZE` offset.\"},\"OFFSET4\":{\"details\":\"`DISCRIMINANT_SIZE` offset.\"},\"OFFSET5\":{\"details\":\"`DISCRIMINANT_SIZE + TOKEN_NAME_SIZE` offset.\"},\"OFFSET6\":{\"details\":\"`DISCRIMINANT_SIZE + TOKEN_NAME_SIZE + TOKEN_SYMBOL_SIZE` offset.\"},\"RECEIVER_BIT_SHIFT\":{\"details\":\"`address receiver` bit shift.\"},\"RECEIVER_SIZE\":{\"details\":\"`address receiver` size.\"},\"REGISTER_ETHEREUM_TOKEN_MESSAGE_SIZE\":{\"details\":\"Size of register token message (for `TokenType.Ethereum`).\"},\"REGISTER_GEAR_TOKEN_MESSAGE_SIZE\":{\"details\":\"Size of register token message (for `TokenType.Gear`).\"},\"SENDER_SIZE\":{\"details\":\"`bytes32 sender` size.\"},\"TOKEN_BIT_SHIFT\":{\"details\":\"`address token` bit shift.\"},\"TOKEN_DECIMALS_BIT_SHIFT\":{\"details\":\"`uint8 tokenDecimals` bit shift.\"},\"TOKEN_DECIMALS_SIZE\":{\"details\":\"`uint8 tokenDecimals` size.\"},\"TOKEN_NAME_SIZE\":{\"details\":\"`bytes32 tokenName` size.\"},\"TOKEN_SIZE\":{\"details\":\"`address token` size.\"},\"TOKEN_SYMBOL_SIZE\":{\"details\":\"`bytes32 tokenSymbol` size.\"},\"TRANSFER_MESSAGE_SIZE\":{\"details\":\"Size of transfer message.\"},\"VFT_MANAGER_SIZE\":{\"details\":\"`bytes32 vftManager` size.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ERC20Manager.sol\":\"ERC20Manager\"},\"debug\":{\"revertStrings\":\"strip\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"appendCBOR\":false,\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":script/=script/\",\":src/=src/\",\":test/=test/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x85a70e2b1b65e9ba456add364d22b97eb9944083df1c39c0b4bd6a4b5aa386a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d32a33be6ca4d8e89b9e82e3f9cec7a6c4e040534152313ff55da85b8f193059\",\"dweb:/ipfs/QmeR55L8t2A8xZ1nvT5y4yVWfFbbmpaGAtGBMz3GGNpuyP\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0xa6bf6b7efe0e6625a9dcd30c5ddf52c4c24fe8372f37c7de9dbf5034746768d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c353ee3705bbf6fadb84c0fb10ef1b736e8ca3ca1867814349d1487ed207beb\",\"dweb:/ipfs/QmcugaPssrzGGE8q4YZKm2ZhnD3kCijjcgdWWg76nWt3FY\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x6694b63ddb2c59bbe341c846171798350e8f72fa02189fcdeaca864e28b54e1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d945d33e2189ac4e531e4ed228f59ca957b3898c4f9051f4b8c7ae44d72b23a\",\"dweb:/ipfs/QmRcEwubTe3xyXxthijs5fVzEgUFSxeddjd5PGfhBnkunX\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xbf2aefe54b76d7f7bcd4f6da1080b7b1662611937d870b880db584d09cea56b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5e7e2f12e0feec75296e57f51f82fdaa8bd1551f4b8cc6560442c0bf60f818c\",\"dweb:/ipfs/QmcW9wDMaQ8RbQibMarfp17a3bABzY5KraWe2YDwuUrUoz\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x82f757819bf2429a0d4db141b99a4bbe5039e4ef86dfb94e2e6d40577ed5b28b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37c30ed931e19fb71fdb806bb504cfdb9913b7127545001b64d4487783374422\",\"dweb:/ipfs/QmUBHpv4hm3ZmwJ4GH8BeVzK4mv41Q6vBbWXxn8HExPXza\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0xa1ad192cd45317c788618bef5cb1fb3ca4ce8b230f6433ac68cc1d850fb81618\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b43447bb85a53679d269a403c693b9d88d6c74177dfb35eddca63abaf7cf110a\",\"dweb:/ipfs/QmXSDmpd4bNZj1PDgegr6C4w1jDaWHXCconC3rYiw9TSkQ\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0x20462ddb2665e9521372c76b001d0ce196e59dbbd989de9af5576cad0bd5628b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f417fd12aeec8fbfaceaa30e3a08a0724c0bc39de363e2acf6773c897abbaf6d\",\"dweb:/ipfs/QmU4Hko6sApdweVM92CsiuLKkCk8HfyBeutF89PCTz5Tye\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xecd08ad8132d88a5fcfd50f76a18583004fcdab4c33fb86343903ae420ca5a2b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02422dce2e5305624e5cec644add1baa44bfa98ea131bf6030069089a2f56ca4\",\"dweb:/ipfs/QmcsSUkX7AYXNZE18LYE6JEmv8zZcCZvKfbUm9cSzNQyNo\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x2fa0657dd7b8bc75475a47f64bc04a9adb42236b15d65e6781594ea69a46c3e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7496f42681aed94bf0142a077324e50b86046610c1724e7c12e96cf1c365914a\",\"dweb:/ipfs/QmZvhNdSAAbN4PKPdheAqwpXukUiXp3Q3TdQccDMg2NDTV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://032d1201d839435be2c85b72e33206b3ea980c569d6ebf7fa57d811ab580a82f\",\"dweb:/ipfs/QmeqQjAtMvdZT2tG7zm39itcRJkuwu8AEReK6WRnLJ18DD\"]},\"lib/openzeppelin-contracts/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xa4b9958797e0e9cde82a090525e90f80d5745ba1c67ee72b488bd3087498a17e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9344f7c2f80322c2e76d9d89bed03fd12f3e011e74fde7cf24ea21bdd2abe2d\",\"dweb:/ipfs/QmPMAjF5x2fHUAee2FKMZDBbFVrbZbPCr3a9KHLZaSn1zY\"]},\"lib/openzeppelin-contracts/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"lib/openzeppelin-contracts/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"lib/openzeppelin-contracts/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"lib/openzeppelin-contracts/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x17fc4574e07105b0180ef61f1b3cacd1820a3d37f29a4af1018d0a253c6399b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be46b3e1362dbcadbbb45ec92cdea849dceccea3e2795237f00c123aeae44746\",\"dweb:/ipfs/QmSpyB8mud6xKiZaQnVtEPrxtTHGtyBgjs1PCYk4f2gesd\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableMap.sol\":{\"keccak256\":\"0x5360739db087f427430f8566608e9267df704d96928337a3a3b3e5382925c57f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec939f4b4f68ca36961fd5ea7a417a6a390715173a6999254a2f0a34e9298503\",\"dweb:/ipfs/QmVEE8fRTjXE9jQ5pyKrPSyb9FPPtaWwsqjCdcxaPvAWwW\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x1fc283df727585919c3db301b948a3e827aee16917457ad7f916db9da2228e77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4f4b5e2cd0ebc3b74e41e4e94771a0417eedd9b11cec3ef9f90b2ac2989264b\",\"dweb:/ipfs/QmZmsEsvsXiwAyAe1YeoLSKezeFcvR1giUeEY6ex4zpsTS\"]},\"src/BridgingPayment.sol\":{\"keccak256\":\"0xd5c65ab9d02fcf2a40b6cd1256e6583c7c5662de33b5f1877872dbed0b0e7a68\",\"license\":\"GPL-3.0-or-later WITH Classpath-exception-2.0\",\"urls\":[\"bzz-raw://7bc3e3f89a6a2727e241b75c1c4013d42953a4ef6c0354a5eda6a31eef17c461\",\"dweb:/ipfs/QmWhdZ4aqCQLsZfDTjLuuLJcEVPkU4pYoWnQKfusP56uq7\"]},\"src/ERC20Manager.sol\":{\"keccak256\":\"0x3b3c6b581d7792321958594ce318392b8641928f6b26ee1d42ba41ae24d30d6d\",\"license\":\"GPL-3.0-or-later WITH Classpath-exception-2.0\",\"urls\":[\"bzz-raw://b762dd184795c135542d578f65aa301207ee79e72ecb11f8f1f80a6796015c2a\",\"dweb:/ipfs/QmZn6v3dP4uHodAw8oYbSCULuxxXTRUK9uYL8rRqEchzvy\"]},\"src/erc20/managed/ERC20GearSupply.sol\":{\"keccak256\":\"0x6ad52d44ec0f4046c7f95dd09c8631eb5cbd143002afc4f40a80cfc30d7376fa\",\"license\":\"GPL-3.0-or-later WITH Classpath-exception-2.0\",\"urls\":[\"bzz-raw://26d6133c05182bcc243c5456f804996c69df2e7ac9823e5ee4903e75a281544d\",\"dweb:/ipfs/QmTBpyydKBroMgsDCXFaya8voCa2vMwnNnnMJY8UgnsNzi\"]},\"src/interfaces/IBridgingPayment.sol\":{\"keccak256\":\"0x2f684254e88b3c2a3ff05d46215638c8e49c466276f64eaf859abe0f92061f14\",\"license\":\"GPL-3.0-or-later WITH Classpath-exception-2.0\",\"urls\":[\"bzz-raw://c6e10baef4ee82e28de434475d482aba977537b5172e7efe5dcbfeeea971ecbc\",\"dweb:/ipfs/QmNWBU8jgsLopi74ifQtru2rdH8NPnyGwcRUan8XEF6yuw\"]},\"src/interfaces/IERC20Burnable.sol\":{\"keccak256\":\"0xc253b41ffd65d67ee910c1e31e160d73da8c1aada6df8726bc56f956c026c30c\",\"license\":\"GPL-3.0-or-later WITH Classpath-exception-2.0\",\"urls\":[\"bzz-raw://e7151050bd7cf3e932ab8ebc987e92aa3fd84174b2e45c45c93514a7ee502290\",\"dweb:/ipfs/QmWnXkkbGd6SRXVMSbm8X68sjvZbjzt2AyfJRTWf3oon8G\"]},\"src/interfaces/IERC20Manager.sol\":{\"keccak256\":\"0x24d974e7e5aff76652b3855ff17f860fe173ac76908cd845470f53262fa9644f\",\"license\":\"GPL-3.0-or-later WITH Classpath-exception-2.0\",\"urls\":[\"bzz-raw://dfb3c7de466c9f26c9ef7986a14e624646941bc3c8d85f614077e3e8f2273f73\",\"dweb:/ipfs/QmTTr2DBw9f3Z3wcwBghHxHbvaHYwF3E6B6qWQg3xcdTLq\"]},\"src/interfaces/IERC20Mintable.sol\":{\"keccak256\":\"0x7609574cac9fa09aae395cb9ad301adbfdfd6aabffb78d88058bae6feb7c3f30\",\"license\":\"GPL-3.0-or-later WITH Classpath-exception-2.0\",\"urls\":[\"bzz-raw://7a423d8d3a9b2b66697ebf071003e3dfa2b42c6943ec4f0a42cc1e7b16095cd6\",\"dweb:/ipfs/Qmb22mBG2GF74iRuQQ9oyKBGk92m67gNZWe7BGdqaBJLoU\"]},\"src/interfaces/IGovernance.sol\":{\"keccak256\":\"0xb880d19a426558ef89a3f4a5ea000a7d8ba0bb402963bbdb6961cb6ddf4afe66\",\"license\":\"GPL-3.0-or-later WITH Classpath-exception-2.0\",\"urls\":[\"bzz-raw://7ce0a7c7319f0337d1af8af13000f93399c4f99ab649d2eb7fab4fc327e4b2a2\",\"dweb:/ipfs/QmXi8cHWd7yqeB2ur1tVe65jCKgzA3JeJtr5cswszthqsu\"]},\"src/interfaces/IMessageHandler.sol\":{\"keccak256\":\"0xdd5b8224c958a8275b4ea8478d3cf027facb032997a3cafa4c400cd8d231fdb9\",\"license\":\"GPL-3.0-or-later WITH Classpath-exception-2.0\",\"urls\":[\"bzz-raw://a5cf746eef9be910603ae0020c64cec73c687d3c657b3fbe916c6f99968b85e8\",\"dweb:/ipfs/QmTM3Pwf8PaH8PMRTtho78NQVbXbrm6pRsvbGN7TMDPNAq\"]},\"src/interfaces/IPausable.sol\":{\"keccak256\":\"0x6d3c910562c9049a3a8e59d148623d37b546b6557563c8c202305864703f4394\",\"license\":\"GPL-3.0-or-later WITH Classpath-exception-2.0\",\"urls\":[\"bzz-raw://6e907b1040394cf61f68f7cedc3ce7f0572fb0efa1803afee6e266b83c0f8298\",\"dweb:/ipfs/QmeWZWAJN3m9yA7fWWAyuEzwTxvVfW5yRPbZmZMixGUoZq\"]},\"src/libraries/CustomEnumerableMap.sol\":{\"keccak256\":\"0x5c4599d4895fad58491d98a5dcf9d7815091ab6947e357caf5ee10c4ddf95870\",\"license\":\"GPL-3.0-or-later WITH Classpath-exception-2.0\",\"urls\":[\"bzz-raw://40a9d62502c06c69e7585fae32dd251712203d329827a7df46e960d50980f040\",\"dweb:/ipfs/QmbqZNdLgpnutNNBDXhtmYRfBVenTbyKiuTGHsi8inxWwK\"]},\"src/libraries/LibString.sol\":{\"keccak256\":\"0x07220b10cbf3f3613e3189101d9728f5d956d0099a7c709567f24d4482c1054f\",\"license\":\"GPL-3.0-or-later WITH Classpath-exception-2.0\",\"urls\":[\"bzz-raw://83cf5cb746e20db1424902742b9257c6806cd84eb60a24710b83a115135da130\",\"dweb:/ipfs/Qma5vmqxfeeXWpxfjzHBJxe8kDE6JjmjzBrTkqj9YKGyd9\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.30+commit.73712a01"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"type":"error","name":"AccessControlBadConfirmation"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"type":"error","name":"AccessControlUnauthorizedAccount"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"type":"error","name":"AddressEmptyCode"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"type":"error","name":"ERC1967InvalidImplementation"},{"inputs":[],"type":"error","name":"ERC1967NonPayable"},{"inputs":[],"type":"error","name":"EnforcedPause"},{"inputs":[],"type":"error","name":"ExpectedPause"},{"inputs":[],"type":"error","name":"FailedCall"},{"inputs":[],"type":"error","name":"InvalidAmount"},{"inputs":[],"type":"error","name":"InvalidBridgingPayment"},{"inputs":[],"type":"error","name":"InvalidInitialization"},{"inputs":[],"type":"error","name":"InvalidPayload"},{"inputs":[],"type":"error","name":"InvalidSender"},{"inputs":[],"type":"error","name":"InvalidSource"},{"inputs":[],"type":"error","name":"InvalidTokenType"},{"inputs":[],"type":"error","name":"NotInitializing"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"type":"error","name":"SafeERC20FailedOperation"},{"inputs":[],"type":"error","name":"UUPSUnauthorizedCallContext"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"type":"error","name":"UUPSUnsupportedProxiableUUID"},{"inputs":[{"internalType":"bytes32","name":"from","type":"bytes32","indexed":true},{"internalType":"address","name":"to","type":"address","indexed":true},{"internalType":"address","name":"token","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"Bridged","anonymous":false},{"inputs":[{"internalType":"address","name":"bridgingPayment","type":"address","indexed":false}],"type":"event","name":"BridgingPaymentCreated","anonymous":false},{"inputs":[{"internalType":"address","name":"from","type":"address","indexed":true},{"internalType":"bytes32","name":"to","type":"bytes32","indexed":true},{"internalType":"address","name":"token","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"BridgingRequested","anonymous":false},{"inputs":[{"internalType":"address","name":"token","type":"address","indexed":false}],"type":"event","name":"EthereumTokenRegistered","anonymous":false},{"inputs":[{"internalType":"address","name":"token","type":"address","indexed":false},{"internalType":"string","name":"tokenName","type":"string","indexed":false},{"internalType":"string","name":"tokenSymbol","type":"string","indexed":false},{"internalType":"uint8","name":"tokenDecimals","type":"uint8","indexed":false}],"type":"event","name":"GearTokenRegistered","anonymous":false},{"inputs":[{"internalType":"uint64","name":"version","type":"uint64","indexed":false}],"type":"event","name":"Initialized","anonymous":false},{"inputs":[{"internalType":"address","name":"account","type":"address","indexed":false}],"type":"event","name":"Paused","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32","indexed":true},{"internalType":"bytes32","name":"previousAdminRole","type":"bytes32","indexed":true},{"internalType":"bytes32","name":"newAdminRole","type":"bytes32","indexed":true}],"type":"event","name":"RoleAdminChanged","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32","indexed":true},{"internalType":"address","name":"account","type":"address","indexed":true},{"internalType":"address","name":"sender","type":"address","indexed":true}],"type":"event","name":"RoleGranted","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32","indexed":true},{"internalType":"address","name":"account","type":"address","indexed":true},{"internalType":"address","name":"sender","type":"address","indexed":true}],"type":"event","name":"RoleRevoked","anonymous":false},{"inputs":[{"internalType":"address","name":"account","type":"address","indexed":false}],"type":"event","name":"Unpaused","anonymous":false},{"inputs":[{"internalType":"address","name":"implementation","type":"address","indexed":true}],"type":"event","name":"Upgraded","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"vftManager","type":"bytes32","indexed":false}],"type":"event","name":"VftManagerAdded","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"PAUSER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"bridgingPayments","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"uint256","name":"offset","type":"uint256"},{"internalType":"uint256","name":"limit","type":"uint256"}],"stateMutability":"view","type":"function","name":"bridgingPayments","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"uint256","name":"fee","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createBridgingPayment","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"stateMutability":"view","type":"function","name":"getTokenType","outputs":[{"internalType":"enum IERC20Manager.TokenType","name":"","type":"uint8"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"governanceAdmin","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"governancePauser","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"grantRole"},{"inputs":[{"internalType":"bytes32","name":"source","type":"bytes32"},{"internalType":"bytes","name":"payload","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"handleMessage"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"contract IGovernance","name":"governanceAdmin_","type":"address"},{"internalType":"contract IGovernance","name":"governancePauser_","type":"address"},{"internalType":"address","name":"messageQueue_","type":"address"},{"internalType":"bytes32","name":"vftManager","type":"bytes32"},{"internalType":"struct IERC20Manager.TokenInfo[]","name":"tokens_","type":"tuple[]","components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"enum IERC20Manager.TokenType","name":"tokenType","type":"uint8"}]}],"stateMutability":"nonpayable","type":"function","name":"initialize"},{"inputs":[{"internalType":"address","name":"bridgingPayment","type":"address"}],"stateMutability":"view","type":"function","name":"isBridgingPayment","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"bytes32","name":"vftManager","type":"bytes32"}],"stateMutability":"view","type":"function","name":"isVftManager","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"messageQueue","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"pause"},{"inputs":[],"stateMutability":"view","type":"function","name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"renounceRole"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes32","name":"to","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"requestBridging"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes32","name":"to","type":"bytes32"},{"internalType":"address","name":"bridgingPayment","type":"address"}],"stateMutability":"payable","type":"function","name":"requestBridgingPayingFee"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes32","name":"to","type":"bytes32"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"address","name":"bridgingPayment","type":"address"}],"stateMutability":"payable","type":"function","name":"requestBridgingPayingFeeWithPermit"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes32","name":"to","type":"bytes32"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"requestBridgingWithPermit"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"revokeRole"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"stateMutability":"view","type":"function","name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"offset","type":"uint256"},{"internalType":"uint256","name":"limit","type":"uint256"}],"stateMutability":"view","type":"function","name":"tokens","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"tokens","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"totalBridgingPayments","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"totalTokens","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"totalVftManagers","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"unpause"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"payable","type":"function","name":"upgradeToAndCall"},{"inputs":[],"stateMutability":"view","type":"function","name":"vftManagers","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]},{"inputs":[{"internalType":"uint256","name":"offset","type":"uint256"},{"internalType":"uint256","name":"limit","type":"uint256"}],"stateMutability":"view","type":"function","name":"vftManagers","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]}],"devdoc":{"kind":"dev","methods":{"bridgingPayments()":{"details":"Returns list of bridging payments.","returns":{"_0":"bridgingPayments List of bridging payments."}},"bridgingPayments(uint256,uint256)":{"details":"Returns list of bridging payments.","params":{"limit":"Maximum number of bridging payments to return.","offset":"Offset of the first bridging payment to return."},"returns":{"_0":"bridgingPayments List of bridging payments."}},"constructor":{"custom:oz-upgrades-unsafe-allow":"constructor"},"createBridgingPayment(uint256)":{"details":"Creates a new `BridgingPayment` contract (ERC20Manager is factory).      Emits `BridgingPaymentCreated` event.","params":{"fee":"Fee amount in wei."},"returns":{"_0":"bridgingPaymentAddress Address of the created `bridgingPayment` contract."}},"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"getTokenType(address)":{"details":"Returns token type.","params":{"token":"Token address."},"returns":{"_0":"tokenType Token type. Returns `TokenType.Unknown` if token is not registered."}},"governanceAdmin()":{"details":"Returns governance admin address.","returns":{"_0":"governanceAdmin Governance admin address."}},"governancePauser()":{"details":"Returns governance pauser address.","returns":{"_0":"governancePauser Governance pauser address."}},"grantRole(bytes32,address)":{"details":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."},"handleMessage(bytes32,bytes)":{"details":"Handles message originated from Vara Network.","params":{"payload":"Payload of the message (message from Vara Network).","source":"Source of the message (`ActorId` from Vara Network)."}},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"initialize(address,address,address,bytes32,(address,uint8)[])":{"details":"Initializes the ERC20Manager contract with the message queue and VFT manager addresses.      GovernanceAdmin contract is used to upgrade, pause/unpause the ERC20Manager contract.      GovernancePauser contract is used to pause/unpause the ERC20Manager contract.","params":{"governanceAdmin_":"The address of the GovernanceAdmin contract that will process messages.","governancePauser_":"The address of the GovernanceAdmin contract that will process pauser messages.","messageQueue_":"The address of the message queue contract.","tokens_":"The tokens that will be registered.","vftManager":"The address of the VFT manager contract (on Vara Network)."}},"isBridgingPayment(address)":{"details":"Returns whether the bridging payment is registered.","params":{"bridgingPayment":"Bridging payment address."},"returns":{"_0":"isBridgingPayment `true` if the bridging payment is registered, `false` otherwise."}},"isVftManager(bytes32)":{"details":"Returns whether the VFT manager is registered.","params":{"vftManager":"VFT manager address."},"returns":{"_0":"isVftManager `true` if the VFT manager is registered, `false` otherwise."}},"messageQueue()":{"details":"Returns message queue address.","returns":{"_0":"messageQueue Message queue address."}},"pause()":{"details":"Pauses the contract."},"paused()":{"details":"Returns true if the contract is paused, and false otherwise."},"proxiableUUID()":{"details":"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."},"requestBridging(address,uint256,bytes32)":{"details":"Requests bridging of tokens.      Emits `BridgingRequested` event.Reverts if token is not registered with `InvalidTokenType` error.","params":{"amount":"Amount of tokens to bridge.","to":"Destination address.","token":"Token address."}},"requestBridgingPayingFee(address,uint256,bytes32,address)":{"details":"Requests bridging of tokens and pays fee to one of the `bridgingPayment` contracts.","params":{"amount":"Amount of tokens to bridge.","bridgingPayment":"Bridging payment address.","to":"Destination address.","token":"Token address."}},"requestBridgingPayingFeeWithPermit(address,uint256,bytes32,uint256,uint8,bytes32,bytes32,address)":{"details":"Requests bridging of tokens and pays fee to one of the `bridgingPayment` contracts.      This function uses `permit` to approve spending of tokens to optimize gas costs.      (If token supports `permit` function).","params":{"amount":"Amount of tokens to bridge.","bridgingPayment":"Bridging payment address.","deadline":"Deadline for the transaction to be executed.","r":"ECDSA signature parameter.","s":"ECDSA signature parameter.","to":"Destination address.","token":"Token address.","v":"ECDSA signature parameter."}},"requestBridgingWithPermit(address,uint256,bytes32,uint256,uint8,bytes32,bytes32)":{"details":"Requests bridging of tokens.      This function uses `permit` to approve spending of tokens to optimize gas costs.      (If token supports `permit` function).","params":{"amount":"Amount of tokens to bridge.","deadline":"Deadline for the transaction to be executed.","r":"ECDSA signature parameter.","s":"ECDSA signature parameter.","to":"Destination address.","token":"Token address.","v":"ECDSA signature parameter."}},"revokeRole(bytes32,address)":{"details":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"tokens()":{"details":"Returns list of tokens.","returns":{"_0":"tokens List of tokens."}},"tokens(uint256,uint256)":{"details":"Returns list of tokens.","params":{"limit":"Maximum number of tokens to return.","offset":"Offset of the first token to return."},"returns":{"_0":"tokens List of tokens."}},"totalBridgingPayments()":{"details":"Returns total number of bridging payments.","returns":{"_0":"totalBridgingPayments Total number of bridging payments."}},"totalTokens()":{"details":"Returns total number of tokens.","returns":{"_0":"totalTokens Total number of tokens."}},"totalVftManagers()":{"details":"Returns total number of VFT managers.","returns":{"_0":"totalVftManagers Total number of VFT managers."}},"unpause()":{"details":"Unpauses the contract."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."},"vftManagers()":{"details":"Returns list of VFT managers.","returns":{"_0":"vftManagers List of VFT managers."}},"vftManagers(uint256,uint256)":{"details":"Returns list of VFT managers.","params":{"limit":"Maximum number of VFT managers to return.","offset":"Offset of the first VFT manager to return."},"returns":{"_0":"vftManagers List of VFT managers."}}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/","script/=script/","src/=src/","test/=test/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"none","appendCBOR":false},"compilationTarget":{"src/ERC20Manager.sol":"ERC20Manager"},"evmVersion":"prague","libraries":{},"viaIR":true},"sources":{"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol":{"keccak256":"0x85a70e2b1b65e9ba456add364d22b97eb9944083df1c39c0b4bd6a4b5aa386a4","urls":["bzz-raw://d32a33be6ca4d8e89b9e82e3f9cec7a6c4e040534152313ff55da85b8f193059","dweb:/ipfs/QmeR55L8t2A8xZ1nvT5y4yVWfFbbmpaGAtGBMz3GGNpuyP"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol":{"keccak256":"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05","urls":["bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08","dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol":{"keccak256":"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63","urls":["bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec","dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol":{"keccak256":"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397","urls":["bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9","dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol":{"keccak256":"0xa6bf6b7efe0e6625a9dcd30c5ddf52c4c24fe8372f37c7de9dbf5034746768d5","urls":["bzz-raw://8c353ee3705bbf6fadb84c0fb10ef1b736e8ca3ca1867814349d1487ed207beb","dweb:/ipfs/QmcugaPssrzGGE8q4YZKm2ZhnD3kCijjcgdWWg76nWt3FY"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol":{"keccak256":"0x6694b63ddb2c59bbe341c846171798350e8f72fa02189fcdeaca864e28b54e1f","urls":["bzz-raw://7d945d33e2189ac4e531e4ed228f59ca957b3898c4f9051f4b8c7ae44d72b23a","dweb:/ipfs/QmRcEwubTe3xyXxthijs5fVzEgUFSxeddjd5PGfhBnkunX"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol":{"keccak256":"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c","urls":["bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d","dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/access/Ownable.sol":{"keccak256":"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb","urls":["bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6","dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol":{"keccak256":"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d","urls":["bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100","dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol":{"keccak256":"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc","urls":["bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037","dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol":{"keccak256":"0xbf2aefe54b76d7f7bcd4f6da1080b7b1662611937d870b880db584d09cea56b5","urls":["bzz-raw://f5e7e2f12e0feec75296e57f51f82fdaa8bd1551f4b8cc6560442c0bf60f818c","dweb:/ipfs/QmcW9wDMaQ8RbQibMarfp17a3bABzY5KraWe2YDwuUrUoz"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol":{"keccak256":"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44","urls":["bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d","dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol":{"keccak256":"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee","urls":["bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae","dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol":{"keccak256":"0x82f757819bf2429a0d4db141b99a4bbe5039e4ef86dfb94e2e6d40577ed5b28b","urls":["bzz-raw://37c30ed931e19fb71fdb806bb504cfdb9913b7127545001b64d4487783374422","dweb:/ipfs/QmUBHpv4hm3ZmwJ4GH8BeVzK4mv41Q6vBbWXxn8HExPXza"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol":{"keccak256":"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e","urls":["bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23","dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol":{"keccak256":"0xa1ad192cd45317c788618bef5cb1fb3ca4ce8b230f6433ac68cc1d850fb81618","urls":["bzz-raw://b43447bb85a53679d269a403c693b9d88d6c74177dfb35eddca63abaf7cf110a","dweb:/ipfs/QmXSDmpd4bNZj1PDgegr6C4w1jDaWHXCconC3rYiw9TSkQ"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol":{"keccak256":"0x20462ddb2665e9521372c76b001d0ce196e59dbbd989de9af5576cad0bd5628b","urls":["bzz-raw://f417fd12aeec8fbfaceaa30e3a08a0724c0bc39de363e2acf6773c897abbaf6d","dweb:/ipfs/QmU4Hko6sApdweVM92CsiuLKkCk8HfyBeutF89PCTz5Tye"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol":{"keccak256":"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994","urls":["bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c","dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"keccak256":"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2","urls":["bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303","dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"keccak256":"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073","urls":["bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26","dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol":{"keccak256":"0xecd08ad8132d88a5fcfd50f76a18583004fcdab4c33fb86343903ae420ca5a2b","urls":["bzz-raw://02422dce2e5305624e5cec644add1baa44bfa98ea131bf6030069089a2f56ca4","dweb:/ipfs/QmcsSUkX7AYXNZE18LYE6JEmv8zZcCZvKfbUm9cSzNQyNo"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"keccak256":"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f","urls":["bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e","dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol":{"keccak256":"0x2fa0657dd7b8bc75475a47f64bc04a9adb42236b15d65e6781594ea69a46c3e4","urls":["bzz-raw://7496f42681aed94bf0142a077324e50b86046610c1724e7c12e96cf1c365914a","dweb:/ipfs/QmZvhNdSAAbN4PKPdheAqwpXukUiXp3Q3TdQccDMg2NDTV"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol":{"keccak256":"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5","urls":["bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508","dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Address.sol":{"keccak256":"0x6d0ae6e206645341fd122d278c2cb643dea260c190531f2f3f6a0426e77b00c0","urls":["bzz-raw://032d1201d839435be2c85b72e33206b3ea980c569d6ebf7fa57d811ab580a82f","dweb:/ipfs/QmeqQjAtMvdZT2tG7zm39itcRJkuwu8AEReK6WRnLJ18DD"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Arrays.sol":{"keccak256":"0xa4b9958797e0e9cde82a090525e90f80d5745ba1c67ee72b488bd3087498a17e","urls":["bzz-raw://c9344f7c2f80322c2e76d9d89bed03fd12f3e011e74fde7cf24ea21bdd2abe2d","dweb:/ipfs/QmPMAjF5x2fHUAee2FKMZDBbFVrbZbPCr3a9KHLZaSn1zY"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Comparators.sol":{"keccak256":"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58","urls":["bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd","dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Context.sol":{"keccak256":"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2","urls":["bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12","dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Errors.sol":{"keccak256":"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123","urls":["bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf","dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Nonces.sol":{"keccak256":"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f","urls":["bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e","dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Panic.sol":{"keccak256":"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a","urls":["bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a","dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol":{"keccak256":"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402","urls":["bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35","dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/SlotDerivation.sol":{"keccak256":"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26","urls":["bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2","dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol":{"keccak256":"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97","urls":["bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b","dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Strings.sol":{"keccak256":"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4","urls":["bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e","dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol":{"keccak256":"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84","urls":["bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9","dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol":{"keccak256":"0x17fc4574e07105b0180ef61f1b3cacd1820a3d37f29a4af1018d0a253c6399b5","urls":["bzz-raw://be46b3e1362dbcadbbb45ec92cdea849dceccea3e2795237f00c123aeae44746","dweb:/ipfs/QmSpyB8mud6xKiZaQnVtEPrxtTHGtyBgjs1PCYk4f2gesd"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol":{"keccak256":"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631","urls":["bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59","dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol":{"keccak256":"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c","urls":["bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617","dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"keccak256":"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6","urls":["bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3","dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol":{"keccak256":"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54","urls":["bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8","dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol":{"keccak256":"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3","urls":["bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03","dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableMap.sol":{"keccak256":"0x5360739db087f427430f8566608e9267df704d96928337a3a3b3e5382925c57f","urls":["bzz-raw://ec939f4b4f68ca36961fd5ea7a417a6a390715173a6999254a2f0a34e9298503","dweb:/ipfs/QmVEE8fRTjXE9jQ5pyKrPSyb9FPPtaWwsqjCdcxaPvAWwW"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol":{"keccak256":"0x1fc283df727585919c3db301b948a3e827aee16917457ad7f916db9da2228e77","urls":["bzz-raw://a4f4b5e2cd0ebc3b74e41e4e94771a0417eedd9b11cec3ef9f90b2ac2989264b","dweb:/ipfs/QmZmsEsvsXiwAyAe1YeoLSKezeFcvR1giUeEY6ex4zpsTS"],"license":"MIT"},"src/BridgingPayment.sol":{"keccak256":"0xd5c65ab9d02fcf2a40b6cd1256e6583c7c5662de33b5f1877872dbed0b0e7a68","urls":["bzz-raw://7bc3e3f89a6a2727e241b75c1c4013d42953a4ef6c0354a5eda6a31eef17c461","dweb:/ipfs/QmWhdZ4aqCQLsZfDTjLuuLJcEVPkU4pYoWnQKfusP56uq7"],"license":"GPL-3.0-or-later WITH Classpath-exception-2.0"},"src/ERC20Manager.sol":{"keccak256":"0x3b3c6b581d7792321958594ce318392b8641928f6b26ee1d42ba41ae24d30d6d","urls":["bzz-raw://b762dd184795c135542d578f65aa301207ee79e72ecb11f8f1f80a6796015c2a","dweb:/ipfs/QmZn6v3dP4uHodAw8oYbSCULuxxXTRUK9uYL8rRqEchzvy"],"license":"GPL-3.0-or-later WITH Classpath-exception-2.0"},"src/erc20/managed/ERC20GearSupply.sol":{"keccak256":"0x6ad52d44ec0f4046c7f95dd09c8631eb5cbd143002afc4f40a80cfc30d7376fa","urls":["bzz-raw://26d6133c05182bcc243c5456f804996c69df2e7ac9823e5ee4903e75a281544d","dweb:/ipfs/QmTBpyydKBroMgsDCXFaya8voCa2vMwnNnnMJY8UgnsNzi"],"license":"GPL-3.0-or-later WITH Classpath-exception-2.0"},"src/interfaces/IBridgingPayment.sol":{"keccak256":"0x2f684254e88b3c2a3ff05d46215638c8e49c466276f64eaf859abe0f92061f14","urls":["bzz-raw://c6e10baef4ee82e28de434475d482aba977537b5172e7efe5dcbfeeea971ecbc","dweb:/ipfs/QmNWBU8jgsLopi74ifQtru2rdH8NPnyGwcRUan8XEF6yuw"],"license":"GPL-3.0-or-later WITH Classpath-exception-2.0"},"src/interfaces/IERC20Burnable.sol":{"keccak256":"0xc253b41ffd65d67ee910c1e31e160d73da8c1aada6df8726bc56f956c026c30c","urls":["bzz-raw://e7151050bd7cf3e932ab8ebc987e92aa3fd84174b2e45c45c93514a7ee502290","dweb:/ipfs/QmWnXkkbGd6SRXVMSbm8X68sjvZbjzt2AyfJRTWf3oon8G"],"license":"GPL-3.0-or-later WITH Classpath-exception-2.0"},"src/interfaces/IERC20Manager.sol":{"keccak256":"0x24d974e7e5aff76652b3855ff17f860fe173ac76908cd845470f53262fa9644f","urls":["bzz-raw://dfb3c7de466c9f26c9ef7986a14e624646941bc3c8d85f614077e3e8f2273f73","dweb:/ipfs/QmTTr2DBw9f3Z3wcwBghHxHbvaHYwF3E6B6qWQg3xcdTLq"],"license":"GPL-3.0-or-later WITH Classpath-exception-2.0"},"src/interfaces/IERC20Mintable.sol":{"keccak256":"0x7609574cac9fa09aae395cb9ad301adbfdfd6aabffb78d88058bae6feb7c3f30","urls":["bzz-raw://7a423d8d3a9b2b66697ebf071003e3dfa2b42c6943ec4f0a42cc1e7b16095cd6","dweb:/ipfs/Qmb22mBG2GF74iRuQQ9oyKBGk92m67gNZWe7BGdqaBJLoU"],"license":"GPL-3.0-or-later WITH Classpath-exception-2.0"},"src/interfaces/IGovernance.sol":{"keccak256":"0xb880d19a426558ef89a3f4a5ea000a7d8ba0bb402963bbdb6961cb6ddf4afe66","urls":["bzz-raw://7ce0a7c7319f0337d1af8af13000f93399c4f99ab649d2eb7fab4fc327e4b2a2","dweb:/ipfs/QmXi8cHWd7yqeB2ur1tVe65jCKgzA3JeJtr5cswszthqsu"],"license":"GPL-3.0-or-later WITH Classpath-exception-2.0"},"src/interfaces/IMessageHandler.sol":{"keccak256":"0xdd5b8224c958a8275b4ea8478d3cf027facb032997a3cafa4c400cd8d231fdb9","urls":["bzz-raw://a5cf746eef9be910603ae0020c64cec73c687d3c657b3fbe916c6f99968b85e8","dweb:/ipfs/QmTM3Pwf8PaH8PMRTtho78NQVbXbrm6pRsvbGN7TMDPNAq"],"license":"GPL-3.0-or-later WITH Classpath-exception-2.0"},"src/interfaces/IPausable.sol":{"keccak256":"0x6d3c910562c9049a3a8e59d148623d37b546b6557563c8c202305864703f4394","urls":["bzz-raw://6e907b1040394cf61f68f7cedc3ce7f0572fb0efa1803afee6e266b83c0f8298","dweb:/ipfs/QmeWZWAJN3m9yA7fWWAyuEzwTxvVfW5yRPbZmZMixGUoZq"],"license":"GPL-3.0-or-later WITH Classpath-exception-2.0"},"src/libraries/CustomEnumerableMap.sol":{"keccak256":"0x5c4599d4895fad58491d98a5dcf9d7815091ab6947e357caf5ee10c4ddf95870","urls":["bzz-raw://40a9d62502c06c69e7585fae32dd251712203d329827a7df46e960d50980f040","dweb:/ipfs/QmbqZNdLgpnutNNBDXhtmYRfBVenTbyKiuTGHsi8inxWwK"],"license":"GPL-3.0-or-later WITH Classpath-exception-2.0"},"src/libraries/LibString.sol":{"keccak256":"0x07220b10cbf3f3613e3189101d9728f5d956d0099a7c709567f24d4482c1054f","urls":["bzz-raw://83cf5cb746e20db1424902742b9257c6806cd84eb60a24710b83a115135da130","dweb:/ipfs/Qma5vmqxfeeXWpxfjzHBJxe8kDE6JjmjzBrTkqj9YKGyd9"],"license":"GPL-3.0-or-later WITH Classpath-exception-2.0"}},"version":1},"storageLayout":{"storage":[{"astId":60255,"contract":"src/ERC20Manager.sol:ERC20Manager","label":"_governanceAdmin","offset":0,"slot":"0","type":"t_contract(IGovernance)63739"},{"astId":60258,"contract":"src/ERC20Manager.sol:ERC20Manager","label":"_governancePauser","offset":0,"slot":"1","type":"t_contract(IGovernance)63739"},{"astId":60260,"contract":"src/ERC20Manager.sol:ERC20Manager","label":"_messageQueue","offset":0,"slot":"2","type":"t_address"},{"astId":60263,"contract":"src/ERC20Manager.sol:ERC20Manager","label":"_vftManagers","offset":0,"slot":"3","type":"t_struct(Bytes32Set)54148_storage"},{"astId":60266,"contract":"src/ERC20Manager.sol:ERC20Manager","label":"_tokens","offset":0,"slot":"5","type":"t_struct(AddressToTokenTypeMap)64505_storage"},{"astId":60269,"contract":"src/ERC20Manager.sol:ERC20Manager","label":"_bridgingPayments","offset":0,"slot":"8","type":"t_struct(AddressSet)54318_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_bytes32)dyn_storage":{"encoding":"dynamic_array","label":"bytes32[]","numberOfBytes":"32","base":"t_bytes32"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_contract(IGovernance)63739":{"encoding":"inplace","label":"contract IGovernance","numberOfBytes":"20"},"t_mapping(t_bytes32,t_bytes32)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => bytes32)","numberOfBytes":"32","value":"t_bytes32"},"t_mapping(t_bytes32,t_uint256)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_struct(AddressSet)54318_storage":{"encoding":"inplace","label":"struct EnumerableSet.AddressSet","numberOfBytes":"64","members":[{"astId":54317,"contract":"src/ERC20Manager.sol:ERC20Manager","label":"_inner","offset":0,"slot":"0","type":"t_struct(Set)53832_storage"}]},"t_struct(AddressToTokenTypeMap)64505_storage":{"encoding":"inplace","label":"struct CustomEnumerableMap.AddressToTokenTypeMap","numberOfBytes":"96","members":[{"astId":64504,"contract":"src/ERC20Manager.sol:ERC20Manager","label":"_inner","offset":0,"slot":"0","type":"t_struct(Bytes32ToBytes32Map)51073_storage"}]},"t_struct(Bytes32Set)54148_storage":{"encoding":"inplace","label":"struct EnumerableSet.Bytes32Set","numberOfBytes":"64","members":[{"astId":54147,"contract":"src/ERC20Manager.sol:ERC20Manager","label":"_inner","offset":0,"slot":"0","type":"t_struct(Set)53832_storage"}]},"t_struct(Bytes32ToBytes32Map)51073_storage":{"encoding":"inplace","label":"struct EnumerableMap.Bytes32ToBytes32Map","numberOfBytes":"96","members":[{"astId":51068,"contract":"src/ERC20Manager.sol:ERC20Manager","label":"_keys","offset":0,"slot":"0","type":"t_struct(Bytes32Set)54148_storage"},{"astId":51072,"contract":"src/ERC20Manager.sol:ERC20Manager","label":"_values","offset":0,"slot":"2","type":"t_mapping(t_bytes32,t_bytes32)"}]},"t_struct(Set)53832_storage":{"encoding":"inplace","label":"struct EnumerableSet.Set","numberOfBytes":"64","members":[{"astId":53827,"contract":"src/ERC20Manager.sol:ERC20Manager","label":"_values","offset":0,"slot":"0","type":"t_array(t_bytes32)dyn_storage"},{"astId":53831,"contract":"src/ERC20Manager.sol:ERC20Manager","label":"_positions","offset":0,"slot":"1","type":"t_mapping(t_bytes32,t_uint256)"}]},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"irOptimized":"/// @use-src 20:\"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol\", 22:\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\", 23:\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\", 24:\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\", 25:\"lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol\", 26:\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\", 27:\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\", 34:\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\", 66:\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\", 85:\"src/ERC20Manager.sol\", 97:\"src/interfaces/IERC20Manager.sol\", 100:\"src/interfaces/IMessageHandler.sol\", 103:\"src/interfaces/IPausable.sol\"\nobject \"ERC20Manager_61385\" {\n    code {\n        {\n            /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n            let _1 := memoryguard(0xa0)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            /// @src 23:1163:1176  \"address(this)\"\n            mstore(128, /** @src 23:1171:1175  \"this\" */ address())\n            /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n            let _2 := sload(/** @src 22:3147:3213  \"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\" */ 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00)\n            /// @src 22:7894:7970  \"if ($._initializing) {...\"\n            if /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ and(shr(64, _2), 0xff)\n            /// @src 22:7894:7970  \"if ($._initializing) {...\"\n            {\n                /// @src 22:7936:7959  \"InvalidInitialization()\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 22:7936:7959  \"InvalidInitialization()\" */ shl(224, 0xf92ee8a9))\n                revert(/** @src -1:-1:-1 */ 0, /** @src 22:7936:7959  \"InvalidInitialization()\" */ 4)\n            }\n            /// @src 22:7979:8125  \"if ($._initialized != type(uint64).max) {...\"\n            if /** @src 22:7983:8017  \"$._initialized != type(uint64).max\" */ iszero(eq(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ and(_2, sub(shl(64, 1), 1)), sub(shl(64, 1), 1)))\n            /// @src 22:7979:8125  \"if ($._initialized != type(uint64).max) {...\"\n            {\n                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                sstore(/** @src 22:3147:3213  \"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\" */ 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ or(and(_2, not(sub(shl(64, 1), 1))), sub(shl(64, 1), 1)))\n                mstore(_1, sub(shl(64, 1), 1))\n                /// @src 22:8085:8114  \"Initialized(type(uint64).max)\"\n                log1(_1, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 32, /** @src 22:8085:8114  \"Initialized(type(uint64).max)\" */ 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2)\n            }\n            /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n            let _3 := mload(64)\n            let _4 := datasize(\"ERC20Manager_61385_deployed\")\n            codecopy(_3, dataoffset(\"ERC20Manager_61385_deployed\"), _4)\n            setimmutable(_3, \"40546\", mload(/** @src 23:1163:1176  \"address(this)\" */ 128))\n            /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n            return(_3, _4)\n        }\n    }\n    /// @use-src 20:\"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol\", 22:\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\", 23:\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\", 24:\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\", 25:\"lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol\", 26:\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\", 37:\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\", 50:\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\", 51:\"lib/openzeppelin-contracts/contracts/utils/Address.sol\", 60:\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\", 70:\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableMap.sol\", 71:\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\", 85:\"src/ERC20Manager.sol\", 109:\"src/libraries/CustomEnumerableMap.sol\", 110:\"src/libraries/LibString.sol\"\n    object \"ERC20Manager_61385_deployed\" {\n        code {\n            {\n                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _2 := 0\n                    switch shr(224, calldataload(0))\n                    case 0x0058f6b8 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        mstore(_1, and(sload(0), sub(shl(160, 1), 1)))\n                        return(_1, 32)\n                    }\n                    case 0x01ffc9a7 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value := calldataload(4)\n                        let _3 := and(value, shl(224, 0xffffffff))\n                        if iszero(eq(value, _3)) { revert(0, 0) }\n                        /// @src 20:3599:3686  \"interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId)\"\n                        let expr := /** @src 20:3599:3646  \"interfaceId == type(IAccessControl).interfaceId\" */ eq(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _3, /** @src 20:3614:3646  \"type(IAccessControl).interfaceId\" */ shl(224, 0x7965db0b))\n                        /// @src 20:3599:3686  \"interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId)\"\n                        if iszero(expr)\n                        {\n                            expr := /** @src 26:1101:1141  \"interfaceId == type(IERC165).interfaceId\" */ eq(_3, /** @src 26:1116:1141  \"type(IERC165).interfaceId\" */ shl(224, 0x01ffc9a7))\n                        }\n                        /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                        let memPos := mload(64)\n                        mstore(memPos, iszero(iszero(expr)))\n                        return(memPos, 32)\n                    }\n                    case 0x0c9d9b97 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        /// @src 85:12407:12457  \"return _bridgingPayments.contains(bridgingPayment)\"\n                        let var := /** @src 71:12473:12528  \"_contains(set._inner, bytes32(uint256(uint160(value))))\" */ fun_contains(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ and(abi_decode_t_address(), sub(shl(160, 1), 1)))\n                        let memPos_1 := mload(64)\n                        mstore(memPos_1, iszero(iszero(var)))\n                        return(memPos_1, 32)\n                    }\n                    case 0x109ec2e7 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let pos := mload(64)\n                        let memPtr := pos\n                        let length := sload(/** @src 85:11320:11337  \"_bridgingPayments\" */ 0x08)\n                        /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                        mstore(pos, length)\n                        pos := add(pos, 0x20)\n                        mstore(0, /** @src 85:11320:11337  \"_bridgingPayments\" */ 0x08)\n                        /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                        let srcPtr := 110349606679412691172957834289542550319383271247755660854362242977991410020067\n                        let i := 0\n                        for { } lt(i, length) { i := add(i, 1) }\n                        {\n                            mstore(pos, sload(srcPtr))\n                            pos := add(pos, 0x20)\n                            srcPtr := add(srcPtr, 1)\n                        }\n                        finalize_allocation(memPtr, sub(pos, memPtr))\n                        let memPos_2 := mload(64)\n                        return(memPos_2, sub(abi_encode_array_address_dyn(memPos_2, memPtr), memPos_2))\n                    }\n                    case 0x1e324b52 {\n                        if slt(add(calldatasize(), not(3)), 128) { revert(0, 0) }\n                        let value0 := abi_decode_t_address()\n                        let value_1 := calldataload(36)\n                        let value_2 := 0\n                        value_2 := calldataload(100)\n                        let _4 := and(value_2, sub(shl(160, 1), 1))\n                        if iszero(eq(value_2, _4)) { revert(0, 0) }\n                        /// @src 25:1944:2016  \"modifier whenNotPaused() {...\"\n                        fun_requireNotPaused()\n                        /// @src 85:15276:15382  \"if (!_bridgingPayments.contains(bridgingPayment)) {...\"\n                        if /** @src 85:15280:15324  \"!_bridgingPayments.contains(bridgingPayment)\" */ iszero(/** @src 71:12473:12528  \"_contains(set._inner, bytes32(uint256(uint160(value))))\" */ fun_contains(/** @src 71:12495:12527  \"bytes32(uint256(uint160(value)))\" */ _4))\n                        /// @src 85:15276:15382  \"if (!_bridgingPayments.contains(bridgingPayment)) {...\"\n                        {\n                            /// @src 85:15347:15371  \"InvalidBridgingPayment()\"\n                            mstore(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0, /** @src 85:15347:15371  \"InvalidBridgingPayment()\" */ shl(227, 0x1e37e195))\n                            revert(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0, 4)\n                        }\n                        /// @src 85:15392:15452  \"IBridgingPayment(bridgingPayment).payFee{value: msg.value}()\"\n                        if iszero(extcodesize(_4))\n                        {\n                            /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                            revert(0, 0)\n                        }\n                        /// @src 85:15392:15452  \"IBridgingPayment(bridgingPayment).payFee{value: msg.value}()\"\n                        let _5 := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ mload(64)\n                        /// @src 85:15392:15452  \"IBridgingPayment(bridgingPayment).payFee{value: msg.value}()\"\n                        mstore(_5, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ shl(225, 0x14b08129))\n                        /// @src 85:15392:15452  \"IBridgingPayment(bridgingPayment).payFee{value: msg.value}()\"\n                        let _6 := call(gas(), _4, /** @src 85:15440:15449  \"msg.value\" */ callvalue(), /** @src 85:15392:15452  \"IBridgingPayment(bridgingPayment).payFee{value: msg.value}()\" */ _5, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 4, /** @src 85:15392:15452  \"IBridgingPayment(bridgingPayment).payFee{value: msg.value}()\" */ _5, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0)\n                        /// @src 85:15392:15452  \"IBridgingPayment(bridgingPayment).payFee{value: msg.value}()\"\n                        if iszero(_6)\n                        {\n                            /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                            let pos_1 := mload(64)\n                            returndatacopy(pos_1, 0, returndatasize())\n                            revert(pos_1, returndatasize())\n                        }\n                        /// @src 85:15392:15452  \"IBridgingPayment(bridgingPayment).payFee{value: msg.value}()\"\n                        if _6\n                        {\n                            finalize_allocation(_5, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0)\n                            _2 := 0\n                        }\n                        /// @src 25:1944:2016  \"modifier whenNotPaused() {...\"\n                        fun_requireNotPaused()\n                        /// @src 85:14276:14340  \"if (amount == 0) {...\"\n                        if /** @src 85:14280:14291  \"amount == 0\" */ iszero(value_1)\n                        /// @src 85:14276:14340  \"if (amount == 0) {...\"\n                        {\n                            /// @src 85:14314:14329  \"InvalidAmount()\"\n                            mstore(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2, /** @src 85:14314:14329  \"InvalidAmount()\" */ shl(225, 0x162908e3))\n                            revert(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2, 4)\n                        }\n                        /// @src 85:14376:14397  \"_tokens.tryGet(token)\"\n                        let expr_component, expr_component_1 := fun_tryGet_23025(value0)\n                        /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                        let _7 := iszero(lt(expr_component_1, 3))\n                        if _7\n                        {\n                            mstore(_2, shl(224, 0x4e487b71))\n                            mstore(4, 0x21)\n                            revert(_2, 36)\n                        }\n                        /// @src 85:14408:14741  \"if (tokenType == TokenType.Unknown) {...\"\n                        switch /** @src 85:14412:14442  \"tokenType == TokenType.Unknown\" */ iszero(expr_component_1)\n                        case /** @src 85:14408:14741  \"if (tokenType == TokenType.Unknown) {...\" */ 0 {\n                            /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                            _7 := /** @src -1:-1:-1 */ _2\n                            /// @src 85:14500:14741  \"if (tokenType == TokenType.Ethereum) {...\"\n                            switch /** @src 85:14504:14535  \"tokenType == TokenType.Ethereum\" */ eq(expr_component_1, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 1)\n                            case /** @src 85:14500:14741  \"if (tokenType == TokenType.Ethereum) {...\" */ 0 {\n                                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                                _7 := /** @src -1:-1:-1 */ _2\n                                /// @src 85:14633:14741  \"if (tokenType == TokenType.Gear) {...\"\n                                if /** @src 85:14637:14664  \"tokenType == TokenType.Gear\" */ eq(expr_component_1, /** @src 85:14650:14664  \"TokenType.Gear\" */ 2)\n                                /// @src 85:14633:14741  \"if (tokenType == TokenType.Gear) {...\"\n                                {\n                                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                                    let _8 := and(/** @src 85:14680:14701  \"IERC20Burnable(token)\" */ value0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1))\n                                    /// @src 85:14680:14730  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    if iszero(extcodesize(_8))\n                                    {\n                                        /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                                        revert(_2, _2)\n                                    }\n                                    /// @src 85:14680:14730  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    let _9 := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ mload(64)\n                                    /// @src 85:14680:14730  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    mstore(_9, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ shl(228, 0x079cc679))\n                                    /// @src 85:14680:14730  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    let _10 := call(gas(), _8, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2, /** @src 85:14680:14730  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\" */ _9, sub(abi_encode_address_uint256(add(_9, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 4), /** @src 85:14711:14721  \"msg.sender\" */ caller(), /** @src 85:14680:14730  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\" */ value_1), _9), _9, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2)\n                                    /// @src 85:14680:14730  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    if iszero(_10)\n                                    {\n                                        /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                                        let pos_2 := mload(64)\n                                        returndatacopy(pos_2, _2, returndatasize())\n                                        revert(pos_2, returndatasize())\n                                    }\n                                    /// @src 85:14680:14730  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    if _10\n                                    {\n                                        finalize_allocation(_9, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2)\n                                        if _2 { revert(_2, _2) }\n                                    }\n                                }\n                            }\n                            default /// @src 85:14500:14741  \"if (tokenType == TokenType.Ethereum) {...\"\n                            {\n                                /// @src 50:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                                let expr_mpos := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ mload(64)\n                                /// @src 50:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                                mstore(add(expr_mpos, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 32), shl(224, 0x23b872dd))\n                                mstore(/** @src 50:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\" */ add(expr_mpos, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 36), /** @src 85:14582:14592  \"msg.sender\" */ caller())\n                                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                                mstore(add(/** @src 50:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\" */ expr_mpos, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 68), /** @src 85:14602:14606  \"this\" */ address())\n                                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                                mstore(add(/** @src 50:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\" */ expr_mpos, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 100), value_1)\n                                /// @src 50:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                                mstore(expr_mpos, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 100)\n                                /// @src 50:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                                finalize_allocation(expr_mpos, 132)\n                                fun_callOptionalReturn(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ and(/** @src 85:14551:14564  \"IERC20(token)\" */ value0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)), /** @src 50:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\" */ expr_mpos)\n                            }\n                        }\n                        default /// @src 85:14408:14741  \"if (tokenType == TokenType.Unknown) {...\"\n                        {\n                            /// @src 85:14465:14483  \"InvalidTokenType()\"\n                            mstore(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2, /** @src 85:14465:14483  \"InvalidTokenType()\" */ shl(224, 0xa1e9dd9d))\n                            revert(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2, 4)\n                        }\n                        /// @src 85:14756:14804  \"BridgingRequested(msg.sender, to, token, amount)\"\n                        let _11 := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ mload(64)\n                        mstore(_11, value_1)\n                        /// @src 85:14756:14804  \"BridgingRequested(msg.sender, to, token, amount)\"\n                        log4(_11, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 32, /** @src 85:14756:14804  \"BridgingRequested(msg.sender, to, token, amount)\" */ 0xf80de57fd7626baaff7d867494866703686569822c2326ae60b2515ede953c3a, /** @src 85:14774:14784  \"msg.sender\" */ caller(), /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ calldataload(68), and(/** @src 85:14756:14804  \"BridgingRequested(msg.sender, to, token, amount)\" */ value0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)))\n                        return(_2, _2)\n                    }\n                    case 0x240dfa95 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let length_1 := sload(/** @src 85:8592:8604  \"_vftManagers\" */ 0x03)\n                        /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                        let memPos_3 := mload(64)\n                        mstore(memPos_3, length_1)\n                        return(memPos_3, 32)\n                    }\n                    case 0x248a9ca3 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                        let ret := fun_getRoleAdmin(calldataload(4))\n                        let memPos_4 := mload(64)\n                        mstore(memPos_4, ret)\n                        return(memPos_4, 32)\n                    }\n                    case 0x2f2ff15d {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(_2, _2) }\n                        let value_3 := calldataload(4)\n                        let value1 := abi_decode_address()\n                        /// @src 20:3283:3287  \"role\"\n                        fun_checkRole(/** @src 20:5368:5386  \"getRoleAdmin(role)\" */ fun_getRoleAdmin(value_3))\n                        /// @src 20:5398:5423  \"_grantRole(role, account)\"\n                        pop(fun_grantRole_40016(value_3, value1))\n                        /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                        return(_2, _2)\n                    }\n                    case 0x302ac5d0 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(_2, _2) }\n                        let value_4 := calldataload(4)\n                        let offset := calldataload(36)\n                        if gt(offset, 0xffffffffffffffff) { revert(_2, _2) }\n                        if iszero(slt(add(offset, 35), calldatasize())) { revert(_2, _2) }\n                        let length_2 := calldataload(add(4, offset))\n                        if gt(length_2, 0xffffffffffffffff) { revert(_2, _2) }\n                        let arrayPos := add(offset, 36)\n                        if gt(add(add(offset, length_2), 36), calldatasize()) { revert(_2, _2) }\n                        /// @src 85:18558:18638  \"if (msg.sender != _messageQueue) {...\"\n                        if /** @src 85:18562:18589  \"msg.sender != _messageQueue\" */ iszero(eq(/** @src 85:18562:18572  \"msg.sender\" */ caller(), /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ and(sload(/** @src 85:18576:18589  \"_messageQueue\" */ 0x02), /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1))))\n                        /// @src 85:18558:18638  \"if (msg.sender != _messageQueue) {...\"\n                        {\n                            /// @src 85:18612:18627  \"InvalidSender()\"\n                            mstore(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2, /** @src 85:18612:18627  \"InvalidSender()\" */ shl(225, 0x6edaef2f))\n                            revert(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2, 4)\n                        }\n                        /// @src 85:18648:19045  \"if (_vftManagers.contains(source)) {...\"\n                        switch /** @src 71:8806:8834  \"_contains(set._inner, value)\" */ fun__contains(/** @src 85:18652:18681  \"_vftManagers.contains(source)\" */ value_4)\n                        case /** @src 85:18648:19045  \"if (_vftManagers.contains(source)) {...\" */ 0 {\n                            /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                            let cleaned := and(sload(_2), sub(shl(160, 1), 1))\n                            /// @src 85:18831:18860  \"_governanceAdmin.governance()\"\n                            let _12 := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ mload(64)\n                            /// @src 85:18831:18860  \"_governanceAdmin.governance()\"\n                            mstore(_12, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ shl(224, 0x5aa6e675))\n                            /// @src 85:18831:18860  \"_governanceAdmin.governance()\"\n                            let _13 := staticcall(gas(), cleaned, _12, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 4, /** @src 85:18831:18860  \"_governanceAdmin.governance()\" */ _12, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 32)\n                            /// @src 85:18831:18860  \"_governanceAdmin.governance()\"\n                            if iszero(_13)\n                            {\n                                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                                let pos_3 := mload(64)\n                                returndatacopy(pos_3, _2, returndatasize())\n                                revert(pos_3, returndatasize())\n                            }\n                            /// @src 85:18831:18860  \"_governanceAdmin.governance()\"\n                            let expr_1 := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2\n                            /// @src 85:18831:18860  \"_governanceAdmin.governance()\"\n                            if _13\n                            {\n                                let _14 := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 32\n                                /// @src 85:18831:18860  \"_governanceAdmin.governance()\"\n                                if gt(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 32, /** @src 85:18831:18860  \"_governanceAdmin.governance()\" */ returndatasize()) { _14 := returndatasize() }\n                                finalize_allocation(_12, _14)\n                                let value0_1 := /** @src -1:-1:-1 */ 0\n                                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                                if slt(sub(/** @src 85:18831:18860  \"_governanceAdmin.governance()\" */ add(_12, _14), _12), /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 32)\n                                {\n                                    revert(/** @src -1:-1:-1 */ 0, 0)\n                                }\n                                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                                value0_1 := mload(/** @src 85:18831:18860  \"_governanceAdmin.governance()\" */ _12)\n                                expr_1 := value0_1\n                            }\n                            /// @src 85:18817:19045  \"if (source == _governanceAdmin.governance()) {...\"\n                            switch /** @src 85:18821:18860  \"source == _governanceAdmin.governance()\" */ eq(value_4, expr_1)\n                            case /** @src 85:18817:19045  \"if (source == _governanceAdmin.governance()) {...\" */ 0 {\n                                /// @src 85:19019:19034  \"InvalidSource()\"\n                                mstore(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2, /** @src 85:19019:19034  \"InvalidSource()\" */ shl(224, 0x8154374b))\n                                revert(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2, 4)\n                            }\n                            default /// @src 85:18817:19045  \"if (source == _governanceAdmin.governance()) {...\"\n                            {\n                                /// @src 85:18876:18982  \"if (!_tryParseAndApplyGovernanceMessage(payload)) {...\"\n                                if /** @src 85:18880:18924  \"!_tryParseAndApplyGovernanceMessage(payload)\" */ iszero(/** @src 85:18881:18924  \"_tryParseAndApplyGovernanceMessage(payload)\" */ fun_tryParseAndApplyGovernanceMessage(arrayPos, length_2))\n                                /// @src 85:18876:18982  \"if (!_tryParseAndApplyGovernanceMessage(payload)) {...\"\n                                {\n                                    /// @src 85:18951:18967  \"InvalidPayload()\"\n                                    mstore(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2, /** @src 85:18951:18967  \"InvalidPayload()\" */ shl(224, 0x7c6953f9))\n                                    revert(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2, 4)\n                                }\n                            }\n                        }\n                        default /// @src 85:18648:19045  \"if (_vftManagers.contains(source)) {...\"\n                        {\n                            /// @src 85:18697:18801  \"if (!_tryParseAndApplyTransferMessage(payload)) {...\"\n                            if /** @src 85:18701:18743  \"!_tryParseAndApplyTransferMessage(payload)\" */ iszero(/** @src 85:18702:18743  \"_tryParseAndApplyTransferMessage(payload)\" */ fun_tryParseAndApplyTransferMessage(arrayPos, length_2))\n                            /// @src 85:18697:18801  \"if (!_tryParseAndApplyTransferMessage(payload)) {...\"\n                            {\n                                /// @src 85:18770:18786  \"InvalidPayload()\"\n                                mstore(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2, /** @src 85:18951:18967  \"InvalidPayload()\" */ shl(224, 0x7c6953f9))\n                                /// @src 85:18770:18786  \"InvalidPayload()\"\n                                revert(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2, 4)\n                            }\n                        }\n                        return(_2, _2)\n                    }\n                    case 0x36568abe {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(_2, _2) }\n                        let value1_1 := abi_decode_address()\n                        /// @src 20:6485:6587  \"if (callerConfirmation != _msgSender()) {...\"\n                        if /** @src 20:6489:6523  \"callerConfirmation != _msgSender()\" */ iszero(eq(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ and(/** @src 20:6489:6523  \"callerConfirmation != _msgSender()\" */ value1_1, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)), /** @src 24:966:976  \"msg.sender\" */ caller()))\n                        /// @src 20:6485:6587  \"if (callerConfirmation != _msgSender()) {...\"\n                        {\n                            /// @src 20:6546:6576  \"AccessControlBadConfirmation()\"\n                            mstore(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2, /** @src 20:6546:6576  \"AccessControlBadConfirmation()\" */ shl(225, 0x334bd919))\n                            revert(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2, 4)\n                        }\n                        /// @src 20:6597:6634  \"_revokeRole(role, callerConfirmation)\"\n                        pop(fun_revokeRole(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ calldataload(4), /** @src 20:6597:6634  \"_revokeRole(role, callerConfirmation)\" */ value1_1))\n                        /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                        return(_2, _2)\n                    }\n                    case 0x38ff319f {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                        /// @src 25:1944:2016  \"modifier whenNotPaused() {...\"\n                        fun_requireNotPaused()\n                        /// @src 85:17965:18016  \"new BridgingPayment(address(this), fee, msg.sender)\"\n                        let _15 := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ mload(64)\n                        /// @src 85:17965:18016  \"new BridgingPayment(address(this), fee, msg.sender)\"\n                        let _16 := datasize(\"BridgingPayment_60053\")\n                        let _17 := add(_15, _16)\n                        if or(gt(_17, 0xffffffffffffffff), lt(_17, _15))\n                        {\n                            /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                            mstore(_2, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(_2, 0x24)\n                        }\n                        /// @src 85:17965:18016  \"new BridgingPayment(address(this), fee, msg.sender)\"\n                        datacopy(_15, dataoffset(\"BridgingPayment_60053\"), _16)\n                        /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                        mstore(_17, /** @src 85:17993:17997  \"this\" */ address())\n                        /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                        mstore(add(_17, 32), calldataload(4))\n                        mstore(add(_17, 64), /** @src 85:18005:18015  \"msg.sender\" */ caller())\n                        /// @src 85:17965:18016  \"new BridgingPayment(address(this), fee, msg.sender)\"\n                        let expr_address := create(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2, /** @src 85:17965:18016  \"new BridgingPayment(address(this), fee, msg.sender)\" */ _15, add(sub(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _17, /** @src 85:17965:18016  \"new BridgingPayment(address(this), fee, msg.sender)\" */ _15), /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 96))\n                        /// @src 85:17965:18016  \"new BridgingPayment(address(this), fee, msg.sender)\"\n                        if iszero(expr_address)\n                        {\n                            /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                            let pos_4 := mload(64)\n                            returndatacopy(pos_4, _2, returndatasize())\n                            revert(pos_4, returndatasize())\n                        }\n                        let _18 := and(/** @src 85:18060:18084  \"address(bridgingPayment)\" */ expr_address, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1))\n                        /// @src 71:11511:11561  \"_add(set._inner, bytes32(uint256(uint160(value))))\"\n                        pop(fun__add(/** @src 71:11528:11560  \"bytes32(uint256(uint160(value)))\" */ _18))\n                        /// @src 85:18155:18201  \"BridgingPaymentCreated(bridgingPaymentAddress)\"\n                        let _19 := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ mload(64)\n                        mstore(_19, _18)\n                        /// @src 85:18155:18201  \"BridgingPaymentCreated(bridgingPaymentAddress)\"\n                        log1(_19, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 32, /** @src 85:18155:18201  \"BridgingPaymentCreated(bridgingPaymentAddress)\" */ 0x9d5f66d985a12f505753a5f6417ed3c4ec6e68963ee0119770dda415f0d14ad0)\n                        /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                        let memPos_5 := mload(64)\n                        mstore(memPos_5, _18)\n                        return(memPos_5, 32)\n                    }\n                    case 0x3b70c18a {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let cleaned_1 := and(sload(/** @src 85:8360:8373  \"_messageQueue\" */ 0x02), /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1))\n                        let memPos_6 := mload(64)\n                        mstore(memPos_6, cleaned_1)\n                        return(memPos_6, 32)\n                    }\n                    case 0x3f4ba83a {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        /// @src 20:3283:3287  \"role\"\n                        fun__checkRole()\n                        /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                        let _20 := sload(/** @src 25:1237:1303  \"assembly {...\" */ 92891662540554778686986514950364265630913525426840345632122912437671245656832)\n                        /// @src 25:2967:3029  \"if (!paused()) {...\"\n                        if /** @src 25:2971:2980  \"!paused()\" */ iszero(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ and(_20, 0xff))\n                        /// @src 25:2967:3029  \"if (!paused()) {...\"\n                        {\n                            /// @src 25:3003:3018  \"ExpectedPause()\"\n                            mstore(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2, /** @src 25:3003:3018  \"ExpectedPause()\" */ shl(224, 0x8dfc202b))\n                            revert(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2, 4)\n                        }\n                        sstore(/** @src 25:1237:1303  \"assembly {...\" */ 92891662540554778686986514950364265630913525426840345632122912437671245656832, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ and(_20, not(255)))\n                        /// @src 25:3627:3649  \"Unpaused(_msgSender())\"\n                        let _21 := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ mload(64)\n                        mstore(_21, /** @src 24:966:976  \"msg.sender\" */ caller())\n                        /// @src 25:3627:3649  \"Unpaused(_msgSender())\"\n                        log1(_21, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 32, /** @src 25:3627:3649  \"Unpaused(_msgSender())\" */ 0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa)\n                        /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                        return(_2, _2)\n                    }\n                    case 0x4e689539 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                        /// @src 85:9531:9571  \"return _vftManagers.contains(vftManager)\"\n                        let var_1 := /** @src 71:8806:8834  \"_contains(set._inner, value)\" */ fun__contains(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ calldataload(4))\n                        let memPos_7 := mload(64)\n                        mstore(memPos_7, iszero(iszero(var_1)))\n                        return(memPos_7, 32)\n                    }\n                    case 0x4f1ef286 {\n                        if slt(add(calldatasize(), not(3)), 64) { revert(_2, _2) }\n                        let value0_2 := abi_decode_t_address()\n                        let offset_1 := calldataload(36)\n                        if gt(offset_1, 0xffffffffffffffff) { revert(_2, _2) }\n                        if iszero(slt(add(offset_1, 35), calldatasize())) { revert(_2, _2) }\n                        let length_3 := calldataload(add(4, offset_1))\n                        let _22 := array_allocation_size_bytes(length_3)\n                        let memPtr_1 := mload(64)\n                        finalize_allocation(memPtr_1, _22)\n                        mstore(memPtr_1, length_3)\n                        let dst := add(memPtr_1, 32)\n                        if gt(add(add(offset_1, length_3), 36), calldatasize()) { revert(_2, _2) }\n                        calldatacopy(dst, add(offset_1, 36), length_3)\n                        mstore(add(add(memPtr_1, length_3), 32), _2)\n                        /// @src 23:4650:4673  \"address(this) == __self\"\n                        let _23 := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ and(/** @src 23:4667:4673  \"__self\" */ loadimmutable(\"40546\"), /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1))\n                        /// @src 23:4650:4770  \"address(this) == __self || // Must be called through delegatecall...\"\n                        let expr_2 := /** @src 23:4650:4673  \"address(this) == __self\" */ eq(/** @src 23:4658:4662  \"this\" */ address(), /** @src 23:4650:4673  \"address(this) == __self\" */ _23)\n                        /// @src 23:4650:4770  \"address(this) == __self || // Must be called through delegatecall...\"\n                        if iszero(expr_2)\n                        {\n                            expr_2 := /** @src 23:4728:4770  \"ERC1967Utils.getImplementation() != __self\" */ iszero(eq(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ and(sload(/** @src 37:811:877  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc), /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)), /** @src 23:4728:4770  \"ERC1967Utils.getImplementation() != __self\" */ _23))\n                        }\n                        /// @src 23:4633:4884  \"if (...\"\n                        if expr_2\n                        {\n                            /// @src 23:4844:4873  \"UUPSUnauthorizedCallContext()\"\n                            mstore(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2, /** @src 23:4844:4873  \"UUPSUnauthorizedCallContext()\" */ shl(225, 0x703e46dd))\n                            revert(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2, 4)\n                        }\n                        mstore(_2, _2)\n                        mstore(32, /** @src 20:2968:3039  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                        /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                        let dataSlot := keccak256(_2, 64)\n                        /// @src 20:3949:3980  \"$._roles[role].hasRole[account]\"\n                        let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ and(/** @src 24:966:976  \"msg.sender\" */ caller(), /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 20:3949:3963  \"$._roles[role]\" */ dataSlot)\n                        /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                        dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0x40)\n                        /// @src 20:4512:4620  \"if (!hasRole(role, account)) {...\"\n                        if /** @src 20:4516:4539  \"!hasRole(role, account)\" */ iszero(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ and(sload(/** @src 20:3949:3980  \"$._roles[role].hasRole[account]\" */ dataSlot_1), /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0xff))\n                        /// @src 20:4512:4620  \"if (!hasRole(role, account)) {...\"\n                        {\n                            /// @src 20:4562:4609  \"AccessControlUnauthorizedAccount(account, role)\"\n                            mstore(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2, /** @src 20:4562:4609  \"AccessControlUnauthorizedAccount(account, role)\" */ shl(224, 0xe2517d3f))\n                            /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                            mstore(4, /** @src 24:966:976  \"msg.sender\" */ caller())\n                            /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                            mstore(36, _2)\n                            /// @src 20:4562:4609  \"AccessControlUnauthorizedAccount(account, role)\"\n                            revert(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2, 68)\n                        }\n                        let _24 := and(/** @src 23:6131:6167  \"IERC1822Proxiable(newImplementation)\" */ value0_2, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1))\n                        /// @src 23:6131:6183  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                        let _25 := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ mload(64)\n                        /// @src 23:6131:6183  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                        mstore(_25, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ shl(224, 0x52d1902d))\n                        /// @src 23:6131:6183  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                        let trySuccessCondition := staticcall(gas(), _24, _25, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 4, /** @src 23:6131:6183  \"IERC1822Proxiable(newImplementation).proxiableUUID()\" */ _25, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 32)\n                        /// @src 23:6131:6183  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                        let expr_3 := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2\n                        /// @src 23:6131:6183  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                        if trySuccessCondition\n                        {\n                            let _26 := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 32\n                            /// @src 23:6131:6183  \"IERC1822Proxiable(newImplementation).proxiableUUID()\"\n                            if gt(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 32, /** @src 23:6131:6183  \"IERC1822Proxiable(newImplementation).proxiableUUID()\" */ returndatasize()) { _26 := returndatasize() }\n                            finalize_allocation(_25, _26)\n                            let value0_3 := /** @src -1:-1:-1 */ 0\n                            /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                            if slt(sub(/** @src 23:6131:6183  \"IERC1822Proxiable(newImplementation).proxiableUUID()\" */ add(_25, _26), _25), /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 32)\n                            {\n                                revert(/** @src -1:-1:-1 */ 0, 0)\n                            }\n                            /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                            value0_3 := mload(/** @src 23:6131:6183  \"IERC1822Proxiable(newImplementation).proxiableUUID()\" */ _25)\n                            expr_3 := value0_3\n                        }\n                        /// @src 23:6127:6564  \"try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {...\"\n                        switch iszero(trySuccessCondition)\n                        case 0 {\n                            /// @src 23:6221:6341  \"if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {...\"\n                            if /** @src 23:6225:6265  \"slot != ERC1967Utils.IMPLEMENTATION_SLOT\" */ iszero(eq(expr_3, /** @src 37:811:877  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc))\n                            /// @src 23:6221:6341  \"if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {...\"\n                            {\n                                /// @src 23:6292:6326  \"UUPSUnsupportedProxiableUUID(slot)\"\n                                mstore(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2, /** @src 23:6292:6326  \"UUPSUnsupportedProxiableUUID(slot)\" */ shl(226, 0x2a875269))\n                                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                                mstore(4, expr_3)\n                                /// @src 23:6292:6326  \"UUPSUnsupportedProxiableUUID(slot)\"\n                                revert(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2, 36)\n                            }\n                            /// @src 37:1744:1863  \"if (newImplementation.code.length == 0) {...\"\n                            if /** @src 37:1748:1782  \"newImplementation.code.length == 0\" */ iszero(/** @src 37:1748:1777  \"newImplementation.code.length\" */ extcodesize(value0_2))\n                            /// @src 37:1744:1863  \"if (newImplementation.code.length == 0) {...\"\n                            {\n                                /// @src 37:1805:1852  \"ERC1967InvalidImplementation(newImplementation)\"\n                                mstore(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2, /** @src 37:1805:1852  \"ERC1967InvalidImplementation(newImplementation)\" */ shl(224, 0x4c9c8ce3))\n                                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                                mstore(4, _24)\n                                /// @src 37:1805:1852  \"ERC1967InvalidImplementation(newImplementation)\"\n                                revert(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2, 36)\n                            }\n                            sstore(/** @src 37:811:877  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ or(and(sload(/** @src 37:811:877  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc), /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ shl(160, 0xffffffffffffffffffffffff)), _24))\n                            /// @src 37:2407:2443  \"IERC1967.Upgraded(newImplementation)\"\n                            log2(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2, _2, /** @src 37:2407:2443  \"IERC1967.Upgraded(newImplementation)\" */ 0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b, _24)\n                            /// @src 37:2454:2602  \"if (data.length > 0) {...\"\n                            switch /** @src 37:2458:2473  \"data.length > 0\" */ iszero(iszero(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ mload(/** @src 37:2458:2469  \"data.length\" */ memPtr_1)))\n                            case /** @src 37:2454:2602  \"if (data.length > 0) {...\" */ 0 {\n                                /// @src 37:6159:6229  \"if (msg.value > 0) {...\"\n                                if /** @src 37:6163:6176  \"msg.value > 0\" */ iszero(iszero(/** @src 37:6163:6172  \"msg.value\" */ callvalue()))\n                                /// @src 37:6159:6229  \"if (msg.value > 0) {...\"\n                                {\n                                    /// @src 37:6199:6218  \"ERC1967NonPayable()\"\n                                    mstore(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2, /** @src 37:6199:6218  \"ERC1967NonPayable()\" */ shl(224, 0xb398979f))\n                                    revert(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2, 4)\n                                }\n                            }\n                            default /// @src 37:2454:2602  \"if (data.length > 0) {...\"\n                            {\n                                /// @src 51:4065:4090  \"target.delegatecall(data)\"\n                                let expr_component_2 := delegatecall(gas(), value0_2, dst, mload(memPtr_1), /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2, _2)\n                                /// @src 51:4065:4090  \"target.delegatecall(data)\"\n                                let data := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2\n                                switch returndatasize()\n                                case 0 { data := 96 }\n                                default {\n                                    let _27 := returndatasize()\n                                    let _28 := array_allocation_size_bytes(_27)\n                                    let memPtr_2 := mload(64)\n                                    finalize_allocation(memPtr_2, _28)\n                                    mstore(memPtr_2, _27)\n                                    data := memPtr_2\n                                    returndatacopy(add(memPtr_2, 32), _2, returndatasize())\n                                }\n                                /// @src 51:4107:4162  \"verifyCallResultFromTarget(target, success, returndata)\"\n                                pop(fun_verifyCallResultFromTarget(value0_2, expr_component_2, /** @src 51:4065:4090  \"target.delegatecall(data)\" */ data))\n                            }\n                        }\n                        default /// @src 23:6127:6564  \"try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {...\"\n                        {\n                            /// @src 23:6493:6553  \"ERC1967Utils.ERC1967InvalidImplementation(newImplementation)\"\n                            mstore(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2, /** @src 37:1805:1852  \"ERC1967InvalidImplementation(newImplementation)\" */ shl(224, 0x4c9c8ce3))\n                            /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                            mstore(4, _24)\n                            /// @src 23:6493:6553  \"ERC1967Utils.ERC1967InvalidImplementation(newImplementation)\"\n                            revert(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2, 36)\n                        }\n                        return(_2, _2)\n                    }\n                    case 0x52d1902d {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        /// @src 23:5069:5214  \"if (address(this) != __self) {...\"\n                        if /** @src 23:5073:5096  \"address(this) != __self\" */ iszero(eq(/** @src 23:5081:5085  \"this\" */ address(), /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ and(/** @src 23:5090:5096  \"__self\" */ loadimmutable(\"40546\"), /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1))))\n                        /// @src 23:5069:5214  \"if (address(this) != __self) {...\"\n                        {\n                            /// @src 23:5174:5203  \"UUPSUnauthorizedCallContext()\"\n                            mstore(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2, /** @src 23:4844:4873  \"UUPSUnauthorizedCallContext()\" */ shl(225, 0x703e46dd))\n                            /// @src 23:5174:5203  \"UUPSUnauthorizedCallContext()\"\n                            revert(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2, 4)\n                        }\n                        let memPos_8 := mload(64)\n                        mstore(memPos_8, /** @src 37:811:877  \"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\" */ 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc)\n                        /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                        return(memPos_8, 32)\n                    }\n                    case 0x5c975abb {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let value_5 := and(sload(/** @src 25:1237:1303  \"assembly {...\" */ 92891662540554778686986514950364265630913525426840345632122912437671245656832), /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0xff)\n                        let memPos_9 := mload(64)\n                        mstore(memPos_9, iszero(iszero(value_5)))\n                        return(memPos_9, 32)\n                    }\n                    case 0x6a762d5c {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 224) { revert(_2, _2) }\n                        let value0_4 := abi_decode_t_address()\n                        let value_6 := calldataload(36)\n                        let value4 := abi_decode_uint8()\n                        /// @src 25:1944:2016  \"modifier whenNotPaused() {...\"\n                        fun_requireNotPaused()\n                        /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                        let _29 := and(/** @src 85:16253:16272  \"IERC20Permit(token)\" */ value0_4, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1))\n                        /// @src 85:16253:16333  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\"\n                        if iszero(extcodesize(_29))\n                        {\n                            /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                            revert(_2, _2)\n                        }\n                        /// @src 85:16253:16333  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\"\n                        let _30 := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ mload(64)\n                        /// @src 85:16253:16333  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\"\n                        mstore(_30, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ shl(224, 0xd505accf))\n                        mstore(/** @src 85:16253:16333  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\" */ add(_30, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 4), /** @src 85:16280:16290  \"msg.sender\" */ caller())\n                        /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                        mstore(add(/** @src 85:16253:16333  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\" */ _30, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 36), /** @src 85:16300:16304  \"this\" */ address())\n                        /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                        mstore(add(/** @src 85:16253:16333  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\" */ _30, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 68), value_6)\n                        mstore(add(/** @src 85:16253:16333  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\" */ _30, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 100), calldataload(100))\n                        mstore(add(/** @src 85:16253:16333  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\" */ _30, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 132), and(value4, 0xff))\n                        mstore(add(/** @src 85:16253:16333  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\" */ _30, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 164), calldataload(164))\n                        mstore(add(/** @src 85:16253:16333  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\" */ _30, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 196), calldataload(196))\n                        /// @src 85:16253:16333  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\"\n                        if call(gas(), _29, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2, /** @src 85:16253:16333  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\" */ _30, 228, _30, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2)\n                        /// @src 85:16253:16333  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\"\n                        {\n                            finalize_allocation(_30, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2)\n                            if _2 { revert(_2, _2) }\n                        }\n                        /// @src 25:1944:2016  \"modifier whenNotPaused() {...\"\n                        fun_requireNotPaused()\n                        /// @src 85:14276:14340  \"if (amount == 0) {...\"\n                        if /** @src 85:14280:14291  \"amount == 0\" */ iszero(value_6)\n                        /// @src 85:14276:14340  \"if (amount == 0) {...\"\n                        {\n                            /// @src 85:14314:14329  \"InvalidAmount()\"\n                            mstore(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2, /** @src 85:14314:14329  \"InvalidAmount()\" */ shl(225, 0x162908e3))\n                            revert(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2, 4)\n                        }\n                        /// @src 85:14376:14397  \"_tokens.tryGet(token)\"\n                        let expr_component_3, expr_component_4 := fun_tryGet_23025(value0_4)\n                        /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                        let _31 := iszero(lt(expr_component_4, 3))\n                        if _31\n                        {\n                            mstore(_2, shl(224, 0x4e487b71))\n                            mstore(4, 0x21)\n                            revert(_2, 36)\n                        }\n                        /// @src 85:14408:14741  \"if (tokenType == TokenType.Unknown) {...\"\n                        switch /** @src 85:14412:14442  \"tokenType == TokenType.Unknown\" */ iszero(expr_component_4)\n                        case /** @src 85:14408:14741  \"if (tokenType == TokenType.Unknown) {...\" */ 0 {\n                            /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                            _31 := /** @src -1:-1:-1 */ _2\n                            /// @src 85:14500:14741  \"if (tokenType == TokenType.Ethereum) {...\"\n                            switch /** @src 85:14504:14535  \"tokenType == TokenType.Ethereum\" */ eq(expr_component_4, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 1)\n                            case /** @src 85:14500:14741  \"if (tokenType == TokenType.Ethereum) {...\" */ 0 {\n                                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                                _31 := /** @src -1:-1:-1 */ _2\n                                /// @src 85:14633:14741  \"if (tokenType == TokenType.Gear) {...\"\n                                if /** @src 85:14637:14664  \"tokenType == TokenType.Gear\" */ eq(expr_component_4, /** @src 85:14650:14664  \"TokenType.Gear\" */ 2)\n                                /// @src 85:14633:14741  \"if (tokenType == TokenType.Gear) {...\"\n                                {\n                                    /// @src 85:14680:14730  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    if iszero(extcodesize(_29))\n                                    {\n                                        /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                                        revert(_2, _2)\n                                    }\n                                    /// @src 85:14680:14730  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    let _32 := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ mload(64)\n                                    /// @src 85:14680:14730  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    mstore(_32, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ shl(228, 0x079cc679))\n                                    /// @src 85:14680:14730  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    let _33 := call(gas(), _29, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2, /** @src 85:14680:14730  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\" */ _32, sub(abi_encode_address_uint256(add(_32, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 4), /** @src 85:16280:16290  \"msg.sender\" */ caller(), /** @src 85:14680:14730  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\" */ value_6), _32), _32, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2)\n                                    /// @src 85:14680:14730  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    if iszero(_33)\n                                    {\n                                        /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                                        let pos_5 := mload(64)\n                                        returndatacopy(pos_5, _2, returndatasize())\n                                        revert(pos_5, returndatasize())\n                                    }\n                                    /// @src 85:14680:14730  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    if _33\n                                    {\n                                        finalize_allocation(_32, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2)\n                                        if _2 { revert(_2, _2) }\n                                    }\n                                }\n                            }\n                            default /// @src 85:14500:14741  \"if (tokenType == TokenType.Ethereum) {...\"\n                            {\n                                /// @src 50:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                                let expr_mpos_1 := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ mload(64)\n                                /// @src 50:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                                mstore(add(expr_mpos_1, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 32), shl(224, 0x23b872dd))\n                                mstore(/** @src 50:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\" */ add(expr_mpos_1, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 36), /** @src 85:16280:16290  \"msg.sender\" */ caller())\n                                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                                mstore(add(/** @src 50:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\" */ expr_mpos_1, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 68), /** @src 85:16300:16304  \"this\" */ address())\n                                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                                mstore(add(/** @src 50:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\" */ expr_mpos_1, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 100), value_6)\n                                /// @src 50:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                                mstore(expr_mpos_1, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 100)\n                                /// @src 50:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                                finalize_allocation(expr_mpos_1, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 132)\n                                /// @src 50:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                                fun_callOptionalReturn(_29, expr_mpos_1)\n                            }\n                        }\n                        default /// @src 85:14408:14741  \"if (tokenType == TokenType.Unknown) {...\"\n                        {\n                            /// @src 85:14465:14483  \"InvalidTokenType()\"\n                            mstore(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2, /** @src 85:14465:14483  \"InvalidTokenType()\" */ shl(224, 0xa1e9dd9d))\n                            revert(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2, 4)\n                        }\n                        /// @src 85:14756:14804  \"BridgingRequested(msg.sender, to, token, amount)\"\n                        let _34 := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ mload(64)\n                        mstore(_34, value_6)\n                        /// @src 85:14756:14804  \"BridgingRequested(msg.sender, to, token, amount)\"\n                        log4(_34, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 32, /** @src 85:14756:14804  \"BridgingRequested(msg.sender, to, token, amount)\" */ 0xf80de57fd7626baaff7d867494866703686569822c2326ae60b2515ede953c3a, /** @src 85:16280:16290  \"msg.sender\" */ caller(), /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ calldataload(68), /** @src 85:14756:14804  \"BridgingRequested(msg.sender, to, token, amount)\" */ _29)\n                        /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                        return(_2, _2)\n                    }\n                    case 0x763b754a {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 160) { revert(_2, _2) }\n                        let value0_5 := abi_decode_t_address()\n                        let value1_2 := abi_decode_address()\n                        let value_7 := /** @src -1:-1:-1 */ _2\n                        /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                        value_7 := calldataload(68)\n                        let _35 := and(value_7, sub(shl(160, 1), 1))\n                        if iszero(eq(value_7, _35)) { revert(_2, _2) }\n                        let offset_2 := calldataload(132)\n                        if gt(offset_2, 0xffffffffffffffff) { revert(_2, _2) }\n                        if iszero(slt(add(offset_2, 35), calldatasize())) { revert(_2, _2) }\n                        let length_4 := calldataload(add(4, offset_2))\n                        let _36 := array_allocation_size_array_struct_TokenInfo_dyn(length_4)\n                        let memPtr_3 := mload(64)\n                        finalize_allocation(memPtr_3, _36)\n                        let dst_1 := memPtr_3\n                        mstore(memPtr_3, length_4)\n                        dst_1 := add(memPtr_3, 32)\n                        let srcEnd := add(add(offset_2, shl(6, length_4)), 36)\n                        if gt(srcEnd, calldatasize()) { revert(_2, _2) }\n                        let src := add(offset_2, 36)\n                        for { } lt(src, srcEnd) { src := add(src, 64) }\n                        {\n                            if slt(sub(calldatasize(), src), 64) { revert(_2, _2) }\n                            let memPtr_4 := mload(64)\n                            let newFreePtr := add(memPtr_4, 64)\n                            if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr_4))\n                            {\n                                mstore(/** @src -1:-1:-1 */ _2, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(/** @src -1:-1:-1 */ _2, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 36)\n                            }\n                            mstore(64, newFreePtr)\n                            let value_8 := /** @src -1:-1:-1 */ _2\n                            /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                            value_8 := calldataload(src)\n                            if iszero(eq(value_8, and(value_8, sub(shl(160, 1), 1)))) { revert(_2, _2) }\n                            mstore(memPtr_4, value_8)\n                            let value_9 := calldataload(add(src, 32))\n                            if iszero(lt(value_9, 3)) { revert(_2, _2) }\n                            mstore(add(memPtr_4, 32), value_9)\n                            mstore(dst_1, memPtr_4)\n                            dst_1 := add(dst_1, 32)\n                        }\n                        let _37 := sload(/** @src 22:3147:3213  \"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\" */ 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00)\n                        /// @src 22:4301:4317  \"!$._initializing\"\n                        let _38 := iszero(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ and(shr(64, _37), 0xff))\n                        let value_10 := and(_37, 0xffffffffffffffff)\n                        /// @src 22:4724:4758  \"initialized == 0 && isTopLevelCall\"\n                        let expr_4 := /** @src 22:4724:4740  \"initialized == 0\" */ iszero(value_10)\n                        /// @src 22:4724:4758  \"initialized == 0 && isTopLevelCall\"\n                        if expr_4 { expr_4 := _38 }\n                        /// @src 22:4788:4838  \"initialized == 1 && address(this).code.length == 0\"\n                        let expr_5 := /** @src 22:4788:4804  \"initialized == 1\" */ eq(value_10, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 1)\n                        /// @src 22:4788:4838  \"initialized == 1 && address(this).code.length == 0\"\n                        if expr_5\n                        {\n                            expr_5 := /** @src 22:4808:4838  \"address(this).code.length == 0\" */ iszero(/** @src 22:4808:4833  \"address(this).code.length\" */ extcodesize(/** @src 22:4816:4820  \"this\" */ address()))\n                        }\n                        /// @src 22:4853:4883  \"!initialSetup && !construction\"\n                        let expr_6 := /** @src 22:4853:4866  \"!initialSetup\" */ iszero(expr_4)\n                        /// @src 22:4853:4883  \"!initialSetup && !construction\"\n                        if expr_6\n                        {\n                            expr_6 := /** @src 22:4870:4883  \"!construction\" */ iszero(expr_5)\n                        }\n                        /// @src 22:4849:4940  \"if (!initialSetup && !construction) {...\"\n                        if expr_6\n                        {\n                            /// @src 22:4906:4929  \"InvalidInitialization()\"\n                            mstore(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2, /** @src 22:4906:4929  \"InvalidInitialization()\" */ shl(224, 0xf92ee8a9))\n                            revert(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2, 4)\n                        }\n                        sstore(/** @src 22:3147:3213  \"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\" */ 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ or(and(_37, not(0xffffffffffffffff)), 1))\n                        /// @src 22:4977:5044  \"if (isTopLevelCall) {...\"\n                        if _38\n                        {\n                            /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                            sstore(/** @src 22:3147:3213  \"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\" */ 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ or(and(_37, not(0xffffffffffffffffff)), 0x010000000000000001))\n                        }\n                        /// @src 22:6891:6967  \"modifier onlyInitializing() {...\"\n                        fun_checkInitializing()\n                        fun_checkInitializing()\n                        fun_checkInitializing()\n                        /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                        let _39 := and(/** @src 85:7042:7067  \"address(governanceAdmin_)\" */ value0_5, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1))\n                        /// @src 85:7011:7068  \"_grantRole(DEFAULT_ADMIN_ROLE, address(governanceAdmin_))\"\n                        pop(fun__grantRole(_39))\n                        /// @src 85:7079:7129  \"_grantRole(PAUSER_ROLE, address(governanceAdmin_))\"\n                        pop(fun_grantRole(_39))\n                        /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                        let _40 := and(/** @src 85:7163:7189  \"address(governancePauser_)\" */ value1_2, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1))\n                        /// @src 85:7139:7190  \"_grantRole(PAUSER_ROLE, address(governancePauser_))\"\n                        pop(fun_grantRole(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _40))\n                        sstore(_2, or(and(sload(_2), shl(160, 0xffffffffffffffffffffffff)), _39))\n                        sstore(1, or(and(sload(1), shl(160, 0xffffffffffffffffffffffff)), _40))\n                        sstore(/** @src 85:7293:7322  \"_messageQueue = messageQueue_\" */ 0x02, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ or(and(sload(/** @src 85:7293:7322  \"_messageQueue = messageQueue_\" */ 0x02), /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ shl(160, 0xffffffffffffffffffffffff)), _35))\n                        /// @src 71:7898:7921  \"_add(set._inner, value)\"\n                        pop(fun_add(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ calldataload(100)))\n                        /// @src 85:7376:7389  \"uint256 i = 0\"\n                        let var_i := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2\n                        /// @src 85:7371:7686  \"for (uint256 i = 0; i < tokens_.length; i++) {...\"\n                        for { }\n                        /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 1\n                        /// @src 85:7376:7389  \"uint256 i = 0\"\n                        {\n                            /// @src 85:7411:7414  \"i++\"\n                            var_i := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ add(/** @src 85:7411:7414  \"i++\" */ var_i, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 1)\n                        }\n                        /// @src 85:7411:7414  \"i++\"\n                        {\n                            /// @src 85:7391:7409  \"i < tokens_.length\"\n                            if iszero(lt(var_i, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ mload(/** @src 85:7395:7409  \"tokens_.length\" */ memPtr_3)))\n                            /// @src 85:7391:7409  \"i < tokens_.length\"\n                            { break }\n                            /// @src 85:7459:7469  \"tokens_[i]\"\n                            let _mpos := mload(memory_array_index_access_struct_TokenInfo_dyn(memPtr_3, var_i))\n                            /// @src 85:7488:7507  \"tokenInfo.tokenType\"\n                            let _41 := add(_mpos, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 32)\n                            let _42 := mload(/** @src 85:7488:7507  \"tokenInfo.tokenType\" */ _41)\n                            /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                            let _43 := iszero(lt(_42, 3))\n                            if _43\n                            {\n                                mstore(_2, shl(224, 0x4e487b71))\n                                mstore(4, 0x21)\n                                revert(_2, 36)\n                            }\n                            _43 := /** @src -1:-1:-1 */ _2\n                            /// @src 85:7484:7676  \"if (tokenInfo.tokenType == TokenType.Unknown) {...\"\n                            switch /** @src 85:7488:7528  \"tokenInfo.tokenType == TokenType.Unknown\" */ iszero(_42)\n                            case /** @src 85:7484:7676  \"if (tokenInfo.tokenType == TokenType.Unknown) {...\" */ 0 {\n                                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                                let cleaned_2 := and(mload(/** @src 85:7624:7639  \"tokenInfo.token\" */ _mpos), /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1))\n                                let _44 := mload(/** @src 85:7641:7660  \"tokenInfo.tokenType\" */ _41)\n                                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                                if iszero(lt(_44, 3))\n                                {\n                                    mstore(_2, shl(224, 0x4e487b71))\n                                    mstore(4, 0x21)\n                                    revert(_2, 36)\n                                }\n                                /// @src 85:7612:7661  \"_tokens.set(tokenInfo.token, tokenInfo.tokenType)\"\n                                pop(fun_set(cleaned_2, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _44))\n                            }\n                            default /// @src 85:7484:7676  \"if (tokenInfo.tokenType == TokenType.Unknown) {...\"\n                            {\n                                /// @src 85:7555:7573  \"InvalidTokenType()\"\n                                mstore(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2, /** @src 85:14465:14483  \"InvalidTokenType()\" */ shl(224, 0xa1e9dd9d))\n                                /// @src 85:7555:7573  \"InvalidTokenType()\"\n                                revert(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2, 4)\n                            }\n                        }\n                        /// @src 22:5064:5165  \"if (isTopLevelCall) {...\"\n                        if _38\n                        {\n                            /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                            sstore(/** @src 22:3147:3213  \"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\" */ 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ and(sload(/** @src 22:3147:3213  \"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\" */ 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00), /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ not(0xff0000000000000000)))\n                            /// @src 22:5140:5154  \"Initialized(1)\"\n                            let _45 := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ mload(64)\n                            mstore(_45, 1)\n                            /// @src 22:5140:5154  \"Initialized(1)\"\n                            log1(_45, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 32, /** @src 22:5140:5154  \"Initialized(1)\" */ 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2)\n                        }\n                        /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                        return(_2, _2)\n                    }\n                    case 0x7e1c0c09 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let length_5 := sload(/** @src 85:9767:9774  \"_tokens\" */ 0x05)\n                        /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                        let memPos_10 := mload(64)\n                        mstore(memPos_10, length_5)\n                        return(memPos_10, 32)\n                    }\n                    case 0x8456cb59 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        /// @src 20:3283:3287  \"role\"\n                        fun__checkRole()\n                        /// @src 25:1944:2016  \"modifier whenNotPaused() {...\"\n                        fun_requireNotPaused()\n                        /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                        sstore(/** @src 25:1237:1303  \"assembly {...\" */ 92891662540554778686986514950364265630913525426840345632122912437671245656832, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ or(and(sload(/** @src 25:1237:1303  \"assembly {...\" */ 92891662540554778686986514950364265630913525426840345632122912437671245656832), /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ not(255)), /** @src 85:5528:5532  \"0x01\" */ 0x01))\n                        /// @src 25:3319:3339  \"Paused(_msgSender())\"\n                        let _46 := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ mload(64)\n                        mstore(_46, /** @src 24:966:976  \"msg.sender\" */ caller())\n                        /// @src 25:3319:3339  \"Paused(_msgSender())\"\n                        log1(_46, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 32, /** @src 25:3319:3339  \"Paused(_msgSender())\" */ 0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258)\n                        /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                        return(_2, _2)\n                    }\n                    case 0x87be40b1 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let pos_6 := mload(64)\n                        let memPtr_5 := pos_6\n                        let length_6 := sload(/** @src 85:8814:8826  \"_vftManagers\" */ 0x03)\n                        /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                        mstore(pos_6, length_6)\n                        pos_6 := add(pos_6, 0x20)\n                        mstore(_2, /** @src 85:8814:8826  \"_vftManagers\" */ 0x03)\n                        /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                        let srcPtr_1 := 87903029871075914254377627908054574944891091886930582284385770809450030037083\n                        let i_1 := _2\n                        for { } lt(i_1, length_6) { i_1 := add(i_1, 1) }\n                        {\n                            mstore(pos_6, sload(srcPtr_1))\n                            pos_6 := add(pos_6, 0x20)\n                            srcPtr_1 := add(srcPtr_1, 1)\n                        }\n                        finalize_allocation(memPtr_5, sub(pos_6, memPtr_5))\n                        let memPos_11 := mload(64)\n                        return(memPos_11, sub(abi_encode_array_bytes32_dyn(memPos_11, memPtr_5), memPos_11))\n                    }\n                    case 0x87e7a3a3 {\n                        if callvalue() { revert(_2, _2) }\n                        let param, param_1 := abi_decode_uint256t_uint256(calldatasize())\n                        let ret_1 := /** @src 85:11903:11938  \"paginate(bytes32Set, offset, limit)\" */ fun_paginate(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ param, param_1)\n                        let memPos_12 := mload(64)\n                        return(memPos_12, sub(abi_encode_array_address_dyn(memPos_12, ret_1), memPos_12))\n                    }\n                    case 0x8b4864d6 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_2, param_3 := abi_decode_uint256t_uint256(calldatasize())\n                        let ret_2 := /** @src 85:10316:10361  \"paginate(_tokens._inner._keys, offset, limit)\" */ fun_paginate_23050(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ param_2, param_3)\n                        let memPos_13 := mload(64)\n                        return(memPos_13, sub(abi_encode_array_address_dyn(memPos_13, ret_2), memPos_13))\n                    }\n                    case 0x8b841f6c {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let length_7 := sload(/** @src 85:11073:11090  \"_bridgingPayments\" */ 0x08)\n                        /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                        let memPos_14 := mload(64)\n                        mstore(memPos_14, length_7)\n                        return(memPos_14, 32)\n                    }\n                    case 0x91d14854 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(_2, _2) }\n                        let value1_3 := abi_decode_address()\n                        mstore(_2, calldataload(4))\n                        mstore(32, /** @src 20:2968:3039  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                        /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                        let dataSlot_2 := keccak256(_2, 64)\n                        /// @src 20:3949:3980  \"$._roles[role].hasRole[account]\"\n                        let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                        /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ and(value1_3, sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 20:3949:3963  \"$._roles[role]\" */ dataSlot_2)\n                        /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                        dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0x40)\n                        let value_11 := and(sload(/** @src 20:3949:3980  \"$._roles[role].hasRole[account]\" */ dataSlot_3), /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0xff)\n                        let memPos_15 := mload(64)\n                        mstore(memPos_15, iszero(iszero(value_11)))\n                        return(memPos_15, 32)\n                    }\n                    case 0x93272baf {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                        /// @src 85:10788:10809  \"_tokens.tryGet(token)\"\n                        let expr_component_5, expr_component_6 := fun_tryGet_23025(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ abi_decode_t_address())\n                        let memPos_16 := mload(64)\n                        if iszero(lt(expr_component_6, 3))\n                        {\n                            mstore(_2, shl(224, 0x4e487b71))\n                            mstore(4, 0x21)\n                            revert(_2, 0x24)\n                        }\n                        mstore(memPos_16, expr_component_6)\n                        return(memPos_16, 32)\n                    }\n                    case 0x9d63848a {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let pos_7 := mload(64)\n                        let memPtr_6 := pos_7\n                        let length_8 := sload(/** @src 85:9962:9969  \"_tokens\" */ 0x05)\n                        /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                        mstore(pos_7, length_8)\n                        pos_7 := add(pos_7, 0x20)\n                        mstore(_2, /** @src 85:9962:9969  \"_tokens\" */ 0x05)\n                        /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                        let srcPtr_2 := 1546678032441257452667456735582814959992782782816731922691272282333561699760\n                        let i_2 := _2\n                        for { } lt(i_2, length_8) { i_2 := add(i_2, 1) }\n                        {\n                            mstore(pos_7, sload(srcPtr_2))\n                            pos_7 := add(pos_7, 0x20)\n                            srcPtr_2 := add(srcPtr_2, 1)\n                        }\n                        finalize_allocation(memPtr_6, sub(pos_7, memPtr_6))\n                        let memPos_17 := mload(64)\n                        return(memPos_17, sub(abi_encode_array_address_dyn(memPos_17, memPtr_6), memPos_17))\n                    }\n                    case 0xa217fddf {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let memPos_18 := mload(64)\n                        mstore(memPos_18, _2)\n                        return(memPos_18, 32)\n                    }\n                    case 0xad3cb1cc {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let size := /** @src -1:-1:-1 */ _2\n                        /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                        let _47 := _2\n                        _47 := /** @src -1:-1:-1 */ _2\n                        /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                        size := 64\n                        let memPtr_7 := mload(64)\n                        finalize_allocation(memPtr_7, 64)\n                        mstore(memPtr_7, 5)\n                        mstore(add(memPtr_7, 32), \"5.0.0\")\n                        let memPos_19 := mload(64)\n                        mstore(memPos_19, 32)\n                        return(memPos_19, sub(abi_encode_string(memPtr_7, add(memPos_19, 32)), memPos_19))\n                    }\n                    case 0xc1c60921 {\n                        if callvalue() { revert(_2, _2) }\n                        let param_4, param_5 := abi_decode_uint256t_uint256(calldatasize())\n                        let ret_3 := /** @src 85:9191:9228  \"paginate(_vftManagers, offset, limit)\" */ fun_paginate_23056(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ param_4, param_5)\n                        let memPos_20 := mload(64)\n                        return(memPos_20, sub(abi_encode_array_bytes32_dyn(memPos_20, ret_3), memPos_20))\n                    }\n                    case 0xc305870c {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(_2, _2) }\n                        let value0_6 := abi_decode_t_address()\n                        let value_12 := calldataload(36)\n                        /// @src 25:1944:2016  \"modifier whenNotPaused() {...\"\n                        fun_requireNotPaused()\n                        /// @src 85:14276:14340  \"if (amount == 0) {...\"\n                        if /** @src 85:14280:14291  \"amount == 0\" */ iszero(value_12)\n                        /// @src 85:14276:14340  \"if (amount == 0) {...\"\n                        {\n                            /// @src 85:14314:14329  \"InvalidAmount()\"\n                            mstore(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2, /** @src 85:14314:14329  \"InvalidAmount()\" */ shl(225, 0x162908e3))\n                            revert(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2, 4)\n                        }\n                        /// @src 85:14376:14397  \"_tokens.tryGet(token)\"\n                        let expr_component_7, expr_component_8 := fun_tryGet_23025(value0_6)\n                        /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                        let _48 := iszero(lt(expr_component_8, 3))\n                        if _48\n                        {\n                            mstore(_2, shl(224, 0x4e487b71))\n                            mstore(4, 0x21)\n                            revert(_2, 36)\n                        }\n                        /// @src 85:14408:14741  \"if (tokenType == TokenType.Unknown) {...\"\n                        switch /** @src 85:14412:14442  \"tokenType == TokenType.Unknown\" */ iszero(expr_component_8)\n                        case /** @src 85:14408:14741  \"if (tokenType == TokenType.Unknown) {...\" */ 0 {\n                            /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                            _48 := /** @src -1:-1:-1 */ _2\n                            /// @src 85:14500:14741  \"if (tokenType == TokenType.Ethereum) {...\"\n                            switch /** @src 85:14504:14535  \"tokenType == TokenType.Ethereum\" */ eq(expr_component_8, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 1)\n                            case /** @src 85:14500:14741  \"if (tokenType == TokenType.Ethereum) {...\" */ 0 {\n                                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                                _48 := /** @src -1:-1:-1 */ _2\n                                /// @src 85:14633:14741  \"if (tokenType == TokenType.Gear) {...\"\n                                if /** @src 85:14637:14664  \"tokenType == TokenType.Gear\" */ eq(expr_component_8, /** @src 85:14650:14664  \"TokenType.Gear\" */ 2)\n                                /// @src 85:14633:14741  \"if (tokenType == TokenType.Gear) {...\"\n                                {\n                                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                                    let _49 := and(/** @src 85:14680:14701  \"IERC20Burnable(token)\" */ value0_6, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1))\n                                    /// @src 85:14680:14730  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    if iszero(extcodesize(_49))\n                                    {\n                                        /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                                        revert(_2, _2)\n                                    }\n                                    /// @src 85:14680:14730  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    let _50 := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ mload(64)\n                                    /// @src 85:14680:14730  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    mstore(_50, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ shl(228, 0x079cc679))\n                                    /// @src 85:14680:14730  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    let _51 := call(gas(), _49, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2, /** @src 85:14680:14730  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\" */ _50, sub(abi_encode_address_uint256(add(_50, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 4), /** @src 85:14711:14721  \"msg.sender\" */ caller(), /** @src 85:14680:14730  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\" */ value_12), _50), _50, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2)\n                                    /// @src 85:14680:14730  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    if iszero(_51)\n                                    {\n                                        /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                                        let pos_8 := mload(64)\n                                        returndatacopy(pos_8, _2, returndatasize())\n                                        revert(pos_8, returndatasize())\n                                    }\n                                    /// @src 85:14680:14730  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    if _51\n                                    {\n                                        finalize_allocation(_50, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2)\n                                        if _2 { revert(_2, _2) }\n                                    }\n                                }\n                            }\n                            default /// @src 85:14500:14741  \"if (tokenType == TokenType.Ethereum) {...\"\n                            {\n                                /// @src 50:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                                let expr_mpos_2 := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ mload(64)\n                                /// @src 50:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                                mstore(add(expr_mpos_2, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 32), shl(224, 0x23b872dd))\n                                mstore(/** @src 50:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\" */ add(expr_mpos_2, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 36), /** @src 85:14582:14592  \"msg.sender\" */ caller())\n                                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                                mstore(add(/** @src 50:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\" */ expr_mpos_2, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 68), /** @src 85:14602:14606  \"this\" */ address())\n                                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                                mstore(add(/** @src 50:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\" */ expr_mpos_2, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 100), value_12)\n                                /// @src 50:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                                mstore(expr_mpos_2, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 100)\n                                /// @src 50:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                                finalize_allocation(expr_mpos_2, 132)\n                                fun_callOptionalReturn(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ and(/** @src 85:14551:14564  \"IERC20(token)\" */ value0_6, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)), /** @src 50:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\" */ expr_mpos_2)\n                            }\n                        }\n                        default /// @src 85:14408:14741  \"if (tokenType == TokenType.Unknown) {...\"\n                        {\n                            /// @src 85:14465:14483  \"InvalidTokenType()\"\n                            mstore(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2, /** @src 85:14465:14483  \"InvalidTokenType()\" */ shl(224, 0xa1e9dd9d))\n                            revert(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2, 4)\n                        }\n                        /// @src 85:14756:14804  \"BridgingRequested(msg.sender, to, token, amount)\"\n                        let _52 := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ mload(64)\n                        mstore(_52, value_12)\n                        /// @src 85:14756:14804  \"BridgingRequested(msg.sender, to, token, amount)\"\n                        log4(_52, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 32, /** @src 85:14756:14804  \"BridgingRequested(msg.sender, to, token, amount)\" */ 0xf80de57fd7626baaff7d867494866703686569822c2326ae60b2515ede953c3a, /** @src 85:14774:14784  \"msg.sender\" */ caller(), /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ calldataload(68), and(/** @src 85:14756:14804  \"BridgingRequested(msg.sender, to, token, amount)\" */ value0_6, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)))\n                        return(_2, _2)\n                    }\n                    case 0xc81eb797 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let cleaned_3 := and(sload(/** @src 85:8138:8155  \"_governancePauser\" */ 0x01), /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1))\n                        let memPos_21 := mload(64)\n                        mstore(memPos_21, cleaned_3)\n                        return(memPos_21, 32)\n                    }\n                    case 0xd547741f {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(_2, _2) }\n                        let value_13 := calldataload(4)\n                        let value1_4 := abi_decode_address()\n                        /// @src 20:3283:3287  \"role\"\n                        fun_checkRole(/** @src 20:5785:5803  \"getRoleAdmin(role)\" */ fun_getRoleAdmin(value_13))\n                        /// @src 20:5815:5841  \"_revokeRole(role, account)\"\n                        pop(fun_revokeRole(value_13, value1_4))\n                        /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                        return(_2, _2)\n                    }\n                    case 0xe63ab1e9 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let memPos_22 := mload(64)\n                        mstore(memPos_22, /** @src 85:5528:5532  \"0x01\" */ 0x01)\n                        /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                        return(memPos_22, 32)\n                    }\n                    case 0xf6cdd9cc {\n                        if slt(add(calldatasize(), not(3)), 256) { revert(_2, _2) }\n                        let value0_7 := abi_decode_t_address()\n                        let value_14 := calldataload(36)\n                        let value4_1 := abi_decode_uint8()\n                        let value_15 := /** @src -1:-1:-1 */ _2\n                        /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                        value_15 := calldataload(228)\n                        let _53 := and(value_15, sub(shl(160, 1), 1))\n                        if iszero(eq(value_15, _53)) { revert(_2, _2) }\n                        /// @src 25:1944:2016  \"modifier whenNotPaused() {...\"\n                        fun_requireNotPaused()\n                        /// @src 85:17302:17408  \"if (!_bridgingPayments.contains(bridgingPayment)) {...\"\n                        if /** @src 85:17306:17350  \"!_bridgingPayments.contains(bridgingPayment)\" */ iszero(/** @src 71:12473:12528  \"_contains(set._inner, bytes32(uint256(uint160(value))))\" */ fun_contains(/** @src 71:12495:12527  \"bytes32(uint256(uint160(value)))\" */ _53))\n                        /// @src 85:17302:17408  \"if (!_bridgingPayments.contains(bridgingPayment)) {...\"\n                        {\n                            /// @src 85:17373:17397  \"InvalidBridgingPayment()\"\n                            mstore(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2, /** @src 85:15347:15371  \"InvalidBridgingPayment()\" */ shl(227, 0x1e37e195))\n                            /// @src 85:17373:17397  \"InvalidBridgingPayment()\"\n                            revert(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2, 4)\n                        }\n                        /// @src 85:17418:17478  \"IBridgingPayment(bridgingPayment).payFee{value: msg.value}()\"\n                        if iszero(extcodesize(_53))\n                        {\n                            /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                            revert(_2, _2)\n                        }\n                        /// @src 85:17418:17478  \"IBridgingPayment(bridgingPayment).payFee{value: msg.value}()\"\n                        let _54 := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ mload(64)\n                        /// @src 85:17418:17478  \"IBridgingPayment(bridgingPayment).payFee{value: msg.value}()\"\n                        mstore(_54, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ shl(225, 0x14b08129))\n                        /// @src 85:17418:17478  \"IBridgingPayment(bridgingPayment).payFee{value: msg.value}()\"\n                        let _55 := call(gas(), _53, /** @src 85:17466:17475  \"msg.value\" */ callvalue(), /** @src 85:17418:17478  \"IBridgingPayment(bridgingPayment).payFee{value: msg.value}()\" */ _54, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 4, /** @src 85:17418:17478  \"IBridgingPayment(bridgingPayment).payFee{value: msg.value}()\" */ _54, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2)\n                        /// @src 85:17418:17478  \"IBridgingPayment(bridgingPayment).payFee{value: msg.value}()\"\n                        if iszero(_55)\n                        {\n                            /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                            let pos_9 := mload(64)\n                            returndatacopy(pos_9, _2, returndatasize())\n                            revert(pos_9, returndatasize())\n                        }\n                        /// @src 85:17418:17478  \"IBridgingPayment(bridgingPayment).payFee{value: msg.value}()\"\n                        if _55\n                        {\n                            finalize_allocation(_54, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2)\n                            if _2 { revert(_2, _2) }\n                        }\n                        /// @src 25:1944:2016  \"modifier whenNotPaused() {...\"\n                        fun_requireNotPaused()\n                        /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                        let _56 := and(/** @src 85:16253:16272  \"IERC20Permit(token)\" */ value0_7, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1))\n                        /// @src 85:16253:16333  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\"\n                        if iszero(extcodesize(_56))\n                        {\n                            /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                            revert(_2, _2)\n                        }\n                        /// @src 85:16253:16333  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\"\n                        let _57 := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ mload(64)\n                        /// @src 85:16253:16333  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\"\n                        mstore(_57, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ shl(224, 0xd505accf))\n                        mstore(/** @src 85:16253:16333  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\" */ add(_57, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 4), /** @src 85:16280:16290  \"msg.sender\" */ caller())\n                        /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                        mstore(add(/** @src 85:16253:16333  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\" */ _57, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 36), /** @src 85:16300:16304  \"this\" */ address())\n                        /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                        mstore(add(/** @src 85:16253:16333  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\" */ _57, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 68), value_14)\n                        mstore(add(/** @src 85:16253:16333  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\" */ _57, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 100), calldataload(100))\n                        mstore(add(/** @src 85:16253:16333  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\" */ _57, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 132), and(value4_1, 0xff))\n                        mstore(add(/** @src 85:16253:16333  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\" */ _57, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 164), calldataload(164))\n                        mstore(add(/** @src 85:16253:16333  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\" */ _57, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 196), calldataload(196))\n                        /// @src 85:16253:16333  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\"\n                        if call(gas(), _56, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2, /** @src 85:16253:16333  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\" */ _57, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 228, /** @src 85:16253:16333  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\" */ _57, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2)\n                        /// @src 85:16253:16333  \"IERC20Permit(token).permit(msg.sender, address(this), amount, deadline, v, r, s)\"\n                        {\n                            finalize_allocation(_57, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2)\n                            if _2 { revert(_2, _2) }\n                        }\n                        /// @src 25:1944:2016  \"modifier whenNotPaused() {...\"\n                        fun_requireNotPaused()\n                        /// @src 85:14276:14340  \"if (amount == 0) {...\"\n                        if /** @src 85:14280:14291  \"amount == 0\" */ iszero(value_14)\n                        /// @src 85:14276:14340  \"if (amount == 0) {...\"\n                        {\n                            /// @src 85:14314:14329  \"InvalidAmount()\"\n                            mstore(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2, /** @src 85:14314:14329  \"InvalidAmount()\" */ shl(225, 0x162908e3))\n                            revert(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2, 4)\n                        }\n                        /// @src 85:14376:14397  \"_tokens.tryGet(token)\"\n                        let expr_component_9, expr_component_10 := fun_tryGet_23025(value0_7)\n                        /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                        let _58 := iszero(lt(expr_component_10, 3))\n                        if _58\n                        {\n                            mstore(_2, shl(224, 0x4e487b71))\n                            mstore(4, 0x21)\n                            revert(_2, 36)\n                        }\n                        /// @src 85:14408:14741  \"if (tokenType == TokenType.Unknown) {...\"\n                        switch /** @src 85:14412:14442  \"tokenType == TokenType.Unknown\" */ iszero(expr_component_10)\n                        case /** @src 85:14408:14741  \"if (tokenType == TokenType.Unknown) {...\" */ 0 {\n                            /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                            _58 := /** @src -1:-1:-1 */ _2\n                            /// @src 85:14500:14741  \"if (tokenType == TokenType.Ethereum) {...\"\n                            switch /** @src 85:14504:14535  \"tokenType == TokenType.Ethereum\" */ eq(expr_component_10, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 1)\n                            case /** @src 85:14500:14741  \"if (tokenType == TokenType.Ethereum) {...\" */ 0 {\n                                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                                _58 := /** @src -1:-1:-1 */ _2\n                                /// @src 85:14633:14741  \"if (tokenType == TokenType.Gear) {...\"\n                                if /** @src 85:14637:14664  \"tokenType == TokenType.Gear\" */ eq(expr_component_10, /** @src 85:14650:14664  \"TokenType.Gear\" */ 2)\n                                /// @src 85:14633:14741  \"if (tokenType == TokenType.Gear) {...\"\n                                {\n                                    /// @src 85:14680:14730  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    if iszero(extcodesize(_56))\n                                    {\n                                        /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                                        revert(_2, _2)\n                                    }\n                                    /// @src 85:14680:14730  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    let _59 := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ mload(64)\n                                    /// @src 85:14680:14730  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    mstore(_59, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ shl(228, 0x079cc679))\n                                    /// @src 85:14680:14730  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    let _60 := call(gas(), _56, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2, /** @src 85:14680:14730  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\" */ _59, sub(abi_encode_address_uint256(add(_59, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 4), /** @src 85:16280:16290  \"msg.sender\" */ caller(), /** @src 85:14680:14730  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\" */ value_14), _59), _59, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2)\n                                    /// @src 85:14680:14730  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    if iszero(_60)\n                                    {\n                                        /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                                        let pos_10 := mload(64)\n                                        returndatacopy(pos_10, _2, returndatasize())\n                                        revert(pos_10, returndatasize())\n                                    }\n                                    /// @src 85:14680:14730  \"IERC20Burnable(token).burnFrom(msg.sender, amount)\"\n                                    if _60\n                                    {\n                                        finalize_allocation(_59, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2)\n                                        if _2 { revert(_2, _2) }\n                                    }\n                                }\n                            }\n                            default /// @src 85:14500:14741  \"if (tokenType == TokenType.Ethereum) {...\"\n                            {\n                                /// @src 50:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                                let expr_mpos_3 := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ mload(64)\n                                /// @src 50:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                                mstore(add(expr_mpos_3, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 32), shl(224, 0x23b872dd))\n                                mstore(/** @src 50:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\" */ add(expr_mpos_3, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 36), /** @src 85:16280:16290  \"msg.sender\" */ caller())\n                                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                                mstore(add(/** @src 50:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\" */ expr_mpos_3, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 68), /** @src 85:16300:16304  \"this\" */ address())\n                                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                                mstore(add(/** @src 50:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\" */ expr_mpos_3, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 100), value_14)\n                                /// @src 50:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                                mstore(expr_mpos_3, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 100)\n                                /// @src 50:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                                finalize_allocation(expr_mpos_3, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 132)\n                                /// @src 50:1745:1798  \"abi.encodeCall(token.transferFrom, (from, to, value))\"\n                                fun_callOptionalReturn(_56, expr_mpos_3)\n                            }\n                        }\n                        default /// @src 85:14408:14741  \"if (tokenType == TokenType.Unknown) {...\"\n                        {\n                            /// @src 85:14465:14483  \"InvalidTokenType()\"\n                            mstore(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2, /** @src 85:14465:14483  \"InvalidTokenType()\" */ shl(224, 0xa1e9dd9d))\n                            revert(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2, 4)\n                        }\n                        /// @src 85:14756:14804  \"BridgingRequested(msg.sender, to, token, amount)\"\n                        let _61 := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ mload(64)\n                        mstore(_61, value_14)\n                        /// @src 85:14756:14804  \"BridgingRequested(msg.sender, to, token, amount)\"\n                        log4(_61, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 32, /** @src 85:14756:14804  \"BridgingRequested(msg.sender, to, token, amount)\" */ 0xf80de57fd7626baaff7d867494866703686569822c2326ae60b2515ede953c3a, /** @src 85:16280:16290  \"msg.sender\" */ caller(), /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ calldataload(68), /** @src 85:14756:14804  \"BridgingRequested(msg.sender, to, token, amount)\" */ _56)\n                        /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                        return(_2, _2)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_decode_t_address() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_encode_array_address_dyn(headStart, value0) -> tail\n            {\n                let tail_1 := add(headStart, 32)\n                mstore(headStart, 32)\n                let pos := tail_1\n                let length := mload(value0)\n                mstore(tail_1, length)\n                pos := add(headStart, 64)\n                let srcPtr := add(value0, 32)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n                    pos := add(pos, 32)\n                    srcPtr := add(srcPtr, 32)\n                }\n                tail := pos\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function array_allocation_size_bytes(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                size := add(and(add(length, 31), not(31)), 0x20)\n            }\n            function abi_decode_uint8() -> value\n            {\n                value := calldataload(132)\n                if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n            }\n            function array_allocation_size_array_struct_TokenInfo_dyn(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                size := add(shl(5, length), 0x20)\n            }\n            function abi_encode_array_bytes32_dyn(headStart, value0) -> tail\n            {\n                let tail_1 := add(headStart, 32)\n                mstore(headStart, 32)\n                let pos := tail_1\n                let length := mload(value0)\n                mstore(tail_1, length)\n                pos := add(headStart, 64)\n                let srcPtr := add(value0, 32)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, mload(srcPtr))\n                    pos := add(pos, 32)\n                    srcPtr := add(srcPtr, 32)\n                }\n                tail := pos\n            }\n            function abi_decode_uint256t_uint256(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                value0 := calldataload(4)\n                value1 := calldataload(36)\n            }\n            function abi_encode_string(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                mcopy(add(pos, 0x20), add(value, 0x20), length)\n                mstore(add(add(pos, length), 0x20), /** @src -1:-1:-1 */ 0)\n                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            /// @ast-id 39872 @src 20:4807:4998  \"function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {...\"\n            function fun_getRoleAdmin(var_role) -> var\n            {\n                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ var_role)\n                mstore(0x20, /** @src 20:2968:3039  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                /// @src 20:4960:4991  \"return $._roles[role].adminRole\"\n                var := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ sload(/** @src 20:4967:4991  \"$._roles[role].adminRole\" */ add(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0x40), /** @src 20:4967:4991  \"$._roles[role].adminRole\" */ 1))\n            }\n            /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n            function memory_array_index_access_struct_TokenInfo_dyn(baseRef, index) -> addr\n            {\n                if iszero(lt(index, mload(baseRef)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                addr := add(add(baseRef, shl(5, index)), 32)\n            }\n            function abi_encode_address_uint256(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                mstore(add(headStart, 32), value1)\n            }\n            /// @ast-id 40852 @src 25:2709:2837  \"function _requireNotPaused() internal view virtual {...\"\n            function fun_requireNotPaused()\n            {\n                /// @src 25:2770:2831  \"if (paused()) {...\"\n                if /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ and(sload(/** @src 25:1237:1303  \"assembly {...\" */ 92891662540554778686986514950364265630913525426840345632122912437671245656832), /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0xff)\n                /// @src 25:2770:2831  \"if (paused()) {...\"\n                {\n                    /// @src 25:2805:2820  \"EnforcedPause()\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 25:2805:2820  \"EnforcedPause()\" */ shl(224, 0xd93c0665))\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 25:2805:2820  \"EnforcedPause()\" */ 4)\n                }\n            }\n            /// @ast-id 39830 @src 20:4196:4299  \"function _checkRole(bytes32 role) internal view virtual {...\"\n            function fun__checkRole()\n            {\n                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 85:5528:5532  \"0x01\" */ 0x01)\n                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                mstore(0x20, /** @src 20:2968:3039  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0x40)\n                /// @src 20:3949:3980  \"$._roles[role].hasRole[account]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ and(/** @src 24:966:976  \"msg.sender\" */ caller(), /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 20:3949:3963  \"$._roles[role]\" */ dataSlot)\n                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0x40)\n                /// @src 20:4512:4620  \"if (!hasRole(role, account)) {...\"\n                if /** @src 20:4516:4539  \"!hasRole(role, account)\" */ iszero(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ and(sload(/** @src 20:3949:3980  \"$._roles[role].hasRole[account]\" */ dataSlot_1), /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0xff))\n                /// @src 20:4512:4620  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 20:4562:4609  \"AccessControlUnauthorizedAccount(account, role)\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 20:4562:4609  \"AccessControlUnauthorizedAccount(account, role)\" */ shl(224, 0xe2517d3f))\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    mstore(/** @src 20:4562:4609  \"AccessControlUnauthorizedAccount(account, role)\" */ 4, /** @src 24:966:976  \"msg.sender\" */ caller())\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    mstore(36, /** @src 85:5528:5532  \"0x01\" */ 0x01)\n                    /// @src 20:4562:4609  \"AccessControlUnauthorizedAccount(account, role)\"\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 68)\n                }\n            }\n            /// @ast-id 39830 @src 20:4196:4299  \"function _checkRole(bytes32 role) internal view virtual {...\"\n            function fun_checkRole(var_role)\n            {\n                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ var_role)\n                mstore(0x20, /** @src 20:2968:3039  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0x40)\n                /// @src 20:3949:3980  \"$._roles[role].hasRole[account]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ and(/** @src 24:966:976  \"msg.sender\" */ caller(), /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 20:3949:3963  \"$._roles[role]\" */ dataSlot)\n                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0x40)\n                /// @src 20:4512:4620  \"if (!hasRole(role, account)) {...\"\n                if /** @src 20:4516:4539  \"!hasRole(role, account)\" */ iszero(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ and(sload(/** @src 20:3949:3980  \"$._roles[role].hasRole[account]\" */ dataSlot_1), /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0xff))\n                /// @src 20:4512:4620  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 20:4562:4609  \"AccessControlUnauthorizedAccount(account, role)\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 20:4562:4609  \"AccessControlUnauthorizedAccount(account, role)\" */ shl(224, 0xe2517d3f))\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    mstore(/** @src 20:4562:4609  \"AccessControlUnauthorizedAccount(account, role)\" */ 4, /** @src 24:966:976  \"msg.sender\" */ caller())\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    mstore(36, var_role)\n                    /// @src 20:4562:4609  \"AccessControlUnauthorizedAccount(account, role)\"\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 68)\n                }\n            }\n            /// @ast-id 40016 @src 20:7318:7705  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n            function fun__grantRole(var_account) -> var\n            {\n                /// @src 20:7395:7399  \"bool\"\n                var := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0\n                mstore(0, 0)\n                mstore(0x20, /** @src 20:2968:3039  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                let dataSlot := keccak256(0, 0x40)\n                /// @src 20:3949:3980  \"$._roles[role].hasRole[account]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ and(/** @src 20:7485:7507  \"hasRole(role, account)\" */ var_account, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 20:3949:3963  \"$._roles[role]\" */ dataSlot)\n                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0x40)\n                /// @src 20:7480:7699  \"if (!hasRole(role, account)) {...\"\n                switch /** @src 20:7484:7507  \"!hasRole(role, account)\" */ iszero(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ and(sload(/** @src 20:3949:3980  \"$._roles[role].hasRole[account]\" */ dataSlot_1), /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0xff))\n                case /** @src 20:7480:7699  \"if (!hasRole(role, account)) {...\" */ 0 {\n                    /// @src 20:7676:7688  \"return false\"\n                    var := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0\n                    /// @src 20:7676:7688  \"return false\"\n                    leave\n                }\n                default /// @src 20:7480:7699  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    mstore(0, 0)\n                    mstore(0x20, /** @src 20:2968:3039  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    let dataSlot_2 := keccak256(0, 0x40)\n                    /// @src 20:7523:7554  \"$._roles[role].hasRole[account]\"\n                    let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ and(/** @src 20:7523:7554  \"$._roles[role].hasRole[account]\" */ var_account, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)))\n                    mstore(0x20, /** @src 20:7523:7537  \"$._roles[role]\" */ dataSlot_2)\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0x40)\n                    sstore(/** @src 20:7523:7554  \"$._roles[role].hasRole[account]\" */ dataSlot_3, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ or(and(sload(/** @src 20:7523:7554  \"$._roles[role].hasRole[account]\" */ dataSlot_3), /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ not(255)), /** @src 20:7557:7561  \"true\" */ 0x01))\n                    /// @src 20:7580:7620  \"RoleGranted(role, account, _msgSender())\"\n                    log4(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0, 0, /** @src 20:7580:7620  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0, and(/** @src 20:7580:7620  \"RoleGranted(role, account, _msgSender())\" */ var_account, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)), /** @src 24:966:976  \"msg.sender\" */ caller())\n                    /// @src 20:7634:7645  \"return true\"\n                    var := /** @src 20:7557:7561  \"true\" */ 0x01\n                    /// @src 20:7634:7645  \"return true\"\n                    leave\n                }\n            }\n            /// @ast-id 40016 @src 20:7318:7705  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n            function fun_grantRole(var_account) -> var\n            {\n                /// @src 20:7395:7399  \"bool\"\n                var := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0\n                mstore(0, /** @src 22:4803:4804  \"1\" */ 0x01)\n                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                mstore(0x20, /** @src 20:2968:3039  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                let dataSlot := keccak256(0, 0x40)\n                /// @src 20:3949:3980  \"$._roles[role].hasRole[account]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ and(/** @src 20:7485:7507  \"hasRole(role, account)\" */ var_account, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 20:3949:3963  \"$._roles[role]\" */ dataSlot)\n                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0x40)\n                /// @src 20:7480:7699  \"if (!hasRole(role, account)) {...\"\n                switch /** @src 20:7484:7507  \"!hasRole(role, account)\" */ iszero(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ and(sload(/** @src 20:3949:3980  \"$._roles[role].hasRole[account]\" */ dataSlot_1), /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0xff))\n                case /** @src 20:7480:7699  \"if (!hasRole(role, account)) {...\" */ 0 {\n                    /// @src 20:7676:7688  \"return false\"\n                    var := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0\n                    /// @src 20:7676:7688  \"return false\"\n                    leave\n                }\n                default /// @src 20:7480:7699  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    mstore(0, /** @src 22:4803:4804  \"1\" */ 0x01)\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    mstore(0x20, /** @src 20:2968:3039  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    let dataSlot_2 := keccak256(0, 0x40)\n                    /// @src 20:7523:7554  \"$._roles[role].hasRole[account]\"\n                    let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ and(/** @src 20:7523:7554  \"$._roles[role].hasRole[account]\" */ var_account, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)))\n                    mstore(0x20, /** @src 20:7523:7537  \"$._roles[role]\" */ dataSlot_2)\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0x40)\n                    sstore(/** @src 20:7523:7554  \"$._roles[role].hasRole[account]\" */ dataSlot_3, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ or(and(sload(/** @src 20:7523:7554  \"$._roles[role].hasRole[account]\" */ dataSlot_3), /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ not(255)), /** @src 22:4803:4804  \"1\" */ 0x01))\n                    /// @src 20:7580:7620  \"RoleGranted(role, account, _msgSender())\"\n                    log4(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0, 0, /** @src 20:7580:7620  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, /** @src 22:4803:4804  \"1\" */ 0x01, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ and(/** @src 20:7580:7620  \"RoleGranted(role, account, _msgSender())\" */ var_account, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)), /** @src 24:966:976  \"msg.sender\" */ caller())\n                    /// @src 20:7634:7645  \"return true\"\n                    var := /** @src 22:4803:4804  \"1\" */ 0x01\n                    /// @src 20:7634:7645  \"return true\"\n                    leave\n                }\n            }\n            /// @ast-id 40016 @src 20:7318:7705  \"function _grantRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n            function fun_grantRole_40016(var_role, var_account) -> var\n            {\n                /// @src 20:7395:7399  \"bool\"\n                var := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0\n                mstore(0, var_role)\n                mstore(0x20, /** @src 20:2968:3039  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                let dataSlot := keccak256(0, 0x40)\n                /// @src 20:3949:3980  \"$._roles[role].hasRole[account]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ and(/** @src 20:7485:7507  \"hasRole(role, account)\" */ var_account, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 20:3949:3963  \"$._roles[role]\" */ dataSlot)\n                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0x40)\n                /// @src 20:7480:7699  \"if (!hasRole(role, account)) {...\"\n                switch /** @src 20:7484:7507  \"!hasRole(role, account)\" */ iszero(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ and(sload(/** @src 20:3949:3980  \"$._roles[role].hasRole[account]\" */ dataSlot_1), /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0xff))\n                case /** @src 20:7480:7699  \"if (!hasRole(role, account)) {...\" */ 0 {\n                    /// @src 20:7676:7688  \"return false\"\n                    var := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0\n                    /// @src 20:7676:7688  \"return false\"\n                    leave\n                }\n                default /// @src 20:7480:7699  \"if (!hasRole(role, account)) {...\"\n                {\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    mstore(0, var_role)\n                    mstore(0x20, /** @src 20:2968:3039  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    let dataSlot_2 := keccak256(0, 0x40)\n                    /// @src 20:7523:7554  \"$._roles[role].hasRole[account]\"\n                    let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ and(/** @src 20:7523:7554  \"$._roles[role].hasRole[account]\" */ var_account, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)))\n                    mstore(0x20, /** @src 20:7523:7537  \"$._roles[role]\" */ dataSlot_2)\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0x40)\n                    sstore(/** @src 20:7523:7554  \"$._roles[role].hasRole[account]\" */ dataSlot_3, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ or(and(sload(/** @src 20:7523:7554  \"$._roles[role].hasRole[account]\" */ dataSlot_3), /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ not(255)), /** @src 20:7557:7561  \"true\" */ 0x01))\n                    /// @src 20:7580:7620  \"RoleGranted(role, account, _msgSender())\"\n                    log4(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0, 0, /** @src 20:7580:7620  \"RoleGranted(role, account, _msgSender())\" */ 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d, var_role, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ and(/** @src 20:7580:7620  \"RoleGranted(role, account, _msgSender())\" */ var_account, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)), /** @src 24:966:976  \"msg.sender\" */ caller())\n                    /// @src 20:7634:7645  \"return true\"\n                    var := /** @src 20:7557:7561  \"true\" */ 0x01\n                    /// @src 20:7634:7645  \"return true\"\n                    leave\n                }\n            }\n            /// @src 85:3769:3771  \"32\"\n            function checked_add_uint256(x, y) -> sum\n            {\n                sum := add(x, y)\n                if gt(x, sum)\n                {\n                    mstore(0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ shl(224, 0x4e487b71))\n                    /// @src 85:3769:3771  \"32\"\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            /// @src 85:4884:4961  \"DISCRIMINANT_SIZE + TOKEN_NAME_SIZE + TOKEN_SYMBOL_SIZE + TOKEN_DECIMALS_SIZE\"\n            function abi_encode_address_string_string_uint8(headStart, value0, value1, value2, value3) -> tail\n            {\n                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                /// @src 85:4884:4961  \"DISCRIMINANT_SIZE + TOKEN_NAME_SIZE + TOKEN_SYMBOL_SIZE + TOKEN_DECIMALS_SIZE\"\n                mstore(add(headStart, 32), 128)\n                let tail_1 := abi_encode_string(value1, add(headStart, 128))\n                mstore(add(headStart, 64), sub(tail_1, headStart))\n                tail := abi_encode_string(value2, tail_1)\n                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                mstore(/** @src 85:4884:4961  \"DISCRIMINANT_SIZE + TOKEN_NAME_SIZE + TOKEN_SYMBOL_SIZE + TOKEN_DECIMALS_SIZE\" */ add(headStart, 96), /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ and(value3, 0xff))\n            }\n            /// @ast-id 61384 @src 85:21996:25787  \"function _tryParseAndApplyGovernanceMessage(bytes calldata payload) private returns (bool) {...\"\n            function fun_tryParseAndApplyGovernanceMessage(var_payload_offset, var_payload_61162_length) -> var\n            {\n                /// @src 85:22081:22085  \"bool\"\n                var := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0\n                /// @src 85:22097:22161  \"if (!(payload.length > 0)) {...\"\n                if /** @src 85:22103:22121  \"payload.length > 0\" */ iszero(var_payload_61162_length)\n                /// @src 85:22097:22161  \"if (!(payload.length > 0)) {...\"\n                {\n                    /// @src 85:22138:22150  \"return false\"\n                    var := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0\n                    /// @src 85:22138:22150  \"return false\"\n                    leave\n                }\n                /// @src 85:22201:22451  \"assembly (\\\"memory-safe\\\") {...\"\n                let var_discriminant := shr(248, calldataload(var_payload_offset))\n                /// @src 85:22461:22581  \"if (!(discriminant >= ADD_VFT_MANAGER && discriminant <= uint256(TokenType.Gear))) {...\"\n                if /** @src 85:22502:22541  \"discriminant <= uint256(TokenType.Gear)\" */ gt(var_discriminant, /** @src 85:22526:22540  \"TokenType.Gear\" */ 2)\n                /// @src 85:22461:22581  \"if (!(discriminant >= ADD_VFT_MANAGER && discriminant <= uint256(TokenType.Gear))) {...\"\n                {\n                    /// @src 85:22558:22570  \"return false\"\n                    var := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0\n                    /// @src 85:22558:22570  \"return false\"\n                    leave\n                }\n                /// @src 85:22591:23115  \"if (discriminant == ADD_VFT_MANAGER) {...\"\n                if /** @src 85:22595:22626  \"discriminant == ADD_VFT_MANAGER\" */ iszero(var_discriminant)\n                /// @src 85:22591:23115  \"if (discriminant == ADD_VFT_MANAGER) {...\"\n                {\n                    /// @src 85:22642:22742  \"if (!(payload.length == ADD_VFT_MANAGER_MESSAGE_SIZE)) {...\"\n                    if /** @src 85:22646:22695  \"!(payload.length == ADD_VFT_MANAGER_MESSAGE_SIZE)\" */ iszero(/** @src 85:22648:22694  \"payload.length == ADD_VFT_MANAGER_MESSAGE_SIZE\" */ eq(var_payload_61162_length, /** @src 85:3769:3771  \"32\" */ 33))\n                    /// @src 85:22642:22742  \"if (!(payload.length == ADD_VFT_MANAGER_MESSAGE_SIZE)) {...\"\n                    {\n                        /// @src 85:22715:22727  \"return false\"\n                        var := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0\n                        /// @src 85:22715:22727  \"return false\"\n                        leave\n                    }\n                    /// @src 85:22876:22989  \"assembly (\\\"memory-safe\\\") {...\"\n                    let var_vftManager := calldataload(add(var_payload_offset, /** @src 85:22467:22498  \"discriminant >= ADD_VFT_MANAGER\" */ 1))\n                    /// @src 71:7898:7921  \"_add(set._inner, value)\"\n                    pop(fun_add(/** @src 85:23003:23031  \"_vftManagers.add(vftManager)\" */ var_vftManager))\n                    /// @src 85:23051:23078  \"VftManagerAdded(vftManager)\"\n                    let _1 := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ mload(64)\n                    mstore(_1, var_vftManager)\n                    /// @src 85:23051:23078  \"VftManagerAdded(vftManager)\"\n                    log1(_1, /** @src 85:3769:3771  \"32\" */ 0x20, /** @src 85:23051:23078  \"VftManagerAdded(vftManager)\" */ 0xc6b4ec1bc7a17331ef296e0810039347563e90c3fa496b4de270f6c5ff345abe)\n                    /// @src 85:23093:23104  \"return true\"\n                    var := /** @src 85:22467:22498  \"discriminant >= ADD_VFT_MANAGER\" */ 1\n                    /// @src 85:23093:23104  \"return true\"\n                    leave\n                }\n                /// @src 85:23125:23837  \"if (discriminant == uint256(TokenType.Ethereum)) {...\"\n                if /** @src 85:23129:23172  \"discriminant == uint256(TokenType.Ethereum)\" */ eq(var_discriminant, /** @src 85:22467:22498  \"discriminant >= ADD_VFT_MANAGER\" */ 1)\n                /// @src 85:23125:23837  \"if (discriminant == uint256(TokenType.Ethereum)) {...\"\n                {\n                    /// @src 85:23188:23296  \"if (!(payload.length == REGISTER_ETHEREUM_TOKEN_MESSAGE_SIZE)) {...\"\n                    if /** @src 85:23192:23249  \"!(payload.length == REGISTER_ETHEREUM_TOKEN_MESSAGE_SIZE)\" */ iszero(/** @src 85:23194:23248  \"payload.length == REGISTER_ETHEREUM_TOKEN_MESSAGE_SIZE\" */ eq(var_payload_61162_length, /** @src 85:3769:3771  \"32\" */ 21))\n                    /// @src 85:23188:23296  \"if (!(payload.length == REGISTER_ETHEREUM_TOKEN_MESSAGE_SIZE)) {...\"\n                    {\n                        /// @src 85:23269:23281  \"return false\"\n                        var := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0\n                        /// @src 85:23269:23281  \"return false\"\n                        leave\n                    }\n                    /// @src 85:23425:23698  \"assembly (\\\"memory-safe\\\") {...\"\n                    let var_token := shr(96, calldataload(add(var_payload_offset, /** @src 85:22467:22498  \"discriminant >= ADD_VFT_MANAGER\" */ 1)))\n                    /// @src 85:23712:23750  \"_tokens.set(token, TokenType.Ethereum)\"\n                    pop(fun_set_23163(var_token))\n                    /// @src 85:23770:23800  \"EthereumTokenRegistered(token)\"\n                    let _2 := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ mload(64)\n                    mstore(_2, var_token)\n                    /// @src 85:23770:23800  \"EthereumTokenRegistered(token)\"\n                    log1(_2, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 32, /** @src 85:23770:23800  \"EthereumTokenRegistered(token)\" */ 0xdf6d7b91d41cb55ced11681822028e1605f72d50168b3898feb40ee04259d182)\n                    /// @src 85:23815:23826  \"return true\"\n                    var := /** @src 85:22467:22498  \"discriminant >= ADD_VFT_MANAGER\" */ 1\n                    /// @src 85:23815:23826  \"return true\"\n                    leave\n                }\n                /// @src 85:23933:24029  \"if (!(payload.length == REGISTER_GEAR_TOKEN_MESSAGE_SIZE)) {...\"\n                if /** @src 85:23937:23990  \"!(payload.length == REGISTER_GEAR_TOKEN_MESSAGE_SIZE)\" */ iszero(/** @src 85:23939:23989  \"payload.length == REGISTER_GEAR_TOKEN_MESSAGE_SIZE\" */ eq(var_payload_61162_length, /** @src 85:3769:3771  \"32\" */ 66))\n                /// @src 85:23933:24029  \"if (!(payload.length == REGISTER_GEAR_TOKEN_MESSAGE_SIZE)) {...\"\n                {\n                    /// @src 85:24006:24018  \"return false\"\n                    var := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0\n                    /// @src 85:24006:24018  \"return false\"\n                    leave\n                }\n                /// @src 85:24504:24983  \"assembly (\\\"memory-safe\\\") {...\"\n                let var_tokenName := calldataload(add(var_payload_offset, /** @src 85:22467:22498  \"discriminant >= ADD_VFT_MANAGER\" */ 1))\n                /// @src 85:24504:24983  \"assembly (\\\"memory-safe\\\") {...\"\n                let var_tokenSymbol := calldataload(add(var_payload_offset, /** @src 85:3769:3771  \"32\" */ 33))\n                /// @src 85:24504:24983  \"assembly (\\\"memory-safe\\\") {...\"\n                let var_tokenDecimals := shr(/** @src 85:22201:22451  \"assembly (\\\"memory-safe\\\") {...\" */ 248, /** @src 85:24504:24983  \"assembly (\\\"memory-safe\\\") {...\" */ calldataload(add(var_payload_offset, /** @src 85:3769:3771  \"32\" */ 65)))\n                /// @src 85:25023:25035  \"tokenName[0]\"\n                let _3 := byte(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0, /** @src 85:25023:25035  \"tokenName[0]\" */ var_tokenName)\n                /// @src 85:25052:25097  \"tokenNameLength >= 1 && tokenNameLength <= 31\"\n                let expr := /** @src 85:25052:25072  \"tokenNameLength >= 1\" */ iszero(lt(_3, /** @src 85:22467:22498  \"discriminant >= ADD_VFT_MANAGER\" */ 1))\n                /// @src 85:25052:25097  \"tokenNameLength >= 1 && tokenNameLength <= 31\"\n                if expr\n                {\n                    expr := /** @src 85:25076:25097  \"tokenNameLength <= 31\" */ iszero(gt(_3, /** @src 85:25095:25097  \"31\" */ 0x1f))\n                }\n                /// @src 85:25046:25137  \"if (!(tokenNameLength >= 1 && tokenNameLength <= 31)) {...\"\n                if /** @src 85:25050:25098  \"!(tokenNameLength >= 1 && tokenNameLength <= 31)\" */ iszero(expr)\n                /// @src 85:25046:25137  \"if (!(tokenNameLength >= 1 && tokenNameLength <= 31)) {...\"\n                {\n                    /// @src 85:25114:25126  \"return false\"\n                    var := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0\n                    /// @src 85:25114:25126  \"return false\"\n                    leave\n                }\n                /// @src 85:25179:25193  \"tokenSymbol[0]\"\n                let _4 := byte(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0, /** @src 85:25179:25193  \"tokenSymbol[0]\" */ var_tokenSymbol)\n                /// @src 85:25210:25259  \"tokenSymbolLength >= 1 && tokenSymbolLength <= 31\"\n                let expr_1 := /** @src 85:25210:25232  \"tokenSymbolLength >= 1\" */ iszero(lt(_4, /** @src 85:22467:22498  \"discriminant >= ADD_VFT_MANAGER\" */ 1))\n                /// @src 85:25210:25259  \"tokenSymbolLength >= 1 && tokenSymbolLength <= 31\"\n                if expr_1\n                {\n                    expr_1 := /** @src 85:25236:25259  \"tokenSymbolLength <= 31\" */ iszero(gt(_4, /** @src 85:25257:25259  \"31\" */ 0x1f))\n                }\n                /// @src 85:25204:25299  \"if (!(tokenSymbolLength >= 1 && tokenSymbolLength <= 31)) {...\"\n                if /** @src 85:25208:25260  \"!(tokenSymbolLength >= 1 && tokenSymbolLength <= 31)\" */ iszero(expr_1)\n                /// @src 85:25204:25299  \"if (!(tokenSymbolLength >= 1 && tokenSymbolLength <= 31)) {...\"\n                {\n                    /// @src 85:25276:25288  \"return false\"\n                    var := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0\n                    /// @src 85:25276:25288  \"return false\"\n                    leave\n                }\n                /// @src 85:25338:25368  \"LibString.unpackOne(tokenName)\"\n                let expr_61335_mpos := fun_unpackOne(var_tokenName)\n                /// @src 85:25409:25441  \"LibString.unpackOne(tokenSymbol)\"\n                let expr_mpos := fun_unpackOne(var_tokenSymbol)\n                /// @src 85:25481:25560  \"new ERC20GearSupply(address(this), tokenNameStr, tokenSymbolStr, tokenDecimals)\"\n                let _5 := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ mload(64)\n                /// @src 85:25481:25560  \"new ERC20GearSupply(address(this), tokenNameStr, tokenSymbolStr, tokenDecimals)\"\n                let _6 := datasize(\"ERC20GearSupply_63178\")\n                let _7 := add(_5, _6)\n                if or(gt(_7, 0xffffffffffffffff), lt(_7, _5))\n                {\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, /** @src 85:3769:3771  \"32\" */ 65)\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    revert(0, 0x24)\n                }\n                /// @src 85:25481:25560  \"new ERC20GearSupply(address(this), tokenNameStr, tokenSymbolStr, tokenDecimals)\"\n                datacopy(_5, dataoffset(\"ERC20GearSupply_63178\"), _6)\n                let expr_address := create(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0, /** @src 85:25481:25560  \"new ERC20GearSupply(address(this), tokenNameStr, tokenSymbolStr, tokenDecimals)\" */ _5, sub(abi_encode_address_string_string_uint8(_7, /** @src 85:25509:25513  \"this\" */ address(), /** @src 85:25481:25560  \"new ERC20GearSupply(address(this), tokenNameStr, tokenSymbolStr, tokenDecimals)\" */ expr_61335_mpos, expr_mpos, var_tokenDecimals), _5))\n                if iszero(expr_address)\n                {\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    let pos := mload(64)\n                    returndatacopy(pos, 0, returndatasize())\n                    revert(pos, returndatasize())\n                }\n                let _8 := and(/** @src 85:25593:25612  \"address(gearSupply)\" */ expr_address, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1))\n                /// @src 85:25623:25664  \"_tokens.set(tokenAddress, TokenType.Gear)\"\n                pop(fun_set_23164(_8))\n                /// @src 85:25680:25758  \"GearTokenRegistered(tokenAddress, tokenNameStr, tokenSymbolStr, tokenDecimals)\"\n                let _9 := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ mload(64)\n                /// @src 85:25680:25758  \"GearTokenRegistered(tokenAddress, tokenNameStr, tokenSymbolStr, tokenDecimals)\"\n                log1(_9, sub(abi_encode_address_string_string_uint8(_9, _8, expr_61335_mpos, expr_mpos, var_tokenDecimals), _9), 0xacef1c6c805d7395b4aeee279bc679beea84f01a1f1b08be7aef2af535bba81f)\n                /// @src 85:25769:25780  \"return true\"\n                var := /** @src 85:22467:22498  \"discriminant >= ADD_VFT_MANAGER\" */ 1\n            }\n            /// @ast-id 61159 @src 85:19513:20912  \"function _tryParseAndApplyTransferMessage(bytes calldata payload) private returns (bool) {...\"\n            function fun_tryParseAndApplyTransferMessage(var_payload_61076_offset, var_payload_length) -> var\n            {\n                /// @src 85:19596:19600  \"bool\"\n                let var_1 := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0\n                /// @src 85:19596:19600  \"bool\"\n                var := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0\n                /// @src 85:19612:19697  \"if (!(payload.length == TRANSFER_MESSAGE_SIZE)) {...\"\n                if /** @src 85:19616:19658  \"!(payload.length == TRANSFER_MESSAGE_SIZE)\" */ iszero(/** @src 85:19618:19657  \"payload.length == TRANSFER_MESSAGE_SIZE\" */ eq(var_payload_length, /** @src 85:3769:3771  \"32\" */ 104))\n                /// @src 85:19612:19697  \"if (!(payload.length == TRANSFER_MESSAGE_SIZE)) {...\"\n                {\n                    /// @src 85:19674:19686  \"return false\"\n                    var := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0\n                    /// @src 85:19674:19686  \"return false\"\n                    leave\n                }\n                /// @src 85:19879:20454  \"assembly (\\\"memory-safe\\\") {...\"\n                let var_receiver := shr(96, calldataload(add(var_payload_61076_offset, /** @src 85:3769:3771  \"32\" */ 0x20)))\n                /// @src 85:19879:20454  \"assembly (\\\"memory-safe\\\") {...\"\n                let var_token := shr(96, calldataload(add(var_payload_61076_offset, /** @src 85:3769:3771  \"32\" */ 52)))\n                /// @src 85:19879:20454  \"assembly (\\\"memory-safe\\\") {...\"\n                let var_amount := calldataload(add(var_payload_61076_offset, /** @src 85:3769:3771  \"32\" */ 72))\n                /// @src 85:20490:20511  \"_tokens.tryGet(token)\"\n                let expr_component, expr_component_1 := fun_tryGet_23025(var_token)\n                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                let _1 := iszero(lt(expr_component_1, 3))\n                if _1\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x21)\n                    revert(0, 0x24)\n                }\n                /// @src 85:20522:20828  \"if (tokenType == TokenType.Unknown) {...\"\n                switch /** @src 85:20526:20556  \"tokenType == TokenType.Unknown\" */ iszero(expr_component_1)\n                case /** @src 85:20522:20828  \"if (tokenType == TokenType.Unknown) {...\" */ 0 {\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    _1 := 0\n                    /// @src 85:20614:20828  \"if (tokenType == TokenType.Ethereum) {...\"\n                    switch /** @src 85:20618:20649  \"tokenType == TokenType.Ethereum\" */ eq(expr_component_1, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 1)\n                    case /** @src 85:20614:20828  \"if (tokenType == TokenType.Ethereum) {...\" */ 0 {\n                        /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                        _1 := 0\n                        /// @src 85:20726:20828  \"if (tokenType == TokenType.Gear) {...\"\n                        if /** @src 85:20730:20757  \"tokenType == TokenType.Gear\" */ eq(expr_component_1, /** @src 85:20743:20757  \"TokenType.Gear\" */ 2)\n                        /// @src 85:20726:20828  \"if (tokenType == TokenType.Gear) {...\"\n                        {\n                            /// @src 85:20773:20817  \"IERC20Mintable(token).mint(receiver, amount)\"\n                            if iszero(extcodesize(var_token))\n                            {\n                                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                                revert(0, 0)\n                            }\n                            /// @src 85:20773:20817  \"IERC20Mintable(token).mint(receiver, amount)\"\n                            let _2 := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ mload(64)\n                            /// @src 85:20773:20817  \"IERC20Mintable(token).mint(receiver, amount)\"\n                            mstore(_2, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ shl(224, 0x40c10f19))\n                            /// @src 85:20773:20817  \"IERC20Mintable(token).mint(receiver, amount)\"\n                            let _3 := call(gas(), var_token, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0, /** @src 85:20773:20817  \"IERC20Mintable(token).mint(receiver, amount)\" */ _2, sub(abi_encode_address_uint256(add(_2, 4), var_receiver, var_amount), _2), _2, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0)\n                            /// @src 85:20773:20817  \"IERC20Mintable(token).mint(receiver, amount)\"\n                            if iszero(_3)\n                            {\n                                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                                let pos := mload(64)\n                                returndatacopy(pos, 0, returndatasize())\n                                revert(pos, returndatasize())\n                            }\n                            /// @src 85:20773:20817  \"IERC20Mintable(token).mint(receiver, amount)\"\n                            if _3\n                            {\n                                finalize_allocation(_2, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0)\n                                var_1 := 0\n                            }\n                        }\n                    }\n                    default /// @src 85:20614:20828  \"if (tokenType == TokenType.Ethereum) {...\"\n                    {\n                        /// @src 50:1328:1371  \"abi.encodeCall(token.transfer, (to, value))\"\n                        let expr_mpos := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ mload(64)\n                        /// @src 50:1328:1371  \"abi.encodeCall(token.transfer, (to, value))\"\n                        mstore(add(expr_mpos, /** @src 85:3769:3771  \"32\" */ 0x20), /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ shl(224, 0xa9059cbb))\n                        /// @src 50:1328:1371  \"abi.encodeCall(token.transfer, (to, value))\"\n                        let _4 := sub(abi_encode_address_uint256(add(expr_mpos, 36), var_receiver, var_amount), expr_mpos)\n                        mstore(expr_mpos, add(_4, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ not(31)))\n                        /// @src 50:1328:1371  \"abi.encodeCall(token.transfer, (to, value))\"\n                        finalize_allocation(expr_mpos, _4)\n                        fun_callOptionalReturn(var_token, expr_mpos)\n                    }\n                }\n                default /// @src 85:20522:20828  \"if (tokenType == TokenType.Unknown) {...\"\n                {\n                    /// @src 85:20579:20597  \"InvalidTokenType()\"\n                    mstore(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ var_1, /** @src 85:14465:14483  \"InvalidTokenType()\" */ shl(224, 0xa1e9dd9d))\n                    /// @src 85:20579:20597  \"InvalidTokenType()\"\n                    revert(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ var_1, /** @src 85:20579:20597  \"InvalidTokenType()\" */ 4)\n                }\n                /// @src 85:20843:20883  \"Bridged(sender, receiver, token, amount)\"\n                let _5 := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ mload(64)\n                mstore(_5, var_amount)\n                /// @src 85:20843:20883  \"Bridged(sender, receiver, token, amount)\"\n                log4(_5, /** @src 85:3769:3771  \"32\" */ 0x20, /** @src 85:20843:20883  \"Bridged(sender, receiver, token, amount)\" */ 0xabdd326df16eff74bb67e4a6b3d6372ceba76796f256a7b7f8577108cf5db287, /** @src 85:19879:20454  \"assembly (\\\"memory-safe\\\") {...\" */ calldataload(var_payload_61076_offset), /** @src 85:20843:20883  \"Bridged(sender, receiver, token, amount)\" */ var_receiver, var_token)\n                /// @src 85:20894:20905  \"return true\"\n                var := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 1\n            }\n            /// @ast-id 40062 @src 20:7942:8330  \"function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {...\"\n            function fun_revokeRole(var_role, var_account) -> var\n            {\n                /// @src 20:8020:8024  \"bool\"\n                var := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0\n                mstore(0, var_role)\n                mstore(0x20, /** @src 20:2968:3039  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                let dataSlot := keccak256(0, 0x40)\n                /// @src 20:3949:3980  \"$._roles[role].hasRole[account]\"\n                let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ and(/** @src 20:8109:8131  \"hasRole(role, account)\" */ var_account, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 20:3949:3963  \"$._roles[role]\" */ dataSlot)\n                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0x40)\n                /// @src 20:8105:8324  \"if (hasRole(role, account)) {...\"\n                switch /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ and(sload(/** @src 20:3949:3980  \"$._roles[role].hasRole[account]\" */ dataSlot_1), /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0xff)\n                case /** @src 20:8105:8324  \"if (hasRole(role, account)) {...\" */ 0 {\n                    /// @src 20:8301:8313  \"return false\"\n                    var := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0\n                    /// @src 20:8301:8313  \"return false\"\n                    leave\n                }\n                default /// @src 20:8105:8324  \"if (hasRole(role, account)) {...\"\n                {\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    mstore(0, var_role)\n                    mstore(0x20, /** @src 20:2968:3039  \"assembly {...\" */ 1295953201772911215391058989745868821651057887752387839782086074958115661824)\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    let dataSlot_2 := keccak256(0, 0x40)\n                    /// @src 20:8147:8178  \"$._roles[role].hasRole[account]\"\n                    let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ and(/** @src 20:8147:8178  \"$._roles[role].hasRole[account]\" */ var_account, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)))\n                    mstore(0x20, /** @src 20:8147:8161  \"$._roles[role]\" */ dataSlot_2)\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0x40)\n                    sstore(/** @src 20:8147:8178  \"$._roles[role].hasRole[account]\" */ dataSlot_3, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ and(sload(/** @src 20:8147:8178  \"$._roles[role].hasRole[account]\" */ dataSlot_3), /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ not(255)))\n                    /// @src 20:8205:8245  \"RoleRevoked(role, account, _msgSender())\"\n                    log4(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0, 0, /** @src 20:8205:8245  \"RoleRevoked(role, account, _msgSender())\" */ 0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b, var_role, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ and(/** @src 20:8205:8245  \"RoleRevoked(role, account, _msgSender())\" */ var_account, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)), /** @src 24:966:976  \"msg.sender\" */ caller())\n                    /// @src 20:8259:8270  \"return true\"\n                    var := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 1\n                    /// @src 20:8259:8270  \"return true\"\n                    leave\n                }\n            }\n            /// @ast-id 64543 @src 109:771:1017  \"function set(AddressToTokenTypeMap storage map, address key, IERC20Manager.TokenType value)...\"\n            function fun_set(var_key, var_value) -> var\n            {\n                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                let _1 := and(/** @src 109:970:982  \"uint160(key)\" */ var_key, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1))\n                if iszero(lt(var_value, 3))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x21)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _1)\n                mstore(0x20, /** @src 70:3096:3107  \"map._values\" */ 7)\n                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                sstore(keccak256(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0x40), var_value)\n                /// @src 109:917:1010  \"return EnumerableMap.set(map._inner, bytes32(uint256(uint160(key))), bytes32(uint256(value)))\"\n                var := /** @src 71:7898:7921  \"_add(set._inner, value)\" */ fun_add_53874(/** @src 85:7612:7619  \"_tokens\" */ 0x05, /** @src 70:3137:3155  \"map._keys.add(key)\" */ _1)\n            }\n            /// @ast-id 64543 @src 109:771:1017  \"function set(AddressToTokenTypeMap storage map, address key, IERC20Manager.TokenType value)...\"\n            function fun_set_23163(var_key) -> var\n            {\n                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                let _1 := and(/** @src 109:970:982  \"uint160(key)\" */ var_key, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1))\n                let cleaned := /** @src -1:-1:-1 */ 0\n                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                cleaned := /** @src -1:-1:-1 */ 0\n                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _1)\n                mstore(0x20, /** @src 70:3096:3107  \"map._values\" */ 7)\n                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                sstore(keccak256(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0x40), /** @src 85:23153:23171  \"TokenType.Ethereum\" */ 1)\n                /// @src 109:917:1010  \"return EnumerableMap.set(map._inner, bytes32(uint256(uint160(key))), bytes32(uint256(value)))\"\n                var := /** @src 71:7898:7921  \"_add(set._inner, value)\" */ fun_add_53874(/** @src 85:23712:23719  \"_tokens\" */ 0x05, /** @src 70:3137:3155  \"map._keys.add(key)\" */ _1)\n            }\n            /// @ast-id 64543 @src 109:771:1017  \"function set(AddressToTokenTypeMap storage map, address key, IERC20Manager.TokenType value)...\"\n            function fun_set_23164(var_key) -> var\n            {\n                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                let _1 := and(/** @src 109:970:982  \"uint160(key)\" */ var_key, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1))\n                let cleaned := /** @src -1:-1:-1 */ 0\n                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                cleaned := /** @src -1:-1:-1 */ 0\n                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _1)\n                mstore(0x20, /** @src 70:3096:3107  \"map._values\" */ 7)\n                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                sstore(keccak256(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0x40), /** @src 85:25649:25663  \"TokenType.Gear\" */ 2)\n                /// @src 109:917:1010  \"return EnumerableMap.set(map._inner, bytes32(uint256(uint160(key))), bytes32(uint256(value)))\"\n                var := /** @src 71:7898:7921  \"_add(set._inner, value)\" */ fun_add_53874(/** @src 85:25623:25630  \"_tokens\" */ 0x05, /** @src 70:3137:3155  \"map._keys.add(key)\" */ _1)\n            }\n            /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n            function allocate_and_zero_memory_array_array_bytes32_dyn(length) -> memPtr\n            {\n                let _1 := array_allocation_size_array_struct_TokenInfo_dyn(length)\n                let memPtr_1 := mload(64)\n                finalize_allocation(memPtr_1, _1)\n                mstore(memPtr_1, length)\n                memPtr := memPtr_1\n                calldatacopy(add(memPtr_1, 32), calldatasize(), add(array_allocation_size_array_struct_TokenInfo_dyn(length), not(31)))\n            }\n            /// @ast-id 60722 @src 85:12721:13343  \"function paginate(EnumerableSet.Bytes32Set storage bytes32Set, uint256 offset, uint256 limit)...\"\n            function fun_paginate(var_offset, var_limit) -> var_mpos\n            {\n                /// @src 85:12861:12877  \"bytes32[] memory\"\n                var_mpos := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 96\n                let length := sload(/** @src 85:11778:11868  \"assembly (\\\"memory-safe\\\") {...\" */ 8)\n                /// @src 85:12940:13010  \"if (offset >= length) {...\"\n                if /** @src 85:12944:12960  \"offset >= length\" */ iszero(lt(var_offset, length))\n                /// @src 85:12940:13010  \"if (offset >= length) {...\"\n                {\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    let size := /** @src -1:-1:-1 */ 0\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    let length_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    length_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    size := 0x20\n                    let memPtr := mload(64)\n                    finalize_allocation(memPtr, 0x20)\n                    mstore(memPtr, /** @src -1:-1:-1 */ 0)\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    let size_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    let length_2 := /** @src -1:-1:-1 */ 0\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    length_2 := /** @src -1:-1:-1 */ 0\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    size_1 := 0x20\n                    calldatacopy(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ calldatasize(), /** @src -1:-1:-1 */ 0)\n                    /// @src 85:12976:12999  \"return new bytes32[](0)\"\n                    var_mpos := memPtr\n                    leave\n                }\n                /// @src 85:13020:13048  \"uint256 end = offset + limit\"\n                let var_end := /** @src 85:13034:13048  \"offset + limit\" */ checked_add_uint256(var_offset, var_limit)\n                /// @src 85:13058:13113  \"if (end > length) {...\"\n                if /** @src 85:13062:13074  \"end > length\" */ gt(var_end, length)\n                /// @src 85:13058:13113  \"if (end > length) {...\"\n                {\n                    /// @src 85:13090:13102  \"end = length\"\n                    var_end := length\n                }\n                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                let diff := sub(var_end, var_offset)\n                if gt(diff, var_end)\n                {\n                    /// @src 85:3769:3771  \"32\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ shl(224, 0x4e487b71))\n                    /// @src 85:3769:3771  \"32\"\n                    mstore(4, 0x11)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 85:3769:3771  \"32\" */ 0x24)\n                }\n                /// @src 85:13186:13205  \"new bytes32[](size)\"\n                let expr_mpos := allocate_and_zero_memory_array_array_bytes32_dyn(diff)\n                /// @src 85:13221:13234  \"uint256 i = 0\"\n                let var_i := /** @src -1:-1:-1 */ 0\n                /// @src 85:13216:13313  \"for (uint256 i = 0; i < size; i++) {...\"\n                for { }\n                /** @src 85:13236:13244  \"i < size\" */ lt(var_i, diff)\n                /// @src 85:13221:13234  \"uint256 i = 0\"\n                {\n                    /// @src 85:13246:13249  \"i++\"\n                    var_i := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ add(/** @src 85:13246:13249  \"i++\" */ var_i, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 1)\n                }\n                /// @src 85:13246:13249  \"i++\"\n                {\n                    /// @src 71:5853:5871  \"set._values[index]\"\n                    let _1, _2 := storage_array_index_access_bytes32_dyn__ptr(/** @src 85:11778:11868  \"assembly (\\\"memory-safe\\\") {...\" */ 8, /** @src 85:13291:13301  \"offset + i\" */ checked_add_uint256(var_offset, var_i))\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    mstore(/** @src 85:13265:13302  \"result[i] = bytes32Set.at(offset + i)\" */ memory_array_index_access_struct_TokenInfo_dyn(expr_mpos, var_i), /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ shr(shl(3, _2), sload(/** @src 71:5853:5871  \"set._values[index]\" */ _1)))\n                }\n                /// @src 85:13323:13336  \"return result\"\n                var_mpos := expr_mpos\n            }\n            /// @ast-id 60722 @src 85:12721:13343  \"function paginate(EnumerableSet.Bytes32Set storage bytes32Set, uint256 offset, uint256 limit)...\"\n            function fun_paginate_23050(var_offset, var_limit) -> var_mpos\n            {\n                /// @src 85:12861:12877  \"bytes32[] memory\"\n                var_mpos := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 96\n                let length := sload(/** @src 85:10325:10332  \"_tokens\" */ 0x05)\n                /// @src 85:12940:13010  \"if (offset >= length) {...\"\n                if /** @src 85:12944:12960  \"offset >= length\" */ iszero(lt(var_offset, length))\n                /// @src 85:12940:13010  \"if (offset >= length) {...\"\n                {\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    let size := /** @src -1:-1:-1 */ 0\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    let length_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    length_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    size := 0x20\n                    let memPtr := mload(64)\n                    finalize_allocation(memPtr, 0x20)\n                    mstore(memPtr, /** @src -1:-1:-1 */ 0)\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    let size_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    let length_2 := /** @src -1:-1:-1 */ 0\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    length_2 := /** @src -1:-1:-1 */ 0\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    size_1 := 0x20\n                    calldatacopy(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ calldatasize(), /** @src -1:-1:-1 */ 0)\n                    /// @src 85:12976:12999  \"return new bytes32[](0)\"\n                    var_mpos := memPtr\n                    leave\n                }\n                /// @src 85:13020:13048  \"uint256 end = offset + limit\"\n                let var_end := /** @src 85:13034:13048  \"offset + limit\" */ checked_add_uint256(var_offset, var_limit)\n                /// @src 85:13058:13113  \"if (end > length) {...\"\n                if /** @src 85:13062:13074  \"end > length\" */ gt(var_end, length)\n                /// @src 85:13058:13113  \"if (end > length) {...\"\n                {\n                    /// @src 85:13090:13102  \"end = length\"\n                    var_end := length\n                }\n                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                let diff := sub(var_end, var_offset)\n                if gt(diff, var_end)\n                {\n                    /// @src 85:3769:3771  \"32\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ shl(224, 0x4e487b71))\n                    /// @src 85:3769:3771  \"32\"\n                    mstore(4, 0x11)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 85:3769:3771  \"32\" */ 0x24)\n                }\n                /// @src 85:13186:13205  \"new bytes32[](size)\"\n                let expr_mpos := allocate_and_zero_memory_array_array_bytes32_dyn(diff)\n                /// @src 85:13221:13234  \"uint256 i = 0\"\n                let var_i := /** @src -1:-1:-1 */ 0\n                /// @src 85:13216:13313  \"for (uint256 i = 0; i < size; i++) {...\"\n                for { }\n                /** @src 85:13236:13244  \"i < size\" */ lt(var_i, diff)\n                /// @src 85:13221:13234  \"uint256 i = 0\"\n                {\n                    /// @src 85:13246:13249  \"i++\"\n                    var_i := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ add(/** @src 85:13246:13249  \"i++\" */ var_i, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 1)\n                }\n                /// @src 85:13246:13249  \"i++\"\n                {\n                    /// @src 71:5853:5871  \"set._values[index]\"\n                    let _1, _2 := storage_array_index_access_bytes32_dyn__ptr(/** @src 85:10325:10332  \"_tokens\" */ 0x05, /** @src 85:13291:13301  \"offset + i\" */ checked_add_uint256(var_offset, var_i))\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    mstore(/** @src 85:13265:13302  \"result[i] = bytes32Set.at(offset + i)\" */ memory_array_index_access_struct_TokenInfo_dyn(expr_mpos, var_i), /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ shr(shl(3, _2), sload(/** @src 71:5853:5871  \"set._values[index]\" */ _1)))\n                }\n                /// @src 85:13323:13336  \"return result\"\n                var_mpos := expr_mpos\n            }\n            /// @ast-id 60722 @src 85:12721:13343  \"function paginate(EnumerableSet.Bytes32Set storage bytes32Set, uint256 offset, uint256 limit)...\"\n            function fun_paginate_23056(var_offset, var_limit) -> var__mpos\n            {\n                /// @src 85:12861:12877  \"bytes32[] memory\"\n                var__mpos := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 96\n                let length := sload(/** @src 85:9200:9212  \"_vftManagers\" */ 0x03)\n                /// @src 85:12940:13010  \"if (offset >= length) {...\"\n                if /** @src 85:12944:12960  \"offset >= length\" */ iszero(lt(var_offset, length))\n                /// @src 85:12940:13010  \"if (offset >= length) {...\"\n                {\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    let size := /** @src -1:-1:-1 */ 0\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    let length_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    length_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    size := 0x20\n                    let memPtr := mload(64)\n                    finalize_allocation(memPtr, 0x20)\n                    mstore(memPtr, /** @src -1:-1:-1 */ 0)\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    let size_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    let length_2 := /** @src -1:-1:-1 */ 0\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    length_2 := /** @src -1:-1:-1 */ 0\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    size_1 := 0x20\n                    calldatacopy(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ calldatasize(), /** @src -1:-1:-1 */ 0)\n                    /// @src 85:12976:12999  \"return new bytes32[](0)\"\n                    var__mpos := memPtr\n                    leave\n                }\n                /// @src 85:13020:13048  \"uint256 end = offset + limit\"\n                let var_end := /** @src 85:13034:13048  \"offset + limit\" */ checked_add_uint256(var_offset, var_limit)\n                /// @src 85:13058:13113  \"if (end > length) {...\"\n                if /** @src 85:13062:13074  \"end > length\" */ gt(var_end, length)\n                /// @src 85:13058:13113  \"if (end > length) {...\"\n                {\n                    /// @src 85:13090:13102  \"end = length\"\n                    var_end := length\n                }\n                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                let diff := sub(var_end, var_offset)\n                if gt(diff, var_end)\n                {\n                    /// @src 85:3769:3771  \"32\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ shl(224, 0x4e487b71))\n                    /// @src 85:3769:3771  \"32\"\n                    mstore(4, 0x11)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 85:3769:3771  \"32\" */ 0x24)\n                }\n                /// @src 85:13186:13205  \"new bytes32[](size)\"\n                let expr_mpos := allocate_and_zero_memory_array_array_bytes32_dyn(diff)\n                /// @src 85:13221:13234  \"uint256 i = 0\"\n                let var_i := /** @src -1:-1:-1 */ 0\n                /// @src 85:13216:13313  \"for (uint256 i = 0; i < size; i++) {...\"\n                for { }\n                /** @src 85:13236:13244  \"i < size\" */ lt(var_i, diff)\n                /// @src 85:13221:13234  \"uint256 i = 0\"\n                {\n                    /// @src 85:13246:13249  \"i++\"\n                    var_i := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ add(/** @src 85:13246:13249  \"i++\" */ var_i, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 1)\n                }\n                /// @src 85:13246:13249  \"i++\"\n                {\n                    /// @src 71:5853:5871  \"set._values[index]\"\n                    let _1, _2 := storage_array_index_access_bytes32_dyn__ptr(/** @src 85:9200:9212  \"_vftManagers\" */ 0x03, /** @src 85:13291:13301  \"offset + i\" */ checked_add_uint256(var_offset, var_i))\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    mstore(/** @src 85:13265:13302  \"result[i] = bytes32Set.at(offset + i)\" */ memory_array_index_access_struct_TokenInfo_dyn(expr_mpos, var_i), /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ shr(shl(/** @src 85:9200:9212  \"_vftManagers\" */ 0x03, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ _2), sload(/** @src 71:5853:5871  \"set._values[index]\" */ _1)))\n                }\n                /// @src 85:13323:13336  \"return result\"\n                var__mpos := expr_mpos\n            }\n            /// @ast-id 64720 @src 109:3068:3403  \"function tryGet(AddressToTokenTypeMap storage map, address key)...\"\n            function fun_tryGet_23025(var_key) -> var_exists, var_value\n            {\n                /// @src 109:3267:3331  \"EnumerableMap.tryGet(map._inner, bytes32(uint256(uint160(key))))\"\n                let expr_component, expr_component_1 := fun_tryGet(/** @src 85:14376:14383  \"_tokens\" */ 0x05, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ and(/** @src 109:3316:3328  \"uint160(key)\" */ var_key, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)))\n                if iszero(lt(expr_component_1, 3))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x21)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0x24)\n                }\n                /// @src 109:3341:3396  \"return (success, IERC20Manager.TokenType(uint256(val)))\"\n                var_exists := expr_component\n                var_value := expr_component_1\n            }\n            /// @ast-id 54020 @src 71:5101:5230  \"function _contains(Set storage set, bytes32 value) private view returns (bool) {...\"\n            function fun_contains(var_value) -> var\n            {\n                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ var_value)\n                mstore(0x20, /** @src 71:5197:5211  \"set._positions\" */ 9)\n                /// @src 71:5190:5223  \"return set._positions[value] != 0\"\n                var := /** @src 71:5197:5223  \"set._positions[value] != 0\" */ iszero(iszero(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0x40))))\n            }\n            /// @ast-id 54020 @src 71:5101:5230  \"function _contains(Set storage set, bytes32 value) private view returns (bool) {...\"\n            function fun__contains(var_value) -> var\n            {\n                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ var_value)\n                mstore(0x20, /** @src 71:5197:5211  \"set._positions\" */ 4)\n                /// @src 71:5190:5223  \"return set._positions[value] != 0\"\n                var := /** @src 71:5197:5223  \"set._positions[value] != 0\" */ iszero(iszero(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0x40))))\n            }\n            /// @ast-id 54020 @src 71:5101:5230  \"function _contains(Set storage set, bytes32 value) private view returns (bool) {...\"\n            function fun_contains_54020(var_set_54005_slot, var_value) -> var\n            {\n                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ var_value)\n                mstore(0x20, /** @src 71:5197:5211  \"set._positions\" */ add(var_set_54005_slot, 1))\n                /// @src 71:5190:5223  \"return set._positions[value] != 0\"\n                var := /** @src 71:5197:5223  \"set._positions[value] != 0\" */ iszero(iszero(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0x40))))\n            }\n            /// @ast-id 64810 @src 110:1334:1856  \"function unpackOne(bytes32 packed) internal pure returns (string memory result) {...\"\n            function fun_unpackOne(var_packed) -> var_result_mpos\n            {\n                /// @src 110:1424:1850  \"assembly (\\\"memory-safe\\\") {...\"\n                var_result_mpos := mload(0x40)\n                mstore(0x40, add(var_result_mpos, 0x40))\n                mstore(var_result_mpos, 0)\n                mstore(add(var_result_mpos, 0x1f), var_packed)\n                mstore(add(add(var_result_mpos, mload(var_result_mpos)), 0x20), 0)\n            }\n            /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n            function storage_array_index_access_bytes32_dyn__ptr(array, index) -> slot, offset\n            {\n                if iszero(lt(index, sload(array)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ array)\n                slot := add(keccak256(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0x20), index)\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @ast-id 53874 @src 71:2497:2903  \"function _add(Set storage set, bytes32 value) private returns (bool) {...\"\n            function fun__add(var_value) -> var\n            {\n                /// @src 71:2560:2564  \"bool\"\n                var := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0\n                /// @src 71:2581:2602  \"_contains(set, value)\"\n                let var_ := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0\n                mstore(0, var_value)\n                mstore(0x20, /** @src 71:5197:5211  \"set._positions\" */ 9)\n                /// @src 71:5197:5223  \"set._positions[value] != 0\"\n                let _1 := iszero(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ sload(keccak256(0, 0x40)))\n                /// @src 71:5190:5223  \"return set._positions[value] != 0\"\n                var_ := /** @src 71:5197:5223  \"set._positions[value] != 0\" */ iszero(_1)\n                /// @src 71:2576:2897  \"if (!_contains(set, value)) {...\"\n                switch /** @src 71:2580:2602  \"!_contains(set, value)\" */ _1\n                case /** @src 71:2576:2897  \"if (!_contains(set, value)) {...\" */ 0 {\n                    /// @src 71:2874:2886  \"return false\"\n                    var := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0\n                    /// @src 71:2874:2886  \"return false\"\n                    leave\n                }\n                default /// @src 71:2576:2897  \"if (!_contains(set, value)) {...\"\n                {\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    let oldLen := sload(/** @src 85:18094:18111  \"_bridgingPayments\" */ 0x08)\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    if iszero(lt(oldLen, 18446744073709551616))\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(0, 0x24)\n                    }\n                    sstore(/** @src 85:18094:18111  \"_bridgingPayments\" */ 0x08, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ add(oldLen, /** @src 71:5197:5211  \"set._positions\" */ 1))\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    let slot, offset := storage_array_index_access_bytes32_dyn__ptr(/** @src 85:18094:18111  \"_bridgingPayments\" */ 0x08, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ oldLen)\n                    let _2 := sload(slot)\n                    let shiftBits := shl(3, offset)\n                    sstore(slot, or(and(_2, not(shl(shiftBits, not(0)))), shl(shiftBits, var_value)))\n                    /// @src 71:2800:2818  \"set._values.length\"\n                    let expr := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ sload(/** @src 85:18094:18111  \"_bridgingPayments\" */ 0x08)\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    mstore(0, var_value)\n                    mstore(0x20, /** @src 71:5197:5211  \"set._positions\" */ 9)\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    sstore(keccak256(0, 0x40), expr)\n                    /// @src 71:2832:2843  \"return true\"\n                    var := /** @src 71:5197:5211  \"set._positions\" */ 1\n                    /// @src 71:2832:2843  \"return true\"\n                    leave\n                }\n            }\n            /// @ast-id 53874 @src 71:2497:2903  \"function _add(Set storage set, bytes32 value) private returns (bool) {...\"\n            function fun_add(var_value) -> var\n            {\n                /// @src 71:2560:2564  \"bool\"\n                var := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0\n                /// @src 71:2581:2602  \"_contains(set, value)\"\n                let var_1 := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0\n                mstore(0, var_value)\n                mstore(0x20, /** @src 71:5197:5211  \"set._positions\" */ 4)\n                /// @src 71:5197:5223  \"set._positions[value] != 0\"\n                let _1 := iszero(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ sload(keccak256(0, 0x40)))\n                /// @src 71:5190:5223  \"return set._positions[value] != 0\"\n                var_1 := /** @src 71:5197:5223  \"set._positions[value] != 0\" */ iszero(_1)\n                /// @src 71:2576:2897  \"if (!_contains(set, value)) {...\"\n                switch /** @src 71:2580:2602  \"!_contains(set, value)\" */ _1\n                case /** @src 71:2576:2897  \"if (!_contains(set, value)) {...\" */ 0 {\n                    /// @src 71:2874:2886  \"return false\"\n                    var := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0\n                    /// @src 71:2874:2886  \"return false\"\n                    leave\n                }\n                default /// @src 71:2576:2897  \"if (!_contains(set, value)) {...\"\n                {\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    let oldLen := sload(3)\n                    if iszero(lt(oldLen, 18446744073709551616))\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(/** @src 71:5197:5211  \"set._positions\" */ 4, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0x41)\n                        revert(0, 0x24)\n                    }\n                    sstore(3, add(oldLen, /** @src 71:5197:5211  \"set._positions\" */ 1))\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    let slot, offset := storage_array_index_access_bytes32_dyn__ptr(3, oldLen)\n                    let _2 := sload(slot)\n                    let shiftBits := shl(3, offset)\n                    sstore(slot, or(and(_2, not(shl(shiftBits, not(0)))), shl(shiftBits, var_value)))\n                    /// @src 71:2800:2818  \"set._values.length\"\n                    let expr := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ sload(3)\n                    mstore(0, var_value)\n                    mstore(0x20, /** @src 71:5197:5211  \"set._positions\" */ 4)\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    sstore(keccak256(0, 0x40), expr)\n                    /// @src 71:2832:2843  \"return true\"\n                    var := /** @src 71:5197:5211  \"set._positions\" */ 1\n                    /// @src 71:2832:2843  \"return true\"\n                    leave\n                }\n            }\n            /// @ast-id 53874 @src 71:2497:2903  \"function _add(Set storage set, bytes32 value) private returns (bool) {...\"\n            function fun_add_53874(var_set_slot, var_value) -> var\n            {\n                /// @src 71:2560:2564  \"bool\"\n                var := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0\n                /// @src 71:2576:2897  \"if (!_contains(set, value)) {...\"\n                switch /** @src 71:2580:2602  \"!_contains(set, value)\" */ iszero(/** @src 71:2581:2602  \"_contains(set, value)\" */ fun_contains_54020(var_set_slot, var_value))\n                case /** @src 71:2576:2897  \"if (!_contains(set, value)) {...\" */ 0 {\n                    /// @src 71:2874:2886  \"return false\"\n                    var := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0\n                    /// @src 71:2874:2886  \"return false\"\n                    leave\n                }\n                default /// @src 71:2576:2897  \"if (!_contains(set, value)) {...\"\n                {\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    let oldLen := sload(var_set_slot)\n                    if iszero(lt(oldLen, 18446744073709551616))\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(0, 0x24)\n                    }\n                    sstore(var_set_slot, add(oldLen, 1))\n                    let slot, offset := storage_array_index_access_bytes32_dyn__ptr(var_set_slot, oldLen)\n                    let _1 := sload(slot)\n                    let shiftBits := shl(3, offset)\n                    sstore(slot, or(and(_1, not(shl(shiftBits, not(0)))), shl(shiftBits, var_value)))\n                    /// @src 71:2800:2818  \"set._values.length\"\n                    let expr := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ sload(/** @src 71:2800:2818  \"set._values.length\" */ var_set_slot)\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    mstore(0, var_value)\n                    mstore(0x20, /** @src 71:2776:2790  \"set._positions\" */ add(var_set_slot, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 1))\n                    sstore(keccak256(0, 0x40), expr)\n                    /// @src 71:2832:2843  \"return true\"\n                    var := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 1\n                    /// @src 71:2832:2843  \"return true\"\n                    leave\n                }\n            }\n            /// @ast-id 40434 @src 22:7082:7223  \"function _checkInitializing() internal view virtual {...\"\n            function fun_checkInitializing()\n            {\n                /// @src 22:7144:7217  \"if (!_isInitializing()) {...\"\n                if /** @src 22:7148:7166  \"!_isInitializing()\" */ iszero(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ and(shr(64, sload(/** @src 22:3147:3213  \"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\" */ 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00)), /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0xff))\n                /// @src 22:7144:7217  \"if (!_isInitializing()) {...\"\n                {\n                    /// @src 22:7189:7206  \"NotInitializing()\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 22:7189:7206  \"NotInitializing()\" */ shl(227, 0x1afcd79f))\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 22:7189:7206  \"NotInitializing()\" */ 4)\n                }\n            }\n            /// @ast-id 51274 @src 70:5170:5475  \"function tryGet(Bytes32ToBytes32Map storage map, bytes32 key) internal view returns (bool exists, bytes32 value) {...\"\n            function fun_tryGet(var_map_slot, var_key) -> var_exists, var_value\n            {\n                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ var_key)\n                mstore(0x20, /** @src 70:5307:5318  \"map._values\" */ add(var_map_slot, 2))\n                /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                let _1 := sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 0x40))\n                /// @src 70:5333:5469  \"if (val == bytes32(0)) {...\"\n                switch /** @src 70:5337:5354  \"val == bytes32(0)\" */ iszero(_1)\n                case /** @src 70:5333:5469  \"if (val == bytes32(0)) {...\" */ 0 {\n                    /// @src 70:5440:5458  \"return (true, val)\"\n                    var_exists := /** @src 70:5448:5452  \"true\" */ 0x01\n                    /// @src 70:5440:5458  \"return (true, val)\"\n                    var_value := _1\n                    leave\n                }\n                default /// @src 70:5333:5469  \"if (val == bytes32(0)) {...\"\n                {\n                    /// @src 70:5370:5409  \"return (contains(map, key), bytes32(0))\"\n                    var_exists := /** @src 71:8806:8834  \"_contains(set._inner, value)\" */ fun_contains_54020(var_map_slot, var_key)\n                    /// @src 70:5370:5409  \"return (contains(map, key), bytes32(0))\"\n                    var_value := /** @src -1:-1:-1 */ 0\n                    /// @src 70:5370:5409  \"return (contains(map, key), bytes32(0))\"\n                    leave\n                }\n            }\n            /// @ast-id 43453 @src 50:8370:9090  \"function _callOptionalReturn(IERC20 token, bytes memory data) private {...\"\n            function fun_callOptionalReturn(var_token_address, var_data_mpos)\n            {\n                /// @src 50:8507:8928  \"assembly (\\\"memory-safe\\\") {...\"\n                if iszero(call(gas(), var_token_address, /** @src -1:-1:-1 */ 0, /** @src 50:8507:8928  \"assembly (\\\"memory-safe\\\") {...\" */ add(var_data_mpos, 0x20), mload(var_data_mpos), /** @src -1:-1:-1 */ 0, /** @src 50:8507:8928  \"assembly (\\\"memory-safe\\\") {...\" */ 0x20))\n                {\n                    let usr$ptr := mload(0x40)\n                    returndatacopy(usr$ptr, /** @src -1:-1:-1 */ 0, /** @src 50:8507:8928  \"assembly (\\\"memory-safe\\\") {...\" */ returndatasize())\n                    revert(usr$ptr, returndatasize())\n                }\n                let var_returnSize := returndatasize()\n                let var_returnValue := mload(/** @src -1:-1:-1 */ 0)\n                /// @src 50:8942:9010  \"returnSize == 0 ? address(token).code.length == 0 : returnValue != 1\"\n                let expr := /** @src -1:-1:-1 */ 0\n                /// @src 50:8942:9010  \"returnSize == 0 ? address(token).code.length == 0 : returnValue != 1\"\n                switch /** @src 50:8942:8957  \"returnSize == 0\" */ iszero(var_returnSize)\n                case /** @src 50:8942:9010  \"returnSize == 0 ? address(token).code.length == 0 : returnValue != 1\" */ 0 {\n                    expr := /** @src 50:8994:9010  \"returnValue != 1\" */ iszero(eq(var_returnValue, /** @src 50:9009:9010  \"1\" */ 0x01))\n                }\n                default /// @src 50:8942:9010  \"returnSize == 0 ? address(token).code.length == 0 : returnValue != 1\"\n                {\n                    expr := /** @src 50:8960:8991  \"address(token).code.length == 0\" */ iszero(/** @src 50:8960:8986  \"address(token).code.length\" */ extcodesize(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ and(/** @src 50:8960:8974  \"address(token)\" */ var_token_address, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1))))\n                }\n                /// @src 50:8938:9084  \"if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {...\"\n                if expr\n                {\n                    /// @src 50:9033:9073  \"SafeERC20FailedOperation(address(token))\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 50:9033:9073  \"SafeERC20FailedOperation(address(token))\" */ shl(224, 0x5274afe7))\n                    /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                    mstore(/** @src 50:9033:9073  \"SafeERC20FailedOperation(address(token))\" */ 4, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ and(/** @src 50:9058:9072  \"address(token)\" */ var_token_address, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ sub(shl(160, 1), 1)))\n                    /// @src 50:9033:9073  \"SafeERC20FailedOperation(address(token))\"\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 36)\n                }\n            }\n            /// @ast-id 43712 @src 51:4437:5019  \"function verifyCallResultFromTarget(...\"\n            function fun_verifyCallResultFromTarget(var_target, var_success, var_returndata_mpos) -> var_43682_mpos\n            {\n                /// @src 51:4581:4593  \"bytes memory\"\n                var_43682_mpos := /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 96\n                /// @src 51:4605:5013  \"if (!success) {...\"\n                switch /** @src 51:4609:4617  \"!success\" */ iszero(var_success)\n                case /** @src 51:4605:5013  \"if (!success) {...\" */ 0 {\n                    /// @src 51:4857:4906  \"returndata.length == 0 && target.code.length == 0\"\n                    let expr := /** @src 51:4857:4879  \"returndata.length == 0\" */ iszero(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ mload(/** @src 51:4857:4874  \"returndata.length\" */ var_returndata_mpos))\n                    /// @src 51:4857:4906  \"returndata.length == 0 && target.code.length == 0\"\n                    if expr\n                    {\n                        expr := /** @src 51:4883:4906  \"target.code.length == 0\" */ iszero(/** @src 51:4883:4901  \"target.code.length\" */ extcodesize(var_target))\n                    }\n                    /// @src 51:4853:4972  \"if (returndata.length == 0 && target.code.length == 0) {...\"\n                    if expr\n                    {\n                        /// @src 51:4933:4957  \"AddressEmptyCode(target)\"\n                        mstore(/** @src 51:4878:4879  \"0\" */ 0x00, /** @src 51:4933:4957  \"AddressEmptyCode(target)\" */ shl(224, 0x9996b315))\n                        /// @src 85:1537:25789  \"contract ERC20Manager is...\"\n                        mstore(/** @src 51:4933:4957  \"AddressEmptyCode(target)\" */ 4, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ and(var_target, sub(shl(160, 1), 1)))\n                        /// @src 51:4933:4957  \"AddressEmptyCode(target)\"\n                        revert(/** @src 51:4878:4879  \"0\" */ 0x00, /** @src 85:1537:25789  \"contract ERC20Manager is...\" */ 36)\n                    }\n                    /// @src 51:4985:5002  \"return returndata\"\n                    var_43682_mpos := var_returndata_mpos\n                    leave\n                }\n                default /// @src 51:4605:5013  \"if (!success) {...\"\n                {\n                    /// @src 51:5686:5987  \"if (returndata.length > 0) {...\"\n                    switch /** @src 51:5690:5711  \"returndata.length > 0\" */ iszero(iszero(/** @src 85:1537:25789  \"contract ERC20Manager is...\" */ mload(/** @src 51:5690:5707  \"returndata.length\" */ var_returndata_mpos)))\n                    case /** @src 51:5686:5987  \"if (returndata.length > 0) {...\" */ 0 {\n                        /// @src 51:5957:5976  \"Errors.FailedCall()\"\n                        mstore(/** @src 51:5710:5711  \"0\" */ 0x00, /** @src 51:5957:5976  \"Errors.FailedCall()\" */ shl(224, 0xd6bda275))\n                        revert(/** @src 51:5710:5711  \"0\" */ 0x00, /** @src 51:5957:5976  \"Errors.FailedCall()\" */ 4)\n                    }\n                    default /// @src 51:5686:5987  \"if (returndata.length > 0) {...\"\n                    {\n                        /// @src 51:5815:5920  \"assembly (\\\"memory-safe\\\") {...\"\n                        revert(add(var_returndata_mpos, 0x20), mload(var_returndata_mpos))\n                    }\n                }\n            }\n        }\n        /// @use-src 28:\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\", 54:\"lib/openzeppelin-contracts/contracts/utils/Context.sol\", 84:\"src/BridgingPayment.sol\", 95:\"src/interfaces/IBridgingPayment.sol\"\n        object \"BridgingPayment_60053\" {\n            code {\n                {\n                    /// @src 84:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\"\n                    let _1 := memoryguard(0xa0)\n                    if callvalue() { revert(0, 0) }\n                    let programSize := datasize(\"BridgingPayment_60053\")\n                    let argSize := sub(codesize(), programSize)\n                    let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n                    if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 84:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 84:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ 0x24)\n                    }\n                    mstore(64, newFreePtr)\n                    codecopy(_1, programSize, argSize)\n                    if slt(sub(add(_1, argSize), _1), 96)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 84:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\"\n                    let value0 := abi_decode_address_fromMemory(_1)\n                    let value := mload(add(_1, 32))\n                    let _2 := and(abi_decode_address_fromMemory(add(_1, 64)), sub(shl(160, 1), 1))\n                    /// @src 28:1269:1364  \"if (initialOwner == address(0)) {...\"\n                    if /** @src 28:1273:1299  \"initialOwner == address(0)\" */ iszero(/** @src 84:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ _2)\n                    /// @src 28:1269:1364  \"if (initialOwner == address(0)) {...\"\n                    {\n                        /// @src 28:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 28:1322:1353  \"OwnableInvalidOwner(address(0))\" */ shl(224, 0x1e4fbdf7))\n                        /// @src 84:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\"\n                        mstore(/** @src 28:1322:1353  \"OwnableInvalidOwner(address(0))\" */ 4, /** @src -1:-1:-1 */ 0)\n                        /// @src 28:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 84:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ 36)\n                    }\n                    let _3 := sload(/** @src -1:-1:-1 */ 0)\n                    /// @src 84:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\"\n                    sstore(/** @src -1:-1:-1 */ 0, /** @src 84:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ or(and(_3, not(sub(shl(160, 1), 1))), _2))\n                    /// @src 28:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                    let _4 := /** @src 84:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ mload(64)\n                    /// @src 28:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                    log3(/** @src -1:-1:-1 */ 0, 0, /** @src 28:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 84:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ and(_3, sub(shl(160, 1), 1)), /** @src 28:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ _2)\n                    /// @src 84:1186:1215  \"ERC20_MANAGER = _erc20Manager\"\n                    mstore(128, value0)\n                    /// @src 84:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\"\n                    sstore(1, value)\n                    let _5 := datasize(\"BridgingPayment_60053_deployed\")\n                    codecopy(_4, dataoffset(\"BridgingPayment_60053_deployed\"), _5)\n                    setimmutable(_4, \"59947\", mload(/** @src 84:1186:1215  \"ERC20_MANAGER = _erc20Manager\" */ 128))\n                    /// @src 84:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\"\n                    return(_4, _5)\n                }\n                function abi_decode_address_fromMemory(offset) -> value\n                {\n                    value := mload(offset)\n                    if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                }\n            }\n            /// @use-src 28:\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\", 54:\"lib/openzeppelin-contracts/contracts/utils/Context.sol\", 84:\"src/BridgingPayment.sol\"\n            object \"BridgingPayment_60053_deployed\" {\n                code {\n                    {\n                        /// @src 84:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\"\n                        mstore(64, memoryguard(0x80))\n                        if iszero(lt(calldatasize(), 4))\n                        {\n                            switch shr(224, calldataload(0))\n                            case 0x29610252 {\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                /// @src 84:1721:1804  \"if (msg.sender != ERC20_MANAGER) {...\"\n                                if /** @src 84:1725:1752  \"msg.sender != ERC20_MANAGER\" */ iszero(eq(/** @src 84:1725:1735  \"msg.sender\" */ caller(), /** @src 84:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ and(/** @src 84:1739:1752  \"ERC20_MANAGER\" */ loadimmutable(\"59947\"), /** @src 84:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ sub(shl(160, 1), 1))))\n                                /// @src 84:1721:1804  \"if (msg.sender != ERC20_MANAGER) {...\"\n                                {\n                                    /// @src 84:1775:1793  \"OnlyErc20Manager()\"\n                                    mstore(/** @src 84:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ 0, /** @src 84:1775:1793  \"OnlyErc20Manager()\" */ shl(225, 0x064917ff))\n                                    revert(/** @src 84:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ 0, 4)\n                                }\n                                /// @src 84:2112:2186  \"if (msg.value != fee) {...\"\n                                if /** @src 84:2116:2132  \"msg.value != fee\" */ iszero(eq(/** @src 84:2116:2125  \"msg.value\" */ callvalue(), /** @src 84:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ sload(/** @src 84:2129:2132  \"fee\" */ 0x01)))\n                                /// @src 84:2112:2186  \"if (msg.value != fee) {...\"\n                                {\n                                    /// @src 84:2155:2175  \"IncorrectFeeAmount()\"\n                                    mstore(/** @src 84:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ 0, /** @src 84:2155:2175  \"IncorrectFeeAmount()\" */ shl(224, 0x1fbbed95))\n                                    revert(/** @src 84:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ 0, 4)\n                                }\n                                /// @src 84:2214:2248  \"owner().call{value: msg.value}(\\\"\\\")\"\n                                let expr_component := call(gas(), /** @src 84:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ and(sload(0), sub(shl(160, 1), 1)), /** @src 84:2116:2125  \"msg.value\" */ callvalue(), /** @src 84:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ 0, 0, 0, 0)\n                                /// @src 84:2214:2248  \"owner().call{value: msg.value}(\\\"\\\")\"\n                                let data := /** @src 84:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ 0\n                                switch returndatasize()\n                                case 0 { data := 96 }\n                                default {\n                                    let _1 := returndatasize()\n                                    if gt(_1, 0xffffffffffffffff)\n                                    {\n                                        mstore(0, shl(224, 0x4e487b71))\n                                        mstore(4, 0x41)\n                                        revert(0, 0x24)\n                                    }\n                                    let memPtr := mload(64)\n                                    let newFreePtr := add(memPtr, and(add(and(add(_1, 31), not(31)), 63), not(31)))\n                                    if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                                    {\n                                        mstore(0, shl(224, 0x4e487b71))\n                                        mstore(4, 0x41)\n                                        revert(0, 0x24)\n                                    }\n                                    mstore(64, newFreePtr)\n                                    mstore(memPtr, _1)\n                                    data := memPtr\n                                    returndatacopy(add(memPtr, 0x20), 0, returndatasize())\n                                }\n                                /// @src 84:2258:2318  \"if (!success) {...\"\n                                if /** @src 84:2262:2270  \"!success\" */ iszero(expr_component)\n                                /// @src 84:2258:2318  \"if (!success) {...\"\n                                {\n                                    /// @src 84:2293:2307  \"PayFeeFailed()\"\n                                    mstore(/** @src 84:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ 0, /** @src 84:2293:2307  \"PayFeeFailed()\" */ shl(225, 0x53048b49))\n                                    revert(/** @src 84:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ 0, 4)\n                                }\n                                /// @src 84:2333:2342  \"FeePaid()\"\n                                log1(/** @src 84:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ 0, 0, /** @src 84:2333:2342  \"FeePaid()\" */ 0xaaeea0b595e409578c26dd16fa1bdb3a29a4d874694ecef3ca96376940f5fbfb)\n                                /// @src 84:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\"\n                                return(0, 0)\n                            }\n                            case 0x69fe0e2d {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                /// @src 28:1500:1562  \"modifier onlyOwner() {...\"\n                                fun_checkOwner()\n                                /// @src 84:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\"\n                                sstore(1, calldataload(4))\n                                return(0, 0)\n                            }\n                            case 0x715018a6 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                /// @src 28:1500:1562  \"modifier onlyOwner() {...\"\n                                fun_checkOwner()\n                                /// @src 84:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\"\n                                let _2 := sload(0)\n                                sstore(0, and(_2, shl(160, 0xffffffffffffffffffffffff)))\n                                /// @src 28:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                                log3(/** @src 84:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ 0, 0, /** @src 28:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 84:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ and(_2, sub(shl(160, 1), 1)), 0)\n                                return(0, 0)\n                            }\n                            case 0x86ea825c {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let memPos := mload(64)\n                                mstore(memPos, and(/** @src 84:1390:1403  \"ERC20_MANAGER\" */ loadimmutable(\"59947\"), /** @src 84:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ sub(shl(160, 1), 1)))\n                                return(memPos, 32)\n                            }\n                            case 0x8da5cb5b {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let value := and(sload(0), sub(shl(160, 1), 1))\n                                let memPos_1 := mload(64)\n                                mstore(memPos_1, value)\n                                return(memPos_1, 32)\n                            }\n                            case 0xddca3f43 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let _3 := sload(/** @src 84:681:699  \"uint256 public fee\" */ 1)\n                                /// @src 84:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\"\n                                let memPos_2 := mload(64)\n                                mstore(memPos_2, _3)\n                                return(memPos_2, 32)\n                            }\n                            case 0xf2fde38b {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                let value_1 := calldataload(4)\n                                let _4 := and(value_1, sub(shl(160, 1), 1))\n                                if iszero(eq(value_1, _4)) { revert(0, 0) }\n                                /// @src 28:1500:1562  \"modifier onlyOwner() {...\"\n                                fun_checkOwner()\n                                /// @src 28:2623:2714  \"if (newOwner == address(0)) {...\"\n                                if /** @src 28:2627:2649  \"newOwner == address(0)\" */ iszero(/** @src 84:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ _4)\n                                /// @src 28:2623:2714  \"if (newOwner == address(0)) {...\"\n                                {\n                                    /// @src 28:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                                    mstore(/** @src 84:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ 0, /** @src 28:2672:2703  \"OwnableInvalidOwner(address(0))\" */ shl(224, 0x1e4fbdf7))\n                                    /// @src 84:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\"\n                                    mstore(4, 0)\n                                    /// @src 28:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                                    revert(/** @src 84:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ 0, 36)\n                                }\n                                let _5 := sload(0)\n                                sstore(0, or(and(_5, shl(160, 0xffffffffffffffffffffffff)), _4))\n                                /// @src 28:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                                log3(/** @src 84:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ 0, 0, /** @src 28:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 84:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ and(_5, sub(shl(160, 1), 1)), /** @src 28:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ _4)\n                                /// @src 84:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\"\n                                return(0, 0)\n                            }\n                        }\n                        revert(0, 0)\n                    }\n                    /// @ast-id 41122 @src 28:1796:1958  \"function _checkOwner() internal view virtual {...\"\n                    function fun_checkOwner()\n                    {\n                        /// @src 84:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\"\n                        let value := and(sload(/** @src 28:1710:1716  \"_owner\" */ 0x00), /** @src 84:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ sub(shl(160, 1), 1))\n                        /// @src 28:1851:1952  \"if (owner() != _msgSender()) {...\"\n                        if /** @src 28:1855:1878  \"owner() != _msgSender()\" */ iszero(eq(/** @src 84:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ value, /** @src 54:735:745  \"msg.sender\" */ caller()))\n                        /// @src 28:1851:1952  \"if (owner() != _msgSender()) {...\"\n                        {\n                            /// @src 28:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                            mstore(/** @src 28:1710:1716  \"_owner\" */ 0x00, /** @src 28:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\" */ shl(224, 0x118cdaa7))\n                            /// @src 84:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\"\n                            mstore(/** @src 28:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\" */ 4, /** @src 54:735:745  \"msg.sender\" */ caller())\n                            /// @src 28:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                            revert(/** @src 28:1710:1716  \"_owner\" */ 0x00, /** @src 84:575:2351  \"contract BridgingPayment is IBridgingPayment, Ownable {...\" */ 36)\n                        }\n                    }\n                }\n                data \".metadata\" hex\"\"\n            }\n        }\n        /// @use-src 28:\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\", 33:\"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\", 35:\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\", 44:\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\", 45:\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\", 46:\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol\", 47:\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\", 48:\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\", 49:\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\", 54:\"lib/openzeppelin-contracts/contracts/utils/Context.sol\", 56:\"lib/openzeppelin-contracts/contracts/utils/Nonces.sol\", 58:\"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\", 60:\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\", 63:\"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\", 94:\"src/erc20/managed/ERC20GearSupply.sol\"\n        object \"ERC20GearSupply_63178\" {\n            code {\n                {\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    let _1 := memoryguard(0x0160)\n                    mstore(64, _1)\n                    if callvalue() { revert(0, 0) }\n                    let programSize := datasize(\"ERC20GearSupply_63178\")\n                    let argSize := sub(codesize(), programSize)\n                    finalize_allocation(_1, argSize)\n                    codecopy(_1, programSize, argSize)\n                    let _2 := add(_1, argSize)\n                    if slt(sub(_2, _1), 128)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    let value := mload(_1)\n                    let _3 := and(value, sub(shl(160, 1), 1))\n                    if iszero(eq(value, _3))\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    let offset := mload(add(_1, 32))\n                    if gt(offset, sub(shl(64, 1), 1))\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    let value1 := abi_decode_string_fromMemory(add(_1, offset), _2)\n                    let offset_1 := mload(add(_1, 64))\n                    if gt(offset_1, sub(shl(64, 1), 1))\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    let value2 := abi_decode_string_fromMemory(add(_1, offset_1), _2)\n                    let value_1 := mload(add(_1, 96))\n                    let _4 := and(value_1, 0xff)\n                    if iszero(eq(value_1, _4))\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    let size := /** @src -1:-1:-1 */ 0\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    let _5 := /** @src -1:-1:-1 */ 0\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    _5 := /** @src -1:-1:-1 */ 0\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    size := 64\n                    let memPtr := mload(size)\n                    finalize_allocation(memPtr, size)\n                    mstore(memPtr, 1)\n                    let _6 := add(memPtr, 32)\n                    mstore(_6, \"1\")\n                    let newLen := mload(value1)\n                    if gt(newLen, sub(shl(64, 1), 1))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x24)\n                    }\n                    let _7 := sload(/** @src 44:1648:1661  \"_name = name_\" */ 0x03)\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    let length := /** @src -1:-1:-1 */ 0\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    length := shr(1, _7)\n                    let outOfPlaceEncoding := and(_7, 1)\n                    if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                    if eq(outOfPlaceEncoding, lt(length, 32))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x22)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x24)\n                    }\n                    if gt(length, 31)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 44:1648:1661  \"_name = name_\" */ 0x03)\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 32)\n                        let deleteStart := add(data, shr(5, add(newLen, 31)))\n                        if lt(newLen, 32) { deleteStart := data }\n                        let _8 := add(data, shr(5, add(length, 31)))\n                        let start := deleteStart\n                        for { } lt(start, _8) { start := add(start, 1) }\n                        {\n                            sstore(start, /** @src -1:-1:-1 */ 0)\n                        }\n                    }\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    let srcOffset := /** @src -1:-1:-1 */ 0\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    srcOffset := 32\n                    switch gt(newLen, 31)\n                    case 1 {\n                        let loopEnd := and(newLen, not(31))\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 44:1648:1661  \"_name = name_\" */ 0x03)\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ srcOffset)\n                        let i := /** @src -1:-1:-1 */ 0\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        for { } lt(i, loopEnd) { i := add(i, 32) }\n                        {\n                            sstore(dstPtr, mload(add(value1, srcOffset)))\n                            dstPtr := add(dstPtr, 1)\n                            srcOffset := add(srcOffset, 32)\n                        }\n                        if lt(loopEnd, newLen)\n                        {\n                            let lastValue := mload(add(value1, srcOffset))\n                            sstore(dstPtr, and(lastValue, not(shr(and(shl(/** @src 44:1648:1661  \"_name = name_\" */ 0x03, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ newLen), 248), not(0)))))\n                        }\n                        sstore(/** @src 44:1648:1661  \"_name = name_\" */ 0x03, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ add(shl(1, newLen), 1))\n                    }\n                    default {\n                        let value_2 := /** @src -1:-1:-1 */ 0\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        if newLen\n                        {\n                            value_2 := mload(add(value1, srcOffset))\n                        }\n                        sstore(/** @src 44:1648:1661  \"_name = name_\" */ 0x03, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ or(and(value_2, not(shr(shl(/** @src 44:1648:1661  \"_name = name_\" */ 0x03, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ newLen), not(0)))), shl(1, newLen)))\n                    }\n                    let newLen_1 := mload(value2)\n                    if gt(newLen_1, sub(shl(64, 1), 1))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ shl(224, 0x4e487b71))\n                        mstore(/** @src 44:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x24)\n                    }\n                    let _9 := sload(/** @src 44:1671:1688  \"_symbol = symbol_\" */ 0x04)\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    let length_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    length_1 := shr(1, _9)\n                    let outOfPlaceEncoding_1 := and(_9, 1)\n                    if iszero(outOfPlaceEncoding_1)\n                    {\n                        length_1 := and(length_1, 0x7f)\n                    }\n                    if eq(outOfPlaceEncoding_1, lt(length_1, 32))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ shl(224, 0x4e487b71))\n                        mstore(/** @src 44:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x22)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x24)\n                    }\n                    if gt(length_1, 31)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 44:1671:1688  \"_symbol = symbol_\" */ 0x04)\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        let data_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 32)\n                        let deleteStart_1 := add(data_1, shr(5, add(newLen_1, 31)))\n                        if lt(newLen_1, 32) { deleteStart_1 := data_1 }\n                        let _10 := add(data_1, shr(5, add(length_1, 31)))\n                        let start_1 := deleteStart_1\n                        for { } lt(start_1, _10) { start_1 := add(start_1, 1) }\n                        {\n                            sstore(start_1, /** @src -1:-1:-1 */ 0)\n                        }\n                    }\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    let srcOffset_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    srcOffset_1 := 32\n                    switch gt(newLen_1, 31)\n                    case 1 {\n                        let loopEnd_1 := and(newLen_1, not(31))\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 44:1671:1688  \"_symbol = symbol_\" */ 0x04)\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        let dstPtr_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ srcOffset_1)\n                        let i_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, 32) }\n                        {\n                            sstore(dstPtr_1, mload(add(value2, srcOffset_1)))\n                            dstPtr_1 := add(dstPtr_1, 1)\n                            srcOffset_1 := add(srcOffset_1, 32)\n                        }\n                        if lt(loopEnd_1, newLen_1)\n                        {\n                            let lastValue_1 := mload(add(value2, srcOffset_1))\n                            sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(/** @src 44:1648:1661  \"_name = name_\" */ 0x03, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ newLen_1), 248), not(0)))))\n                        }\n                        sstore(/** @src 44:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ add(shl(1, newLen_1), 1))\n                    }\n                    default {\n                        let value_3 := /** @src -1:-1:-1 */ 0\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        if newLen_1\n                        {\n                            value_3 := mload(add(value2, srcOffset_1))\n                        }\n                        sstore(/** @src 44:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ or(and(value_3, not(shr(shl(/** @src 44:1648:1661  \"_name = name_\" */ 0x03, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ newLen_1), not(0)))), shl(1, newLen_1)))\n                    }\n                    /// @src 28:1269:1364  \"if (initialOwner == address(0)) {...\"\n                    if /** @src 28:1273:1299  \"initialOwner == address(0)\" */ iszero(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _3)\n                    /// @src 28:1269:1364  \"if (initialOwner == address(0)) {...\"\n                    {\n                        /// @src 28:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 28:1322:1353  \"OwnableInvalidOwner(address(0))\" */ shl(224, 0x1e4fbdf7))\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        mstore(/** @src 44:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src -1:-1:-1 */ 0)\n                        /// @src 28:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 36)\n                    }\n                    let _11 := sload(/** @src 28:3004:3010  \"_owner\" */ 0x05)\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    sstore(/** @src 28:3004:3010  \"_owner\" */ 0x05, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ or(and(_11, not(sub(shl(160, 1), 1))), _3))\n                    /// @src 28:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                    log3(/** @src -1:-1:-1 */ 0, 0, /** @src 28:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ and(_11, sub(shl(160, 1), 1)), /** @src 28:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ _3)\n                    /// @src 63:3493:3546  \"_name = name.toShortStringWithFallback(_nameFallback)\"\n                    mstore(288, /** @src 63:3501:3546  \"name.toShortStringWithFallback(_nameFallback)\" */ fun_toShortStringWithFallback_7440(value1))\n                    /// @src 63:3556:3618  \"_version = version.toShortStringWithFallback(_versionFallback)\"\n                    mstore(320, /** @src 63:3567:3618  \"version.toShortStringWithFallback(_versionFallback)\" */ fun_toShortStringWithFallback(memPtr))\n                    /// @src 63:3642:3664  \"keccak256(bytes(name))\"\n                    let _12 := keccak256(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ add(/** @src 63:3642:3664  \"keccak256(bytes(name))\" */ value1, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 32), mload(/** @src 63:3642:3664  \"keccak256(bytes(name))\" */ value1))\n                    /// @src 63:3628:3664  \"_hashedName = keccak256(bytes(name))\"\n                    mstore(224, /** @src 63:3642:3664  \"keccak256(bytes(name))\" */ _12)\n                    /// @src 63:3691:3716  \"keccak256(bytes(version))\"\n                    let _13 := keccak256(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _6, mload(/** @src 63:3691:3716  \"keccak256(bytes(version))\" */ memPtr))\n                    /// @src 63:3674:3716  \"_hashedVersion = keccak256(bytes(version))\"\n                    mstore(256, /** @src 63:3691:3716  \"keccak256(bytes(version))\" */ _13)\n                    /// @src 63:3727:3757  \"_cachedChainId = block.chainid\"\n                    mstore(160, /** @src 63:3744:3757  \"block.chainid\" */ chainid())\n                    /// @src 63:4304:4384  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                    let expr_mpos := /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ mload(size)\n                    /// @src 63:4304:4384  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                    let _14 := add(expr_mpos, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 32)\n                    /// @src 63:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\"\n                    mstore(_14, 0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f)\n                    mstore(add(/** @src 63:4304:4384  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ size), /** @src 63:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ _12)\n                    mstore(add(/** @src 63:4304:4384  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 96), /** @src 63:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ _13)\n                    mstore(add(/** @src 63:4304:4384  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 128), /** @src 63:3744:3757  \"block.chainid\" */ chainid())\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    mstore(/** @src 63:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 63:4304:4384  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 63:3727:3757  \"_cachedChainId = block.chainid\" */ 160), /** @src 63:4378:4382  \"this\" */ address())\n                    /// @src 63:4304:4384  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                    mstore(expr_mpos, /** @src 63:3727:3757  \"_cachedChainId = block.chainid\" */ 160)\n                    /// @src 63:4304:4384  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                    finalize_allocation(expr_mpos, 192)\n                    /// @src 63:3767:3815  \"_cachedDomainSeparator = _buildDomainSeparator()\"\n                    mstore(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 128, /** @src 63:4294:4385  \"keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)))\" */ keccak256(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _14, mload(/** @src 63:4294:4385  \"keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)))\" */ expr_mpos)))\n                    /// @src 63:3825:3852  \"_cachedThis = address(this)\"\n                    mstore(/** @src 63:4304:4384  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ 192, /** @src 63:4378:4382  \"this\" */ address())\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    sstore(/** @src 94:1117:1142  \"_decimals = tokenDecimals\" */ 0x09, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ or(and(sload(/** @src 94:1117:1142  \"_decimals = tokenDecimals\" */ 0x09), /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ not(255)), _4))\n                    let _15 := mload(size)\n                    let _16 := datasize(\"ERC20GearSupply_63178_deployed\")\n                    codecopy(_15, dataoffset(\"ERC20GearSupply_63178_deployed\"), _16)\n                    setimmutable(_15, \"47179\", mload(128))\n                    setimmutable(_15, \"47181\", mload(/** @src 63:3727:3757  \"_cachedChainId = block.chainid\" */ 160))\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    setimmutable(_15, \"47183\", mload(/** @src 63:4304:4384  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ 192))\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    setimmutable(_15, \"47185\", mload(/** @src 63:3628:3664  \"_hashedName = keccak256(bytes(name))\" */ 224))\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    setimmutable(_15, \"47187\", mload(/** @src 63:3674:3716  \"_hashedVersion = keccak256(bytes(version))\" */ 256))\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    setimmutable(_15, \"47190\", mload(/** @src 63:3493:3546  \"_name = name.toShortStringWithFallback(_nameFallback)\" */ 288))\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    setimmutable(_15, \"47193\", mload(/** @src 63:3556:3618  \"_version = version.toShortStringWithFallback(_versionFallback)\" */ 320))\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    return(_15, _16)\n                }\n                function finalize_allocation(memPtr, size)\n                {\n                    let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                    if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x24)\n                    }\n                    mstore(64, newFreePtr)\n                }\n                function abi_decode_string_fromMemory(offset, end) -> array\n                {\n                    if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                    let length := mload(offset)\n                    let size := /** @src -1:-1:-1 */ 0\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    if gt(length, sub(shl(64, 1), 1))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x24)\n                    }\n                    size := add(and(add(length, 0x1f), not(31)), 0x20)\n                    let memPtr := mload(64)\n                    finalize_allocation(memPtr, size)\n                    mstore(memPtr, length)\n                    if gt(add(add(offset, length), 0x20), end)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    mcopy(add(memPtr, 0x20), add(offset, 0x20), length)\n                    mstore(add(add(memPtr, length), 0x20), /** @src -1:-1:-1 */ 0)\n                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                    array := memPtr\n                }\n                /// @ast-id 45095 @src 58:2887:3227  \"function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {...\"\n                function fun_toShortStringWithFallback_7440(var_value_mpos) -> var\n                {\n                    /// @src 58:2983:2994  \"ShortString\"\n                    var := /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0\n                    /// @src 58:3010:3029  \"bytes(value).length\"\n                    let expr := /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ mload(/** @src 58:3010:3022  \"bytes(value)\" */ var_value_mpos)\n                    /// @src 58:3006:3221  \"if (bytes(value).length < 32) {...\"\n                    switch /** @src 58:3010:3034  \"bytes(value).length < 32\" */ lt(expr, /** @src 58:3032:3034  \"32\" */ 0x20)\n                    case /** @src 58:3006:3221  \"if (bytes(value).length < 32) {...\" */ 0 {\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        if gt(expr, sub(shl(64, 1), 1))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        let _1 := sload(/** @src 63:3532:3545  \"_nameFallback\" */ 0x06)\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        let length := 0\n                        length := shr(1, _1)\n                        let outOfPlaceEncoding := and(_1, 1)\n                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                        if eq(outOfPlaceEncoding, lt(length, /** @src 58:3032:3034  \"32\" */ 0x20))\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x22)\n                            revert(0, 0x24)\n                        }\n                        if gt(length, 31)\n                        {\n                            mstore(0, /** @src 63:3532:3545  \"_nameFallback\" */ 0x06)\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            let data := keccak256(0, /** @src 58:3032:3034  \"32\" */ 0x20)\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            let _2 := add(data, shr(5, add(length, 31)))\n                            let start := add(data, shr(5, add(expr, 31)))\n                            for { } lt(start, _2) { start := add(start, 1) }\n                            { sstore(start, 0) }\n                        }\n                        let srcOffset := 0\n                        srcOffset := /** @src 58:3032:3034  \"32\" */ 0x20\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        switch gt(expr, 31)\n                        case 1 {\n                            let loopEnd := and(expr, not(31))\n                            mstore(0, /** @src 63:3532:3545  \"_nameFallback\" */ 0x06)\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            let dstPtr := keccak256(0, /** @src 58:3032:3034  \"32\" */ srcOffset)\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            let i := 0\n                            for { }\n                            lt(i, loopEnd)\n                            {\n                                i := add(i, /** @src 58:3032:3034  \"32\" */ 0x20)\n                            }\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            {\n                                sstore(dstPtr, mload(add(var_value_mpos, srcOffset)))\n                                dstPtr := add(dstPtr, 1)\n                                srcOffset := add(srcOffset, /** @src 58:3032:3034  \"32\" */ 0x20)\n                            }\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            if lt(loopEnd, expr)\n                            {\n                                let lastValue := mload(add(var_value_mpos, srcOffset))\n                                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, expr), 248), not(0)))))\n                            }\n                            sstore(/** @src 63:3532:3545  \"_nameFallback\" */ 0x06, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ add(shl(1, expr), 1))\n                        }\n                        default {\n                            let value := 0\n                            if expr\n                            {\n                                value := mload(add(var_value_mpos, srcOffset))\n                            }\n                            sstore(/** @src 63:3532:3545  \"_nameFallback\" */ 0x06, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ or(and(value, not(shr(shl(3, expr), not(0)))), shl(1, expr)))\n                        }\n                        /// @src 58:3168:3210  \"return ShortString.wrap(FALLBACK_SENTINEL)\"\n                        var := /** @src 58:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff\n                        /// @src 58:3168:3210  \"return ShortString.wrap(FALLBACK_SENTINEL)\"\n                        leave\n                    }\n                    default /// @src 58:3006:3221  \"if (bytes(value).length < 32) {...\"\n                    {\n                        /// @src 58:1836:1908  \"if (bstr.length > 31) {...\"\n                        if /** @src 58:1840:1856  \"bstr.length > 31\" */ gt(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ mload(/** @src 58:1840:1851  \"bstr.length\" */ var_value_mpos), /** @src 58:1854:1856  \"31\" */ 0x1f)\n                        /// @src 58:1836:1908  \"if (bstr.length > 31) {...\"\n                        {\n                            /// @src 58:1879:1897  \"StringTooLong(str)\"\n                            let _3 := /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ mload(64)\n                            /// @src 58:1879:1897  \"StringTooLong(str)\"\n                            mstore(_3, shl(224, 0x305a27a9))\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            mstore(/** @src 58:1879:1897  \"StringTooLong(str)\" */ add(_3, 4), /** @src 58:3032:3034  \"32\" */ 0x20)\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            let length_1 := mload(var_value_mpos)\n                            mstore(add(/** @src 58:1879:1897  \"StringTooLong(str)\" */ _3, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 36), length_1)\n                            mcopy(add(/** @src 58:1879:1897  \"StringTooLong(str)\" */ _3, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 68), add(var_value_mpos, /** @src 58:3032:3034  \"32\" */ 0x20), /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ length_1)\n                            mstore(add(add(/** @src 58:1879:1897  \"StringTooLong(str)\" */ _3, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ length_1), 68), 0)\n                            /// @src 58:1879:1897  \"StringTooLong(str)\"\n                            revert(_3, add(sub(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ add(/** @src 58:1879:1897  \"StringTooLong(str)\" */ _3, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ and(add(length_1, /** @src 58:1854:1856  \"31\" */ 0x1f), /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ not(31))), /** @src 58:1879:1897  \"StringTooLong(str)\" */ _3), /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 68))\n                        }\n                        /// @src 58:1957:1970  \"bytes32(bstr)\"\n                        let value_1 := /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0\n                        let length_2 := mload(var_value_mpos)\n                        value_1 := /** @src 63:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ mload(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ add(var_value_mpos, /** @src 58:3032:3034  \"32\" */ 0x20))\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        if lt(length_2, /** @src 58:3032:3034  \"32\" */ 0x20)\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        {\n                            value_1 := and(value_1, shl(shl(3, sub(/** @src 58:3032:3034  \"32\" */ 0x20, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ length_2)), not(0)))\n                        }\n                        /// @src 58:3050:3077  \"return toShortString(value)\"\n                        var := /** @src 58:1949:1985  \"uint256(bytes32(bstr)) | bstr.length\" */ or(value_1, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ length_2)\n                        /// @src 58:3050:3077  \"return toShortString(value)\"\n                        leave\n                    }\n                }\n                /// @ast-id 45095 @src 58:2887:3227  \"function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {...\"\n                function fun_toShortStringWithFallback(var_value_mpos) -> var_\n                {\n                    /// @src 58:2983:2994  \"ShortString\"\n                    var_ := /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0\n                    /// @src 58:3010:3029  \"bytes(value).length\"\n                    let expr := /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ mload(/** @src 58:3010:3022  \"bytes(value)\" */ var_value_mpos)\n                    /// @src 58:3006:3221  \"if (bytes(value).length < 32) {...\"\n                    switch /** @src 58:3010:3034  \"bytes(value).length < 32\" */ lt(expr, /** @src 58:3032:3034  \"32\" */ 0x20)\n                    case /** @src 58:3006:3221  \"if (bytes(value).length < 32) {...\" */ 0 {\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        if gt(expr, sub(shl(64, 1), 1))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        let _1 := sload(/** @src 63:3601:3617  \"_versionFallback\" */ 0x07)\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        let length := 0\n                        length := shr(1, _1)\n                        let outOfPlaceEncoding := and(_1, 1)\n                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                        if eq(outOfPlaceEncoding, lt(length, /** @src 58:3032:3034  \"32\" */ 0x20))\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x22)\n                            revert(0, 0x24)\n                        }\n                        if gt(length, 31)\n                        {\n                            mstore(0, /** @src 63:3601:3617  \"_versionFallback\" */ 0x07)\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            let data := keccak256(0, /** @src 58:3032:3034  \"32\" */ 0x20)\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            let _2 := add(data, shr(5, add(length, 31)))\n                            let start := add(data, shr(5, add(expr, 31)))\n                            for { } lt(start, _2) { start := add(start, 1) }\n                            { sstore(start, 0) }\n                        }\n                        let srcOffset := 0\n                        srcOffset := /** @src 58:3032:3034  \"32\" */ 0x20\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        switch gt(expr, 31)\n                        case 1 {\n                            let loopEnd := and(expr, not(31))\n                            mstore(0, /** @src 63:3601:3617  \"_versionFallback\" */ 0x07)\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            let dstPtr := keccak256(0, /** @src 58:3032:3034  \"32\" */ srcOffset)\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            let i := 0\n                            for { }\n                            lt(i, loopEnd)\n                            {\n                                i := add(i, /** @src 58:3032:3034  \"32\" */ 0x20)\n                            }\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            {\n                                sstore(dstPtr, mload(add(var_value_mpos, srcOffset)))\n                                dstPtr := add(dstPtr, 1)\n                                srcOffset := add(srcOffset, /** @src 58:3032:3034  \"32\" */ 0x20)\n                            }\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            if lt(loopEnd, expr)\n                            {\n                                let lastValue := mload(add(var_value_mpos, srcOffset))\n                                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, expr), 248), not(0)))))\n                            }\n                            sstore(/** @src 63:3601:3617  \"_versionFallback\" */ 0x07, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ add(shl(1, expr), 1))\n                        }\n                        default {\n                            let value := 0\n                            if expr\n                            {\n                                value := mload(add(var_value_mpos, srcOffset))\n                            }\n                            sstore(/** @src 63:3601:3617  \"_versionFallback\" */ 0x07, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ or(and(value, not(shr(shl(3, expr), not(0)))), shl(1, expr)))\n                        }\n                        /// @src 58:3168:3210  \"return ShortString.wrap(FALLBACK_SENTINEL)\"\n                        var_ := /** @src 58:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff\n                        /// @src 58:3168:3210  \"return ShortString.wrap(FALLBACK_SENTINEL)\"\n                        leave\n                    }\n                    default /// @src 58:3006:3221  \"if (bytes(value).length < 32) {...\"\n                    {\n                        /// @src 58:1836:1908  \"if (bstr.length > 31) {...\"\n                        if /** @src 58:1840:1856  \"bstr.length > 31\" */ gt(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ mload(/** @src 58:1840:1851  \"bstr.length\" */ var_value_mpos), /** @src 58:1854:1856  \"31\" */ 0x1f)\n                        /// @src 58:1836:1908  \"if (bstr.length > 31) {...\"\n                        {\n                            /// @src 58:1879:1897  \"StringTooLong(str)\"\n                            let _3 := /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ mload(64)\n                            /// @src 58:1879:1897  \"StringTooLong(str)\"\n                            mstore(_3, shl(224, 0x305a27a9))\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            mstore(/** @src 58:1879:1897  \"StringTooLong(str)\" */ add(_3, 4), /** @src 58:3032:3034  \"32\" */ 0x20)\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            let length_1 := mload(var_value_mpos)\n                            mstore(add(/** @src 58:1879:1897  \"StringTooLong(str)\" */ _3, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 36), length_1)\n                            mcopy(add(/** @src 58:1879:1897  \"StringTooLong(str)\" */ _3, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 68), add(var_value_mpos, /** @src 58:3032:3034  \"32\" */ 0x20), /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ length_1)\n                            mstore(add(add(/** @src 58:1879:1897  \"StringTooLong(str)\" */ _3, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ length_1), 68), 0)\n                            /// @src 58:1879:1897  \"StringTooLong(str)\"\n                            revert(_3, add(sub(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ add(/** @src 58:1879:1897  \"StringTooLong(str)\" */ _3, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ and(add(length_1, /** @src 58:1854:1856  \"31\" */ 0x1f), /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ not(31))), /** @src 58:1879:1897  \"StringTooLong(str)\" */ _3), /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 68))\n                        }\n                        /// @src 58:1957:1970  \"bytes32(bstr)\"\n                        let value_1 := /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0\n                        let length_2 := mload(var_value_mpos)\n                        value_1 := /** @src 63:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ mload(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ add(var_value_mpos, /** @src 58:3032:3034  \"32\" */ 0x20))\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        if lt(length_2, /** @src 58:3032:3034  \"32\" */ 0x20)\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        {\n                            value_1 := and(value_1, shl(shl(3, sub(/** @src 58:3032:3034  \"32\" */ 0x20, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ length_2)), not(0)))\n                        }\n                        /// @src 58:3050:3077  \"return toShortString(value)\"\n                        var_ := /** @src 58:1949:1985  \"uint256(bytes32(bstr)) | bstr.length\" */ or(value_1, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ length_2)\n                        /// @src 58:3050:3077  \"return toShortString(value)\"\n                        leave\n                    }\n                }\n            }\n            /// @use-src 28:\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\", 44:\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\", 46:\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol\", 47:\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Permit.sol\", 54:\"lib/openzeppelin-contracts/contracts/utils/Context.sol\", 56:\"lib/openzeppelin-contracts/contracts/utils/Nonces.sol\", 58:\"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\", 62:\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\", 63:\"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\", 65:\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\", 94:\"src/erc20/managed/ERC20GearSupply.sol\"\n            object \"ERC20GearSupply_63178_deployed\" {\n                code {\n                    {\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        let _1 := memoryguard(0x80)\n                        mstore(64, _1)\n                        if iszero(lt(calldatasize(), 4))\n                        {\n                            switch shr(224, calldataload(0))\n                            case 0x06fdde03 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let ret := 0\n                                let slotValue := sload(/** @src 44:1837:1842  \"_name\" */ 0x03)\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                let length := extract_byte_array_length(slotValue)\n                                mstore(_1, length)\n                                switch and(slotValue, 1)\n                                case 0 {\n                                    mstore(add(_1, 0x20), and(slotValue, not(255)))\n                                    ret := add(add(_1, shl(5, iszero(iszero(length)))), 0x20)\n                                }\n                                case 1 {\n                                    mstore(0, /** @src 44:1837:1842  \"_name\" */ 0x03)\n                                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                    let dataPos := keccak256(0, 0x20)\n                                    let i := 0\n                                    for { } lt(i, length) { i := add(i, 0x20) }\n                                    {\n                                        mstore(add(add(_1, i), 0x20), sload(dataPos))\n                                        dataPos := add(dataPos, 1)\n                                    }\n                                    ret := add(add(_1, i), 0x20)\n                                }\n                                finalize_allocation(_1, sub(ret, _1))\n                                let memPos := mload(64)\n                                mstore(memPos, 0x20)\n                                return(memPos, sub(abi_encode_string(_1, add(memPos, 0x20)), memPos))\n                            }\n                            case 0x095ea7b3 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                let value0 := abi_decode_t_address()\n                                /// @src 44:8746:8750  \"true\"\n                                fun_approve(/** @src 54:735:745  \"msg.sender\" */ caller(), /** @src 44:8746:8750  \"true\" */ value0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ calldataload(36))\n                                let memPos_1 := mload(64)\n                                mstore(memPos_1, 1)\n                                return(memPos_1, 32)\n                            }\n                            case 0x18160ddd {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let _2 := sload(/** @src 44:2881:2893  \"_totalSupply\" */ 0x02)\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                let memPos_2 := mload(64)\n                                mstore(memPos_2, _2)\n                                return(memPos_2, 32)\n                            }\n                            case 0x23b872dd {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 96) { revert(0, 0) }\n                                let value0_1 := abi_decode_t_address()\n                                let value1 := abi_decode_address()\n                                let value := calldataload(68)\n                                /// @src 44:4854:4859  \"value\"\n                                fun_spendAllowance(value0_1, /** @src 54:735:745  \"msg.sender\" */ caller(), /** @src 44:4854:4859  \"value\" */ value)\n                                /// @src 44:4890:4895  \"value\"\n                                fun_transfer(value0_1, value1, value)\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                let memPos_3 := mload(64)\n                                mstore(memPos_3, 1)\n                                return(memPos_3, 32)\n                            }\n                            case 0x313ce567 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let value_1 := and(sload(/** @src 94:1333:1342  \"_decimals\" */ 0x09), /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0xff)\n                                let memPos_4 := mload(64)\n                                mstore(memPos_4, value_1)\n                                return(memPos_4, 32)\n                            }\n                            case 0x3644e515 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let ret_1 := /** @src 47:2699:2719  \"_domainSeparatorV4()\" */ fun_domainSeparatorV4()\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                let memPos_5 := mload(64)\n                                mstore(memPos_5, ret_1)\n                                return(memPos_5, 32)\n                            }\n                            case 0x40c10f19 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                let value0_2 := abi_decode_t_address()\n                                let value_2 := calldataload(36)\n                                /// @src 28:1500:1562  \"modifier onlyOwner() {...\"\n                                fun_checkOwner()\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                let _3 := and(/** @src 44:7432:7453  \"account == address(0)\" */ value0_2, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ sub(shl(160, 1), 1))\n                                /// @src 44:7432:7453  \"account == address(0)\"\n                                let _4 := iszero(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _3)\n                                /// @src 44:7428:7519  \"if (account == address(0)) {...\"\n                                if /** @src 44:7432:7453  \"account == address(0)\" */ _4\n                                /// @src 44:7428:7519  \"if (account == address(0)) {...\"\n                                {\n                                    /// @src 44:7476:7508  \"ERC20InvalidReceiver(address(0))\"\n                                    mstore(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0, /** @src 44:7476:7508  \"ERC20InvalidReceiver(address(0))\" */ shl(224, 0xec442f05))\n                                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                    mstore(4, 0)\n                                    /// @src 44:7476:7508  \"ERC20InvalidReceiver(address(0))\"\n                                    revert(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0, 36)\n                                }\n                                let _5 := sload(/** @src 44:6137:6158  \"_totalSupply += value\" */ 0x02)\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                let sum := add(_5, value_2)\n                                if gt(_5, sum)\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x11)\n                                    revert(0, 36)\n                                }\n                                sstore(/** @src 44:6137:6158  \"_totalSupply += value\" */ 0x02, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ sum)\n                                /// @src 44:6547:6972  \"if (to == address(0)) {...\"\n                                _4 := /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0\n                                mstore(0, _3)\n                                mstore(0x20, 0)\n                                let dataSlot := keccak256(0, 64)\n                                sstore(dataSlot, add(sload(/** @src 44:6925:6947  \"_balances[to] += value\" */ dataSlot), /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ value_2))\n                                /// @src 44:6987:7012  \"Transfer(from, to, value)\"\n                                let _6 := /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ mload(64)\n                                mstore(_6, value_2)\n                                /// @src 44:6987:7012  \"Transfer(from, to, value)\"\n                                log3(_6, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 32, /** @src 44:6987:7012  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0, /** @src 44:6987:7012  \"Transfer(from, to, value)\" */ _3)\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                return(0, 0)\n                            }\n                            case 0x42966c68 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                /// @src 46:692:697  \"value\"\n                                fun_burn(/** @src 54:735:745  \"msg.sender\" */ caller(), /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ calldataload(4))\n                                return(0, 0)\n                            }\n                            case 0x70a08231 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                mstore(0, and(abi_decode_t_address(), sub(shl(160, 1), 1)))\n                                mstore(32, 0)\n                                let _7 := sload(keccak256(0, 64))\n                                let memPos_6 := mload(64)\n                                mstore(memPos_6, _7)\n                                return(memPos_6, 32)\n                            }\n                            case 0x715018a6 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                /// @src 28:1500:1562  \"modifier onlyOwner() {...\"\n                                fun_checkOwner()\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                let _8 := sload(/** @src 28:3004:3010  \"_owner\" */ 0x05)\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                sstore(/** @src 28:3004:3010  \"_owner\" */ 0x05, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ and(_8, shl(160, 0xffffffffffffffffffffffff)))\n                                /// @src 28:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                                log3(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0, 0, /** @src 28:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ and(_8, sub(shl(160, 1), 1)), 0)\n                                return(0, 0)\n                            }\n                            case 0x79cc6790 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                let value0_3 := abi_decode_t_address()\n                                let value_3 := calldataload(36)\n                                /// @src 46:1135:1140  \"value\"\n                                fun_spendAllowance(value0_3, /** @src 54:735:745  \"msg.sender\" */ caller(), /** @src 46:1135:1140  \"value\" */ value_3)\n                                /// @src 46:1166:1171  \"value\"\n                                fun_burn(value0_3, value_3)\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                return(0, 0)\n                            }\n                            case 0x7ecebe00 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                mstore(0, and(abi_decode_t_address(), sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 56:624:631  \"_nonces\" */ 0x08)\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                let _9 := sload(keccak256(0, 64))\n                                let memPos_7 := mload(64)\n                                mstore(memPos_7, _9)\n                                return(memPos_7, 32)\n                            }\n                            case 0x84b0196e {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                /// @src 63:6176:6224  \"return _name.toStringWithFallback(_nameFallback)\"\n                                let var_mpos := /** @src 63:6183:6224  \"_name.toStringWithFallback(_nameFallback)\" */ fun_toStringWithFallback(/** @src 63:6183:6188  \"_name\" */ loadimmutable(\"47190\"))\n                                /// @src 63:6631:6685  \"return _version.toStringWithFallback(_versionFallback)\"\n                                let var_mpos_1 := /** @src 63:6638:6685  \"_version.toStringWithFallback(_versionFallback)\" */ fun_toStringWithFallback_6298(/** @src 63:6638:6646  \"_version\" */ loadimmutable(\"47193\"))\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                let size := 0\n                                let length_1 := 0\n                                length_1 := 0\n                                size := 0x20\n                                let memPtr := mload(64)\n                                finalize_allocation(memPtr, size)\n                                mstore(memPtr, 0)\n                                let size_1 := 0\n                                let length_2 := 0\n                                length_2 := 0\n                                size_1 := size\n                                calldatacopy(0, calldatasize(), 0)\n                                let memPos_8 := mload(64)\n                                mstore(memPos_8, shl(248, 15))\n                                mstore(add(memPos_8, size), 224)\n                                let tail := abi_encode_string(var_mpos, add(memPos_8, 224))\n                                mstore(add(memPos_8, 64), sub(tail, memPos_8))\n                                let tail_1 := abi_encode_string(var_mpos_1, tail)\n                                mstore(add(memPos_8, 96), /** @src 63:5674:5687  \"block.chainid\" */ chainid())\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                mstore(add(memPos_8, 128), /** @src 63:5709:5713  \"this\" */ address())\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                mstore(add(memPos_8, 160), 0)\n                                mstore(add(memPos_8, 192), sub(tail_1, memPos_8))\n                                let pos := tail_1\n                                let length_3 := mload(memPtr)\n                                mstore(tail_1, length_3)\n                                pos := add(tail_1, size)\n                                let srcPtr := add(memPtr, size)\n                                let i_1 := 0\n                                for { } lt(i_1, length_3) { i_1 := add(i_1, 1) }\n                                {\n                                    mstore(pos, mload(srcPtr))\n                                    pos := add(pos, size)\n                                    srcPtr := add(srcPtr, size)\n                                }\n                                return(memPos_8, sub(pos, memPos_8))\n                            }\n                            case 0x8da5cb5b {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let value_4 := and(sload(/** @src 28:1710:1716  \"_owner\" */ 0x05), /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ sub(shl(160, 1), 1))\n                                let memPos_9 := mload(64)\n                                mstore(memPos_9, value_4)\n                                return(memPos_9, 32)\n                            }\n                            case 0x95d89b41 {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                let memPtr_1 := mload(64)\n                                let ret_2 := 0\n                                let slotValue_1 := sload(4)\n                                let length_4 := extract_byte_array_length(slotValue_1)\n                                mstore(memPtr_1, length_4)\n                                switch and(slotValue_1, 1)\n                                case 0 {\n                                    mstore(add(memPtr_1, 0x20), and(slotValue_1, not(255)))\n                                    ret_2 := add(add(memPtr_1, shl(5, iszero(iszero(length_4)))), 0x20)\n                                }\n                                case 1 {\n                                    mstore(0, 4)\n                                    let dataPos_1 := keccak256(0, 0x20)\n                                    let i_2 := 0\n                                    for { } lt(i_2, length_4) { i_2 := add(i_2, 0x20) }\n                                    {\n                                        mstore(add(add(memPtr_1, i_2), 0x20), sload(dataPos_1))\n                                        dataPos_1 := add(dataPos_1, 1)\n                                    }\n                                    ret_2 := add(add(memPtr_1, i_2), 0x20)\n                                }\n                                finalize_allocation(memPtr_1, sub(ret_2, memPtr_1))\n                                let memPos_10 := mload(64)\n                                mstore(memPos_10, 0x20)\n                                return(memPos_10, sub(abi_encode_string(memPtr_1, add(memPos_10, 0x20)), memPos_10))\n                            }\n                            case 0xa9059cbb {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                let value0_4 := abi_decode_t_address()\n                                /// @src 44:3388:3393  \"value\"\n                                fun_transfer(/** @src 54:735:745  \"msg.sender\" */ caller(), /** @src 44:3388:3393  \"value\" */ value0_4, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ calldataload(36))\n                                let memPos_11 := mload(64)\n                                mstore(memPos_11, 1)\n                                return(memPos_11, 32)\n                            }\n                            case 0xd505accf {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 224) { revert(0, 0) }\n                                let value0_5 := abi_decode_t_address()\n                                let value1_1 := abi_decode_address()\n                                let value_5 := calldataload(68)\n                                let value_6 := calldataload(100)\n                                let value_7 := calldataload(132)\n                                if iszero(eq(value_7, and(value_7, 0xff))) { revert(0, 0) }\n                                /// @src 47:1867:1964  \"if (block.timestamp > deadline) {...\"\n                                if /** @src 47:1871:1897  \"block.timestamp > deadline\" */ gt(/** @src 47:1871:1886  \"block.timestamp\" */ timestamp(), /** @src 47:1871:1897  \"block.timestamp > deadline\" */ value_6)\n                                /// @src 47:1867:1964  \"if (block.timestamp > deadline) {...\"\n                                {\n                                    /// @src 47:1920:1953  \"ERC2612ExpiredSignature(deadline)\"\n                                    mstore(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0, /** @src 47:1920:1953  \"ERC2612ExpiredSignature(deadline)\" */ shl(225, 0x313c8981))\n                                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                    mstore(4, value_6)\n                                    /// @src 47:1920:1953  \"ERC2612ExpiredSignature(deadline)\"\n                                    revert(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0, 36)\n                                }\n                                let _10 := and(value0_5, sub(shl(160, 1), 1))\n                                mstore(0, _10)\n                                mstore(32, /** @src 56:1121:1128  \"_nonces\" */ 0x08)\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                let dataSlot_1 := keccak256(0, 64)\n                                let _11 := sload(/** @src 56:1121:1137  \"_nonces[owner]++\" */ dataSlot_1)\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                sstore(dataSlot_1, add(/** @src 56:1121:1137  \"_nonces[owner]++\" */ _11, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 1))\n                                /// @src 47:2005:2083  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\"\n                                let expr_mpos := /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ mload(64)\n                                /// @src 47:2005:2083  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\"\n                                let _12 := add(expr_mpos, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 32)\n                                mstore(_12, /** @src 47:1024:1119  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9)\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                mstore(/** @src 47:1024:1119  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ add(/** @src 47:2005:2083  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\" */ expr_mpos, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 64), _10)\n                                mstore(/** @src 47:1024:1119  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ add(/** @src 47:2005:2083  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\" */ expr_mpos, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 96), and(value1_1, sub(shl(160, 1), 1)))\n                                mstore(/** @src 47:1024:1119  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ add(/** @src 47:2005:2083  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\" */ expr_mpos, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 128), value_5)\n                                mstore(/** @src 47:1024:1119  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ add(/** @src 47:2005:2083  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\" */ expr_mpos, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 160), _11)\n                                mstore(/** @src 47:1024:1119  \"keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\")\" */ add(/** @src 47:2005:2083  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\" */ expr_mpos, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 192), value_6)\n                                /// @src 47:2005:2083  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\"\n                                mstore(expr_mpos, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 192)\n                                /// @src 47:2005:2083  \"abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)\"\n                                finalize_allocation(expr_mpos, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 224)\n                                /// @src 47:1995:2084  \"keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline))\"\n                                let _13 := keccak256(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _12, mload(/** @src 47:1995:2084  \"keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline))\" */ expr_mpos))\n                                /// @src 63:5153:5173  \"_domainSeparatorV4()\"\n                                let _14 := fun_domainSeparatorV4()\n                                /// @src 65:3993:4242  \"assembly (\\\"memory-safe\\\") {...\"\n                                let usr$ptr := mload(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 64)\n                                /// @src 65:3993:4242  \"assembly (\\\"memory-safe\\\") {...\"\n                                mstore(usr$ptr, \"\\x19\\x01\")\n                                mstore(add(usr$ptr, 0x02), _14)\n                                mstore(add(usr$ptr, 0x22), _13)\n                                /// @src 62:7051:7076  \"tryRecover(hash, v, r, s)\"\n                                let expr_component, expr_component_1, expr_component_2 := fun_tryRecover(/** @src 65:3993:4242  \"assembly (\\\"memory-safe\\\") {...\" */ keccak256(usr$ptr, 0x42), /** @src 62:7051:7076  \"tryRecover(hash, v, r, s)\" */ value_7, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ calldataload(164), calldataload(196))\n                                /// @src 62:7105:7113  \"errorArg\"\n                                fun_throwError(expr_component_1, expr_component_2)\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                let _15 := and(/** @src 47:2208:2223  \"signer != owner\" */ expr_component, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ sub(shl(160, 1), 1))\n                                /// @src 47:2204:2292  \"if (signer != owner) {...\"\n                                if /** @src 47:2208:2223  \"signer != owner\" */ iszero(eq(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _15, _10))\n                                /// @src 47:2204:2292  \"if (signer != owner) {...\"\n                                {\n                                    /// @src 47:2246:2281  \"ERC2612InvalidSigner(signer, owner)\"\n                                    mstore(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0, /** @src 47:2246:2281  \"ERC2612InvalidSigner(signer, owner)\" */ shl(225, 0x25c00723))\n                                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                    mstore(4, _15)\n                                    mstore(36, _10)\n                                    /// @src 47:2246:2281  \"ERC2612InvalidSigner(signer, owner)\"\n                                    revert(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0, 68)\n                                }\n                                /// @src 44:8746:8750  \"true\"\n                                fun_approve(value0_5, value1_1, value_5)\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                return(0, 0)\n                            }\n                            case 0xdd62ed3e {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                let value0_6 := abi_decode_t_address()\n                                let value1_2 := abi_decode_address()\n                                mstore(0, and(value0_6, sub(shl(160, 1), 1)))\n                                mstore(32, /** @src 44:3561:3572  \"_allowances\" */ 0x01)\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                let dataSlot_2 := keccak256(0, 64)\n                                /// @src 44:3561:3588  \"_allowances[owner][spender]\"\n                                let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ and(value1_2, sub(shl(160, 1), 1)))\n                                mstore(0x20, /** @src 44:3561:3579  \"_allowances[owner]\" */ dataSlot_2)\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x40)\n                                let _16 := sload(/** @src 44:3561:3588  \"_allowances[owner][spender]\" */ dataSlot_3)\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                let memPos_12 := mload(64)\n                                mstore(memPos_12, _16)\n                                return(memPos_12, 32)\n                            }\n                            case 0xf2fde38b {\n                                if callvalue() { revert(0, 0) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                let value0_7 := abi_decode_t_address()\n                                /// @src 28:1500:1562  \"modifier onlyOwner() {...\"\n                                fun_checkOwner()\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                let _17 := and(/** @src 28:2627:2649  \"newOwner == address(0)\" */ value0_7, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ sub(shl(160, 1), 1))\n                                /// @src 28:2623:2714  \"if (newOwner == address(0)) {...\"\n                                if /** @src 28:2627:2649  \"newOwner == address(0)\" */ iszero(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _17)\n                                /// @src 28:2623:2714  \"if (newOwner == address(0)) {...\"\n                                {\n                                    /// @src 28:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                                    mstore(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0, /** @src 28:2672:2703  \"OwnableInvalidOwner(address(0))\" */ shl(224, 0x1e4fbdf7))\n                                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                    mstore(4, 0)\n                                    /// @src 28:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                                    revert(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0, 36)\n                                }\n                                let _18 := sload(/** @src 28:3004:3010  \"_owner\" */ 0x05)\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                sstore(/** @src 28:3004:3010  \"_owner\" */ 0x05, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ or(and(_18, shl(160, 0xffffffffffffffffffffffff)), _17))\n                                /// @src 28:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                                log3(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0, 0, /** @src 28:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ and(_18, sub(shl(160, 1), 1)), /** @src 28:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ _17)\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                return(0, 0)\n                            }\n                        }\n                        revert(0, 0)\n                    }\n                    function abi_encode_string(value, pos) -> end\n                    {\n                        let length := mload(value)\n                        mstore(pos, length)\n                        mcopy(add(pos, 0x20), add(value, 0x20), length)\n                        mstore(add(add(pos, length), 0x20), /** @src -1:-1:-1 */ 0)\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n                    }\n                    function abi_decode_t_address() -> value\n                    {\n                        value := calldataload(4)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                    }\n                    function abi_decode_address() -> value\n                    {\n                        value := calldataload(36)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                    }\n                    function extract_byte_array_length(data) -> length\n                    {\n                        length := shr(1, data)\n                        let outOfPlaceEncoding := and(data, 1)\n                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                        if eq(outOfPlaceEncoding, lt(length, 32))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x22)\n                            revert(0, 0x24)\n                        }\n                    }\n                    function abi_encode_string_storage(value, pos) -> ret\n                    {\n                        let slotValue := sload(value)\n                        let length := extract_byte_array_length(slotValue)\n                        mstore(pos, length)\n                        switch and(slotValue, 1)\n                        case 0 {\n                            mstore(add(pos, 0x20), and(slotValue, not(255)))\n                            ret := add(add(pos, shl(5, iszero(iszero(length)))), 0x20)\n                        }\n                        case 1 {\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ value)\n                            let dataPos := keccak256(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x20)\n                            let i := /** @src -1:-1:-1 */ 0\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            for { } lt(i, length) { i := add(i, 0x20) }\n                            {\n                                mstore(add(add(pos, i), 0x20), sload(dataPos))\n                                dataPos := add(dataPos, 1)\n                            }\n                            ret := add(add(pos, i), 0x20)\n                        }\n                    }\n                    function finalize_allocation(memPtr, size)\n                    {\n                        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                    }\n                    /// @ast-id 42690 @src 44:10319:10795  \"function _spendAllowance(address owner, address spender, uint256 value) internal virtual {...\"\n                    function fun_spendAllowance(var_owner, var_spender, var_value)\n                    {\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        let _1 := and(var_owner, sub(shl(160, 1), 1))\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _1)\n                        mstore(0x20, /** @src 44:3561:3572  \"_allowances\" */ 0x01)\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x40)\n                        /// @src 44:3561:3588  \"_allowances[owner][spender]\"\n                        let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ and(/** @src 44:10445:10470  \"allowance(owner, spender)\" */ var_spender, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 44:3561:3579  \"_allowances[owner]\" */ dataSlot)\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x40)\n                        let _2 := sload(/** @src 44:3561:3588  \"_allowances[owner][spender]\" */ dataSlot_1)\n                        /// @src 44:10480:10789  \"if (currentAllowance < type(uint256).max) {...\"\n                        if /** @src 44:10484:10520  \"currentAllowance < type(uint256).max\" */ lt(_2, /** @src 44:10503:10520  \"type(uint256).max\" */ not(0))\n                        /// @src 44:10480:10789  \"if (currentAllowance < type(uint256).max) {...\"\n                        {\n                            /// @src 44:10536:10666  \"if (currentAllowance < value) {...\"\n                            if /** @src 44:10540:10564  \"currentAllowance < value\" */ lt(_2, var_value)\n                            /// @src 44:10536:10666  \"if (currentAllowance < value) {...\"\n                            {\n                                /// @src 44:10591:10651  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 44:10591:10651  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\" */ shl(225, 0x7dc7a0d9))\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                mstore(/** @src 44:10591:10651  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\" */ 4, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ and(var_spender, sub(shl(160, 1), 1)))\n                                mstore(36, _2)\n                                mstore(68, var_value)\n                                /// @src 44:10591:10651  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                                revert(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 100)\n                            }\n                            /// @src 44:9713:9802  \"if (owner == address(0)) {...\"\n                            if /** @src 44:9717:9736  \"owner == address(0)\" */ iszero(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _1)\n                            /// @src 44:9713:9802  \"if (owner == address(0)) {...\"\n                            {\n                                /// @src 44:9759:9791  \"ERC20InvalidApprover(address(0))\"\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 44:9759:9791  \"ERC20InvalidApprover(address(0))\" */ shl(224, 0xe602df05))\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                mstore(/** @src 44:9759:9791  \"ERC20InvalidApprover(address(0))\" */ 4, /** @src -1:-1:-1 */ 0)\n                                /// @src 44:9759:9791  \"ERC20InvalidApprover(address(0))\"\n                                revert(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 36)\n                            }\n                            /// @src 44:9811:9901  \"if (spender == address(0)) {...\"\n                            if /** @src 44:9815:9836  \"spender == address(0)\" */ iszero(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ and(/** @src 44:9815:9836  \"spender == address(0)\" */ var_spender, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ sub(shl(160, 1), 1)))\n                            /// @src 44:9811:9901  \"if (spender == address(0)) {...\"\n                            {\n                                /// @src 44:9859:9890  \"ERC20InvalidSpender(address(0))\"\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 44:9859:9890  \"ERC20InvalidSpender(address(0))\" */ shl(225, 0x4a1406b1))\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                mstore(/** @src 44:9859:9890  \"ERC20InvalidSpender(address(0))\" */ 4, /** @src -1:-1:-1 */ 0)\n                                /// @src 44:9859:9890  \"ERC20InvalidSpender(address(0))\"\n                                revert(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 36)\n                            }\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _1)\n                            mstore(0x20, /** @src 44:3561:3572  \"_allowances\" */ 0x01)\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            let dataSlot_2 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x40)\n                            /// @src 44:9910:9937  \"_allowances[owner][spender]\"\n                            let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ and(/** @src 44:9910:9937  \"_allowances[owner][spender]\" */ var_spender, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ sub(shl(160, 1), 1)))\n                            mstore(0x20, /** @src 44:9910:9928  \"_allowances[owner]\" */ dataSlot_2)\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x40)\n                            sstore(/** @src 44:9910:9937  \"_allowances[owner][spender]\" */ dataSlot_3, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ sub(/** @src 44:10732:10756  \"currentAllowance - value\" */ _2, var_value))\n                        }\n                    }\n                    /// @ast-id 42421 @src 44:5297:5597  \"function _transfer(address from, address to, uint256 value) internal {...\"\n                    function fun_transfer(var_from, var_to, var_value)\n                    {\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        let _1 := and(/** @src 44:5380:5398  \"from == address(0)\" */ var_from, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ sub(shl(160, 1), 1))\n                        /// @src 44:5380:5398  \"from == address(0)\"\n                        let _2 := iszero(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _1)\n                        /// @src 44:5376:5462  \"if (from == address(0)) {...\"\n                        if /** @src 44:5380:5398  \"from == address(0)\" */ _2\n                        /// @src 44:5376:5462  \"if (from == address(0)) {...\"\n                        {\n                            /// @src 44:5421:5451  \"ERC20InvalidSender(address(0))\"\n                            mstore(/** @src 44:5396:5397  \"0\" */ 0x00, /** @src 44:5421:5451  \"ERC20InvalidSender(address(0))\" */ shl(225, 0x4b637e8f))\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            mstore(/** @src 44:5421:5451  \"ERC20InvalidSender(address(0))\" */ 4, /** @src 44:5396:5397  \"0\" */ 0x00)\n                            /// @src 44:5421:5451  \"ERC20InvalidSender(address(0))\"\n                            revert(/** @src 44:5396:5397  \"0\" */ 0x00, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 36)\n                        }\n                        let _3 := and(/** @src 44:5475:5491  \"to == address(0)\" */ var_to, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ sub(shl(160, 1), 1))\n                        /// @src 44:5475:5491  \"to == address(0)\"\n                        let _4 := iszero(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _3)\n                        /// @src 44:5471:5557  \"if (to == address(0)) {...\"\n                        if /** @src 44:5475:5491  \"to == address(0)\" */ _4\n                        /// @src 44:5471:5557  \"if (to == address(0)) {...\"\n                        {\n                            /// @src 44:5514:5546  \"ERC20InvalidReceiver(address(0))\"\n                            mstore(/** @src 44:5396:5397  \"0\" */ 0x00, /** @src 44:7476:7508  \"ERC20InvalidReceiver(address(0))\" */ shl(224, 0xec442f05))\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            mstore(/** @src 44:5514:5546  \"ERC20InvalidReceiver(address(0))\" */ 4, /** @src 44:5396:5397  \"0\" */ 0x00)\n                            /// @src 44:5514:5546  \"ERC20InvalidReceiver(address(0))\"\n                            revert(/** @src 44:5396:5397  \"0\" */ 0x00, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 36)\n                        }\n                        /// @src 44:5997:6537  \"if (from == address(0)) {...\"\n                        _2 := /** @src 44:5396:5397  \"0\" */ 0x00\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        mstore(/** @src 44:5396:5397  \"0\" */ 0x00, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _1)\n                        mstore(0x20, /** @src 44:5396:5397  \"0\" */ 0x00)\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        let _5 := sload(keccak256(/** @src 44:5396:5397  \"0\" */ 0x00, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x40))\n                        /// @src 44:6240:6355  \"if (fromBalance < value) {...\"\n                        if /** @src 44:6244:6263  \"fromBalance < value\" */ lt(_5, var_value)\n                        /// @src 44:6240:6355  \"if (fromBalance < value) {...\"\n                        {\n                            /// @src 44:6290:6340  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                            mstore(/** @src 44:5396:5397  \"0\" */ 0x00, /** @src 44:6290:6340  \"ERC20InsufficientBalance(from, fromBalance, value)\" */ shl(226, 0x391434e3))\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            mstore(/** @src 44:6290:6340  \"ERC20InsufficientBalance(from, fromBalance, value)\" */ 4, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _1)\n                            mstore(36, _5)\n                            mstore(68, var_value)\n                            /// @src 44:6290:6340  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                            revert(/** @src 44:5396:5397  \"0\" */ 0x00, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 100)\n                        }\n                        mstore(/** @src 44:5396:5397  \"0\" */ 0x00, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _1)\n                        mstore(0x20, /** @src 44:5396:5397  \"0\" */ 0x00)\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        sstore(keccak256(/** @src 44:5396:5397  \"0\" */ 0x00, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x40), sub(/** @src 44:6493:6512  \"fromBalance - value\" */ _5, var_value))\n                        /// @src 44:6547:6972  \"if (to == address(0)) {...\"\n                        _4 := /** @src 44:5396:5397  \"0\" */ 0x00\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        mstore(/** @src 44:5396:5397  \"0\" */ 0x00, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _3)\n                        mstore(0x20, /** @src 44:5396:5397  \"0\" */ 0x00)\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        let dataSlot := keccak256(/** @src 44:5396:5397  \"0\" */ 0x00, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x40)\n                        sstore(dataSlot, add(sload(/** @src 44:6925:6947  \"_balances[to] += value\" */ dataSlot), /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ var_value))\n                        /// @src 44:6987:7012  \"Transfer(from, to, value)\"\n                        let _6 := /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ mload(64)\n                        mstore(_6, var_value)\n                        /// @src 44:6987:7012  \"Transfer(from, to, value)\"\n                        log3(_6, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 32, /** @src 44:6987:7012  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _1, _3)\n                    }\n                    /// @ast-id 47281 @src 63:3945:4207  \"function _domainSeparatorV4() internal view returns (bytes32) {...\"\n                    function fun_domainSeparatorV4() -> var\n                    {\n                        /// @src 63:3998:4005  \"bytes32\"\n                        var := /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0\n                        /// @src 63:4021:4084  \"address(this) == _cachedThis && block.chainid == _cachedChainId\"\n                        let expr := /** @src 63:4021:4049  \"address(this) == _cachedThis\" */ eq(/** @src 63:4029:4033  \"this\" */ address(), /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ and(/** @src 63:4038:4049  \"_cachedThis\" */ loadimmutable(\"47183\"), /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ sub(shl(160, 1), 1)))\n                        /// @src 63:4021:4084  \"address(this) == _cachedThis && block.chainid == _cachedChainId\"\n                        if expr\n                        {\n                            expr := /** @src 63:4053:4084  \"block.chainid == _cachedChainId\" */ eq(/** @src 63:4053:4066  \"block.chainid\" */ chainid(), /** @src 63:4070:4084  \"_cachedChainId\" */ loadimmutable(\"47181\"))\n                        }\n                        /// @src 63:4017:4201  \"if (address(this) == _cachedThis && block.chainid == _cachedChainId) {...\"\n                        switch expr\n                        case 0 {\n                            /// @src 63:4304:4384  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                            let expr_mpos := /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ mload(64)\n                            /// @src 63:4304:4384  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                            let _1 := add(expr_mpos, 0x20)\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            mstore(_1, /** @src 63:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f)\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            mstore(/** @src 63:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 63:4304:4384  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 64), /** @src 63:4326:4337  \"_hashedName\" */ loadimmutable(\"47185\"))\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            mstore(/** @src 63:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 63:4304:4384  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 63:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 96), /** @src 63:4339:4353  \"_hashedVersion\" */ loadimmutable(\"47187\"))\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            mstore(/** @src 63:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 63:4304:4384  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 63:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 128), /** @src 63:4355:4368  \"block.chainid\" */ chainid())\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            mstore(/** @src 63:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ add(/** @src 63:4304:4384  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\" */ expr_mpos, /** @src 63:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 160), /** @src 63:4029:4033  \"this\" */ address())\n                            /// @src 63:4304:4384  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                            mstore(expr_mpos, /** @src 63:2079:2174  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 160)\n                            /// @src 63:4304:4384  \"abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))\"\n                            finalize_allocation(expr_mpos, 192)\n                            /// @src 63:4160:4190  \"return _buildDomainSeparator()\"\n                            var := /** @src 63:4294:4385  \"keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)))\" */ keccak256(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _1, mload(/** @src 63:4294:4385  \"keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)))\" */ expr_mpos))\n                            /// @src 63:4160:4190  \"return _buildDomainSeparator()\"\n                            leave\n                        }\n                        default /// @src 63:4017:4201  \"if (address(this) == _cachedThis && block.chainid == _cachedChainId) {...\"\n                        {\n                            /// @src 63:4100:4129  \"return _cachedDomainSeparator\"\n                            var := /** @src 63:4107:4129  \"_cachedDomainSeparator\" */ loadimmutable(\"47179\")\n                            /// @src 63:4100:4129  \"return _cachedDomainSeparator\"\n                            leave\n                        }\n                    }\n                    /// @ast-id 41122 @src 28:1796:1958  \"function _checkOwner() internal view virtual {...\"\n                    function fun_checkOwner()\n                    {\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        let value := and(sload(/** @src 28:1710:1716  \"_owner\" */ 0x05), /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ sub(shl(160, 1), 1))\n                        /// @src 28:1851:1952  \"if (owner() != _msgSender()) {...\"\n                        if /** @src 28:1855:1878  \"owner() != _msgSender()\" */ iszero(eq(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ value, /** @src 54:735:745  \"msg.sender\" */ caller()))\n                        /// @src 28:1851:1952  \"if (owner() != _msgSender()) {...\"\n                        {\n                            /// @src 28:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 28:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\" */ shl(224, 0x118cdaa7))\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            mstore(/** @src 28:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\" */ 4, /** @src 54:735:745  \"msg.sender\" */ caller())\n                            /// @src 28:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                            revert(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 36)\n                        }\n                    }\n                    /// @ast-id 42564 @src 44:7888:8094  \"function _burn(address account, uint256 value) internal {...\"\n                    function fun_burn(var_account, var_value)\n                    {\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        let _1 := and(/** @src 44:7958:7979  \"account == address(0)\" */ var_account, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ sub(shl(160, 1), 1))\n                        /// @src 44:7958:7979  \"account == address(0)\"\n                        let _2 := iszero(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _1)\n                        /// @src 44:7954:8043  \"if (account == address(0)) {...\"\n                        if /** @src 44:7958:7979  \"account == address(0)\" */ _2\n                        /// @src 44:7954:8043  \"if (account == address(0)) {...\"\n                        {\n                            /// @src 44:8002:8032  \"ERC20InvalidSender(address(0))\"\n                            mstore(/** @src 44:7977:7978  \"0\" */ 0x00, /** @src 44:5421:5451  \"ERC20InvalidSender(address(0))\" */ shl(225, 0x4b637e8f))\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            mstore(/** @src 44:8002:8032  \"ERC20InvalidSender(address(0))\" */ 4, /** @src 44:7977:7978  \"0\" */ 0x00)\n                            /// @src 44:8002:8032  \"ERC20InvalidSender(address(0))\"\n                            revert(/** @src 44:7977:7978  \"0\" */ 0x00, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 36)\n                        }\n                        /// @src 44:5997:6537  \"if (from == address(0)) {...\"\n                        _2 := /** @src 44:7977:7978  \"0\" */ 0x00\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        mstore(/** @src 44:7977:7978  \"0\" */ 0x00, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _1)\n                        mstore(0x20, /** @src 44:7977:7978  \"0\" */ 0x00)\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        let _3 := sload(keccak256(/** @src 44:7977:7978  \"0\" */ 0x00, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x40))\n                        /// @src 44:6240:6355  \"if (fromBalance < value) {...\"\n                        if /** @src 44:6244:6263  \"fromBalance < value\" */ lt(_3, var_value)\n                        /// @src 44:6240:6355  \"if (fromBalance < value) {...\"\n                        {\n                            /// @src 44:6290:6340  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                            mstore(/** @src 44:7977:7978  \"0\" */ 0x00, /** @src 44:6290:6340  \"ERC20InsufficientBalance(from, fromBalance, value)\" */ shl(226, 0x391434e3))\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            mstore(/** @src 44:6290:6340  \"ERC20InsufficientBalance(from, fromBalance, value)\" */ 4, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _1)\n                            mstore(36, _3)\n                            mstore(68, var_value)\n                            /// @src 44:6290:6340  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                            revert(/** @src 44:7977:7978  \"0\" */ 0x00, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 100)\n                        }\n                        mstore(/** @src 44:7977:7978  \"0\" */ 0x00, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _1)\n                        mstore(0x20, /** @src 44:7977:7978  \"0\" */ 0x00)\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        sstore(keccak256(/** @src 44:7977:7978  \"0\" */ 0x00, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x40), sub(/** @src 44:6493:6512  \"fromBalance - value\" */ _3, var_value))\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        sstore(/** @src 44:6714:6735  \"_totalSupply -= value\" */ 0x02, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ sub(sload(/** @src 44:6714:6735  \"_totalSupply -= value\" */ 0x02), /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ var_value))\n                        /// @src 44:6987:7012  \"Transfer(from, to, value)\"\n                        let _4 := /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ mload(64)\n                        mstore(_4, var_value)\n                        /// @src 44:6987:7012  \"Transfer(from, to, value)\"\n                        log3(_4, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 32, /** @src 44:6987:7012  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _1, /** @src 44:7977:7978  \"0\" */ 0x00)\n                    }\n                    /// @ast-id 42642 @src 44:9605:10037  \"function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {...\"\n                    function fun_approve(var_owner, var_spender, var_value)\n                    {\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        let _1 := and(/** @src 44:9717:9736  \"owner == address(0)\" */ var_owner, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ sub(shl(160, 1), 1))\n                        /// @src 44:9713:9802  \"if (owner == address(0)) {...\"\n                        if /** @src 44:9717:9736  \"owner == address(0)\" */ iszero(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _1)\n                        /// @src 44:9713:9802  \"if (owner == address(0)) {...\"\n                        {\n                            /// @src 44:9759:9791  \"ERC20InvalidApprover(address(0))\"\n                            mstore(/** @src 44:9734:9735  \"0\" */ 0x00, /** @src 44:9759:9791  \"ERC20InvalidApprover(address(0))\" */ shl(224, 0xe602df05))\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            mstore(/** @src 44:9759:9791  \"ERC20InvalidApprover(address(0))\" */ 4, /** @src 44:9734:9735  \"0\" */ 0x00)\n                            /// @src 44:9759:9791  \"ERC20InvalidApprover(address(0))\"\n                            revert(/** @src 44:9734:9735  \"0\" */ 0x00, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 36)\n                        }\n                        let _2 := and(/** @src 44:9815:9836  \"spender == address(0)\" */ var_spender, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ sub(shl(160, 1), 1))\n                        /// @src 44:9811:9901  \"if (spender == address(0)) {...\"\n                        if /** @src 44:9815:9836  \"spender == address(0)\" */ iszero(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _2)\n                        /// @src 44:9811:9901  \"if (spender == address(0)) {...\"\n                        {\n                            /// @src 44:9859:9890  \"ERC20InvalidSpender(address(0))\"\n                            mstore(/** @src 44:9734:9735  \"0\" */ 0x00, /** @src 44:9859:9890  \"ERC20InvalidSpender(address(0))\" */ shl(225, 0x4a1406b1))\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            mstore(/** @src 44:9859:9890  \"ERC20InvalidSpender(address(0))\" */ 4, /** @src 44:9734:9735  \"0\" */ 0x00)\n                            /// @src 44:9859:9890  \"ERC20InvalidSpender(address(0))\"\n                            revert(/** @src 44:9734:9735  \"0\" */ 0x00, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 36)\n                        }\n                        mstore(/** @src 44:9734:9735  \"0\" */ 0x00, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _1)\n                        mstore(0x20, /** @src 44:8746:8750  \"true\" */ 0x01)\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        let dataSlot := keccak256(/** @src 44:9734:9735  \"0\" */ 0x00, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x40)\n                        /// @src 44:9910:9937  \"_allowances[owner][spender]\"\n                        let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ _2)\n                        mstore(0x20, /** @src 44:9910:9928  \"_allowances[owner]\" */ dataSlot)\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x40)\n                        sstore(/** @src 44:9910:9937  \"_allowances[owner][spender]\" */ dataSlot_1, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ var_value)\n                        /// @src 44:9989:10020  \"Approval(owner, spender, value)\"\n                        let _3 := /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ mload(0x40)\n                        mstore(_3, var_value)\n                        /// @src 44:9989:10020  \"Approval(owner, spender, value)\"\n                        log3(_3, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x20, /** @src 44:9989:10020  \"Approval(owner, spender, value)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, _1, _2)\n                    }\n                    /// @ast-id 45122 @src 58:3368:3635  \"function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {...\"\n                    function fun_toStringWithFallback(var_value) -> var__mpos\n                    {\n                        /// @src 58:3462:3475  \"string memory\"\n                        var__mpos := /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 96\n                        /// @src 58:3487:3629  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\"\n                        switch /** @src 58:3491:3537  \"ShortString.unwrap(value) != FALLBACK_SENTINEL\" */ iszero(eq(var_value, /** @src 58:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff))\n                        case /** @src 58:3487:3629  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\" */ 0 {\n                            /// @src 58:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            let memPtr := /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ mload(64)\n                            /// @src 58:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            finalize_allocation(memPtr, sub(abi_encode_string_storage(/** @src 63:6210:6223  \"_nameFallback\" */ 0x06, /** @src 58:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ memPtr), memPtr))\n                            /// @src 58:3606:3618  \"return store\"\n                            var__mpos := memPtr\n                            leave\n                        }\n                        default /// @src 58:3487:3629  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\"\n                        {\n                            /// @src 58:2625:2665  \"uint256(ShortString.unwrap(sstr)) & 0xFF\"\n                            let expr := and(var_value, /** @src 58:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff)\n                            /// @src 58:2675:2744  \"if (result > 31) {...\"\n                            if /** @src 58:2679:2690  \"result > 31\" */ gt(expr, /** @src 58:2688:2690  \"31\" */ 0x1f)\n                            /// @src 58:2675:2744  \"if (result > 31) {...\"\n                            {\n                                /// @src 58:2713:2733  \"InvalidShortString()\"\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 58:2713:2733  \"InvalidShortString()\" */ shl(226, 0x2cd44ac3))\n                                revert(/** @src -1:-1:-1 */ 0, /** @src 58:2713:2733  \"InvalidShortString()\" */ 4)\n                            }\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            let size := /** @src -1:-1:-1 */ 0\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            let _1 := /** @src -1:-1:-1 */ 0\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            _1 := /** @src -1:-1:-1 */ 0\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            size := 64\n                            let memPtr_1 := mload(64)\n                            finalize_allocation(memPtr_1, 64)\n                            mstore(memPtr_1, /** @src 58:2311:2313  \"32\" */ 0x20)\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            let dataStart := add(memPtr_1, /** @src 58:2311:2313  \"32\" */ 0x20)\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            calldatacopy(dataStart, calldatasize(), add(64, not(31)))\n                            /// @src 58:2324:2430  \"assembly (\\\"memory-safe\\\") {...\"\n                            mstore(memPtr_1, expr)\n                            mstore(dataStart, var_value)\n                            /// @src 58:3553:3575  \"return toString(value)\"\n                            var__mpos := memPtr_1\n                            leave\n                        }\n                    }\n                    /// @ast-id 45122 @src 58:3368:3635  \"function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {...\"\n                    function fun_toStringWithFallback_6298(var_value) -> var_mpos\n                    {\n                        /// @src 58:3462:3475  \"string memory\"\n                        var_mpos := /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 96\n                        /// @src 58:3487:3629  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\"\n                        switch /** @src 58:3491:3537  \"ShortString.unwrap(value) != FALLBACK_SENTINEL\" */ iszero(eq(var_value, /** @src 58:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff))\n                        case /** @src 58:3487:3629  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\" */ 0 {\n                            /// @src 58:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            let memPtr := /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ mload(64)\n                            /// @src 58:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\"\n                            finalize_allocation(memPtr, sub(abi_encode_string_storage(/** @src 63:6668:6684  \"_versionFallback\" */ 0x07, /** @src 58:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ memPtr), memPtr))\n                            /// @src 58:3606:3618  \"return store\"\n                            var_mpos := memPtr\n                            leave\n                        }\n                        default /// @src 58:3487:3629  \"if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {...\"\n                        {\n                            /// @src 58:2625:2665  \"uint256(ShortString.unwrap(sstr)) & 0xFF\"\n                            let expr := and(var_value, /** @src 58:1390:1456  \"0x00000000000000000000000000000000000000000000000000000000000000FF\" */ 0xff)\n                            /// @src 58:2675:2744  \"if (result > 31) {...\"\n                            if /** @src 58:2679:2690  \"result > 31\" */ gt(expr, /** @src 58:2688:2690  \"31\" */ 0x1f)\n                            /// @src 58:2675:2744  \"if (result > 31) {...\"\n                            {\n                                /// @src 58:2713:2733  \"InvalidShortString()\"\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 58:2713:2733  \"InvalidShortString()\" */ shl(226, 0x2cd44ac3))\n                                revert(/** @src -1:-1:-1 */ 0, /** @src 58:2713:2733  \"InvalidShortString()\" */ 4)\n                            }\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            let size := /** @src -1:-1:-1 */ 0\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            let _1 := /** @src -1:-1:-1 */ 0\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            _1 := /** @src -1:-1:-1 */ 0\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            size := 64\n                            let memPtr_1 := mload(64)\n                            finalize_allocation(memPtr_1, 64)\n                            mstore(memPtr_1, /** @src 58:2311:2313  \"32\" */ 0x20)\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            let dataStart := add(memPtr_1, /** @src 58:2311:2313  \"32\" */ 0x20)\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            calldatacopy(dataStart, calldatasize(), add(64, not(31)))\n                            /// @src 58:2324:2430  \"assembly (\\\"memory-safe\\\") {...\"\n                            mstore(memPtr_1, expr)\n                            mstore(dataStart, var_value)\n                            /// @src 58:3553:3575  \"return toString(value)\"\n                            var_mpos := memPtr_1\n                            leave\n                        }\n                    }\n                    /// @ast-id 47072 @src 62:5203:6754  \"function tryRecover(...\"\n                    function fun_tryRecover(var_hash, var_v, var_r, var_s) -> var_recovered, var_err, var_errArg\n                    {\n                        /// @src 62:6266:6430  \"if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {...\"\n                        if /** @src 62:6270:6349  \"uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0\" */ gt(var_s, /** @src 62:6283:6349  \"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0\" */ 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0)\n                        /// @src 62:6266:6430  \"if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {...\"\n                        {\n                            /// @src 62:6365:6419  \"return (address(0), RecoverError.InvalidSignatureS, s)\"\n                            var_recovered := /** @src 62:6381:6382  \"0\" */ 0x00\n                            /// @src 62:6365:6419  \"return (address(0), RecoverError.InvalidSignatureS, s)\"\n                            var_err := /** @src 62:6385:6415  \"RecoverError.InvalidSignatureS\" */ 3\n                            /// @src 62:6365:6419  \"return (address(0), RecoverError.InvalidSignatureS, s)\"\n                            var_errArg := var_s\n                            leave\n                        }\n                        /// @src 62:6541:6565  \"ecrecover(hash, v, r, s)\"\n                        let _1 := /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ mload(64)\n                        mstore(_1, var_hash)\n                        mstore(add(_1, 32), and(var_v, 0xff))\n                        mstore(add(_1, 64), var_r)\n                        mstore(add(_1, 96), var_s)\n                        /// @src 62:6541:6565  \"ecrecover(hash, v, r, s)\"\n                        mstore(/** @src -1:-1:-1 */ 0, 0)\n                        /// @src 62:6541:6565  \"ecrecover(hash, v, r, s)\"\n                        if iszero(staticcall(gas(), 1, _1, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 128, /** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 32))\n                        /// @src 62:6541:6565  \"ecrecover(hash, v, r, s)\"\n                        {\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            let pos := mload(64)\n                            returndatacopy(pos, /** @src -1:-1:-1 */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 62:6541:6565  \"ecrecover(hash, v, r, s)\"\n                        let _2 := mload(/** @src -1:-1:-1 */ 0)\n                        /// @src 62:6575:6688  \"if (signer == address(0)) {...\"\n                        if /** @src 62:6579:6599  \"signer == address(0)\" */ iszero(/** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ and(/** @src 62:6579:6599  \"signer == address(0)\" */ _2, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ sub(shl(160, 1), 1)))\n                        /// @src 62:6575:6688  \"if (signer == address(0)) {...\"\n                        {\n                            /// @src 62:6615:6677  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                            var_recovered := /** @src -1:-1:-1 */ 0\n                            /// @src 62:6615:6677  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                            var_err := /** @src 62:6541:6565  \"ecrecover(hash, v, r, s)\" */ 1\n                            /// @src 62:6615:6677  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                            var_errArg := /** @src -1:-1:-1 */ 0\n                            /// @src 62:6615:6677  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                            leave\n                        }\n                        /// @src 62:6698:6747  \"return (signer, RecoverError.NoError, bytes32(0))\"\n                        var_recovered := _2\n                        var_err := /** @src -1:-1:-1 */ 0\n                        /// @src 62:6698:6747  \"return (signer, RecoverError.NoError, bytes32(0))\"\n                        var_errArg := /** @src -1:-1:-1 */ 0\n                    }\n                    /// @ast-id 47157 @src 62:7280:7812  \"function _throwError(RecoverError error, bytes32 errorArg) private pure {...\"\n                    function fun_throwError(var_error, var_errorArg)\n                    {\n                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                        let _1 := iszero(lt(var_error, 4))\n                        if _1\n                        {\n                            mstore(/** @src 62:7375:7395  \"RecoverError.NoError\" */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x21)\n                            revert(/** @src 62:7375:7395  \"RecoverError.NoError\" */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 0x24)\n                        }\n                        /// @src 62:7362:7806  \"if (error == RecoverError.NoError) {...\"\n                        switch /** @src 62:7366:7395  \"error == RecoverError.NoError\" */ iszero(var_error)\n                        case /** @src 62:7362:7806  \"if (error == RecoverError.NoError) {...\" */ 0 {\n                            /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                            _1 := /** @src 62:7375:7395  \"RecoverError.NoError\" */ 0\n                            /// @src 62:7458:7806  \"if (error == RecoverError.InvalidSignature) {...\"\n                            switch /** @src 62:7462:7500  \"error == RecoverError.InvalidSignature\" */ eq(var_error, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 1)\n                            case /** @src 62:7458:7806  \"if (error == RecoverError.InvalidSignature) {...\" */ 0 {\n                                /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                _1 := /** @src 62:7375:7395  \"RecoverError.NoError\" */ 0\n                                /// @src 62:7563:7806  \"if (error == RecoverError.InvalidSignatureLength) {...\"\n                                switch /** @src 62:7567:7611  \"error == RecoverError.InvalidSignatureLength\" */ eq(var_error, /** @src 62:7576:7611  \"RecoverError.InvalidSignatureLength\" */ 2)\n                                case /** @src 62:7563:7806  \"if (error == RecoverError.InvalidSignatureLength) {...\" */ 0 {\n                                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                    _1 := /** @src 62:7375:7395  \"RecoverError.NoError\" */ 0\n                                    /// @src 62:7697:7806  \"if (error == RecoverError.InvalidSignatureS) {...\"\n                                    if /** @src 62:7701:7740  \"error == RecoverError.InvalidSignatureS\" */ eq(var_error, /** @src 62:7710:7740  \"RecoverError.InvalidSignatureS\" */ 3)\n                                    /// @src 62:7697:7806  \"if (error == RecoverError.InvalidSignatureS) {...\"\n                                    {\n                                        /// @src 62:7763:7795  \"ECDSAInvalidSignatureS(errorArg)\"\n                                        mstore(/** @src 62:7375:7395  \"RecoverError.NoError\" */ 0, /** @src 62:7763:7795  \"ECDSAInvalidSignatureS(errorArg)\" */ shl(226, 0x35e2f383))\n                                        /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                        mstore(4, var_errorArg)\n                                        /// @src 62:7763:7795  \"ECDSAInvalidSignatureS(errorArg)\"\n                                        revert(/** @src 62:7375:7395  \"RecoverError.NoError\" */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 36)\n                                    }\n                                }\n                                default /// @src 62:7563:7806  \"if (error == RecoverError.InvalidSignatureLength) {...\"\n                                {\n                                    /// @src 62:7634:7680  \"ECDSAInvalidSignatureLength(uint256(errorArg))\"\n                                    mstore(/** @src 62:7375:7395  \"RecoverError.NoError\" */ 0, /** @src 62:7634:7680  \"ECDSAInvalidSignatureLength(uint256(errorArg))\" */ shl(224, 0xfce698f7))\n                                    /// @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\"\n                                    mstore(4, var_errorArg)\n                                    /// @src 62:7634:7680  \"ECDSAInvalidSignatureLength(uint256(errorArg))\"\n                                    revert(/** @src 62:7375:7395  \"RecoverError.NoError\" */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 36)\n                                }\n                            }\n                            default /// @src 62:7458:7806  \"if (error == RecoverError.InvalidSignature) {...\"\n                            {\n                                /// @src 62:7523:7546  \"ECDSAInvalidSignature()\"\n                                mstore(/** @src 62:7375:7395  \"RecoverError.NoError\" */ 0, /** @src 62:7523:7546  \"ECDSAInvalidSignature()\" */ shl(224, 0xf645eedf))\n                                revert(/** @src 62:7375:7395  \"RecoverError.NoError\" */ 0, /** @src 94:426:1608  \"contract ERC20GearSupply is ERC20, ERC20Burnable, Ownable, ERC20Permit {...\" */ 4)\n                            }\n                        }\n                        default /// @src 62:7362:7806  \"if (error == RecoverError.NoError) {...\"\n                        {\n                            /// @src 62:7411:7418  \"return;\"\n                            leave\n                        }\n                    }\n                }\n                data \".metadata\" hex\"\"\n            }\n        }\n        data \".metadata\" hex\"\"\n    }\n}\n","ast":{"absolutePath":"src/ERC20Manager.sol","id":61386,"exportedSymbols":{"AccessControlUpgradeable":[40063],"BridgingPayment":[60053],"CustomEnumerableMap":[64787],"ERC20GearSupply":[63178],"ERC20Manager":[61385],"EnumerableSet":[55343],"IBridgingPayment":[63216],"IERC20":[42769],"IERC20Burnable":[63234],"IERC20Manager":[63509],"IERC20Mintable":[63645],"IERC20Permit":[43031],"IGovernance":[63739],"IMessageHandler":[63861],"IPausable":[64143],"Initializable":[40526],"LibString":[64811],"PausableUpgradeable":[40914],"SafeERC20":[43495],"UUPSUpgradeable":[40708]},"nodeType":"SourceUnit","src":"74:25716:85","nodes":[{"id":60055,"nodeType":"PragmaDirective","src":"74:24:85","nodes":[],"literals":["solidity","^","0.8",".30"]},{"id":60057,"nodeType":"ImportDirective","src":"100:96:85","nodes":[],"absolutePath":"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","nameLocation":"-1:-1:-1","scope":61386,"sourceUnit":40527,"symbolAliases":[{"foreign":{"id":60056,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40526,"src":"108:13:85","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":60059,"nodeType":"ImportDirective","src":"197:113:85","nodes":[],"absolutePath":"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol","nameLocation":"-1:-1:-1","scope":61386,"sourceUnit":40064,"symbolAliases":[{"foreign":{"id":60058,"name":"AccessControlUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40063,"src":"205:24:85","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":60061,"nodeType":"ImportDirective","src":"311:102:85","nodes":[],"absolutePath":"lib/openzeppelin-contracts-upgradeable/contracts/utils/PausableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol","nameLocation":"-1:-1:-1","scope":61386,"sourceUnit":40915,"symbolAliases":[{"foreign":{"id":60060,"name":"PausableUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40914,"src":"319:19:85","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":60063,"nodeType":"ImportDirective","src":"414:100:85","nodes":[],"absolutePath":"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","nameLocation":"-1:-1:-1","scope":61386,"sourceUnit":40709,"symbolAliases":[{"foreign":{"id":60062,"name":"UUPSUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40708,"src":"422:15:85","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":60065,"nodeType":"ImportDirective","src":"515:70:85","nodes":[],"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","nameLocation":"-1:-1:-1","scope":61386,"sourceUnit":42770,"symbolAliases":[{"foreign":{"id":60064,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":42769,"src":"523:6:85","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":60067,"nodeType":"ImportDirective","src":"586:93:85","nodes":[],"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","nameLocation":"-1:-1:-1","scope":61386,"sourceUnit":43032,"symbolAliases":[{"foreign":{"id":60066,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43031,"src":"594:12:85","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":60069,"nodeType":"ImportDirective","src":"680:82:85","nodes":[],"absolutePath":"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","nameLocation":"-1:-1:-1","scope":61386,"sourceUnit":43496,"symbolAliases":[{"foreign":{"id":60068,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43495,"src":"688:9:85","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":60071,"nodeType":"ImportDirective","src":"763:86:85","nodes":[],"absolutePath":"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol","file":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","nameLocation":"-1:-1:-1","scope":61386,"sourceUnit":55344,"symbolAliases":[{"foreign":{"id":60070,"name":"EnumerableSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":55343,"src":"771:13:85","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":60073,"nodeType":"ImportDirective","src":"850:68:85","nodes":[],"absolutePath":"src/erc20/managed/ERC20GearSupply.sol","file":"./erc20/managed/ERC20GearSupply.sol","nameLocation":"-1:-1:-1","scope":61386,"sourceUnit":63179,"symbolAliases":[{"foreign":{"id":60072,"name":"ERC20GearSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63178,"src":"858:15:85","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":60075,"nodeType":"ImportDirective","src":"919:72:85","nodes":[],"absolutePath":"src/libraries/CustomEnumerableMap.sol","file":"./libraries/CustomEnumerableMap.sol","nameLocation":"-1:-1:-1","scope":61386,"sourceUnit":64788,"symbolAliases":[{"foreign":{"id":60074,"name":"CustomEnumerableMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64787,"src":"927:19:85","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":60077,"nodeType":"ImportDirective","src":"992:52:85","nodes":[],"absolutePath":"src/libraries/LibString.sol","file":"./libraries/LibString.sol","nameLocation":"-1:-1:-1","scope":61386,"sourceUnit":64812,"symbolAliases":[{"foreign":{"id":60076,"name":"LibString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64811,"src":"1000:9:85","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":60079,"nodeType":"ImportDirective","src":"1045:54:85","nodes":[],"absolutePath":"src/BridgingPayment.sol","file":"./BridgingPayment.sol","nameLocation":"-1:-1:-1","scope":61386,"sourceUnit":60054,"symbolAliases":[{"foreign":{"id":60078,"name":"BridgingPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60053,"src":"1053:15:85","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":60081,"nodeType":"ImportDirective","src":"1100:67:85","nodes":[],"absolutePath":"src/interfaces/IBridgingPayment.sol","file":"./interfaces/IBridgingPayment.sol","nameLocation":"-1:-1:-1","scope":61386,"sourceUnit":63217,"symbolAliases":[{"foreign":{"id":60080,"name":"IBridgingPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63216,"src":"1108:16:85","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":60083,"nodeType":"ImportDirective","src":"1168:63:85","nodes":[],"absolutePath":"src/interfaces/IERC20Burnable.sol","file":"./interfaces/IERC20Burnable.sol","nameLocation":"-1:-1:-1","scope":61386,"sourceUnit":63235,"symbolAliases":[{"foreign":{"id":60082,"name":"IERC20Burnable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63234,"src":"1176:14:85","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":60085,"nodeType":"ImportDirective","src":"1232:61:85","nodes":[],"absolutePath":"src/interfaces/IERC20Manager.sol","file":"./interfaces/IERC20Manager.sol","nameLocation":"-1:-1:-1","scope":61386,"sourceUnit":63634,"symbolAliases":[{"foreign":{"id":60084,"name":"IERC20Manager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63509,"src":"1240:13:85","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":60087,"nodeType":"ImportDirective","src":"1294:63:85","nodes":[],"absolutePath":"src/interfaces/IERC20Mintable.sol","file":"./interfaces/IERC20Mintable.sol","nameLocation":"-1:-1:-1","scope":61386,"sourceUnit":63646,"symbolAliases":[{"foreign":{"id":60086,"name":"IERC20Mintable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63645,"src":"1302:14:85","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":60089,"nodeType":"ImportDirective","src":"1358:57:85","nodes":[],"absolutePath":"src/interfaces/IGovernance.sol","file":"./interfaces/IGovernance.sol","nameLocation":"-1:-1:-1","scope":61386,"sourceUnit":63850,"symbolAliases":[{"foreign":{"id":60088,"name":"IGovernance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63739,"src":"1366:11:85","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":60091,"nodeType":"ImportDirective","src":"1416:65:85","nodes":[],"absolutePath":"src/interfaces/IMessageHandler.sol","file":"./interfaces/IMessageHandler.sol","nameLocation":"-1:-1:-1","scope":61386,"sourceUnit":63862,"symbolAliases":[{"foreign":{"id":60090,"name":"IMessageHandler","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63861,"src":"1424:15:85","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":60093,"nodeType":"ImportDirective","src":"1482:53:85","nodes":[],"absolutePath":"src/interfaces/IPausable.sol","file":"./interfaces/IPausable.sol","nameLocation":"-1:-1:-1","scope":61386,"sourceUnit":64144,"symbolAliases":[{"foreign":{"id":60092,"name":"IPausable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64143,"src":"1490:9:85","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":61385,"nodeType":"ContractDefinition","src":"1537:24252:85","nodes":[{"id":60111,"nodeType":"UsingForDirective","src":"1717:27:85","nodes":[],"global":false,"libraryName":{"id":60108,"name":"SafeERC20","nameLocations":["1723:9:85"],"nodeType":"IdentifierPath","referencedDeclaration":43495,"src":"1723:9:85"},"typeName":{"id":60110,"nodeType":"UserDefinedTypeName","pathNode":{"id":60109,"name":"IERC20","nameLocations":["1737:6:85"],"nodeType":"IdentifierPath","referencedDeclaration":42769,"src":"1737:6:85"},"referencedDeclaration":42769,"src":"1737:6:85","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$42769","typeString":"contract IERC20"}}},{"id":60115,"nodeType":"UsingForDirective","src":"1750:49:85","nodes":[],"global":false,"libraryName":{"id":60112,"name":"EnumerableSet","nameLocations":["1756:13:85"],"nodeType":"IdentifierPath","referencedDeclaration":55343,"src":"1756:13:85"},"typeName":{"id":60114,"nodeType":"UserDefinedTypeName","pathNode":{"id":60113,"name":"EnumerableSet.Bytes32Set","nameLocations":["1774:13:85","1788:10:85"],"nodeType":"IdentifierPath","referencedDeclaration":54148,"src":"1774:24:85"},"referencedDeclaration":54148,"src":"1774:24:85","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$54148_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}}},{"id":60119,"nodeType":"UsingForDirective","src":"1804:49:85","nodes":[],"global":false,"libraryName":{"id":60116,"name":"EnumerableSet","nameLocations":["1810:13:85"],"nodeType":"IdentifierPath","referencedDeclaration":55343,"src":"1810:13:85"},"typeName":{"id":60118,"nodeType":"UserDefinedTypeName","pathNode":{"id":60117,"name":"EnumerableSet.AddressSet","nameLocations":["1828:13:85","1842:10:85"],"nodeType":"IdentifierPath","referencedDeclaration":54318,"src":"1828:24:85"},"referencedDeclaration":54318,"src":"1828:24:85","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$54318_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},{"id":60123,"nodeType":"UsingForDirective","src":"1859:72:85","nodes":[],"global":false,"libraryName":{"id":60120,"name":"CustomEnumerableMap","nameLocations":["1865:19:85"],"nodeType":"IdentifierPath","referencedDeclaration":64787,"src":"1865:19:85"},"typeName":{"id":60122,"nodeType":"UserDefinedTypeName","pathNode":{"id":60121,"name":"CustomEnumerableMap.AddressToTokenTypeMap","nameLocations":["1889:19:85","1909:21:85"],"nodeType":"IdentifierPath","referencedDeclaration":64505,"src":"1889:41:85"},"referencedDeclaration":64505,"src":"1889:41:85","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToTokenTypeMap_$64505_storage_ptr","typeString":"struct CustomEnumerableMap.AddressToTokenTypeMap"}}},{"id":60127,"nodeType":"VariableDeclaration","src":"1988:42:85","nodes":[],"constant":true,"documentation":{"id":60124,"nodeType":"StructuredDocumentation","src":"1937:46:85","text":" @dev `bytes32 sender` size."},"mutability":"constant","name":"SENDER_SIZE","nameLocation":"2014:11:85","scope":61385,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60125,"name":"uint256","nodeType":"ElementaryTypeName","src":"1988:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3332","id":60126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2028:2:85","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"visibility":"internal"},{"id":60131,"nodeType":"VariableDeclaration","src":"2089:44:85","nodes":[],"constant":true,"documentation":{"id":60128,"nodeType":"StructuredDocumentation","src":"2036:48:85","text":" @dev `address receiver` size."},"mutability":"constant","name":"RECEIVER_SIZE","nameLocation":"2115:13:85","scope":61385,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60129,"name":"uint256","nodeType":"ElementaryTypeName","src":"2089:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3230","id":60130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2131:2:85","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"internal"},{"id":60135,"nodeType":"VariableDeclaration","src":"2189:41:85","nodes":[],"constant":true,"documentation":{"id":60132,"nodeType":"StructuredDocumentation","src":"2139:45:85","text":" @dev `address token` size."},"mutability":"constant","name":"TOKEN_SIZE","nameLocation":"2215:10:85","scope":61385,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60133,"name":"uint256","nodeType":"ElementaryTypeName","src":"2189:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3230","id":60134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2228:2:85","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"internal"},{"id":60139,"nodeType":"VariableDeclaration","src":"2287:42:85","nodes":[],"constant":true,"documentation":{"id":60136,"nodeType":"StructuredDocumentation","src":"2236:46:85","text":" @dev `uint256 amount` size."},"mutability":"constant","name":"AMOUNT_SIZE","nameLocation":"2313:11:85","scope":61385,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60137,"name":"uint256","nodeType":"ElementaryTypeName","src":"2287:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3332","id":60138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2327:2:85","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"visibility":"internal"},{"id":60149,"nodeType":"VariableDeclaration","src":"2390:104:85","nodes":[],"constant":true,"documentation":{"id":60140,"nodeType":"StructuredDocumentation","src":"2336:49:85","text":" @dev Size of transfer message."},"mutability":"constant","name":"TRANSFER_MESSAGE_SIZE","nameLocation":"2416:21:85","scope":61385,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60141,"name":"uint256","nodeType":"ElementaryTypeName","src":"2390:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":60148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":60146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":60144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":60142,"name":"SENDER_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60127,"src":"2440:11:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":60143,"name":"RECEIVER_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60131,"src":"2454:13:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2440:27:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":60145,"name":"TOKEN_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60135,"src":"2470:10:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2440:40:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":60147,"name":"AMOUNT_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60139,"src":"2483:11:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2440:54:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"id":60153,"nodeType":"VariableDeclaration","src":"2559:49:85","nodes":[],"constant":true,"documentation":{"id":60150,"nodeType":"StructuredDocumentation","src":"2501:53:85","text":" @dev `address receiver` bit shift."},"mutability":"constant","name":"RECEIVER_BIT_SHIFT","nameLocation":"2585:18:85","scope":61385,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60151,"name":"uint256","nodeType":"ElementaryTypeName","src":"2559:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3936","id":60152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2606:2:85","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"visibility":"internal"},{"id":60157,"nodeType":"VariableDeclaration","src":"2669:46:85","nodes":[],"constant":true,"documentation":{"id":60154,"nodeType":"StructuredDocumentation","src":"2614:50:85","text":" @dev `address token` bit shift."},"mutability":"constant","name":"TOKEN_BIT_SHIFT","nameLocation":"2695:15:85","scope":61385,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60155,"name":"uint256","nodeType":"ElementaryTypeName","src":"2669:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3936","id":60156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2713:2:85","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"visibility":"internal"},{"id":60161,"nodeType":"VariableDeclaration","src":"2772:38:85","nodes":[],"constant":true,"documentation":{"id":60158,"nodeType":"StructuredDocumentation","src":"2722:45:85","text":" @dev `SENDER_SIZE` offset."},"mutability":"constant","name":"OFFSET1","nameLocation":"2798:7:85","scope":61385,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60159,"name":"uint256","nodeType":"ElementaryTypeName","src":"2772:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3332","id":60160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2808:2:85","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"visibility":"internal"},{"id":60165,"nodeType":"VariableDeclaration","src":"2882:38:85","nodes":[],"constant":true,"documentation":{"id":60162,"nodeType":"StructuredDocumentation","src":"2816:61:85","text":" @dev `SENDER_SIZE + RECEIVER_SIZE` offset."},"mutability":"constant","name":"OFFSET2","nameLocation":"2908:7:85","scope":61385,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60163,"name":"uint256","nodeType":"ElementaryTypeName","src":"2882:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3532","id":60164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2918:2:85","typeDescriptions":{"typeIdentifier":"t_rational_52_by_1","typeString":"int_const 52"},"value":"52"},"visibility":"internal"},{"id":60169,"nodeType":"VariableDeclaration","src":"3005:38:85","nodes":[],"constant":true,"documentation":{"id":60166,"nodeType":"StructuredDocumentation","src":"2926:74:85","text":" @dev `SENDER_SIZE + RECEIVER_SIZE + TOKEN_SIZE` offset."},"mutability":"constant","name":"OFFSET3","nameLocation":"3031:7:85","scope":61385,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60167,"name":"uint256","nodeType":"ElementaryTypeName","src":"3005:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3732","id":60168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3041:2:85","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},"visibility":"internal"},{"id":60173,"nodeType":"VariableDeclaration","src":"3189:47:85","nodes":[],"constant":true,"documentation":{"id":60170,"nodeType":"StructuredDocumentation","src":"3134:50:85","text":" @dev `uint8 discriminant` size."},"mutability":"constant","name":"DISCRIMINANT_SIZE","nameLocation":"3215:17:85","scope":61385,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60171,"name":"uint256","nodeType":"ElementaryTypeName","src":"3189:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":60172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3235:1:85","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"id":60177,"nodeType":"VariableDeclaration","src":"3303:54:85","nodes":[],"constant":true,"documentation":{"id":60174,"nodeType":"StructuredDocumentation","src":"3243:55:85","text":" @dev `uint8 discriminant` bit shift."},"mutability":"constant","name":"DISCRIMINANT_BIT_SHIFT","nameLocation":"3329:22:85","scope":61385,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60175,"name":"uint256","nodeType":"ElementaryTypeName","src":"3303:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323438","id":60176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3354:3:85","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},"visibility":"internal"},{"id":60181,"nodeType":"VariableDeclaration","src":"3420:37:85","nodes":[],"constant":true,"documentation":{"id":60178,"nodeType":"StructuredDocumentation","src":"3364:51:85","text":" @dev `DISCRIMINANT_SIZE` offset."},"mutability":"constant","name":"OFFSET4","nameLocation":"3446:7:85","scope":61385,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60179,"name":"uint256","nodeType":"ElementaryTypeName","src":"3420:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":60180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3456:1:85","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"id":60185,"nodeType":"VariableDeclaration","src":"3614:48:85","nodes":[],"constant":true,"documentation":{"id":60182,"nodeType":"StructuredDocumentation","src":"3548:61:85","text":" @dev Add VFT manager message discriminant."},"mutability":"constant","name":"ADD_VFT_MANAGER","nameLocation":"3640:15:85","scope":61385,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60183,"name":"uint256","nodeType":"ElementaryTypeName","src":"3614:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":60184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3658:4:85","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"id":60189,"nodeType":"VariableDeclaration","src":"3724:47:85","nodes":[],"constant":true,"documentation":{"id":60186,"nodeType":"StructuredDocumentation","src":"3669:50:85","text":" @dev `bytes32 vftManager` size."},"mutability":"constant","name":"VFT_MANAGER_SIZE","nameLocation":"3750:16:85","scope":61385,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60187,"name":"uint256","nodeType":"ElementaryTypeName","src":"3724:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3332","id":60188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3769:2:85","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"visibility":"internal"},{"id":60195,"nodeType":"VariableDeclaration","src":"3839:93:85","nodes":[],"constant":true,"documentation":{"id":60190,"nodeType":"StructuredDocumentation","src":"3778:56:85","text":" @dev Size of add VFT manager message."},"mutability":"constant","name":"ADD_VFT_MANAGER_MESSAGE_SIZE","nameLocation":"3865:28:85","scope":61385,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60191,"name":"uint256","nodeType":"ElementaryTypeName","src":"3839:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":60194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":60192,"name":"DISCRIMINANT_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60173,"src":"3896:17:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":60193,"name":"VFT_MANAGER_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60189,"src":"3916:16:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3896:36:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"id":60199,"nodeType":"VariableDeclaration","src":"4077:46:85","nodes":[],"constant":true,"documentation":{"id":60196,"nodeType":"StructuredDocumentation","src":"4023:49:85","text":" @dev `bytes32 tokenName` size."},"mutability":"constant","name":"TOKEN_NAME_SIZE","nameLocation":"4103:15:85","scope":61385,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60197,"name":"uint256","nodeType":"ElementaryTypeName","src":"4077:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3332","id":60198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4121:2:85","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"visibility":"internal"},{"id":60203,"nodeType":"VariableDeclaration","src":"4185:48:85","nodes":[],"constant":true,"documentation":{"id":60200,"nodeType":"StructuredDocumentation","src":"4129:51:85","text":" @dev `bytes32 tokenSymbol` size."},"mutability":"constant","name":"TOKEN_SYMBOL_SIZE","nameLocation":"4211:17:85","scope":61385,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60201,"name":"uint256","nodeType":"ElementaryTypeName","src":"4185:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3332","id":60202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4231:2:85","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"visibility":"internal"},{"id":60207,"nodeType":"VariableDeclaration","src":"4295:49:85","nodes":[],"constant":true,"documentation":{"id":60204,"nodeType":"StructuredDocumentation","src":"4239:51:85","text":" @dev `uint8 tokenDecimals` size."},"mutability":"constant","name":"TOKEN_DECIMALS_SIZE","nameLocation":"4321:19:85","scope":61385,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60205,"name":"uint256","nodeType":"ElementaryTypeName","src":"4295:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":60206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4343:1:85","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"id":60211,"nodeType":"VariableDeclaration","src":"4412:56:85","nodes":[],"constant":true,"documentation":{"id":60208,"nodeType":"StructuredDocumentation","src":"4351:56:85","text":" @dev `uint8 tokenDecimals` bit shift."},"mutability":"constant","name":"TOKEN_DECIMALS_BIT_SHIFT","nameLocation":"4438:24:85","scope":61385,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60209,"name":"uint256","nodeType":"ElementaryTypeName","src":"4412:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323438","id":60210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4465:3:85","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},"visibility":"internal"},{"id":60215,"nodeType":"VariableDeclaration","src":"4549:38:85","nodes":[],"constant":true,"documentation":{"id":60212,"nodeType":"StructuredDocumentation","src":"4475:69:85","text":" @dev `DISCRIMINANT_SIZE + TOKEN_NAME_SIZE` offset."},"mutability":"constant","name":"OFFSET5","nameLocation":"4575:7:85","scope":61385,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60213,"name":"uint256","nodeType":"ElementaryTypeName","src":"4549:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3333","id":60214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4585:2:85","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"33"},"visibility":"internal"},{"id":60219,"nodeType":"VariableDeclaration","src":"4687:38:85","nodes":[],"constant":true,"documentation":{"id":60216,"nodeType":"StructuredDocumentation","src":"4593:89:85","text":" @dev `DISCRIMINANT_SIZE + TOKEN_NAME_SIZE + TOKEN_SYMBOL_SIZE` offset."},"mutability":"constant","name":"OFFSET6","nameLocation":"4713:7:85","scope":61385,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60217,"name":"uint256","nodeType":"ElementaryTypeName","src":"4687:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3635","id":60218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4723:2:85","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"visibility":"internal"},{"id":60229,"nodeType":"VariableDeclaration","src":"4815:146:85","nodes":[],"constant":true,"documentation":{"id":60220,"nodeType":"StructuredDocumentation","src":"4732:78:85","text":" @dev Size of register token message (for `TokenType.Gear`)."},"mutability":"constant","name":"REGISTER_GEAR_TOKEN_MESSAGE_SIZE","nameLocation":"4841:32:85","scope":61385,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60221,"name":"uint256","nodeType":"ElementaryTypeName","src":"4815:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":60228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":60226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":60224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":60222,"name":"DISCRIMINANT_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60173,"src":"4884:17:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":60223,"name":"TOKEN_NAME_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60199,"src":"4904:15:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4884:35:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":60225,"name":"TOKEN_SYMBOL_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60203,"src":"4922:17:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4884:55:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":60227,"name":"TOKEN_DECIMALS_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60207,"src":"4942:19:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4884:77:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"id":60233,"nodeType":"VariableDeclaration","src":"5102:50:85","nodes":[],"constant":true,"documentation":{"id":60230,"nodeType":"StructuredDocumentation","src":"5052:45:85","text":" @dev `address token` size."},"mutability":"constant","name":"ETHEREUM_TOKEN_SIZE","nameLocation":"5128:19:85","scope":61385,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60231,"name":"uint256","nodeType":"ElementaryTypeName","src":"5102:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3230","id":60232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5150:2:85","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"internal"},{"id":60239,"nodeType":"VariableDeclaration","src":"5246:104:85","nodes":[],"constant":true,"documentation":{"id":60234,"nodeType":"StructuredDocumentation","src":"5159:82:85","text":" @dev Size of register token message (for `TokenType.Ethereum`)."},"mutability":"constant","name":"REGISTER_ETHEREUM_TOKEN_MESSAGE_SIZE","nameLocation":"5272:36:85","scope":61385,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60235,"name":"uint256","nodeType":"ElementaryTypeName","src":"5246:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":60238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":60236,"name":"DISCRIMINANT_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60173,"src":"5311:17:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":60237,"name":"ETHEREUM_TOKEN_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60233,"src":"5331:19:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:39:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"id":60243,"nodeType":"VariableDeclaration","src":"5412:55:85","nodes":[],"constant":true,"documentation":{"id":60240,"nodeType":"StructuredDocumentation","src":"5357:50:85","text":" @dev `address token` bit shift."},"mutability":"constant","name":"ETHEREUM_TOKEN_BIT_SHIFT","nameLocation":"5438:24:85","scope":61385,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60241,"name":"uint256","nodeType":"ElementaryTypeName","src":"5412:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3936","id":60242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5465:2:85","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"visibility":"internal"},{"id":60252,"nodeType":"VariableDeclaration","src":"5474:60:85","nodes":[],"constant":true,"functionSelector":"e63ab1e9","mutability":"constant","name":"PAUSER_ROLE","nameLocation":"5498:11:85","scope":61385,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":60244,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5474:7:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"arguments":[{"hexValue":"30783031","id":60249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5528:4:85","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":60248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5520:7:85","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":60247,"name":"uint256","nodeType":"ElementaryTypeName","src":"5520:7:85","typeDescriptions":{}}},"id":60250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5520:13:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":60246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5512:7:85","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":60245,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5512:7:85","typeDescriptions":{}}},"id":60251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5512:22:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"id":60255,"nodeType":"VariableDeclaration","src":"5541:36:85","nodes":[],"constant":false,"mutability":"mutable","name":"_governanceAdmin","nameLocation":"5561:16:85","scope":61385,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63739","typeString":"contract IGovernance"},"typeName":{"id":60254,"nodeType":"UserDefinedTypeName","pathNode":{"id":60253,"name":"IGovernance","nameLocations":["5541:11:85"],"nodeType":"IdentifierPath","referencedDeclaration":63739,"src":"5541:11:85"},"referencedDeclaration":63739,"src":"5541:11:85","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63739","typeString":"contract IGovernance"}},"visibility":"private"},{"id":60258,"nodeType":"VariableDeclaration","src":"5583:37:85","nodes":[],"constant":false,"mutability":"mutable","name":"_governancePauser","nameLocation":"5603:17:85","scope":61385,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63739","typeString":"contract IGovernance"},"typeName":{"id":60257,"nodeType":"UserDefinedTypeName","pathNode":{"id":60256,"name":"IGovernance","nameLocations":["5583:11:85"],"nodeType":"IdentifierPath","referencedDeclaration":63739,"src":"5583:11:85"},"referencedDeclaration":63739,"src":"5583:11:85","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63739","typeString":"contract IGovernance"}},"visibility":"private"},{"id":60260,"nodeType":"VariableDeclaration","src":"5626:29:85","nodes":[],"constant":false,"mutability":"mutable","name":"_messageQueue","nameLocation":"5642:13:85","scope":61385,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60259,"name":"address","nodeType":"ElementaryTypeName","src":"5626:7:85","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"id":60263,"nodeType":"VariableDeclaration","src":"5661:45:85","nodes":[],"constant":false,"mutability":"mutable","name":"_vftManagers","nameLocation":"5694:12:85","scope":61385,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$54148_storage","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":60262,"nodeType":"UserDefinedTypeName","pathNode":{"id":60261,"name":"EnumerableSet.Bytes32Set","nameLocations":["5661:13:85","5675:10:85"],"nodeType":"IdentifierPath","referencedDeclaration":54148,"src":"5661:24:85"},"referencedDeclaration":54148,"src":"5661:24:85","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$54148_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"private"},{"id":60266,"nodeType":"VariableDeclaration","src":"5712:57:85","nodes":[],"constant":false,"mutability":"mutable","name":"_tokens","nameLocation":"5762:7:85","scope":61385,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToTokenTypeMap_$64505_storage","typeString":"struct CustomEnumerableMap.AddressToTokenTypeMap"},"typeName":{"id":60265,"nodeType":"UserDefinedTypeName","pathNode":{"id":60264,"name":"CustomEnumerableMap.AddressToTokenTypeMap","nameLocations":["5712:19:85","5732:21:85"],"nodeType":"IdentifierPath","referencedDeclaration":64505,"src":"5712:41:85"},"referencedDeclaration":64505,"src":"5712:41:85","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToTokenTypeMap_$64505_storage_ptr","typeString":"struct CustomEnumerableMap.AddressToTokenTypeMap"}},"visibility":"private"},{"id":60269,"nodeType":"VariableDeclaration","src":"5775:50:85","nodes":[],"constant":false,"mutability":"mutable","name":"_bridgingPayments","nameLocation":"5808:17:85","scope":61385,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$54318_storage","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":60268,"nodeType":"UserDefinedTypeName","pathNode":{"id":60267,"name":"EnumerableSet.AddressSet","nameLocations":["5775:13:85","5789:10:85"],"nodeType":"IdentifierPath","referencedDeclaration":54318,"src":"5775:24:85"},"referencedDeclaration":54318,"src":"5775:24:85","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$54318_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"private"},{"id":60277,"nodeType":"FunctionDefinition","src":"5900:53:85","nodes":[],"body":{"id":60276,"nodeType":"Block","src":"5914:39:85","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":60273,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40480,"src":"5924:20:85","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":60274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5924:22:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":60275,"nodeType":"ExpressionStatement","src":"5924:22:85"}]},"documentation":{"id":60270,"nodeType":"StructuredDocumentation","src":"5832:63:85","text":" @custom:oz-upgrades-unsafe-allow constructor"},"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","parameters":{"id":60271,"nodeType":"ParameterList","parameters":[],"src":"5911:2:85"},"returnParameters":{"id":60272,"nodeType":"ParameterList","parameters":[],"src":"5914:0:85"},"scope":61385,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":60389,"nodeType":"FunctionDefinition","src":"6690:1002:85","nodes":[],"body":{"id":60388,"nodeType":"Block","src":"6907:785:85","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":60297,"name":"__AccessControl_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39764,"src":"6917:20:85","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":60298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6917:22:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":60299,"nodeType":"ExpressionStatement","src":"6917:22:85"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":60300,"name":"__Pausable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40818,"src":"6949:15:85","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":60301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6949:17:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":60302,"nodeType":"ExpressionStatement","src":"6949:17:85"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":60303,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40580,"src":"6976:22:85","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":60304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6976:24:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":60305,"nodeType":"ExpressionStatement","src":"6976:24:85"},{"expression":{"arguments":[{"id":60307,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39729,"src":"7022:18:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":60310,"name":"governanceAdmin_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60281,"src":"7050:16:85","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63739","typeString":"contract IGovernance"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IGovernance_$63739","typeString":"contract IGovernance"}],"id":60309,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7042:7:85","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":60308,"name":"address","nodeType":"ElementaryTypeName","src":"7042:7:85","typeDescriptions":{}}},"id":60311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7042:25:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":60306,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40016,"src":"7011:10:85","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":60312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7011:57:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":60313,"nodeType":"ExpressionStatement","src":"7011:57:85"},{"expression":{"arguments":[{"id":60315,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60252,"src":"7090:11:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":60318,"name":"governanceAdmin_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60281,"src":"7111:16:85","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63739","typeString":"contract IGovernance"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IGovernance_$63739","typeString":"contract IGovernance"}],"id":60317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7103:7:85","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":60316,"name":"address","nodeType":"ElementaryTypeName","src":"7103:7:85","typeDescriptions":{}}},"id":60319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7103:25:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":60314,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40016,"src":"7079:10:85","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":60320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7079:50:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":60321,"nodeType":"ExpressionStatement","src":"7079:50:85"},{"expression":{"arguments":[{"id":60323,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60252,"src":"7150:11:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":60326,"name":"governancePauser_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60284,"src":"7171:17:85","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63739","typeString":"contract IGovernance"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IGovernance_$63739","typeString":"contract IGovernance"}],"id":60325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7163:7:85","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":60324,"name":"address","nodeType":"ElementaryTypeName","src":"7163:7:85","typeDescriptions":{}}},"id":60327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7163:26:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":60322,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40016,"src":"7139:10:85","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":60328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7139:51:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":60329,"nodeType":"ExpressionStatement","src":"7139:51:85"},{"expression":{"id":60332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":60330,"name":"_governanceAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60255,"src":"7201:16:85","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63739","typeString":"contract IGovernance"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":60331,"name":"governanceAdmin_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60281,"src":"7220:16:85","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63739","typeString":"contract IGovernance"}},"src":"7201:35:85","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63739","typeString":"contract IGovernance"}},"id":60333,"nodeType":"ExpressionStatement","src":"7201:35:85"},{"expression":{"id":60336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":60334,"name":"_governancePauser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60258,"src":"7246:17:85","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63739","typeString":"contract IGovernance"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":60335,"name":"governancePauser_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60284,"src":"7266:17:85","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63739","typeString":"contract IGovernance"}},"src":"7246:37:85","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63739","typeString":"contract IGovernance"}},"id":60337,"nodeType":"ExpressionStatement","src":"7246:37:85"},{"expression":{"id":60340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":60338,"name":"_messageQueue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60260,"src":"7293:13:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":60339,"name":"messageQueue_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60286,"src":"7309:13:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7293:29:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":60341,"nodeType":"ExpressionStatement","src":"7293:29:85"},{"expression":{"arguments":[{"id":60345,"name":"vftManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60288,"src":"7349:10:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":60342,"name":"_vftManagers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60263,"src":"7332:12:85","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$54148_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":60344,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7345:3:85","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":54166,"src":"7332:16:85","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Set_$54148_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$54148_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"}},"id":60346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7332:28:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":60347,"nodeType":"ExpressionStatement","src":"7332:28:85"},{"body":{"id":60386,"nodeType":"Block","src":"7416:270:85","statements":[{"assignments":[60361],"declarations":[{"constant":false,"id":60361,"mutability":"mutable","name":"tokenInfo","nameLocation":"7447:9:85","nodeType":"VariableDeclaration","scope":60386,"src":"7430:26:85","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$63325_memory_ptr","typeString":"struct IERC20Manager.TokenInfo"},"typeName":{"id":60360,"nodeType":"UserDefinedTypeName","pathNode":{"id":60359,"name":"TokenInfo","nameLocations":["7430:9:85"],"nodeType":"IdentifierPath","referencedDeclaration":63325,"src":"7430:9:85"},"referencedDeclaration":63325,"src":"7430:9:85","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$63325_storage_ptr","typeString":"struct IERC20Manager.TokenInfo"}},"visibility":"internal"}],"id":60365,"initialValue":{"baseExpression":{"id":60362,"name":"tokens_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60292,"src":"7459:7:85","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenInfo_$63325_memory_ptr_$dyn_memory_ptr","typeString":"struct IERC20Manager.TokenInfo memory[] memory"}},"id":60364,"indexExpression":{"id":60363,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60349,"src":"7467:1:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7459:10:85","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$63325_memory_ptr","typeString":"struct IERC20Manager.TokenInfo memory"}},"nodeType":"VariableDeclarationStatement","src":"7430:39:85"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_TokenType_$63318","typeString":"enum IERC20Manager.TokenType"},"id":60370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":60366,"name":"tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60361,"src":"7488:9:85","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$63325_memory_ptr","typeString":"struct IERC20Manager.TokenInfo memory"}},"id":60367,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7498:9:85","memberName":"tokenType","nodeType":"MemberAccess","referencedDeclaration":63324,"src":"7488:19:85","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$63318","typeString":"enum IERC20Manager.TokenType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":60368,"name":"TokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63318,"src":"7511:9:85","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TokenType_$63318_$","typeString":"type(enum IERC20Manager.TokenType)"}},"id":60369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7521:7:85","memberName":"Unknown","nodeType":"MemberAccess","referencedDeclaration":63315,"src":"7511:17:85","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$63318","typeString":"enum IERC20Manager.TokenType"}},"src":"7488:40:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":60384,"nodeType":"Block","src":"7594:82:85","statements":[{"expression":{"arguments":[{"expression":{"id":60378,"name":"tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60361,"src":"7624:9:85","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$63325_memory_ptr","typeString":"struct IERC20Manager.TokenInfo memory"}},"id":60379,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7634:5:85","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":63321,"src":"7624:15:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":60380,"name":"tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60361,"src":"7641:9:85","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$63325_memory_ptr","typeString":"struct IERC20Manager.TokenInfo memory"}},"id":60381,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7651:9:85","memberName":"tokenType","nodeType":"MemberAccess","referencedDeclaration":63324,"src":"7641:19:85","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$63318","typeString":"enum IERC20Manager.TokenType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_TokenType_$63318","typeString":"enum IERC20Manager.TokenType"}],"expression":{"id":60375,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60266,"src":"7612:7:85","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToTokenTypeMap_$64505_storage","typeString":"struct CustomEnumerableMap.AddressToTokenTypeMap storage ref"}},"id":60377,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7620:3:85","memberName":"set","nodeType":"MemberAccess","referencedDeclaration":64543,"src":"7612:11:85","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressToTokenTypeMap_$64505_storage_ptr_$_t_address_$_t_enum$_TokenType_$63318_$returns$_t_bool_$attached_to$_t_struct$_AddressToTokenTypeMap_$64505_storage_ptr_$","typeString":"function (struct CustomEnumerableMap.AddressToTokenTypeMap storage pointer,address,enum IERC20Manager.TokenType) returns (bool)"}},"id":60382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7612:49:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":60383,"nodeType":"ExpressionStatement","src":"7612:49:85"}]},"id":60385,"nodeType":"IfStatement","src":"7484:192:85","trueBody":{"id":60374,"nodeType":"Block","src":"7530:58:85","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":60371,"name":"InvalidTokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63262,"src":"7555:16:85","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":60372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7555:18:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":60373,"nodeType":"RevertStatement","src":"7548:25:85"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":60355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":60352,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60349,"src":"7391:1:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":60353,"name":"tokens_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60292,"src":"7395:7:85","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenInfo_$63325_memory_ptr_$dyn_memory_ptr","typeString":"struct IERC20Manager.TokenInfo memory[] memory"}},"id":60354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7403:6:85","memberName":"length","nodeType":"MemberAccess","src":"7395:14:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7391:18:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":60387,"initializationExpression":{"assignments":[60349],"declarations":[{"constant":false,"id":60349,"mutability":"mutable","name":"i","nameLocation":"7384:1:85","nodeType":"VariableDeclaration","scope":60387,"src":"7376:9:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60348,"name":"uint256","nodeType":"ElementaryTypeName","src":"7376:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":60351,"initialValue":{"hexValue":"30","id":60350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7388:1:85","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7376:13:85"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":60357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7411:3:85","subExpression":{"id":60356,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60349,"src":"7411:1:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":60358,"nodeType":"ExpressionStatement","src":"7411:3:85"},"nodeType":"ForStatement","src":"7371:315:85"}]},"documentation":{"id":60278,"nodeType":"StructuredDocumentation","src":"5959:726:85","text":" @dev Initializes the ERC20Manager contract with the message queue and VFT manager addresses.\n      GovernanceAdmin contract is used to upgrade, pause/unpause the ERC20Manager contract.\n      GovernancePauser contract is used to pause/unpause the ERC20Manager contract.\n @param governanceAdmin_ The address of the GovernanceAdmin contract that will process messages.\n @param governancePauser_ The address of the GovernanceAdmin contract that will process pauser messages.\n @param messageQueue_ The address of the message queue contract.\n @param vftManager The address of the VFT manager contract (on Vara Network).\n @param tokens_ The tokens that will be registered."},"functionSelector":"763b754a","implemented":true,"kind":"function","modifiers":[{"id":60295,"kind":"modifierInvocation","modifierName":{"id":60294,"name":"initializer","nameLocations":["6895:11:85"],"nodeType":"IdentifierPath","referencedDeclaration":40366,"src":"6895:11:85"},"nodeType":"ModifierInvocation","src":"6895:11:85"}],"name":"initialize","nameLocation":"6699:10:85","parameters":{"id":60293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60281,"mutability":"mutable","name":"governanceAdmin_","nameLocation":"6731:16:85","nodeType":"VariableDeclaration","scope":60389,"src":"6719:28:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63739","typeString":"contract IGovernance"},"typeName":{"id":60280,"nodeType":"UserDefinedTypeName","pathNode":{"id":60279,"name":"IGovernance","nameLocations":["6719:11:85"],"nodeType":"IdentifierPath","referencedDeclaration":63739,"src":"6719:11:85"},"referencedDeclaration":63739,"src":"6719:11:85","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63739","typeString":"contract IGovernance"}},"visibility":"internal"},{"constant":false,"id":60284,"mutability":"mutable","name":"governancePauser_","nameLocation":"6769:17:85","nodeType":"VariableDeclaration","scope":60389,"src":"6757:29:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63739","typeString":"contract IGovernance"},"typeName":{"id":60283,"nodeType":"UserDefinedTypeName","pathNode":{"id":60282,"name":"IGovernance","nameLocations":["6757:11:85"],"nodeType":"IdentifierPath","referencedDeclaration":63739,"src":"6757:11:85"},"referencedDeclaration":63739,"src":"6757:11:85","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63739","typeString":"contract IGovernance"}},"visibility":"internal"},{"constant":false,"id":60286,"mutability":"mutable","name":"messageQueue_","nameLocation":"6804:13:85","nodeType":"VariableDeclaration","scope":60389,"src":"6796:21:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60285,"name":"address","nodeType":"ElementaryTypeName","src":"6796:7:85","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":60288,"mutability":"mutable","name":"vftManager","nameLocation":"6835:10:85","nodeType":"VariableDeclaration","scope":60389,"src":"6827:18:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":60287,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6827:7:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":60292,"mutability":"mutable","name":"tokens_","nameLocation":"6874:7:85","nodeType":"VariableDeclaration","scope":60389,"src":"6855:26:85","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenInfo_$63325_memory_ptr_$dyn_memory_ptr","typeString":"struct IERC20Manager.TokenInfo[]"},"typeName":{"baseType":{"id":60290,"nodeType":"UserDefinedTypeName","pathNode":{"id":60289,"name":"TokenInfo","nameLocations":["6855:9:85"],"nodeType":"IdentifierPath","referencedDeclaration":63325,"src":"6855:9:85"},"referencedDeclaration":63325,"src":"6855:9:85","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$63325_storage_ptr","typeString":"struct IERC20Manager.TokenInfo"}},"id":60291,"nodeType":"ArrayTypeName","src":"6855:11:85","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenInfo_$63325_storage_$dyn_storage_ptr","typeString":"struct IERC20Manager.TokenInfo[]"}},"visibility":"internal"}],"src":"6709:178:85"},"returnParameters":{"id":60296,"nodeType":"ParameterList","parameters":[],"src":"6907:0:85"},"scope":61385,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":60401,"nodeType":"FunctionDefinition","src":"7817:108:85","nodes":[],"body":{"id":60400,"nodeType":"Block","src":"7876:49:85","nodes":[],"statements":[{"expression":{"arguments":[{"id":60397,"name":"_governanceAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60255,"src":"7901:16:85","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63739","typeString":"contract IGovernance"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IGovernance_$63739","typeString":"contract IGovernance"}],"id":60396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7893:7:85","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":60395,"name":"address","nodeType":"ElementaryTypeName","src":"7893:7:85","typeDescriptions":{}}},"id":60398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7893:25:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":60394,"id":60399,"nodeType":"Return","src":"7886:32:85"}]},"baseFunctions":[63331],"documentation":{"id":60390,"nodeType":"StructuredDocumentation","src":"7698:114:85","text":" @dev Returns governance admin address.\n @return governanceAdmin Governance admin address."},"functionSelector":"0058f6b8","implemented":true,"kind":"function","modifiers":[],"name":"governanceAdmin","nameLocation":"7826:15:85","parameters":{"id":60391,"nodeType":"ParameterList","parameters":[],"src":"7841:2:85"},"returnParameters":{"id":60394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60401,"src":"7867:7:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60392,"name":"address","nodeType":"ElementaryTypeName","src":"7867:7:85","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7866:9:85"},"scope":61385,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":60413,"nodeType":"FunctionDefinition","src":"8053:110:85","nodes":[],"body":{"id":60412,"nodeType":"Block","src":"8113:50:85","nodes":[],"statements":[{"expression":{"arguments":[{"id":60409,"name":"_governancePauser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60258,"src":"8138:17:85","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63739","typeString":"contract IGovernance"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IGovernance_$63739","typeString":"contract IGovernance"}],"id":60408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8130:7:85","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":60407,"name":"address","nodeType":"ElementaryTypeName","src":"8130:7:85","typeDescriptions":{}}},"id":60410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8130:26:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":60406,"id":60411,"nodeType":"Return","src":"8123:33:85"}]},"baseFunctions":[63337],"documentation":{"id":60402,"nodeType":"StructuredDocumentation","src":"7931:117:85","text":" @dev Returns governance pauser address.\n @return governancePauser Governance pauser address."},"functionSelector":"c81eb797","implemented":true,"kind":"function","modifiers":[],"name":"governancePauser","nameLocation":"8062:16:85","parameters":{"id":60403,"nodeType":"ParameterList","parameters":[],"src":"8078:2:85"},"returnParameters":{"id":60406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60405,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60413,"src":"8104:7:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60404,"name":"address","nodeType":"ElementaryTypeName","src":"8104:7:85","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8103:9:85"},"scope":61385,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":60425,"nodeType":"FunctionDefinition","src":"8279:102:85","nodes":[],"body":{"id":60424,"nodeType":"Block","src":"8335:46:85","nodes":[],"statements":[{"expression":{"arguments":[{"id":60421,"name":"_messageQueue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60260,"src":"8360:13:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8352:7:85","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":60419,"name":"address","nodeType":"ElementaryTypeName","src":"8352:7:85","typeDescriptions":{}}},"id":60422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8352:22:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":60418,"id":60423,"nodeType":"Return","src":"8345:29:85"}]},"baseFunctions":[63343],"documentation":{"id":60414,"nodeType":"StructuredDocumentation","src":"8169:105:85","text":" @dev Returns message queue address.\n @return messageQueue Message queue address."},"functionSelector":"3b70c18a","implemented":true,"kind":"function","modifiers":[],"name":"messageQueue","nameLocation":"8288:12:85","parameters":{"id":60415,"nodeType":"ParameterList","parameters":[],"src":"8300:2:85"},"returnParameters":{"id":60418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60417,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60425,"src":"8326:7:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60416,"name":"address","nodeType":"ElementaryTypeName","src":"8326:7:85","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8325:9:85"},"scope":61385,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":60436,"nodeType":"FunctionDefinition","src":"8515:105:85","nodes":[],"body":{"id":60435,"nodeType":"Block","src":"8575:45:85","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":60431,"name":"_vftManagers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60263,"src":"8592:12:85","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$54148_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":60432,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8605:6:85","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":54230,"src":"8592:19:85","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$54148_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Bytes32Set_$54148_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer) view returns (uint256)"}},"id":60433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8592:21:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":60430,"id":60434,"nodeType":"Return","src":"8585:28:85"}]},"baseFunctions":[63349],"documentation":{"id":60426,"nodeType":"StructuredDocumentation","src":"8387:123:85","text":" @dev Returns total number of VFT managers.\n @return totalVftManagers Total number of VFT managers."},"functionSelector":"240dfa95","implemented":true,"kind":"function","modifiers":[],"name":"totalVftManagers","nameLocation":"8524:16:85","parameters":{"id":60427,"nodeType":"ParameterList","parameters":[],"src":"8540:2:85"},"returnParameters":{"id":60430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60436,"src":"8566:7:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60428,"name":"uint256","nodeType":"ElementaryTypeName","src":"8566:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8565:9:85"},"scope":61385,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":60448,"nodeType":"FunctionDefinition","src":"8733:109:85","nodes":[],"body":{"id":60447,"nodeType":"Block","src":"8797:45:85","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":60443,"name":"_vftManagers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60263,"src":"8814:12:85","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$54148_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":60444,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8827:6:85","memberName":"values","nodeType":"MemberAccess","referencedDeclaration":54278,"src":"8814:19:85","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$54148_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$attached_to$_t_struct$_Bytes32Set_$54148_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer) view returns (bytes32[] memory)"}},"id":60445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8814:21:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":60442,"id":60446,"nodeType":"Return","src":"8807:28:85"}]},"baseFunctions":[63356],"documentation":{"id":60437,"nodeType":"StructuredDocumentation","src":"8626:102:85","text":" @dev Returns list of VFT managers.\n @return vftManagers List of VFT managers."},"functionSelector":"87be40b1","implemented":true,"kind":"function","modifiers":[],"name":"vftManagers","nameLocation":"8742:11:85","parameters":{"id":60438,"nodeType":"ParameterList","parameters":[],"src":"8753:2:85"},"returnParameters":{"id":60442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60441,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60448,"src":"8779:16:85","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":60439,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8779:7:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":60440,"nodeType":"ArrayTypeName","src":"8779:9:85","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"8778:18:85"},"scope":61385,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":60466,"nodeType":"FunctionDefinition","src":"9081:154:85","nodes":[],"body":{"id":60465,"nodeType":"Block","src":"9174:61:85","nodes":[],"statements":[{"expression":{"arguments":[{"id":60460,"name":"_vftManagers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60263,"src":"9200:12:85","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$54148_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},{"id":60461,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60451,"src":"9214:6:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":60462,"name":"limit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60453,"src":"9222:5:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32Set_$54148_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":60459,"name":"paginate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60722,"src":"9191:8:85","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$54148_storage_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,uint256,uint256) view returns (bytes32[] memory)"}},"id":60463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9191:37:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":60458,"id":60464,"nodeType":"Return","src":"9184:44:85"}]},"baseFunctions":[63367],"documentation":{"id":60449,"nodeType":"StructuredDocumentation","src":"8848:228:85","text":" @dev Returns list of VFT managers.\n @param offset Offset of the first VFT manager to return.\n @param limit Maximum number of VFT managers to return.\n @return vftManagers List of VFT managers."},"functionSelector":"c1c60921","implemented":true,"kind":"function","modifiers":[],"name":"vftManagers","nameLocation":"9090:11:85","parameters":{"id":60454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60451,"mutability":"mutable","name":"offset","nameLocation":"9110:6:85","nodeType":"VariableDeclaration","scope":60466,"src":"9102:14:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60450,"name":"uint256","nodeType":"ElementaryTypeName","src":"9102:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":60453,"mutability":"mutable","name":"limit","nameLocation":"9126:5:85","nodeType":"VariableDeclaration","scope":60466,"src":"9118:13:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60452,"name":"uint256","nodeType":"ElementaryTypeName","src":"9118:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9101:31:85"},"returnParameters":{"id":60458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60466,"src":"9156:16:85","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":60455,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9156:7:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":60456,"nodeType":"ArrayTypeName","src":"9156:9:85","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"9155:18:85"},"scope":61385,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":60480,"nodeType":"FunctionDefinition","src":"9450:128:85","nodes":[],"body":{"id":60479,"nodeType":"Block","src":"9521:57:85","nodes":[],"statements":[{"expression":{"arguments":[{"id":60476,"name":"vftManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60469,"src":"9560:10:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":60474,"name":"_vftManagers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60263,"src":"9538:12:85","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$54148_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":60475,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9551:8:85","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":54215,"src":"9538:21:85","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$54148_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$54148_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) view returns (bool)"}},"id":60477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9538:33:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":60473,"id":60478,"nodeType":"Return","src":"9531:40:85"}]},"baseFunctions":[63375],"documentation":{"id":60467,"nodeType":"StructuredDocumentation","src":"9241:204:85","text":" @dev Returns whether the VFT manager is registered.\n @param vftManager VFT manager address.\n @return isVftManager `true` if the VFT manager is registered, `false` otherwise."},"functionSelector":"4e689539","implemented":true,"kind":"function","modifiers":[],"name":"isVftManager","nameLocation":"9459:12:85","parameters":{"id":60470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60469,"mutability":"mutable","name":"vftManager","nameLocation":"9480:10:85","nodeType":"VariableDeclaration","scope":60480,"src":"9472:18:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":60468,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9472:7:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9471:20:85"},"returnParameters":{"id":60473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60480,"src":"9515:4:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":60471,"name":"bool","nodeType":"ElementaryTypeName","src":"9515:4:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9514:6:85"},"scope":61385,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":60491,"nodeType":"FunctionDefinition","src":"9695:95:85","nodes":[],"body":{"id":60490,"nodeType":"Block","src":"9750:40:85","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":60486,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60266,"src":"9767:7:85","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToTokenTypeMap_$64505_storage","typeString":"struct CustomEnumerableMap.AddressToTokenTypeMap storage ref"}},"id":60487,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9775:6:85","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":64630,"src":"9767:14:85","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressToTokenTypeMap_$64505_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressToTokenTypeMap_$64505_storage_ptr_$","typeString":"function (struct CustomEnumerableMap.AddressToTokenTypeMap storage pointer) view returns (uint256)"}},"id":60488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9767:16:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":60485,"id":60489,"nodeType":"Return","src":"9760:23:85"}]},"baseFunctions":[63381],"documentation":{"id":60481,"nodeType":"StructuredDocumentation","src":"9584:106:85","text":" @dev Returns total number of tokens.\n @return totalTokens Total number of tokens."},"functionSelector":"7e1c0c09","implemented":true,"kind":"function","modifiers":[],"name":"totalTokens","nameLocation":"9704:11:85","parameters":{"id":60482,"nodeType":"ParameterList","parameters":[],"src":"9715:2:85"},"returnParameters":{"id":60485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60484,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60491,"src":"9741:7:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60483,"name":"uint256","nodeType":"ElementaryTypeName","src":"9741:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9740:9:85"},"scope":61385,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":60503,"nodeType":"FunctionDefinition","src":"9886:97:85","nodes":[],"body":{"id":60502,"nodeType":"Block","src":"9945:38:85","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":60498,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60266,"src":"9962:7:85","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToTokenTypeMap_$64505_storage","typeString":"struct CustomEnumerableMap.AddressToTokenTypeMap storage ref"}},"id":60499,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9970:4:85","memberName":"keys","nodeType":"MemberAccess","referencedDeclaration":64786,"src":"9962:12:85","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressToTokenTypeMap_$64505_storage_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$attached_to$_t_struct$_AddressToTokenTypeMap_$64505_storage_ptr_$","typeString":"function (struct CustomEnumerableMap.AddressToTokenTypeMap storage pointer) view returns (address[] memory)"}},"id":60500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9962:14:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":60497,"id":60501,"nodeType":"Return","src":"9955:21:85"}]},"baseFunctions":[63388],"documentation":{"id":60492,"nodeType":"StructuredDocumentation","src":"9796:85:85","text":" @dev Returns list of tokens.\n @return tokens List of tokens."},"functionSelector":"9d63848a","implemented":true,"kind":"function","modifiers":[],"name":"tokens","nameLocation":"9895:6:85","parameters":{"id":60493,"nodeType":"ParameterList","parameters":[],"src":"9901:2:85"},"returnParameters":{"id":60497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60496,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60503,"src":"9927:16:85","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":60494,"name":"address","nodeType":"ElementaryTypeName","src":"9927:7:85","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":60495,"nodeType":"ArrayTypeName","src":"9927:9:85","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"9926:18:85"},"scope":61385,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":60537,"nodeType":"FunctionDefinition","src":"10193:306:85","nodes":[],"body":{"id":60536,"nodeType":"Block","src":"10281:218:85","nodes":[],"statements":[{"assignments":[60518],"declarations":[{"constant":false,"id":60518,"mutability":"mutable","name":"store","nameLocation":"10308:5:85","nodeType":"VariableDeclaration","scope":60536,"src":"10291:22:85","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":60516,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10291:7:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":60517,"nodeType":"ArrayTypeName","src":"10291:9:85","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":60526,"initialValue":{"arguments":[{"expression":{"expression":{"id":60520,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60266,"src":"10325:7:85","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToTokenTypeMap_$64505_storage","typeString":"struct CustomEnumerableMap.AddressToTokenTypeMap storage ref"}},"id":60521,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10333:6:85","memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":64504,"src":"10325:14:85","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$51073_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},"id":60522,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10340:5:85","memberName":"_keys","nodeType":"MemberAccess","referencedDeclaration":51068,"src":"10325:20:85","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$54148_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},{"id":60523,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60506,"src":"10347:6:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":60524,"name":"limit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60508,"src":"10355:5:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32Set_$54148_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":60519,"name":"paginate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60722,"src":"10316:8:85","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$54148_storage_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,uint256,uint256) view returns (bytes32[] memory)"}},"id":60525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10316:45:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10291:70:85"},{"assignments":[60531],"declarations":[{"constant":false,"id":60531,"mutability":"mutable","name":"result","nameLocation":"10388:6:85","nodeType":"VariableDeclaration","scope":60536,"src":"10371:23:85","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":60529,"name":"address","nodeType":"ElementaryTypeName","src":"10371:7:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":60530,"nodeType":"ArrayTypeName","src":"10371:9:85","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":60532,"nodeType":"VariableDeclarationStatement","src":"10371:23:85"},{"AST":{"nativeSrc":"10430:39:85","nodeType":"YulBlock","src":"10430:39:85","statements":[{"nativeSrc":"10444:15:85","nodeType":"YulAssignment","src":"10444:15:85","value":{"name":"store","nativeSrc":"10454:5:85","nodeType":"YulIdentifier","src":"10454:5:85"},"variableNames":[{"name":"result","nativeSrc":"10444:6:85","nodeType":"YulIdentifier","src":"10444:6:85"}]}]},"evmVersion":"prague","externalReferences":[{"declaration":60531,"isOffset":false,"isSlot":false,"src":"10444:6:85","valueSize":1},{"declaration":60518,"isOffset":false,"isSlot":false,"src":"10454:5:85","valueSize":1}],"flags":["memory-safe"],"id":60533,"nodeType":"InlineAssembly","src":"10405:64:85"},{"expression":{"id":60534,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60531,"src":"10486:6:85","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":60513,"id":60535,"nodeType":"Return","src":"10479:13:85"}]},"baseFunctions":[63399],"documentation":{"id":60504,"nodeType":"StructuredDocumentation","src":"9989:199:85","text":" @dev Returns list of tokens.\n @param offset Offset of the first token to return.\n @param limit Maximum number of tokens to return.\n @return tokens List of tokens."},"functionSelector":"8b4864d6","implemented":true,"kind":"function","modifiers":[],"name":"tokens","nameLocation":"10202:6:85","parameters":{"id":60509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60506,"mutability":"mutable","name":"offset","nameLocation":"10217:6:85","nodeType":"VariableDeclaration","scope":60537,"src":"10209:14:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60505,"name":"uint256","nodeType":"ElementaryTypeName","src":"10209:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":60508,"mutability":"mutable","name":"limit","nameLocation":"10233:5:85","nodeType":"VariableDeclaration","scope":60537,"src":"10225:13:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60507,"name":"uint256","nodeType":"ElementaryTypeName","src":"10225:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10208:31:85"},"returnParameters":{"id":60513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60512,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60537,"src":"10263:16:85","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":60510,"name":"address","nodeType":"ElementaryTypeName","src":"10263:7:85","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":60511,"nodeType":"ArrayTypeName","src":"10263:9:85","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10262:18:85"},"scope":61385,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":60557,"nodeType":"FunctionDefinition","src":"10681:161:85","nodes":[],"body":{"id":60556,"nodeType":"Block","src":"10752:90:85","nodes":[],"statements":[{"assignments":[null,60548],"declarations":[null,{"constant":false,"id":60548,"mutability":"mutable","name":"tokenType","nameLocation":"10775:9:85","nodeType":"VariableDeclaration","scope":60556,"src":"10765:19:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$63318","typeString":"enum IERC20Manager.TokenType"},"typeName":{"id":60547,"nodeType":"UserDefinedTypeName","pathNode":{"id":60546,"name":"TokenType","nameLocations":["10765:9:85"],"nodeType":"IdentifierPath","referencedDeclaration":63318,"src":"10765:9:85"},"referencedDeclaration":63318,"src":"10765:9:85","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$63318","typeString":"enum IERC20Manager.TokenType"}},"visibility":"internal"}],"id":60553,"initialValue":{"arguments":[{"id":60551,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60540,"src":"10803:5:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":60549,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60266,"src":"10788:7:85","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToTokenTypeMap_$64505_storage","typeString":"struct CustomEnumerableMap.AddressToTokenTypeMap storage ref"}},"id":60550,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10796:6:85","memberName":"tryGet","nodeType":"MemberAccess","referencedDeclaration":64720,"src":"10788:14:85","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressToTokenTypeMap_$64505_storage_ptr_$_t_address_$returns$_t_bool_$_t_enum$_TokenType_$63318_$attached_to$_t_struct$_AddressToTokenTypeMap_$64505_storage_ptr_$","typeString":"function (struct CustomEnumerableMap.AddressToTokenTypeMap storage pointer,address) view returns (bool,enum IERC20Manager.TokenType)"}},"id":60552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10788:21:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_enum$_TokenType_$63318_$","typeString":"tuple(bool,enum IERC20Manager.TokenType)"}},"nodeType":"VariableDeclarationStatement","src":"10762:47:85"},{"expression":{"id":60554,"name":"tokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60548,"src":"10826:9:85","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$63318","typeString":"enum IERC20Manager.TokenType"}},"functionReturnParameters":60545,"id":60555,"nodeType":"Return","src":"10819:16:85"}]},"baseFunctions":[63408],"documentation":{"id":60538,"nodeType":"StructuredDocumentation","src":"10505:171:85","text":" @dev Returns token type.\n @param token Token address.\n @return tokenType Token type. Returns `TokenType.Unknown` if token is not registered."},"functionSelector":"93272baf","implemented":true,"kind":"function","modifiers":[],"name":"getTokenType","nameLocation":"10690:12:85","parameters":{"id":60541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60540,"mutability":"mutable","name":"token","nameLocation":"10711:5:85","nodeType":"VariableDeclaration","scope":60557,"src":"10703:13:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60539,"name":"address","nodeType":"ElementaryTypeName","src":"10703:7:85","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10702:15:85"},"returnParameters":{"id":60545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60544,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60557,"src":"10741:9:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$63318","typeString":"enum IERC20Manager.TokenType"},"typeName":{"id":60543,"nodeType":"UserDefinedTypeName","pathNode":{"id":60542,"name":"TokenType","nameLocations":["10741:9:85"],"nodeType":"IdentifierPath","referencedDeclaration":63318,"src":"10741:9:85"},"referencedDeclaration":63318,"src":"10741:9:85","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$63318","typeString":"enum IERC20Manager.TokenType"}},"visibility":"internal"}],"src":"10740:11:85"},"scope":61385,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":60568,"nodeType":"FunctionDefinition","src":"10991:115:85","nodes":[],"body":{"id":60567,"nodeType":"Block","src":"11056:50:85","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":60563,"name":"_bridgingPayments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60269,"src":"11073:17:85","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$54318_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":60564,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11091:6:85","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":54427,"src":"11073:24:85","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$54318_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_AddressSet_$54318_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"}},"id":60565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11073:26:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":60562,"id":60566,"nodeType":"Return","src":"11066:33:85"}]},"baseFunctions":[63414],"documentation":{"id":60558,"nodeType":"StructuredDocumentation","src":"10848:138:85","text":" @dev Returns total number of bridging payments.\n @return totalBridgingPayments Total number of bridging payments."},"functionSelector":"8b841f6c","implemented":true,"kind":"function","modifiers":[],"name":"totalBridgingPayments","nameLocation":"11000:21:85","parameters":{"id":60559,"nodeType":"ParameterList","parameters":[],"src":"11021:2:85"},"returnParameters":{"id":60562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60561,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60568,"src":"11047:7:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60560,"name":"uint256","nodeType":"ElementaryTypeName","src":"11047:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11046:9:85"},"scope":61385,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":60580,"nodeType":"FunctionDefinition","src":"11234:119:85","nodes":[],"body":{"id":60579,"nodeType":"Block","src":"11303:50:85","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":60575,"name":"_bridgingPayments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60269,"src":"11320:17:85","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$54318_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":60576,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11338:6:85","memberName":"values","nodeType":"MemberAccess","referencedDeclaration":54484,"src":"11320:24:85","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$54318_storage_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$attached_to$_t_struct$_AddressSet_$54318_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (address[] memory)"}},"id":60577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11320:26:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":60574,"id":60578,"nodeType":"Return","src":"11313:33:85"}]},"baseFunctions":[63421],"documentation":{"id":60569,"nodeType":"StructuredDocumentation","src":"11112:117:85","text":" @dev Returns list of bridging payments.\n @return bridgingPayments List of bridging payments."},"functionSelector":"109ec2e7","implemented":true,"kind":"function","modifiers":[],"name":"bridgingPayments","nameLocation":"11243:16:85","parameters":{"id":60570,"nodeType":"ParameterList","parameters":[],"src":"11259:2:85"},"returnParameters":{"id":60574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60573,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60580,"src":"11285:16:85","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":60571,"name":"address","nodeType":"ElementaryTypeName","src":"11285:7:85","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":60572,"nodeType":"ArrayTypeName","src":"11285:9:85","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"11284:18:85"},"scope":61385,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":60619,"nodeType":"FunctionDefinition","src":"11617:459:85","nodes":[],"body":{"id":60618,"nodeType":"Block","src":"11715:361:85","nodes":[],"statements":[{"assignments":[60595],"declarations":[{"constant":false,"id":60595,"mutability":"mutable","name":"bytes32Set","nameLocation":"11758:10:85","nodeType":"VariableDeclaration","scope":60618,"src":"11725:43:85","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$54148_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":60594,"nodeType":"UserDefinedTypeName","pathNode":{"id":60593,"name":"EnumerableSet.Bytes32Set","nameLocations":["11725:13:85","11739:10:85"],"nodeType":"IdentifierPath","referencedDeclaration":54148,"src":"11725:24:85"},"referencedDeclaration":54148,"src":"11725:24:85","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$54148_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"id":60596,"nodeType":"VariableDeclarationStatement","src":"11725:43:85"},{"AST":{"nativeSrc":"11803:65:85","nodeType":"YulBlock","src":"11803:65:85","statements":[{"nativeSrc":"11817:41:85","nodeType":"YulAssignment","src":"11817:41:85","value":{"name":"_bridgingPayments.slot","nativeSrc":"11836:22:85","nodeType":"YulIdentifier","src":"11836:22:85"},"variableNames":[{"name":"bytes32Set.slot","nativeSrc":"11817:15:85","nodeType":"YulIdentifier","src":"11817:15:85"}]}]},"evmVersion":"prague","externalReferences":[{"declaration":60269,"isOffset":false,"isSlot":true,"src":"11836:22:85","suffix":"slot","valueSize":1},{"declaration":60595,"isOffset":false,"isSlot":true,"src":"11817:15:85","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":60597,"nodeType":"InlineAssembly","src":"11778:90:85"},{"assignments":[60602],"declarations":[{"constant":false,"id":60602,"mutability":"mutable","name":"store","nameLocation":"11895:5:85","nodeType":"VariableDeclaration","scope":60618,"src":"11878:22:85","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":60600,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11878:7:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":60601,"nodeType":"ArrayTypeName","src":"11878:9:85","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":60608,"initialValue":{"arguments":[{"id":60604,"name":"bytes32Set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60595,"src":"11912:10:85","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$54148_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},{"id":60605,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60583,"src":"11924:6:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":60606,"name":"limit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60585,"src":"11932:5:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32Set_$54148_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":60603,"name":"paginate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60722,"src":"11903:8:85","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$54148_storage_ptr_$_t_uint256_$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,uint256,uint256) view returns (bytes32[] memory)"}},"id":60607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11903:35:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"11878:60:85"},{"assignments":[60613],"declarations":[{"constant":false,"id":60613,"mutability":"mutable","name":"result","nameLocation":"11965:6:85","nodeType":"VariableDeclaration","scope":60618,"src":"11948:23:85","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":60611,"name":"address","nodeType":"ElementaryTypeName","src":"11948:7:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":60612,"nodeType":"ArrayTypeName","src":"11948:9:85","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":60614,"nodeType":"VariableDeclarationStatement","src":"11948:23:85"},{"AST":{"nativeSrc":"12007:39:85","nodeType":"YulBlock","src":"12007:39:85","statements":[{"nativeSrc":"12021:15:85","nodeType":"YulAssignment","src":"12021:15:85","value":{"name":"store","nativeSrc":"12031:5:85","nodeType":"YulIdentifier","src":"12031:5:85"},"variableNames":[{"name":"result","nativeSrc":"12021:6:85","nodeType":"YulIdentifier","src":"12021:6:85"}]}]},"evmVersion":"prague","externalReferences":[{"declaration":60613,"isOffset":false,"isSlot":false,"src":"12021:6:85","valueSize":1},{"declaration":60602,"isOffset":false,"isSlot":false,"src":"12031:5:85","valueSize":1}],"flags":["memory-safe"],"id":60615,"nodeType":"InlineAssembly","src":"11982:64:85"},{"expression":{"id":60616,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60613,"src":"12063:6:85","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":60590,"id":60617,"nodeType":"Return","src":"12056:13:85"}]},"baseFunctions":[63432],"documentation":{"id":60581,"nodeType":"StructuredDocumentation","src":"11359:253:85","text":" @dev Returns list of bridging payments.\n @param offset Offset of the first bridging payment to return.\n @param limit Maximum number of bridging payments to return.\n @return bridgingPayments List of bridging payments."},"functionSelector":"87e7a3a3","implemented":true,"kind":"function","modifiers":[],"name":"bridgingPayments","nameLocation":"11626:16:85","parameters":{"id":60586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60583,"mutability":"mutable","name":"offset","nameLocation":"11651:6:85","nodeType":"VariableDeclaration","scope":60619,"src":"11643:14:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60582,"name":"uint256","nodeType":"ElementaryTypeName","src":"11643:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":60585,"mutability":"mutable","name":"limit","nameLocation":"11667:5:85","nodeType":"VariableDeclaration","scope":60619,"src":"11659:13:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60584,"name":"uint256","nodeType":"ElementaryTypeName","src":"11659:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11642:31:85"},"returnParameters":{"id":60590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60589,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60619,"src":"11697:16:85","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":60587,"name":"address","nodeType":"ElementaryTypeName","src":"11697:7:85","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":60588,"nodeType":"ArrayTypeName","src":"11697:9:85","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"11696:18:85"},"scope":61385,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":60633,"nodeType":"FunctionDefinition","src":"12316:148:85","nodes":[],"body":{"id":60632,"nodeType":"Block","src":"12397:67:85","nodes":[],"statements":[{"expression":{"arguments":[{"id":60629,"name":"bridgingPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60622,"src":"12441:15:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":60627,"name":"_bridgingPayments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60269,"src":"12414:17:85","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$54318_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":60628,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12432:8:85","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":54412,"src":"12414:26:85","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$54318_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$54318_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"}},"id":60630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12414:43:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":60626,"id":60631,"nodeType":"Return","src":"12407:50:85"}]},"baseFunctions":[63440],"documentation":{"id":60620,"nodeType":"StructuredDocumentation","src":"12082:229:85","text":" @dev Returns whether the bridging payment is registered.\n @param bridgingPayment Bridging payment address.\n @return isBridgingPayment `true` if the bridging payment is registered, `false` otherwise."},"functionSelector":"0c9d9b97","implemented":true,"kind":"function","modifiers":[],"name":"isBridgingPayment","nameLocation":"12325:17:85","parameters":{"id":60623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60622,"mutability":"mutable","name":"bridgingPayment","nameLocation":"12351:15:85","nodeType":"VariableDeclaration","scope":60633,"src":"12343:23:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60621,"name":"address","nodeType":"ElementaryTypeName","src":"12343:7:85","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12342:25:85"},"returnParameters":{"id":60626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60625,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60633,"src":"12391:4:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":60624,"name":"bool","nodeType":"ElementaryTypeName","src":"12391:4:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12390:6:85"},"scope":61385,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":60722,"nodeType":"FunctionDefinition","src":"12721:622:85","nodes":[],"body":{"id":60721,"nodeType":"Block","src":"12883:460:85","nodes":[],"statements":[{"assignments":[60648],"declarations":[{"constant":false,"id":60648,"mutability":"mutable","name":"length","nameLocation":"12901:6:85","nodeType":"VariableDeclaration","scope":60721,"src":"12893:14:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60647,"name":"uint256","nodeType":"ElementaryTypeName","src":"12893:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":60652,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":60649,"name":"bytes32Set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60637,"src":"12910:10:85","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$54148_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":60650,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12921:6:85","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":54230,"src":"12910:17:85","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$54148_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Bytes32Set_$54148_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer) view returns (uint256)"}},"id":60651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12910:19:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12893:36:85"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":60655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":60653,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60639,"src":"12944:6:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":60654,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60648,"src":"12954:6:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12944:16:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":60663,"nodeType":"IfStatement","src":"12940:70:85","trueBody":{"id":60662,"nodeType":"Block","src":"12962:48:85","statements":[{"expression":{"arguments":[{"hexValue":"30","id":60659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12997:1:85","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":60658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"12983:13:85","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":60656,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12987:7:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":60657,"nodeType":"ArrayTypeName","src":"12987:9:85","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":60660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12983:16:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":60646,"id":60661,"nodeType":"Return","src":"12976:23:85"}]}},{"assignments":[60665],"declarations":[{"constant":false,"id":60665,"mutability":"mutable","name":"end","nameLocation":"13028:3:85","nodeType":"VariableDeclaration","scope":60721,"src":"13020:11:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60664,"name":"uint256","nodeType":"ElementaryTypeName","src":"13020:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":60669,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":60668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":60666,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60639,"src":"13034:6:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":60667,"name":"limit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60641,"src":"13043:5:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13034:14:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13020:28:85"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":60672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":60670,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60665,"src":"13062:3:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":60671,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60648,"src":"13068:6:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13062:12:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":60678,"nodeType":"IfStatement","src":"13058:55:85","trueBody":{"id":60677,"nodeType":"Block","src":"13076:37:85","statements":[{"expression":{"id":60675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":60673,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60665,"src":"13090:3:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":60674,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60648,"src":"13096:6:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13090:12:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":60676,"nodeType":"ExpressionStatement","src":"13090:12:85"}]}},{"assignments":[60680],"declarations":[{"constant":false,"id":60680,"mutability":"mutable","name":"size","nameLocation":"13131:4:85","nodeType":"VariableDeclaration","scope":60721,"src":"13123:12:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60679,"name":"uint256","nodeType":"ElementaryTypeName","src":"13123:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":60684,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":60683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":60681,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60665,"src":"13138:3:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":60682,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60639,"src":"13144:6:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13138:12:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13123:27:85"},{"assignments":[60689],"declarations":[{"constant":false,"id":60689,"mutability":"mutable","name":"result","nameLocation":"13177:6:85","nodeType":"VariableDeclaration","scope":60721,"src":"13160:23:85","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":60687,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13160:7:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":60688,"nodeType":"ArrayTypeName","src":"13160:9:85","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":60695,"initialValue":{"arguments":[{"id":60693,"name":"size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60680,"src":"13200:4:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":60692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"13186:13:85","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":60690,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13190:7:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":60691,"nodeType":"ArrayTypeName","src":"13190:9:85","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":60694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13186:19:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"13160:45:85"},{"body":{"id":60717,"nodeType":"Block","src":"13251:62:85","statements":[{"expression":{"id":60715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":60706,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60689,"src":"13265:6:85","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":60708,"indexExpression":{"id":60707,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60697,"src":"13272:1:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13265:9:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":60713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":60711,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60639,"src":"13291:6:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":60712,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60697,"src":"13300:1:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13291:10:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":60709,"name":"bytes32Set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60637,"src":"13277:10:85","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$54148_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":60710,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13288:2:85","memberName":"at","nodeType":"MemberAccess","referencedDeclaration":54248,"src":"13277:13:85","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$54148_storage_ptr_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_struct$_Bytes32Set_$54148_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,uint256) view returns (bytes32)"}},"id":60714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13277:25:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"13265:37:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":60716,"nodeType":"ExpressionStatement","src":"13265:37:85"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":60702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":60700,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60697,"src":"13236:1:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":60701,"name":"size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60680,"src":"13240:4:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13236:8:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":60718,"initializationExpression":{"assignments":[60697],"declarations":[{"constant":false,"id":60697,"mutability":"mutable","name":"i","nameLocation":"13229:1:85","nodeType":"VariableDeclaration","scope":60718,"src":"13221:9:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60696,"name":"uint256","nodeType":"ElementaryTypeName","src":"13221:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":60699,"initialValue":{"hexValue":"30","id":60698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13233:1:85","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13221:13:85"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":60704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13246:3:85","subExpression":{"id":60703,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60697,"src":"13246:1:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":60705,"nodeType":"ExpressionStatement","src":"13246:3:85"},"nodeType":"ForStatement","src":"13216:97:85"},{"expression":{"id":60719,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60689,"src":"13330:6:85","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":60646,"id":60720,"nodeType":"Return","src":"13323:13:85"}]},"documentation":{"id":60634,"nodeType":"StructuredDocumentation","src":"12470:246:85","text":" @dev Returns list of items from the set.\n @param bytes32Set Set of items.\n @param offset Offset of the first item to return.\n @param limit Maximum number of items to return.\n @return items List of items."},"implemented":true,"kind":"function","modifiers":[],"name":"paginate","nameLocation":"12730:8:85","parameters":{"id":60642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60637,"mutability":"mutable","name":"bytes32Set","nameLocation":"12772:10:85","nodeType":"VariableDeclaration","scope":60722,"src":"12739:43:85","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$54148_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":60636,"nodeType":"UserDefinedTypeName","pathNode":{"id":60635,"name":"EnumerableSet.Bytes32Set","nameLocations":["12739:13:85","12753:10:85"],"nodeType":"IdentifierPath","referencedDeclaration":54148,"src":"12739:24:85"},"referencedDeclaration":54148,"src":"12739:24:85","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$54148_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":60639,"mutability":"mutable","name":"offset","nameLocation":"12792:6:85","nodeType":"VariableDeclaration","scope":60722,"src":"12784:14:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60638,"name":"uint256","nodeType":"ElementaryTypeName","src":"12784:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":60641,"mutability":"mutable","name":"limit","nameLocation":"12808:5:85","nodeType":"VariableDeclaration","scope":60722,"src":"12800:13:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60640,"name":"uint256","nodeType":"ElementaryTypeName","src":"12800:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12738:76:85"},"returnParameters":{"id":60646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60645,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60722,"src":"12861:16:85","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":60643,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12861:7:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":60644,"nodeType":"ArrayTypeName","src":"12861:9:85","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"12860:18:85"},"scope":61385,"stateMutability":"view","virtual":false,"visibility":"private"},{"id":60733,"nodeType":"FunctionDefinition","src":"13398:71:85","nodes":[],"body":{"id":60732,"nodeType":"Block","src":"13444:25:85","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":60729,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40889,"src":"13454:6:85","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":60730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13454:8:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":60731,"nodeType":"ExpressionStatement","src":"13454:8:85"}]},"baseFunctions":[64138],"documentation":{"id":60723,"nodeType":"StructuredDocumentation","src":"13349:44:85","text":" @dev Pauses the contract."},"functionSelector":"8456cb59","implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":60726,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60252,"src":"13431:11:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":60727,"kind":"modifierInvocation","modifierName":{"id":60725,"name":"onlyRole","nameLocations":["13422:8:85"],"nodeType":"IdentifierPath","referencedDeclaration":39758,"src":"13422:8:85"},"nodeType":"ModifierInvocation","src":"13422:21:85"}],"name":"pause","nameLocation":"13407:5:85","parameters":{"id":60724,"nodeType":"ParameterList","parameters":[],"src":"13412:2:85"},"returnParameters":{"id":60728,"nodeType":"ParameterList","parameters":[],"src":"13444:0:85"},"scope":61385,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":60744,"nodeType":"FunctionDefinition","src":"13526:75:85","nodes":[],"body":{"id":60743,"nodeType":"Block","src":"13574:27:85","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":60740,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40913,"src":"13584:8:85","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":60741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13584:10:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":60742,"nodeType":"ExpressionStatement","src":"13584:10:85"}]},"baseFunctions":[64142],"documentation":{"id":60734,"nodeType":"StructuredDocumentation","src":"13475:46:85","text":" @dev Unpauses the contract."},"functionSelector":"3f4ba83a","implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":60737,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60252,"src":"13561:11:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":60738,"kind":"modifierInvocation","modifierName":{"id":60736,"name":"onlyRole","nameLocations":["13552:8:85"],"nodeType":"IdentifierPath","referencedDeclaration":39758,"src":"13552:8:85"},"nodeType":"ModifierInvocation","src":"13552:21:85"}],"name":"unpause","nameLocation":"13535:7:85","parameters":{"id":60735,"nodeType":"ParameterList","parameters":[],"src":"13542:2:85"},"returnParameters":{"id":60739,"nodeType":"ParameterList","parameters":[],"src":"13574:0:85"},"scope":61385,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":60755,"nodeType":"FunctionDefinition","src":"13766:103:85","nodes":[],"body":{"id":60754,"nodeType":"Block","src":"13867:2:85","nodes":[],"statements":[]},"baseFunctions":[40662],"documentation":{"id":60745,"nodeType":"StructuredDocumentation","src":"13607:154:85","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract.\n      Called by {upgradeToAndCall}."},"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":60751,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39729,"src":"13847:18:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":60752,"kind":"modifierInvocation","modifierName":{"id":60750,"name":"onlyRole","nameLocations":["13838:8:85"],"nodeType":"IdentifierPath","referencedDeclaration":39758,"src":"13838:8:85"},"nodeType":"ModifierInvocation","src":"13838:28:85"}],"name":"_authorizeUpgrade","nameLocation":"13775:17:85","overrides":{"id":60749,"nodeType":"OverrideSpecifier","overrides":[],"src":"13829:8:85"},"parameters":{"id":60748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60747,"mutability":"mutable","name":"newImplementation","nameLocation":"13801:17:85","nodeType":"VariableDeclaration","scope":60755,"src":"13793:25:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60746,"name":"address","nodeType":"ElementaryTypeName","src":"13793:7:85","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13792:27:85"},"returnParameters":{"id":60753,"nodeType":"ParameterList","parameters":[],"src":"13867:0:85"},"scope":61385,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":60835,"nodeType":"FunctionDefinition","src":"14177:634:85","nodes":[],"body":{"id":60834,"nodeType":"Block","src":"14266:545:85","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":60769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":60767,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60760,"src":"14280:6:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":60768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14290:1:85","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14280:11:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":60774,"nodeType":"IfStatement","src":"14276:64:85","trueBody":{"id":60773,"nodeType":"Block","src":"14293:47:85","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":60770,"name":"InvalidAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63259,"src":"14314:13:85","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":60771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14314:15:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":60772,"nodeType":"RevertStatement","src":"14307:22:85"}]}},{"assignments":[null,60777],"declarations":[null,{"constant":false,"id":60777,"mutability":"mutable","name":"tokenType","nameLocation":"14363:9:85","nodeType":"VariableDeclaration","scope":60834,"src":"14353:19:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$63318","typeString":"enum IERC20Manager.TokenType"},"typeName":{"id":60776,"nodeType":"UserDefinedTypeName","pathNode":{"id":60775,"name":"TokenType","nameLocations":["14353:9:85"],"nodeType":"IdentifierPath","referencedDeclaration":63318,"src":"14353:9:85"},"referencedDeclaration":63318,"src":"14353:9:85","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$63318","typeString":"enum IERC20Manager.TokenType"}},"visibility":"internal"}],"id":60782,"initialValue":{"arguments":[{"id":60780,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60758,"src":"14391:5:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":60778,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60266,"src":"14376:7:85","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToTokenTypeMap_$64505_storage","typeString":"struct CustomEnumerableMap.AddressToTokenTypeMap storage ref"}},"id":60779,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14384:6:85","memberName":"tryGet","nodeType":"MemberAccess","referencedDeclaration":64720,"src":"14376:14:85","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressToTokenTypeMap_$64505_storage_ptr_$_t_address_$returns$_t_bool_$_t_enum$_TokenType_$63318_$attached_to$_t_struct$_AddressToTokenTypeMap_$64505_storage_ptr_$","typeString":"function (struct CustomEnumerableMap.AddressToTokenTypeMap storage pointer,address) view returns (bool,enum IERC20Manager.TokenType)"}},"id":60781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14376:21:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_enum$_TokenType_$63318_$","typeString":"tuple(bool,enum IERC20Manager.TokenType)"}},"nodeType":"VariableDeclarationStatement","src":"14350:47:85"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_TokenType_$63318","typeString":"enum IERC20Manager.TokenType"},"id":60786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":60783,"name":"tokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60777,"src":"14412:9:85","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$63318","typeString":"enum IERC20Manager.TokenType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":60784,"name":"TokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63318,"src":"14425:9:85","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TokenType_$63318_$","typeString":"type(enum IERC20Manager.TokenType)"}},"id":60785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14435:7:85","memberName":"Unknown","nodeType":"MemberAccess","referencedDeclaration":63315,"src":"14425:17:85","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$63318","typeString":"enum IERC20Manager.TokenType"}},"src":"14412:30:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_TokenType_$63318","typeString":"enum IERC20Manager.TokenType"},"id":60794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":60791,"name":"tokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60777,"src":"14504:9:85","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$63318","typeString":"enum IERC20Manager.TokenType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":60792,"name":"TokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63318,"src":"14517:9:85","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TokenType_$63318_$","typeString":"type(enum IERC20Manager.TokenType)"}},"id":60793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14527:8:85","memberName":"Ethereum","nodeType":"MemberAccess","referencedDeclaration":63316,"src":"14517:18:85","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$63318","typeString":"enum IERC20Manager.TokenType"}},"src":"14504:31:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_TokenType_$63318","typeString":"enum IERC20Manager.TokenType"},"id":60812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":60809,"name":"tokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60777,"src":"14637:9:85","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$63318","typeString":"enum IERC20Manager.TokenType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":60810,"name":"TokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63318,"src":"14650:9:85","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TokenType_$63318_$","typeString":"type(enum IERC20Manager.TokenType)"}},"id":60811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14660:4:85","memberName":"Gear","nodeType":"MemberAccess","referencedDeclaration":63317,"src":"14650:14:85","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$63318","typeString":"enum IERC20Manager.TokenType"}},"src":"14637:27:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":60823,"nodeType":"IfStatement","src":"14633:108:85","trueBody":{"id":60822,"nodeType":"Block","src":"14666:75:85","statements":[{"expression":{"arguments":[{"expression":{"id":60817,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14711:3:85","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":60818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14715:6:85","memberName":"sender","nodeType":"MemberAccess","src":"14711:10:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":60819,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60760,"src":"14723:6:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":60814,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60758,"src":"14695:5:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60813,"name":"IERC20Burnable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63234,"src":"14680:14:85","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Burnable_$63234_$","typeString":"type(contract IERC20Burnable)"}},"id":60815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14680:21:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Burnable_$63234","typeString":"contract IERC20Burnable"}},"id":60816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14702:8:85","memberName":"burnFrom","nodeType":"MemberAccess","referencedDeclaration":63233,"src":"14680:30:85","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":60820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14680:50:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":60821,"nodeType":"ExpressionStatement","src":"14680:50:85"}]}},"id":60824,"nodeType":"IfStatement","src":"14500:241:85","trueBody":{"id":60808,"nodeType":"Block","src":"14537:90:85","statements":[{"expression":{"arguments":[{"expression":{"id":60799,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14582:3:85","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":60800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14586:6:85","memberName":"sender","nodeType":"MemberAccess","src":"14582:10:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":60803,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"14602:4:85","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Manager_$61385","typeString":"contract ERC20Manager"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20Manager_$61385","typeString":"contract ERC20Manager"}],"id":60802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14594:7:85","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":60801,"name":"address","nodeType":"ElementaryTypeName","src":"14594:7:85","typeDescriptions":{}}},"id":60804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14594:13:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":60805,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60760,"src":"14609:6:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":60796,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60758,"src":"14558:5:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60795,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":42769,"src":"14551:6:85","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$42769_$","typeString":"type(contract IERC20)"}},"id":60797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14551:13:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$42769","typeString":"contract IERC20"}},"id":60798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14565:16:85","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":43103,"src":"14551:30:85","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$42769_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$42769_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":60806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14551:65:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":60807,"nodeType":"ExpressionStatement","src":"14551:65:85"}]}},"id":60825,"nodeType":"IfStatement","src":"14408:333:85","trueBody":{"id":60790,"nodeType":"Block","src":"14444:50:85","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":60787,"name":"InvalidTokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63262,"src":"14465:16:85","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":60788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14465:18:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":60789,"nodeType":"RevertStatement","src":"14458:25:85"}]}},{"eventCall":{"arguments":[{"expression":{"id":60827,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14774:3:85","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":60828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14778:6:85","memberName":"sender","nodeType":"MemberAccess","src":"14774:10:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":60829,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60762,"src":"14786:2:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":60830,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60758,"src":"14790:5:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":60831,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60760,"src":"14797:6:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":60826,"name":"BridgingRequested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63276,"src":"14756:17:85","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,bytes32,address,uint256)"}},"id":60832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14756:48:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":60833,"nodeType":"EmitStatement","src":"14751:53:85"}]},"baseFunctions":[63450],"documentation":{"id":60756,"nodeType":"StructuredDocumentation","src":"13875:297:85","text":" @dev Requests bridging of tokens.\n      Emits `BridgingRequested` event.\n @param token Token address.\n @param amount Amount of tokens to bridge.\n @param to Destination address.\n @dev Reverts if token is not registered with `InvalidTokenType` error."},"functionSelector":"c305870c","implemented":true,"kind":"function","modifiers":[{"id":60765,"kind":"modifierInvocation","modifierName":{"id":60764,"name":"whenNotPaused","nameLocations":["14252:13:85"],"nodeType":"IdentifierPath","referencedDeclaration":40804,"src":"14252:13:85"},"nodeType":"ModifierInvocation","src":"14252:13:85"}],"name":"requestBridging","nameLocation":"14186:15:85","parameters":{"id":60763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60758,"mutability":"mutable","name":"token","nameLocation":"14210:5:85","nodeType":"VariableDeclaration","scope":60835,"src":"14202:13:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60757,"name":"address","nodeType":"ElementaryTypeName","src":"14202:7:85","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":60760,"mutability":"mutable","name":"amount","nameLocation":"14225:6:85","nodeType":"VariableDeclaration","scope":60835,"src":"14217:14:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60759,"name":"uint256","nodeType":"ElementaryTypeName","src":"14217:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":60762,"mutability":"mutable","name":"to","nameLocation":"14241:2:85","nodeType":"VariableDeclaration","scope":60835,"src":"14233:10:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":60761,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14233:7:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14201:43:85"},"returnParameters":{"id":60766,"nodeType":"ParameterList","parameters":[],"src":"14266:0:85"},"scope":61385,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":60875,"nodeType":"FunctionDefinition","src":"15107:396:85","nodes":[],"body":{"id":60874,"nodeType":"Block","src":"15266:237:85","nodes":[],"statements":[{"condition":{"id":60853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"15280:44:85","subExpression":{"arguments":[{"id":60851,"name":"bridgingPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60844,"src":"15308:15:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":60849,"name":"_bridgingPayments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60269,"src":"15281:17:85","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$54318_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":60850,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15299:8:85","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":54412,"src":"15281:26:85","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$54318_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$54318_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"}},"id":60852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15281:43:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":60858,"nodeType":"IfStatement","src":"15276:106:85","trueBody":{"id":60857,"nodeType":"Block","src":"15326:56:85","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":60854,"name":"InvalidBridgingPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63265,"src":"15347:22:85","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":60855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15347:24:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":60856,"nodeType":"RevertStatement","src":"15340:31:85"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":60860,"name":"bridgingPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60844,"src":"15409:15:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60859,"name":"IBridgingPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63216,"src":"15392:16:85","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBridgingPayment_$63216_$","typeString":"type(contract IBridgingPayment)"}},"id":60861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15392:33:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBridgingPayment_$63216","typeString":"contract IBridgingPayment"}},"id":60862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15426:6:85","memberName":"payFee","nodeType":"MemberAccess","referencedDeclaration":63215,"src":"15392:40:85","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$","typeString":"function () payable external"}},"id":60865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":60863,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15440:3:85","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":60864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15444:5:85","memberName":"value","nodeType":"MemberAccess","src":"15440:9:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"15392:58:85","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$value","typeString":"function () payable external"}},"id":60866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15392:60:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":60867,"nodeType":"ExpressionStatement","src":"15392:60:85"},{"expression":{"arguments":[{"id":60869,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60838,"src":"15478:5:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":60870,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60840,"src":"15485:6:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":60871,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60842,"src":"15493:2:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":60868,"name":"requestBridging","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60835,"src":"15462:15:85","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (address,uint256,bytes32)"}},"id":60872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15462:34:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":60873,"nodeType":"ExpressionStatement","src":"15462:34:85"}]},"baseFunctions":[63462],"documentation":{"id":60836,"nodeType":"StructuredDocumentation","src":"14817:285:85","text":" @dev Requests bridging of tokens and pays fee to one of the `bridgingPayment` contracts.\n @param token Token address.\n @param amount Amount of tokens to bridge.\n @param to Destination address.\n @param bridgingPayment Bridging payment address."},"functionSelector":"1e324b52","implemented":true,"kind":"function","modifiers":[{"id":60847,"kind":"modifierInvocation","modifierName":{"id":60846,"name":"whenNotPaused","nameLocations":["15248:13:85"],"nodeType":"IdentifierPath","referencedDeclaration":40804,"src":"15248:13:85"},"nodeType":"ModifierInvocation","src":"15248:13:85"}],"name":"requestBridgingPayingFee","nameLocation":"15116:24:85","parameters":{"id":60845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60838,"mutability":"mutable","name":"token","nameLocation":"15149:5:85","nodeType":"VariableDeclaration","scope":60875,"src":"15141:13:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60837,"name":"address","nodeType":"ElementaryTypeName","src":"15141:7:85","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":60840,"mutability":"mutable","name":"amount","nameLocation":"15164:6:85","nodeType":"VariableDeclaration","scope":60875,"src":"15156:14:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60839,"name":"uint256","nodeType":"ElementaryTypeName","src":"15156:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":60842,"mutability":"mutable","name":"to","nameLocation":"15180:2:85","nodeType":"VariableDeclaration","scope":60875,"src":"15172:10:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":60841,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15172:7:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":60844,"mutability":"mutable","name":"bridgingPayment","nameLocation":"15192:15:85","nodeType":"VariableDeclaration","scope":60875,"src":"15184:23:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60843,"name":"address","nodeType":"ElementaryTypeName","src":"15184:7:85","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15140:68:85"},"returnParameters":{"id":60848,"nodeType":"ParameterList","parameters":[],"src":"15266:0:85"},"scope":61385,"stateMutability":"payable","virtual":false,"visibility":"public"},{"id":60923,"nodeType":"FunctionDefinition","src":"16029:366:85","nodes":[],"body":{"id":60922,"nodeType":"Block","src":"16239:156:85","nodes":[],"statements":[{"clauses":[{"block":{"id":60911,"nodeType":"Block","src":"16334:2:85","statements":[]},"errorName":"","id":60912,"nodeType":"TryCatchClause","src":"16334:2:85"},{"block":{"id":60913,"nodeType":"Block","src":"16343:2:85","statements":[]},"errorName":"","id":60914,"nodeType":"TryCatchClause","src":"16337:8:85"}],"externalCall":{"arguments":[{"expression":{"id":60899,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16280:3:85","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":60900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16284:6:85","memberName":"sender","nodeType":"MemberAccess","src":"16280:10:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":60903,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"16300:4:85","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Manager_$61385","typeString":"contract ERC20Manager"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20Manager_$61385","typeString":"contract ERC20Manager"}],"id":60902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16292:7:85","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":60901,"name":"address","nodeType":"ElementaryTypeName","src":"16292:7:85","typeDescriptions":{}}},"id":60904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16292:13:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":60905,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60880,"src":"16307:6:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":60906,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60884,"src":"16315:8:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":60907,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60886,"src":"16325:1:85","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":60908,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60888,"src":"16328:1:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":60909,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60890,"src":"16331:1:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"arguments":[{"id":60896,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60878,"src":"16266:5:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60895,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43031,"src":"16253:12:85","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Permit_$43031_$","typeString":"type(contract IERC20Permit)"}},"id":60897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16253:19:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$43031","typeString":"contract IERC20Permit"}},"id":60898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16273:6:85","memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":43016,"src":"16253:26:85","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"}},"id":60910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16253:80:85","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":60915,"nodeType":"TryStatement","src":"16249:96:85"},{"expression":{"arguments":[{"id":60917,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60878,"src":"16370:5:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":60918,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60880,"src":"16377:6:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":60919,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60882,"src":"16385:2:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":60916,"name":"requestBridging","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60835,"src":"16354:15:85","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$returns$__$","typeString":"function (address,uint256,bytes32)"}},"id":60920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16354:34:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":60921,"nodeType":"ExpressionStatement","src":"16354:34:85"}]},"baseFunctions":[63480],"documentation":{"id":60876,"nodeType":"StructuredDocumentation","src":"15509:515:85","text":" @dev Requests bridging of tokens.\n      This function uses `permit` to approve spending of tokens to optimize gas costs.\n      (If token supports `permit` function).\n @param token Token address.\n @param amount Amount of tokens to bridge.\n @param to Destination address.\n @param deadline Deadline for the transaction to be executed.\n @param v ECDSA signature parameter.\n @param r ECDSA signature parameter.\n @param s ECDSA signature parameter."},"functionSelector":"6a762d5c","implemented":true,"kind":"function","modifiers":[{"id":60893,"kind":"modifierInvocation","modifierName":{"id":60892,"name":"whenNotPaused","nameLocations":["16225:13:85"],"nodeType":"IdentifierPath","referencedDeclaration":40804,"src":"16225:13:85"},"nodeType":"ModifierInvocation","src":"16225:13:85"}],"name":"requestBridgingWithPermit","nameLocation":"16038:25:85","parameters":{"id":60891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60878,"mutability":"mutable","name":"token","nameLocation":"16081:5:85","nodeType":"VariableDeclaration","scope":60923,"src":"16073:13:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60877,"name":"address","nodeType":"ElementaryTypeName","src":"16073:7:85","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":60880,"mutability":"mutable","name":"amount","nameLocation":"16104:6:85","nodeType":"VariableDeclaration","scope":60923,"src":"16096:14:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60879,"name":"uint256","nodeType":"ElementaryTypeName","src":"16096:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":60882,"mutability":"mutable","name":"to","nameLocation":"16128:2:85","nodeType":"VariableDeclaration","scope":60923,"src":"16120:10:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":60881,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16120:7:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":60884,"mutability":"mutable","name":"deadline","nameLocation":"16148:8:85","nodeType":"VariableDeclaration","scope":60923,"src":"16140:16:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60883,"name":"uint256","nodeType":"ElementaryTypeName","src":"16140:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":60886,"mutability":"mutable","name":"v","nameLocation":"16172:1:85","nodeType":"VariableDeclaration","scope":60923,"src":"16166:7:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":60885,"name":"uint8","nodeType":"ElementaryTypeName","src":"16166:5:85","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":60888,"mutability":"mutable","name":"r","nameLocation":"16191:1:85","nodeType":"VariableDeclaration","scope":60923,"src":"16183:9:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":60887,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16183:7:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":60890,"mutability":"mutable","name":"s","nameLocation":"16210:1:85","nodeType":"VariableDeclaration","scope":60923,"src":"16202:9:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":60889,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16202:7:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16063:154:85"},"returnParameters":{"id":60894,"nodeType":"ParameterList","parameters":[],"src":"16239:0:85"},"scope":61385,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":60975,"nodeType":"FunctionDefinition","src":"17032:526:85","nodes":[],"body":{"id":60974,"nodeType":"Block","src":"17292:266:85","nodes":[],"statements":[{"condition":{"id":60949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"17306:44:85","subExpression":{"arguments":[{"id":60947,"name":"bridgingPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60940,"src":"17334:15:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":60945,"name":"_bridgingPayments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60269,"src":"17307:17:85","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$54318_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":60946,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17325:8:85","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":54412,"src":"17307:26:85","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$54318_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$54318_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"}},"id":60948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17307:43:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":60954,"nodeType":"IfStatement","src":"17302:106:85","trueBody":{"id":60953,"nodeType":"Block","src":"17352:56:85","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":60950,"name":"InvalidBridgingPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63265,"src":"17373:22:85","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":60951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17373:24:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":60952,"nodeType":"RevertStatement","src":"17366:31:85"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":60956,"name":"bridgingPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60940,"src":"17435:15:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60955,"name":"IBridgingPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63216,"src":"17418:16:85","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBridgingPayment_$63216_$","typeString":"type(contract IBridgingPayment)"}},"id":60957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17418:33:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBridgingPayment_$63216","typeString":"contract IBridgingPayment"}},"id":60958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17452:6:85","memberName":"payFee","nodeType":"MemberAccess","referencedDeclaration":63215,"src":"17418:40:85","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$","typeString":"function () payable external"}},"id":60961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":60959,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"17466:3:85","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":60960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17470:5:85","memberName":"value","nodeType":"MemberAccess","src":"17466:9:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"17418:58:85","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$value","typeString":"function () payable external"}},"id":60962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17418:60:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":60963,"nodeType":"ExpressionStatement","src":"17418:60:85"},{"expression":{"arguments":[{"id":60965,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60926,"src":"17514:5:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":60966,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60928,"src":"17521:6:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":60967,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60930,"src":"17529:2:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":60968,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60932,"src":"17533:8:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":60969,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60934,"src":"17543:1:85","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":60970,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60936,"src":"17546:1:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":60971,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60938,"src":"17549:1:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":60964,"name":"requestBridgingWithPermit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60923,"src":"17488:25:85","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (address,uint256,bytes32,uint256,uint8,bytes32,bytes32)"}},"id":60972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17488:63:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":60973,"nodeType":"ExpressionStatement","src":"17488:63:85"}]},"baseFunctions":[63500],"documentation":{"id":60924,"nodeType":"StructuredDocumentation","src":"16401:626:85","text":" @dev Requests bridging of tokens and pays fee to one of the `bridgingPayment` contracts.\n      This function uses `permit` to approve spending of tokens to optimize gas costs.\n      (If token supports `permit` function).\n @param token Token address.\n @param amount Amount of tokens to bridge.\n @param to Destination address.\n @param deadline Deadline for the transaction to be executed.\n @param v ECDSA signature parameter.\n @param r ECDSA signature parameter.\n @param s ECDSA signature parameter.\n @param bridgingPayment Bridging payment address."},"functionSelector":"f6cdd9cc","implemented":true,"kind":"function","modifiers":[{"id":60943,"kind":"modifierInvocation","modifierName":{"id":60942,"name":"whenNotPaused","nameLocations":["17278:13:85"],"nodeType":"IdentifierPath","referencedDeclaration":40804,"src":"17278:13:85"},"nodeType":"ModifierInvocation","src":"17278:13:85"}],"name":"requestBridgingPayingFeeWithPermit","nameLocation":"17041:34:85","parameters":{"id":60941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60926,"mutability":"mutable","name":"token","nameLocation":"17093:5:85","nodeType":"VariableDeclaration","scope":60975,"src":"17085:13:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60925,"name":"address","nodeType":"ElementaryTypeName","src":"17085:7:85","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":60928,"mutability":"mutable","name":"amount","nameLocation":"17116:6:85","nodeType":"VariableDeclaration","scope":60975,"src":"17108:14:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60927,"name":"uint256","nodeType":"ElementaryTypeName","src":"17108:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":60930,"mutability":"mutable","name":"to","nameLocation":"17140:2:85","nodeType":"VariableDeclaration","scope":60975,"src":"17132:10:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":60929,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17132:7:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":60932,"mutability":"mutable","name":"deadline","nameLocation":"17160:8:85","nodeType":"VariableDeclaration","scope":60975,"src":"17152:16:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60931,"name":"uint256","nodeType":"ElementaryTypeName","src":"17152:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":60934,"mutability":"mutable","name":"v","nameLocation":"17184:1:85","nodeType":"VariableDeclaration","scope":60975,"src":"17178:7:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":60933,"name":"uint8","nodeType":"ElementaryTypeName","src":"17178:5:85","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":60936,"mutability":"mutable","name":"r","nameLocation":"17203:1:85","nodeType":"VariableDeclaration","scope":60975,"src":"17195:9:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":60935,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17195:7:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":60938,"mutability":"mutable","name":"s","nameLocation":"17222:1:85","nodeType":"VariableDeclaration","scope":60975,"src":"17214:9:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":60937,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17214:7:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":60940,"mutability":"mutable","name":"bridgingPayment","nameLocation":"17241:15:85","nodeType":"VariableDeclaration","scope":60975,"src":"17233:23:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60939,"name":"address","nodeType":"ElementaryTypeName","src":"17233:7:85","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17075:187:85"},"returnParameters":{"id":60944,"nodeType":"ParameterList","parameters":[],"src":"17292:0:85"},"scope":61385,"stateMutability":"payable","virtual":false,"visibility":"public"},{"id":61020,"nodeType":"FunctionDefinition","src":"17836:412:85","nodes":[],"body":{"id":61019,"nodeType":"Block","src":"17921:327:85","nodes":[],"statements":[{"assignments":[60987],"declarations":[{"constant":false,"id":60987,"mutability":"mutable","name":"bridgingPayment","nameLocation":"17947:15:85","nodeType":"VariableDeclaration","scope":61019,"src":"17931:31:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_BridgingPayment_$60053","typeString":"contract BridgingPayment"},"typeName":{"id":60986,"nodeType":"UserDefinedTypeName","pathNode":{"id":60985,"name":"BridgingPayment","nameLocations":["17931:15:85"],"nodeType":"IdentifierPath","referencedDeclaration":60053,"src":"17931:15:85"},"referencedDeclaration":60053,"src":"17931:15:85","typeDescriptions":{"typeIdentifier":"t_contract$_BridgingPayment_$60053","typeString":"contract BridgingPayment"}},"visibility":"internal"}],"id":60999,"initialValue":{"arguments":[{"arguments":[{"id":60993,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"17993:4:85","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Manager_$61385","typeString":"contract ERC20Manager"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20Manager_$61385","typeString":"contract ERC20Manager"}],"id":60992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17985:7:85","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":60991,"name":"address","nodeType":"ElementaryTypeName","src":"17985:7:85","typeDescriptions":{}}},"id":60994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17985:13:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":60995,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60978,"src":"18000:3:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":60996,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"18005:3:85","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":60997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18009:6:85","memberName":"sender","nodeType":"MemberAccess","src":"18005:10:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":60990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"17965:19:85","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_contract$_BridgingPayment_$60053_$","typeString":"function (address,uint256,address) returns (contract BridgingPayment)"},"typeName":{"id":60989,"nodeType":"UserDefinedTypeName","pathNode":{"id":60988,"name":"BridgingPayment","nameLocations":["17969:15:85"],"nodeType":"IdentifierPath","referencedDeclaration":60053,"src":"17969:15:85"},"referencedDeclaration":60053,"src":"17969:15:85","typeDescriptions":{"typeIdentifier":"t_contract$_BridgingPayment_$60053","typeString":"contract BridgingPayment"}}},"id":60998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17965:51:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_BridgingPayment_$60053","typeString":"contract BridgingPayment"}},"nodeType":"VariableDeclarationStatement","src":"17931:85:85"},{"assignments":[61001],"declarations":[{"constant":false,"id":61001,"mutability":"mutable","name":"bridgingPaymentAddress","nameLocation":"18035:22:85","nodeType":"VariableDeclaration","scope":61019,"src":"18027:30:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61000,"name":"address","nodeType":"ElementaryTypeName","src":"18027:7:85","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":61006,"initialValue":{"arguments":[{"id":61004,"name":"bridgingPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60987,"src":"18068:15:85","typeDescriptions":{"typeIdentifier":"t_contract$_BridgingPayment_$60053","typeString":"contract BridgingPayment"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BridgingPayment_$60053","typeString":"contract BridgingPayment"}],"id":61003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18060:7:85","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61002,"name":"address","nodeType":"ElementaryTypeName","src":"18060:7:85","typeDescriptions":{}}},"id":61005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18060:24:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"18027:57:85"},{"expression":{"arguments":[{"id":61010,"name":"bridgingPaymentAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61001,"src":"18116:22:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":61007,"name":"_bridgingPayments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60269,"src":"18094:17:85","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$54318_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":61009,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18112:3:85","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":54345,"src":"18094:21:85","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$54318_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_AddressSet_$54318_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":61011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18094:45:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":61012,"nodeType":"ExpressionStatement","src":"18094:45:85"},{"eventCall":{"arguments":[{"id":61014,"name":"bridgingPaymentAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61001,"src":"18178:22:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":61013,"name":"BridgingPaymentCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63292,"src":"18155:22:85","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":61015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18155:46:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":61016,"nodeType":"EmitStatement","src":"18150:51:85"},{"expression":{"id":61017,"name":"bridgingPaymentAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61001,"src":"18219:22:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":60984,"id":61018,"nodeType":"Return","src":"18212:29:85"}]},"baseFunctions":[63508],"documentation":{"id":60976,"nodeType":"StructuredDocumentation","src":"17564:267:85","text":" @dev Creates a new `BridgingPayment` contract (ERC20Manager is factory).\n      Emits `BridgingPaymentCreated` event.\n @param fee Fee amount in wei.\n @return bridgingPaymentAddress Address of the created `bridgingPayment` contract."},"functionSelector":"38ff319f","implemented":true,"kind":"function","modifiers":[{"id":60981,"kind":"modifierInvocation","modifierName":{"id":60980,"name":"whenNotPaused","nameLocations":["17889:13:85"],"nodeType":"IdentifierPath","referencedDeclaration":40804,"src":"17889:13:85"},"nodeType":"ModifierInvocation","src":"17889:13:85"}],"name":"createBridgingPayment","nameLocation":"17845:21:85","parameters":{"id":60979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60978,"mutability":"mutable","name":"fee","nameLocation":"17875:3:85","nodeType":"VariableDeclaration","scope":61020,"src":"17867:11:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60977,"name":"uint256","nodeType":"ElementaryTypeName","src":"17867:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17866:13:85"},"returnParameters":{"id":60984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60983,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":61020,"src":"17912:7:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60982,"name":"address","nodeType":"ElementaryTypeName","src":"17912:7:85","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17911:9:85"},"scope":61385,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":61073,"nodeType":"FunctionDefinition","src":"18476:575:85","nodes":[],"body":{"id":61072,"nodeType":"Block","src":"18548:503:85","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":61031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":61028,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"18562:3:85","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":61029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18566:6:85","memberName":"sender","nodeType":"MemberAccess","src":"18562:10:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":61030,"name":"_messageQueue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60260,"src":"18576:13:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"18562:27:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":61036,"nodeType":"IfStatement","src":"18558:80:85","trueBody":{"id":61035,"nodeType":"Block","src":"18591:47:85","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":61032,"name":"InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63250,"src":"18612:13:85","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":61033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18612:15:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":61034,"nodeType":"RevertStatement","src":"18605:22:85"}]}},{"condition":{"arguments":[{"id":61039,"name":"source","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61023,"src":"18674:6:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":61037,"name":"_vftManagers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60263,"src":"18652:12:85","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$54148_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":61038,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18665:8:85","memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":54215,"src":"18652:21:85","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$54148_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$54148_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) view returns (bool)"}},"id":61040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18652:29:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":61055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":61051,"name":"source","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61023,"src":"18821:6:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":61052,"name":"_governanceAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60255,"src":"18831:16:85","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernance_$63739","typeString":"contract IGovernance"}},"id":61053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18848:10:85","memberName":"governance","nodeType":"MemberAccess","referencedDeclaration":63732,"src":"18831:27:85","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":61054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18831:29:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"18821:39:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":61069,"nodeType":"Block","src":"18998:47:85","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":61066,"name":"InvalidSource","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63253,"src":"19019:13:85","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":61067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19019:15:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":61068,"nodeType":"RevertStatement","src":"19012:22:85"}]},"id":61070,"nodeType":"IfStatement","src":"18817:228:85","trueBody":{"id":61065,"nodeType":"Block","src":"18862:130:85","statements":[{"condition":{"id":61059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18880:44:85","subExpression":{"arguments":[{"id":61057,"name":"payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61025,"src":"18916:7:85","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":61056,"name":"_tryParseAndApplyGovernanceMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61384,"src":"18881:34:85","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes_calldata_ptr_$returns$_t_bool_$","typeString":"function (bytes calldata) returns (bool)"}},"id":61058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18881:43:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":61064,"nodeType":"IfStatement","src":"18876:106:85","trueBody":{"id":61063,"nodeType":"Block","src":"18926:56:85","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":61060,"name":"InvalidPayload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63256,"src":"18951:14:85","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":61061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18951:16:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":61062,"nodeType":"RevertStatement","src":"18944:23:85"}]}}]}},"id":61071,"nodeType":"IfStatement","src":"18648:397:85","trueBody":{"id":61050,"nodeType":"Block","src":"18683:128:85","statements":[{"condition":{"id":61044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18701:42:85","subExpression":{"arguments":[{"id":61042,"name":"payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61025,"src":"18735:7:85","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":61041,"name":"_tryParseAndApplyTransferMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61159,"src":"18702:32:85","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes_calldata_ptr_$returns$_t_bool_$","typeString":"function (bytes calldata) returns (bool)"}},"id":61043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18702:41:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":61049,"nodeType":"IfStatement","src":"18697:104:85","trueBody":{"id":61048,"nodeType":"Block","src":"18745:56:85","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":61045,"name":"InvalidPayload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63256,"src":"18770:14:85","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":61046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18770:16:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":61047,"nodeType":"RevertStatement","src":"18763:23:85"}]}}]}}]},"baseFunctions":[63860],"documentation":{"id":61021,"nodeType":"StructuredDocumentation","src":"18254:217:85","text":" @dev Handles message originated from Vara Network.\n @param source Source of the message (`ActorId` from Vara Network).\n @param payload Payload of the message (message from Vara Network)."},"functionSelector":"302ac5d0","implemented":true,"kind":"function","modifiers":[],"name":"handleMessage","nameLocation":"18485:13:85","parameters":{"id":61026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61023,"mutability":"mutable","name":"source","nameLocation":"18507:6:85","nodeType":"VariableDeclaration","scope":61073,"src":"18499:14:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":61022,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18499:7:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":61025,"mutability":"mutable","name":"payload","nameLocation":"18530:7:85","nodeType":"VariableDeclaration","scope":61073,"src":"18515:22:85","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":61024,"name":"bytes","nodeType":"ElementaryTypeName","src":"18515:5:85","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18498:40:85"},"returnParameters":{"id":61027,"nodeType":"ParameterList","parameters":[],"src":"18548:0:85"},"scope":61385,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":61159,"nodeType":"FunctionDefinition","src":"19513:1399:85","nodes":[],"body":{"id":61158,"nodeType":"Block","src":"19602:1310:85","nodes":[],"statements":[{"condition":{"id":61086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"19616:42:85","subExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":61084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":61081,"name":"payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61076,"src":"19618:7:85","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":61082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19626:6:85","memberName":"length","nodeType":"MemberAccess","src":"19618:14:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":61083,"name":"TRANSFER_MESSAGE_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60149,"src":"19636:21:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19618:39:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":61085,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19617:41:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":61090,"nodeType":"IfStatement","src":"19612:85:85","trueBody":{"id":61089,"nodeType":"Block","src":"19660:37:85","statements":[{"expression":{"hexValue":"66616c7365","id":61087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19681:5:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":61080,"id":61088,"nodeType":"Return","src":"19674:12:85"}]}},{"assignments":[61092],"declarations":[{"constant":false,"id":61092,"mutability":"mutable","name":"sender","nameLocation":"19715:6:85","nodeType":"VariableDeclaration","scope":61158,"src":"19707:14:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":61091,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19707:7:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":61093,"nodeType":"VariableDeclarationStatement","src":"19707:14:85"},{"assignments":[61095],"declarations":[{"constant":false,"id":61095,"mutability":"mutable","name":"receiver","nameLocation":"19739:8:85","nodeType":"VariableDeclaration","scope":61158,"src":"19731:16:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61094,"name":"address","nodeType":"ElementaryTypeName","src":"19731:7:85","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":61096,"nodeType":"VariableDeclarationStatement","src":"19731:16:85"},{"assignments":[61098],"declarations":[{"constant":false,"id":61098,"mutability":"mutable","name":"token","nameLocation":"19765:5:85","nodeType":"VariableDeclaration","scope":61158,"src":"19757:13:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61097,"name":"address","nodeType":"ElementaryTypeName","src":"19757:7:85","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":61099,"nodeType":"VariableDeclarationStatement","src":"19757:13:85"},{"assignments":[61101],"declarations":[{"constant":false,"id":61101,"mutability":"mutable","name":"amount","nameLocation":"19788:6:85","nodeType":"VariableDeclaration","scope":61158,"src":"19780:14:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":61100,"name":"uint256","nodeType":"ElementaryTypeName","src":"19780:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":61102,"nodeType":"VariableDeclarationStatement","src":"19780:14:85"},{"AST":{"nativeSrc":"19904:550:85","nodeType":"YulBlock","src":"19904:550:85","statements":[{"nativeSrc":"19918:38:85","nodeType":"YulAssignment","src":"19918:38:85","value":{"arguments":[{"name":"payload.offset","nativeSrc":"19941:14:85","nodeType":"YulIdentifier","src":"19941:14:85"}],"functionName":{"name":"calldataload","nativeSrc":"19928:12:85","nodeType":"YulIdentifier","src":"19928:12:85"},"nativeSrc":"19928:28:85","nodeType":"YulFunctionCall","src":"19928:28:85"},"variableNames":[{"name":"sender","nativeSrc":"19918:6:85","nodeType":"YulIdentifier","src":"19918:6:85"}]},{"nativeSrc":"20093:79:85","nodeType":"YulAssignment","src":"20093:79:85","value":{"arguments":[{"name":"RECEIVER_BIT_SHIFT","nativeSrc":"20109:18:85","nodeType":"YulIdentifier","src":"20109:18:85"},{"arguments":[{"arguments":[{"name":"payload.offset","nativeSrc":"20146:14:85","nodeType":"YulIdentifier","src":"20146:14:85"},{"name":"OFFSET1","nativeSrc":"20162:7:85","nodeType":"YulIdentifier","src":"20162:7:85"}],"functionName":{"name":"add","nativeSrc":"20142:3:85","nodeType":"YulIdentifier","src":"20142:3:85"},"nativeSrc":"20142:28:85","nodeType":"YulFunctionCall","src":"20142:28:85"}],"functionName":{"name":"calldataload","nativeSrc":"20129:12:85","nodeType":"YulIdentifier","src":"20129:12:85"},"nativeSrc":"20129:42:85","nodeType":"YulFunctionCall","src":"20129:42:85"}],"functionName":{"name":"shr","nativeSrc":"20105:3:85","nodeType":"YulIdentifier","src":"20105:3:85"},"nativeSrc":"20105:67:85","nodeType":"YulFunctionCall","src":"20105:67:85"},"variableNames":[{"name":"receiver","nativeSrc":"20093:8:85","nodeType":"YulIdentifier","src":"20093:8:85"}]},{"nativeSrc":"20306:73:85","nodeType":"YulAssignment","src":"20306:73:85","value":{"arguments":[{"name":"TOKEN_BIT_SHIFT","nativeSrc":"20319:15:85","nodeType":"YulIdentifier","src":"20319:15:85"},{"arguments":[{"arguments":[{"name":"payload.offset","nativeSrc":"20353:14:85","nodeType":"YulIdentifier","src":"20353:14:85"},{"name":"OFFSET2","nativeSrc":"20369:7:85","nodeType":"YulIdentifier","src":"20369:7:85"}],"functionName":{"name":"add","nativeSrc":"20349:3:85","nodeType":"YulIdentifier","src":"20349:3:85"},"nativeSrc":"20349:28:85","nodeType":"YulFunctionCall","src":"20349:28:85"}],"functionName":{"name":"calldataload","nativeSrc":"20336:12:85","nodeType":"YulIdentifier","src":"20336:12:85"},"nativeSrc":"20336:42:85","nodeType":"YulFunctionCall","src":"20336:42:85"}],"functionName":{"name":"shr","nativeSrc":"20315:3:85","nodeType":"YulIdentifier","src":"20315:3:85"},"nativeSrc":"20315:64:85","nodeType":"YulFunctionCall","src":"20315:64:85"},"variableNames":[{"name":"token","nativeSrc":"20306:5:85","nodeType":"YulIdentifier","src":"20306:5:85"}]},{"nativeSrc":"20392:52:85","nodeType":"YulAssignment","src":"20392:52:85","value":{"arguments":[{"arguments":[{"name":"payload.offset","nativeSrc":"20419:14:85","nodeType":"YulIdentifier","src":"20419:14:85"},{"name":"OFFSET3","nativeSrc":"20435:7:85","nodeType":"YulIdentifier","src":"20435:7:85"}],"functionName":{"name":"add","nativeSrc":"20415:3:85","nodeType":"YulIdentifier","src":"20415:3:85"},"nativeSrc":"20415:28:85","nodeType":"YulFunctionCall","src":"20415:28:85"}],"functionName":{"name":"calldataload","nativeSrc":"20402:12:85","nodeType":"YulIdentifier","src":"20402:12:85"},"nativeSrc":"20402:42:85","nodeType":"YulFunctionCall","src":"20402:42:85"},"variableNames":[{"name":"amount","nativeSrc":"20392:6:85","nodeType":"YulIdentifier","src":"20392:6:85"}]}]},"evmVersion":"prague","externalReferences":[{"declaration":60161,"isOffset":false,"isSlot":false,"src":"20162:7:85","valueSize":1},{"declaration":60165,"isOffset":false,"isSlot":false,"src":"20369:7:85","valueSize":1},{"declaration":60169,"isOffset":false,"isSlot":false,"src":"20435:7:85","valueSize":1},{"declaration":60153,"isOffset":false,"isSlot":false,"src":"20109:18:85","valueSize":1},{"declaration":60157,"isOffset":false,"isSlot":false,"src":"20319:15:85","valueSize":1},{"declaration":61101,"isOffset":false,"isSlot":false,"src":"20392:6:85","valueSize":1},{"declaration":61076,"isOffset":true,"isSlot":false,"src":"19941:14:85","suffix":"offset","valueSize":1},{"declaration":61076,"isOffset":true,"isSlot":false,"src":"20146:14:85","suffix":"offset","valueSize":1},{"declaration":61076,"isOffset":true,"isSlot":false,"src":"20353:14:85","suffix":"offset","valueSize":1},{"declaration":61076,"isOffset":true,"isSlot":false,"src":"20419:14:85","suffix":"offset","valueSize":1},{"declaration":61095,"isOffset":false,"isSlot":false,"src":"20093:8:85","valueSize":1},{"declaration":61092,"isOffset":false,"isSlot":false,"src":"19918:6:85","valueSize":1},{"declaration":61098,"isOffset":false,"isSlot":false,"src":"20306:5:85","valueSize":1}],"flags":["memory-safe"],"id":61103,"nodeType":"InlineAssembly","src":"19879:575:85"},{"assignments":[null,61106],"declarations":[null,{"constant":false,"id":61106,"mutability":"mutable","name":"tokenType","nameLocation":"20477:9:85","nodeType":"VariableDeclaration","scope":61158,"src":"20467:19:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$63318","typeString":"enum IERC20Manager.TokenType"},"typeName":{"id":61105,"nodeType":"UserDefinedTypeName","pathNode":{"id":61104,"name":"TokenType","nameLocations":["20467:9:85"],"nodeType":"IdentifierPath","referencedDeclaration":63318,"src":"20467:9:85"},"referencedDeclaration":63318,"src":"20467:9:85","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$63318","typeString":"enum IERC20Manager.TokenType"}},"visibility":"internal"}],"id":61111,"initialValue":{"arguments":[{"id":61109,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61098,"src":"20505:5:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":61107,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60266,"src":"20490:7:85","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToTokenTypeMap_$64505_storage","typeString":"struct CustomEnumerableMap.AddressToTokenTypeMap storage ref"}},"id":61108,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20498:6:85","memberName":"tryGet","nodeType":"MemberAccess","referencedDeclaration":64720,"src":"20490:14:85","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressToTokenTypeMap_$64505_storage_ptr_$_t_address_$returns$_t_bool_$_t_enum$_TokenType_$63318_$attached_to$_t_struct$_AddressToTokenTypeMap_$64505_storage_ptr_$","typeString":"function (struct CustomEnumerableMap.AddressToTokenTypeMap storage pointer,address) view returns (bool,enum IERC20Manager.TokenType)"}},"id":61110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20490:21:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_enum$_TokenType_$63318_$","typeString":"tuple(bool,enum IERC20Manager.TokenType)"}},"nodeType":"VariableDeclarationStatement","src":"20464:47:85"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_TokenType_$63318","typeString":"enum IERC20Manager.TokenType"},"id":61115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":61112,"name":"tokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61106,"src":"20526:9:85","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$63318","typeString":"enum IERC20Manager.TokenType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":61113,"name":"TokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63318,"src":"20539:9:85","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TokenType_$63318_$","typeString":"type(enum IERC20Manager.TokenType)"}},"id":61114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"20549:7:85","memberName":"Unknown","nodeType":"MemberAccess","referencedDeclaration":63315,"src":"20539:17:85","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$63318","typeString":"enum IERC20Manager.TokenType"}},"src":"20526:30:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_TokenType_$63318","typeString":"enum IERC20Manager.TokenType"},"id":61123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":61120,"name":"tokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61106,"src":"20618:9:85","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$63318","typeString":"enum IERC20Manager.TokenType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":61121,"name":"TokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63318,"src":"20631:9:85","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TokenType_$63318_$","typeString":"type(enum IERC20Manager.TokenType)"}},"id":61122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"20641:8:85","memberName":"Ethereum","nodeType":"MemberAccess","referencedDeclaration":63316,"src":"20631:18:85","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$63318","typeString":"enum IERC20Manager.TokenType"}},"src":"20618:31:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_TokenType_$63318","typeString":"enum IERC20Manager.TokenType"},"id":61136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":61133,"name":"tokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61106,"src":"20730:9:85","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$63318","typeString":"enum IERC20Manager.TokenType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":61134,"name":"TokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63318,"src":"20743:9:85","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TokenType_$63318_$","typeString":"type(enum IERC20Manager.TokenType)"}},"id":61135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"20753:4:85","memberName":"Gear","nodeType":"MemberAccess","referencedDeclaration":63317,"src":"20743:14:85","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$63318","typeString":"enum IERC20Manager.TokenType"}},"src":"20730:27:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":61146,"nodeType":"IfStatement","src":"20726:102:85","trueBody":{"id":61145,"nodeType":"Block","src":"20759:69:85","statements":[{"expression":{"arguments":[{"id":61141,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61095,"src":"20800:8:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":61142,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61101,"src":"20810:6:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":61138,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61098,"src":"20788:5:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":61137,"name":"IERC20Mintable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63645,"src":"20773:14:85","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Mintable_$63645_$","typeString":"type(contract IERC20Mintable)"}},"id":61139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20773:21:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Mintable_$63645","typeString":"contract IERC20Mintable"}},"id":61140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20795:4:85","memberName":"mint","nodeType":"MemberAccess","referencedDeclaration":63644,"src":"20773:26:85","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":61143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20773:44:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":61144,"nodeType":"ExpressionStatement","src":"20773:44:85"}]}},"id":61147,"nodeType":"IfStatement","src":"20614:214:85","trueBody":{"id":61132,"nodeType":"Block","src":"20651:69:85","statements":[{"expression":{"arguments":[{"id":61128,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61095,"src":"20692:8:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":61129,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61101,"src":"20702:6:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":61125,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61098,"src":"20672:5:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":61124,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":42769,"src":"20665:6:85","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$42769_$","typeString":"type(contract IERC20)"}},"id":61126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20665:13:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$42769","typeString":"contract IERC20"}},"id":61127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20679:12:85","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":43076,"src":"20665:26:85","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$42769_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$42769_$","typeString":"function (contract IERC20,address,uint256)"}},"id":61130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20665:44:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":61131,"nodeType":"ExpressionStatement","src":"20665:44:85"}]}},"id":61148,"nodeType":"IfStatement","src":"20522:306:85","trueBody":{"id":61119,"nodeType":"Block","src":"20558:50:85","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":61116,"name":"InvalidTokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63262,"src":"20579:16:85","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":61117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20579:18:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":61118,"nodeType":"RevertStatement","src":"20572:25:85"}]}},{"eventCall":{"arguments":[{"id":61150,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61092,"src":"20851:6:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":61151,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61095,"src":"20859:8:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":61152,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61098,"src":"20869:5:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":61153,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61101,"src":"20876:6:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":61149,"name":"Bridged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63287,"src":"20843:7:85","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,address,uint256)"}},"id":61154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20843:40:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":61155,"nodeType":"EmitStatement","src":"20838:45:85"},{"expression":{"hexValue":"74727565","id":61156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20901:4:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":61080,"id":61157,"nodeType":"Return","src":"20894:11:85"}]},"documentation":{"id":61074,"nodeType":"StructuredDocumentation","src":"19057:451:85","text":" @dev Tries to parse and apply transfer message originated from Vara Network.\n      Payload format:\n      ```solidity\n      address sender;\n      address receiver;\n      address token;\n      uint256 amount;\n      ```\n @param payload Payload of the message (message from Vara Network).\n @return success `true` if the message is parsed and applied, `false` otherwise."},"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseAndApplyTransferMessage","nameLocation":"19522:32:85","parameters":{"id":61077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61076,"mutability":"mutable","name":"payload","nameLocation":"19570:7:85","nodeType":"VariableDeclaration","scope":61159,"src":"19555:22:85","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":61075,"name":"bytes","nodeType":"ElementaryTypeName","src":"19555:5:85","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19554:24:85"},"returnParameters":{"id":61080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61079,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":61159,"src":"19596:4:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":61078,"name":"bool","nodeType":"ElementaryTypeName","src":"19596:4:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"19595:6:85"},"scope":61385,"stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"id":61384,"nodeType":"FunctionDefinition","src":"21996:3791:85","nodes":[],"body":{"id":61383,"nodeType":"Block","src":"22087:3700:85","nodes":[],"statements":[{"condition":{"id":61172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"22101:21:85","subExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":61170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":61167,"name":"payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61162,"src":"22103:7:85","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":61168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22111:6:85","memberName":"length","nodeType":"MemberAccess","src":"22103:14:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":61169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22120:1:85","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"22103:18:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":61171,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22102:20:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":61176,"nodeType":"IfStatement","src":"22097:64:85","trueBody":{"id":61175,"nodeType":"Block","src":"22124:37:85","statements":[{"expression":{"hexValue":"66616c7365","id":61173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"22145:5:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":61166,"id":61174,"nodeType":"Return","src":"22138:12:85"}]}},{"assignments":[61178],"declarations":[{"constant":false,"id":61178,"mutability":"mutable","name":"discriminant","nameLocation":"22179:12:85","nodeType":"VariableDeclaration","scope":61383,"src":"22171:20:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":61177,"name":"uint256","nodeType":"ElementaryTypeName","src":"22171:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":61179,"nodeType":"VariableDeclarationStatement","src":"22171:20:85"},{"AST":{"nativeSrc":"22226:225:85","nodeType":"YulBlock","src":"22226:225:85","statements":[{"nativeSrc":"22368:73:85","nodeType":"YulAssignment","src":"22368:73:85","value":{"arguments":[{"name":"DISCRIMINANT_BIT_SHIFT","nativeSrc":"22388:22:85","nodeType":"YulIdentifier","src":"22388:22:85"},{"arguments":[{"name":"payload.offset","nativeSrc":"22425:14:85","nodeType":"YulIdentifier","src":"22425:14:85"}],"functionName":{"name":"calldataload","nativeSrc":"22412:12:85","nodeType":"YulIdentifier","src":"22412:12:85"},"nativeSrc":"22412:28:85","nodeType":"YulFunctionCall","src":"22412:28:85"}],"functionName":{"name":"shr","nativeSrc":"22384:3:85","nodeType":"YulIdentifier","src":"22384:3:85"},"nativeSrc":"22384:57:85","nodeType":"YulFunctionCall","src":"22384:57:85"},"variableNames":[{"name":"discriminant","nativeSrc":"22368:12:85","nodeType":"YulIdentifier","src":"22368:12:85"}]}]},"evmVersion":"prague","externalReferences":[{"declaration":60177,"isOffset":false,"isSlot":false,"src":"22388:22:85","valueSize":1},{"declaration":61178,"isOffset":false,"isSlot":false,"src":"22368:12:85","valueSize":1},{"declaration":61162,"isOffset":true,"isSlot":false,"src":"22425:14:85","suffix":"offset","valueSize":1}],"flags":["memory-safe"],"id":61180,"nodeType":"InlineAssembly","src":"22201:250:85"},{"condition":{"id":61193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"22465:77:85","subExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":61191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":61183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":61181,"name":"discriminant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61178,"src":"22467:12:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":61182,"name":"ADD_VFT_MANAGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60185,"src":"22483:15:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22467:31:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":61190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":61184,"name":"discriminant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61178,"src":"22502:12:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[{"expression":{"id":61187,"name":"TokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63318,"src":"22526:9:85","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TokenType_$63318_$","typeString":"type(enum IERC20Manager.TokenType)"}},"id":61188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"22536:4:85","memberName":"Gear","nodeType":"MemberAccess","referencedDeclaration":63317,"src":"22526:14:85","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$63318","typeString":"enum IERC20Manager.TokenType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_TokenType_$63318","typeString":"enum IERC20Manager.TokenType"}],"id":61186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22518:7:85","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":61185,"name":"uint256","nodeType":"ElementaryTypeName","src":"22518:7:85","typeDescriptions":{}}},"id":61189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22518:23:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22502:39:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"22467:74:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":61192,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22466:76:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":61197,"nodeType":"IfStatement","src":"22461:120:85","trueBody":{"id":61196,"nodeType":"Block","src":"22544:37:85","statements":[{"expression":{"hexValue":"66616c7365","id":61194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"22565:5:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":61166,"id":61195,"nodeType":"Return","src":"22558:12:85"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":61200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":61198,"name":"discriminant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61178,"src":"22595:12:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":61199,"name":"ADD_VFT_MANAGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60185,"src":"22611:15:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22595:31:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":61228,"nodeType":"IfStatement","src":"22591:524:85","trueBody":{"id":61227,"nodeType":"Block","src":"22628:487:85","statements":[{"condition":{"id":61206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"22646:49:85","subExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":61204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":61201,"name":"payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61162,"src":"22648:7:85","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":61202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22656:6:85","memberName":"length","nodeType":"MemberAccess","src":"22648:14:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":61203,"name":"ADD_VFT_MANAGER_MESSAGE_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60195,"src":"22666:28:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22648:46:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":61205,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22647:48:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":61210,"nodeType":"IfStatement","src":"22642:100:85","trueBody":{"id":61209,"nodeType":"Block","src":"22697:45:85","statements":[{"expression":{"hexValue":"66616c7365","id":61207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"22722:5:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":61166,"id":61208,"nodeType":"Return","src":"22715:12:85"}]}},{"assignments":[61212],"declarations":[{"constant":false,"id":61212,"mutability":"mutable","name":"vftManager","nameLocation":"22852:10:85","nodeType":"VariableDeclaration","scope":61227,"src":"22844:18:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":61211,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22844:7:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":61213,"nodeType":"VariableDeclarationStatement","src":"22844:18:85"},{"AST":{"nativeSrc":"22901:88:85","nodeType":"YulBlock","src":"22901:88:85","statements":[{"nativeSrc":"22919:56:85","nodeType":"YulAssignment","src":"22919:56:85","value":{"arguments":[{"arguments":[{"name":"payload.offset","nativeSrc":"22950:14:85","nodeType":"YulIdentifier","src":"22950:14:85"},{"name":"OFFSET4","nativeSrc":"22966:7:85","nodeType":"YulIdentifier","src":"22966:7:85"}],"functionName":{"name":"add","nativeSrc":"22946:3:85","nodeType":"YulIdentifier","src":"22946:3:85"},"nativeSrc":"22946:28:85","nodeType":"YulFunctionCall","src":"22946:28:85"}],"functionName":{"name":"calldataload","nativeSrc":"22933:12:85","nodeType":"YulIdentifier","src":"22933:12:85"},"nativeSrc":"22933:42:85","nodeType":"YulFunctionCall","src":"22933:42:85"},"variableNames":[{"name":"vftManager","nativeSrc":"22919:10:85","nodeType":"YulIdentifier","src":"22919:10:85"}]}]},"evmVersion":"prague","externalReferences":[{"declaration":60181,"isOffset":false,"isSlot":false,"src":"22966:7:85","valueSize":1},{"declaration":61162,"isOffset":true,"isSlot":false,"src":"22950:14:85","suffix":"offset","valueSize":1},{"declaration":61212,"isOffset":false,"isSlot":false,"src":"22919:10:85","valueSize":1}],"flags":["memory-safe"],"id":61214,"nodeType":"InlineAssembly","src":"22876:113:85"},{"expression":{"arguments":[{"id":61218,"name":"vftManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61212,"src":"23020:10:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":61215,"name":"_vftManagers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60263,"src":"23003:12:85","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$54148_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":61217,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23016:3:85","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":54166,"src":"23003:16:85","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Set_$54148_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$54148_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"}},"id":61219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23003:28:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":61220,"nodeType":"ExpressionStatement","src":"23003:28:85"},{"eventCall":{"arguments":[{"id":61222,"name":"vftManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61212,"src":"23067:10:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":61221,"name":"VftManagerAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63297,"src":"23051:15:85","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$returns$__$","typeString":"function (bytes32)"}},"id":61223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23051:27:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":61224,"nodeType":"EmitStatement","src":"23046:32:85"},{"expression":{"hexValue":"74727565","id":61225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"23100:4:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":61166,"id":61226,"nodeType":"Return","src":"23093:11:85"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":61235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":61229,"name":"discriminant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61178,"src":"23129:12:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"expression":{"id":61232,"name":"TokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63318,"src":"23153:9:85","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TokenType_$63318_$","typeString":"type(enum IERC20Manager.TokenType)"}},"id":61233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"23163:8:85","memberName":"Ethereum","nodeType":"MemberAccess","referencedDeclaration":63316,"src":"23153:18:85","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$63318","typeString":"enum IERC20Manager.TokenType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_TokenType_$63318","typeString":"enum IERC20Manager.TokenType"}],"id":61231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23145:7:85","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":61230,"name":"uint256","nodeType":"ElementaryTypeName","src":"23145:7:85","typeDescriptions":{}}},"id":61234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23145:27:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23129:43:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":61265,"nodeType":"IfStatement","src":"23125:712:85","trueBody":{"id":61264,"nodeType":"Block","src":"23174:663:85","statements":[{"condition":{"id":61241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"23192:57:85","subExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":61239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":61236,"name":"payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61162,"src":"23194:7:85","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":61237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23202:6:85","memberName":"length","nodeType":"MemberAccess","src":"23194:14:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":61238,"name":"REGISTER_ETHEREUM_TOKEN_MESSAGE_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60239,"src":"23212:36:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23194:54:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":61240,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"23193:56:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":61245,"nodeType":"IfStatement","src":"23188:108:85","trueBody":{"id":61244,"nodeType":"Block","src":"23251:45:85","statements":[{"expression":{"hexValue":"66616c7365","id":61242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"23276:5:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":61166,"id":61243,"nodeType":"Return","src":"23269:12:85"}]}},{"assignments":[61247],"declarations":[{"constant":false,"id":61247,"mutability":"mutable","name":"token","nameLocation":"23406:5:85","nodeType":"VariableDeclaration","scope":61264,"src":"23398:13:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61246,"name":"address","nodeType":"ElementaryTypeName","src":"23398:7:85","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":61248,"nodeType":"VariableDeclarationStatement","src":"23398:13:85"},{"AST":{"nativeSrc":"23450:248:85","nodeType":"YulBlock","src":"23450:248:85","statements":[{"nativeSrc":"23602:82:85","nodeType":"YulAssignment","src":"23602:82:85","value":{"arguments":[{"name":"ETHEREUM_TOKEN_BIT_SHIFT","nativeSrc":"23615:24:85","nodeType":"YulIdentifier","src":"23615:24:85"},{"arguments":[{"arguments":[{"name":"payload.offset","nativeSrc":"23658:14:85","nodeType":"YulIdentifier","src":"23658:14:85"},{"name":"OFFSET4","nativeSrc":"23674:7:85","nodeType":"YulIdentifier","src":"23674:7:85"}],"functionName":{"name":"add","nativeSrc":"23654:3:85","nodeType":"YulIdentifier","src":"23654:3:85"},"nativeSrc":"23654:28:85","nodeType":"YulFunctionCall","src":"23654:28:85"}],"functionName":{"name":"calldataload","nativeSrc":"23641:12:85","nodeType":"YulIdentifier","src":"23641:12:85"},"nativeSrc":"23641:42:85","nodeType":"YulFunctionCall","src":"23641:42:85"}],"functionName":{"name":"shr","nativeSrc":"23611:3:85","nodeType":"YulIdentifier","src":"23611:3:85"},"nativeSrc":"23611:73:85","nodeType":"YulFunctionCall","src":"23611:73:85"},"variableNames":[{"name":"token","nativeSrc":"23602:5:85","nodeType":"YulIdentifier","src":"23602:5:85"}]}]},"evmVersion":"prague","externalReferences":[{"declaration":60243,"isOffset":false,"isSlot":false,"src":"23615:24:85","valueSize":1},{"declaration":60181,"isOffset":false,"isSlot":false,"src":"23674:7:85","valueSize":1},{"declaration":61162,"isOffset":true,"isSlot":false,"src":"23658:14:85","suffix":"offset","valueSize":1},{"declaration":61247,"isOffset":false,"isSlot":false,"src":"23602:5:85","valueSize":1}],"flags":["memory-safe"],"id":61249,"nodeType":"InlineAssembly","src":"23425:273:85"},{"expression":{"arguments":[{"id":61253,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61247,"src":"23724:5:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":61254,"name":"TokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63318,"src":"23731:9:85","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TokenType_$63318_$","typeString":"type(enum IERC20Manager.TokenType)"}},"id":61255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"23741:8:85","memberName":"Ethereum","nodeType":"MemberAccess","referencedDeclaration":63316,"src":"23731:18:85","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$63318","typeString":"enum IERC20Manager.TokenType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_TokenType_$63318","typeString":"enum IERC20Manager.TokenType"}],"expression":{"id":61250,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60266,"src":"23712:7:85","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToTokenTypeMap_$64505_storage","typeString":"struct CustomEnumerableMap.AddressToTokenTypeMap storage ref"}},"id":61252,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23720:3:85","memberName":"set","nodeType":"MemberAccess","referencedDeclaration":64543,"src":"23712:11:85","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressToTokenTypeMap_$64505_storage_ptr_$_t_address_$_t_enum$_TokenType_$63318_$returns$_t_bool_$attached_to$_t_struct$_AddressToTokenTypeMap_$64505_storage_ptr_$","typeString":"function (struct CustomEnumerableMap.AddressToTokenTypeMap storage pointer,address,enum IERC20Manager.TokenType) returns (bool)"}},"id":61256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23712:38:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":61257,"nodeType":"ExpressionStatement","src":"23712:38:85"},{"eventCall":{"arguments":[{"id":61259,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61247,"src":"23794:5:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":61258,"name":"EthereumTokenRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63302,"src":"23770:23:85","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":61260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23770:30:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":61261,"nodeType":"EmitStatement","src":"23765:35:85"},{"expression":{"hexValue":"74727565","id":61262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"23822:4:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":61166,"id":61263,"nodeType":"Return","src":"23815:11:85"}]}},{"condition":{"id":61271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"23937:53:85","subExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":61269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":61266,"name":"payload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61162,"src":"23939:7:85","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":61267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23947:6:85","memberName":"length","nodeType":"MemberAccess","src":"23939:14:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":61268,"name":"REGISTER_GEAR_TOKEN_MESSAGE_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60229,"src":"23957:32:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23939:50:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":61270,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"23938:52:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":61275,"nodeType":"IfStatement","src":"23933:96:85","trueBody":{"id":61274,"nodeType":"Block","src":"23992:37:85","statements":[{"expression":{"hexValue":"66616c7365","id":61272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"24013:5:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":61166,"id":61273,"nodeType":"Return","src":"24006:12:85"}]}},{"assignments":[61277],"declarations":[{"constant":false,"id":61277,"mutability":"mutable","name":"tokenName","nameLocation":"24047:9:85","nodeType":"VariableDeclaration","scope":61383,"src":"24039:17:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":61276,"name":"bytes32","nodeType":"ElementaryTypeName","src":"24039:7:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":61278,"nodeType":"VariableDeclarationStatement","src":"24039:17:85"},{"assignments":[61280],"declarations":[{"constant":false,"id":61280,"mutability":"mutable","name":"tokenSymbol","nameLocation":"24074:11:85","nodeType":"VariableDeclaration","scope":61383,"src":"24066:19:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":61279,"name":"bytes32","nodeType":"ElementaryTypeName","src":"24066:7:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":61281,"nodeType":"VariableDeclarationStatement","src":"24066:19:85"},{"assignments":[61283],"declarations":[{"constant":false,"id":61283,"mutability":"mutable","name":"tokenDecimals","nameLocation":"24101:13:85","nodeType":"VariableDeclaration","scope":61383,"src":"24095:19:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":61282,"name":"uint8","nodeType":"ElementaryTypeName","src":"24095:5:85","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":61284,"nodeType":"VariableDeclarationStatement","src":"24095:19:85"},{"AST":{"nativeSrc":"24529:454:85","nodeType":"YulBlock","src":"24529:454:85","statements":[{"nativeSrc":"24543:55:85","nodeType":"YulAssignment","src":"24543:55:85","value":{"arguments":[{"arguments":[{"name":"payload.offset","nativeSrc":"24573:14:85","nodeType":"YulIdentifier","src":"24573:14:85"},{"name":"OFFSET4","nativeSrc":"24589:7:85","nodeType":"YulIdentifier","src":"24589:7:85"}],"functionName":{"name":"add","nativeSrc":"24569:3:85","nodeType":"YulIdentifier","src":"24569:3:85"},"nativeSrc":"24569:28:85","nodeType":"YulFunctionCall","src":"24569:28:85"}],"functionName":{"name":"calldataload","nativeSrc":"24556:12:85","nodeType":"YulIdentifier","src":"24556:12:85"},"nativeSrc":"24556:42:85","nodeType":"YulFunctionCall","src":"24556:42:85"},"variableNames":[{"name":"tokenName","nativeSrc":"24543:9:85","nodeType":"YulIdentifier","src":"24543:9:85"}]},{"nativeSrc":"24611:57:85","nodeType":"YulAssignment","src":"24611:57:85","value":{"arguments":[{"arguments":[{"name":"payload.offset","nativeSrc":"24643:14:85","nodeType":"YulIdentifier","src":"24643:14:85"},{"name":"OFFSET5","nativeSrc":"24659:7:85","nodeType":"YulIdentifier","src":"24659:7:85"}],"functionName":{"name":"add","nativeSrc":"24639:3:85","nodeType":"YulIdentifier","src":"24639:3:85"},"nativeSrc":"24639:28:85","nodeType":"YulFunctionCall","src":"24639:28:85"}],"functionName":{"name":"calldataload","nativeSrc":"24626:12:85","nodeType":"YulIdentifier","src":"24626:12:85"},"nativeSrc":"24626:42:85","nodeType":"YulFunctionCall","src":"24626:42:85"},"variableNames":[{"name":"tokenSymbol","nativeSrc":"24611:11:85","nodeType":"YulIdentifier","src":"24611:11:85"}]},{"nativeSrc":"24681:59:85","nodeType":"YulAssignment","src":"24681:59:85","value":{"arguments":[{"arguments":[{"name":"payload.offset","nativeSrc":"24715:14:85","nodeType":"YulIdentifier","src":"24715:14:85"},{"name":"OFFSET6","nativeSrc":"24731:7:85","nodeType":"YulIdentifier","src":"24731:7:85"}],"functionName":{"name":"add","nativeSrc":"24711:3:85","nodeType":"YulIdentifier","src":"24711:3:85"},"nativeSrc":"24711:28:85","nodeType":"YulFunctionCall","src":"24711:28:85"}],"functionName":{"name":"calldataload","nativeSrc":"24698:12:85","nodeType":"YulIdentifier","src":"24698:12:85"},"nativeSrc":"24698:42:85","nodeType":"YulFunctionCall","src":"24698:42:85"},"variableNames":[{"name":"tokenDecimals","nativeSrc":"24681:13:85","nodeType":"YulIdentifier","src":"24681:13:85"}]},{"nativeSrc":"24883:90:85","nodeType":"YulAssignment","src":"24883:90:85","value":{"arguments":[{"name":"TOKEN_DECIMALS_BIT_SHIFT","nativeSrc":"24904:24:85","nodeType":"YulIdentifier","src":"24904:24:85"},{"arguments":[{"arguments":[{"name":"payload.offset","nativeSrc":"24947:14:85","nodeType":"YulIdentifier","src":"24947:14:85"},{"name":"OFFSET6","nativeSrc":"24963:7:85","nodeType":"YulIdentifier","src":"24963:7:85"}],"functionName":{"name":"add","nativeSrc":"24943:3:85","nodeType":"YulIdentifier","src":"24943:3:85"},"nativeSrc":"24943:28:85","nodeType":"YulFunctionCall","src":"24943:28:85"}],"functionName":{"name":"calldataload","nativeSrc":"24930:12:85","nodeType":"YulIdentifier","src":"24930:12:85"},"nativeSrc":"24930:42:85","nodeType":"YulFunctionCall","src":"24930:42:85"}],"functionName":{"name":"shr","nativeSrc":"24900:3:85","nodeType":"YulIdentifier","src":"24900:3:85"},"nativeSrc":"24900:73:85","nodeType":"YulFunctionCall","src":"24900:73:85"},"variableNames":[{"name":"tokenDecimals","nativeSrc":"24883:13:85","nodeType":"YulIdentifier","src":"24883:13:85"}]}]},"evmVersion":"prague","externalReferences":[{"declaration":60181,"isOffset":false,"isSlot":false,"src":"24589:7:85","valueSize":1},{"declaration":60215,"isOffset":false,"isSlot":false,"src":"24659:7:85","valueSize":1},{"declaration":60219,"isOffset":false,"isSlot":false,"src":"24731:7:85","valueSize":1},{"declaration":60219,"isOffset":false,"isSlot":false,"src":"24963:7:85","valueSize":1},{"declaration":60211,"isOffset":false,"isSlot":false,"src":"24904:24:85","valueSize":1},{"declaration":61162,"isOffset":true,"isSlot":false,"src":"24573:14:85","suffix":"offset","valueSize":1},{"declaration":61162,"isOffset":true,"isSlot":false,"src":"24643:14:85","suffix":"offset","valueSize":1},{"declaration":61162,"isOffset":true,"isSlot":false,"src":"24715:14:85","suffix":"offset","valueSize":1},{"declaration":61162,"isOffset":true,"isSlot":false,"src":"24947:14:85","suffix":"offset","valueSize":1},{"declaration":61283,"isOffset":false,"isSlot":false,"src":"24681:13:85","valueSize":1},{"declaration":61283,"isOffset":false,"isSlot":false,"src":"24883:13:85","valueSize":1},{"declaration":61277,"isOffset":false,"isSlot":false,"src":"24543:9:85","valueSize":1},{"declaration":61280,"isOffset":false,"isSlot":false,"src":"24611:11:85","valueSize":1}],"flags":["memory-safe"],"id":61285,"nodeType":"InlineAssembly","src":"24504:479:85"},{"assignments":[61287],"declarations":[{"constant":false,"id":61287,"mutability":"mutable","name":"tokenNameLength","nameLocation":"24999:15:85","nodeType":"VariableDeclaration","scope":61383,"src":"24993:21:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":61286,"name":"uint8","nodeType":"ElementaryTypeName","src":"24993:5:85","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":61294,"initialValue":{"arguments":[{"baseExpression":{"id":61290,"name":"tokenName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61277,"src":"25023:9:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":61292,"indexExpression":{"hexValue":"30","id":61291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25033:1:85","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25023:12:85","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":61289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25017:5:85","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":61288,"name":"uint8","nodeType":"ElementaryTypeName","src":"25017:5:85","typeDescriptions":{}}},"id":61293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25017:19:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"24993:43:85"},{"condition":{"id":61303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"25050:48:85","subExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":61301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":61297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":61295,"name":"tokenNameLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61287,"src":"25052:15:85","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"31","id":61296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25071:1:85","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25052:20:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":61300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":61298,"name":"tokenNameLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61287,"src":"25076:15:85","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3331","id":61299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25095:2:85","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"25076:21:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25052:45:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":61302,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25051:47:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":61307,"nodeType":"IfStatement","src":"25046:91:85","trueBody":{"id":61306,"nodeType":"Block","src":"25100:37:85","statements":[{"expression":{"hexValue":"66616c7365","id":61304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"25121:5:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":61166,"id":61305,"nodeType":"Return","src":"25114:12:85"}]}},{"assignments":[61309],"declarations":[{"constant":false,"id":61309,"mutability":"mutable","name":"tokenSymbolLength","nameLocation":"25153:17:85","nodeType":"VariableDeclaration","scope":61383,"src":"25147:23:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":61308,"name":"uint8","nodeType":"ElementaryTypeName","src":"25147:5:85","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":61316,"initialValue":{"arguments":[{"baseExpression":{"id":61312,"name":"tokenSymbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61280,"src":"25179:11:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":61314,"indexExpression":{"hexValue":"30","id":61313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25191:1:85","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25179:14:85","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":61311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25173:5:85","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":61310,"name":"uint8","nodeType":"ElementaryTypeName","src":"25173:5:85","typeDescriptions":{}}},"id":61315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25173:21:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"25147:47:85"},{"condition":{"id":61325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"25208:52:85","subExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":61323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":61319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":61317,"name":"tokenSymbolLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61309,"src":"25210:17:85","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"31","id":61318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25231:1:85","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25210:22:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":61322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":61320,"name":"tokenSymbolLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61309,"src":"25236:17:85","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3331","id":61321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25257:2:85","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"25236:23:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25210:49:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":61324,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25209:51:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":61329,"nodeType":"IfStatement","src":"25204:95:85","trueBody":{"id":61328,"nodeType":"Block","src":"25262:37:85","statements":[{"expression":{"hexValue":"66616c7365","id":61326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"25283:5:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":61166,"id":61327,"nodeType":"Return","src":"25276:12:85"}]}},{"assignments":[61331],"declarations":[{"constant":false,"id":61331,"mutability":"mutable","name":"tokenNameStr","nameLocation":"25323:12:85","nodeType":"VariableDeclaration","scope":61383,"src":"25309:26:85","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":61330,"name":"string","nodeType":"ElementaryTypeName","src":"25309:6:85","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":61336,"initialValue":{"arguments":[{"id":61334,"name":"tokenName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61277,"src":"25358:9:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":61332,"name":"LibString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64811,"src":"25338:9:85","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibString_$64811_$","typeString":"type(library LibString)"}},"id":61333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25348:9:85","memberName":"unpackOne","nodeType":"MemberAccess","referencedDeclaration":64810,"src":"25338:19:85","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_string_memory_ptr_$","typeString":"function (bytes32) pure returns (string memory)"}},"id":61335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25338:30:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"25309:59:85"},{"assignments":[61338],"declarations":[{"constant":false,"id":61338,"mutability":"mutable","name":"tokenSymbolStr","nameLocation":"25392:14:85","nodeType":"VariableDeclaration","scope":61383,"src":"25378:28:85","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":61337,"name":"string","nodeType":"ElementaryTypeName","src":"25378:6:85","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":61343,"initialValue":{"arguments":[{"id":61341,"name":"tokenSymbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61280,"src":"25429:11:85","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":61339,"name":"LibString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64811,"src":"25409:9:85","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LibString_$64811_$","typeString":"type(library LibString)"}},"id":61340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25419:9:85","memberName":"unpackOne","nodeType":"MemberAccess","referencedDeclaration":64810,"src":"25409:19:85","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_string_memory_ptr_$","typeString":"function (bytes32) pure returns (string memory)"}},"id":61342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25409:32:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"25378:63:85"},{"assignments":[61346],"declarations":[{"constant":false,"id":61346,"mutability":"mutable","name":"gearSupply","nameLocation":"25468:10:85","nodeType":"VariableDeclaration","scope":61383,"src":"25452:26:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20GearSupply_$63178","typeString":"contract ERC20GearSupply"},"typeName":{"id":61345,"nodeType":"UserDefinedTypeName","pathNode":{"id":61344,"name":"ERC20GearSupply","nameLocations":["25452:15:85"],"nodeType":"IdentifierPath","referencedDeclaration":63178,"src":"25452:15:85"},"referencedDeclaration":63178,"src":"25452:15:85","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20GearSupply_$63178","typeString":"contract ERC20GearSupply"}},"visibility":"internal"}],"id":61358,"initialValue":{"arguments":[{"arguments":[{"id":61352,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"25509:4:85","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Manager_$61385","typeString":"contract ERC20Manager"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20Manager_$61385","typeString":"contract ERC20Manager"}],"id":61351,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25501:7:85","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61350,"name":"address","nodeType":"ElementaryTypeName","src":"25501:7:85","typeDescriptions":{}}},"id":61353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25501:13:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":61354,"name":"tokenNameStr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61331,"src":"25516:12:85","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":61355,"name":"tokenSymbolStr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61338,"src":"25530:14:85","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":61356,"name":"tokenDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61283,"src":"25546:13:85","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":61349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"25481:19:85","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$_t_contract$_ERC20GearSupply_$63178_$","typeString":"function (address,string memory,string memory,uint8) returns (contract ERC20GearSupply)"},"typeName":{"id":61348,"nodeType":"UserDefinedTypeName","pathNode":{"id":61347,"name":"ERC20GearSupply","nameLocations":["25485:15:85"],"nodeType":"IdentifierPath","referencedDeclaration":63178,"src":"25485:15:85"},"referencedDeclaration":63178,"src":"25485:15:85","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20GearSupply_$63178","typeString":"contract ERC20GearSupply"}}},"id":61357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25481:79:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ERC20GearSupply_$63178","typeString":"contract ERC20GearSupply"}},"nodeType":"VariableDeclarationStatement","src":"25452:108:85"},{"assignments":[61360],"declarations":[{"constant":false,"id":61360,"mutability":"mutable","name":"tokenAddress","nameLocation":"25578:12:85","nodeType":"VariableDeclaration","scope":61383,"src":"25570:20:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61359,"name":"address","nodeType":"ElementaryTypeName","src":"25570:7:85","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":61365,"initialValue":{"arguments":[{"id":61363,"name":"gearSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61346,"src":"25601:10:85","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20GearSupply_$63178","typeString":"contract ERC20GearSupply"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20GearSupply_$63178","typeString":"contract ERC20GearSupply"}],"id":61362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25593:7:85","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61361,"name":"address","nodeType":"ElementaryTypeName","src":"25593:7:85","typeDescriptions":{}}},"id":61364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25593:19:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"25570:42:85"},{"expression":{"arguments":[{"id":61369,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61360,"src":"25635:12:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":61370,"name":"TokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63318,"src":"25649:9:85","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TokenType_$63318_$","typeString":"type(enum IERC20Manager.TokenType)"}},"id":61371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"25659:4:85","memberName":"Gear","nodeType":"MemberAccess","referencedDeclaration":63317,"src":"25649:14:85","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$63318","typeString":"enum IERC20Manager.TokenType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_TokenType_$63318","typeString":"enum IERC20Manager.TokenType"}],"expression":{"id":61366,"name":"_tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60266,"src":"25623:7:85","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToTokenTypeMap_$64505_storage","typeString":"struct CustomEnumerableMap.AddressToTokenTypeMap storage ref"}},"id":61368,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25631:3:85","memberName":"set","nodeType":"MemberAccess","referencedDeclaration":64543,"src":"25623:11:85","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressToTokenTypeMap_$64505_storage_ptr_$_t_address_$_t_enum$_TokenType_$63318_$returns$_t_bool_$attached_to$_t_struct$_AddressToTokenTypeMap_$64505_storage_ptr_$","typeString":"function (struct CustomEnumerableMap.AddressToTokenTypeMap storage pointer,address,enum IERC20Manager.TokenType) returns (bool)"}},"id":61372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25623:41:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":61373,"nodeType":"ExpressionStatement","src":"25623:41:85"},{"eventCall":{"arguments":[{"id":61375,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61360,"src":"25700:12:85","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":61376,"name":"tokenNameStr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61331,"src":"25714:12:85","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":61377,"name":"tokenSymbolStr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61338,"src":"25728:14:85","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":61378,"name":"tokenDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61283,"src":"25744:13:85","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":61374,"name":"GearTokenRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63313,"src":"25680:19:85","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$__$","typeString":"function (address,string memory,string memory,uint8)"}},"id":61379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25680:78:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":61380,"nodeType":"EmitStatement","src":"25675:83:85"},{"expression":{"hexValue":"74727565","id":61381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"25776:4:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":61166,"id":61382,"nodeType":"Return","src":"25769:11:85"}]},"documentation":{"id":61160,"nodeType":"StructuredDocumentation","src":"20918:1073:85","text":" @dev Tries to parse and apply governance message originated from Vara Network.\n      Payload format:\n      ```solidity\n      uint8 discriminant;\n      ```\n      `discriminant` can be:\n      - `ADD_VFT_MANAGER = 0x00` - add new VFT manager to list of registered VFT managers\n          ```solidity\n          bytes32 vftManager; // 32 bytes\n          ```\n      - `TokenType.Ethereum = 0x01` - register Ethereum token\n          ```solidity\n          address token; // 20 bytes\n          ```\n      - `TokenType.Gear = 0x02` - register Gear token\n          ```solidity\n          bytes32 tokenName; // 1 byte length + 31 bytes datas\n          bytes32 tokenSymbol; // 1 byte length + 31 bytes data\n          uint8 tokenDecimals; // 1 byte\n          ```\n @param payload Payload of the message (message from Vara Network).\n @return success `true` if the message is parsed and applied, `false` otherwise."},"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseAndApplyGovernanceMessage","nameLocation":"22005:34:85","parameters":{"id":61163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61162,"mutability":"mutable","name":"payload","nameLocation":"22055:7:85","nodeType":"VariableDeclaration","scope":61384,"src":"22040:22:85","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":61161,"name":"bytes","nodeType":"ElementaryTypeName","src":"22040:5:85","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"22039:24:85"},"returnParameters":{"id":61166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":61384,"src":"22081:4:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":61164,"name":"bool","nodeType":"ElementaryTypeName","src":"22081:4:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"22080:6:85"},"scope":61385,"stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"abstract":false,"baseContracts":[{"baseName":{"id":60094,"name":"Initializable","nameLocations":["1566:13:85"],"nodeType":"IdentifierPath","referencedDeclaration":40526,"src":"1566:13:85"},"id":60095,"nodeType":"InheritanceSpecifier","src":"1566:13:85"},{"baseName":{"id":60096,"name":"AccessControlUpgradeable","nameLocations":["1585:24:85"],"nodeType":"IdentifierPath","referencedDeclaration":40063,"src":"1585:24:85"},"id":60097,"nodeType":"InheritanceSpecifier","src":"1585:24:85"},{"baseName":{"id":60098,"name":"PausableUpgradeable","nameLocations":["1615:19:85"],"nodeType":"IdentifierPath","referencedDeclaration":40914,"src":"1615:19:85"},"id":60099,"nodeType":"InheritanceSpecifier","src":"1615:19:85"},{"baseName":{"id":60100,"name":"UUPSUpgradeable","nameLocations":["1640:15:85"],"nodeType":"IdentifierPath","referencedDeclaration":40708,"src":"1640:15:85"},"id":60101,"nodeType":"InheritanceSpecifier","src":"1640:15:85"},{"baseName":{"id":60102,"name":"IPausable","nameLocations":["1661:9:85"],"nodeType":"IdentifierPath","referencedDeclaration":64143,"src":"1661:9:85"},"id":60103,"nodeType":"InheritanceSpecifier","src":"1661:9:85"},{"baseName":{"id":60104,"name":"IMessageHandler","nameLocations":["1676:15:85"],"nodeType":"IdentifierPath","referencedDeclaration":63861,"src":"1676:15:85"},"id":60105,"nodeType":"InheritanceSpecifier","src":"1676:15:85"},{"baseName":{"id":60106,"name":"IERC20Manager","nameLocations":["1697:13:85"],"nodeType":"IdentifierPath","referencedDeclaration":63509,"src":"1697:13:85"},"id":60107,"nodeType":"InheritanceSpecifier","src":"1697:13:85"}],"canonicalName":"ERC20Manager","contractDependencies":[60053,63178],"contractKind":"contract","fullyImplemented":true,"linearizedBaseContracts":[61385,63509,63861,64143,40708,41331,40914,40063,40954,47523,41037,40754,40526],"name":"ERC20Manager","nameLocation":"1546:12:85","scope":61386,"usedErrors":[40275,40278,40553,40558,40793,40796,40964,40967,41526,41539,43043,43505,44808,63250,63253,63256,63259,63262,63265],"usedEvents":[40283,40785,40790,40976,40985,40994,41279,63276,63287,63292,63297,63302,63313]}],"license":"GPL-3.0-or-later WITH Classpath-exception-2.0"},"id":85}