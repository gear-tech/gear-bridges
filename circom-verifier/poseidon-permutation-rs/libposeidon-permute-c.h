/* Code generated by cmd/cgo; DO NOT EDIT. */

/* package main */


#line 1 "cgo-builtin-export-prolog"

#include <stddef.h> /* for ptrdiff_t below */

#ifndef GO_CGO_EXPORT_PROLOGUE_H
#define GO_CGO_EXPORT_PROLOGUE_H

#ifndef GO_CGO_GOSTRING_TYPEDEF
typedef struct { const char *p; ptrdiff_t n; } _GoString_;
#endif

#endif

/* Start of preamble from import "C" comments.  */




/* End of preamble from import "C" comments.  */


/* Start of boilerplate cgo prologue.  */
#line 1 "cgo-gcc-export-header-prolog"

#ifndef GO_CGO_PROLOGUE_H
#define GO_CGO_PROLOGUE_H

typedef signed char GoInt8;
typedef unsigned char GoUint8;
typedef short GoInt16;
typedef unsigned short GoUint16;
typedef int GoInt32;
typedef unsigned int GoUint32;
typedef long long GoInt64;
typedef unsigned long long GoUint64;
typedef GoInt64 GoInt;
typedef GoUint64 GoUint;
typedef __SIZE_TYPE__ GoUintptr;
typedef float GoFloat32;
typedef double GoFloat64;
typedef float _Complex GoComplex64;
typedef double _Complex GoComplex128;

/*
  static assertion to make sure the file is being used on architecture
  at least with matching size of GoInt.
*/
typedef char _check_for_64_bit_pointer_matching_GoInt[sizeof(void*)==64/8 ? 1:-1];

#ifndef GO_CGO_GOSTRING_TYPEDEF
typedef _GoString_ GoString;
#endif
typedef void *GoMap;
typedef void *GoChan;
typedef struct { void *t; void *v; } GoInterface;
typedef struct { void *data; GoInt len; GoInt cap; } GoSlice;

#endif

/* End of boilerplate cgo prologue.  */

#ifdef __cplusplus
extern "C" {
#endif


/* Return type for permute */
struct permute_return {
	GoUint64 r0;
	GoUint64 r1;
	GoUint64 r2;
	GoUint64 r3;
	GoUint64 r4;
	GoUint64 r5;
	GoUint64 r6;
	GoUint64 r7;
	GoUint64 r8;
	GoUint64 r9;
	GoUint64 r10;
	GoUint64 r11;
};

// converts three uint64 into one big int and run poseidon
//
extern struct permute_return permute(GoUint64 e0, GoUint64 e1, GoUint64 e2, GoUint64 e3, GoUint64 e4, GoUint64 e5, GoUint64 e6, GoUint64 e7, GoUint64 e8, GoUint64 e9, GoUint64 e10, GoUint64 e11);

#ifdef __cplusplus
}
#endif
